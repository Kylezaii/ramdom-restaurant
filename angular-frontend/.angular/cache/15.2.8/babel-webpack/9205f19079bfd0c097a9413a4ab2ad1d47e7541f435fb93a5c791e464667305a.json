{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ViewPayrollComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@angular/core\");\nconst common_1 = require(\"@angular/common\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"../service/view-payroll.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/ng-connect\"));\nconst i4 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i5 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i6 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i7 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i8 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i9 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i10 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i11 = tslib_1.__importStar(require(\"primeng/tooltip\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/dropdown\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/calendar\"));\nconst i15 = tslib_1.__importStar(require(\"primeng/panel\"));\nconst i16 = tslib_1.__importStar(require(\"primeng/ripple\"));\nconst _c0 = [\"viewPayrollTable\"];\nfunction ViewPayrollComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵtext(2, \"\\n          \");\n    i0.ɵɵelementStart(3, \"span\", 9)(4, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ViewPayrollComponent_ng_template_7_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(5);\n      return i0.ɵɵresetView(ctx_r5.exportCSV(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n      \");\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r1.title);\n  }\n}\nfunction ViewPayrollComponent_ng_template_9_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"p-calendar\", 31);\n    i0.ɵɵlistener(\"onSelect\", function ViewPayrollComponent_ng_template_9_ng_template_20_Template_p_calendar_onSelect_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const filter_r10 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r10($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\n              \");\n  }\n}\nfunction ViewPayrollComponent_ng_template_9_ng_template_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"p-calendar\", 31);\n    i0.ɵɵlistener(\"onSelect\", function ViewPayrollComponent_ng_template_9_ng_template_30_Template_p_calendar_onSelect_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const filter_r13 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r13($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\n              \");\n  }\n}\nfunction ViewPayrollComponent_ng_template_9_ng_template_40_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"p-dropdown\", 32);\n    i0.ɵɵlistener(\"onChange\", function ViewPayrollComponent_ng_template_9_ng_template_40_Template_p_dropdown_onChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const filter_r17 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r17($event.value));\n    });\n    i0.ɵɵtext(2, \"\\n                  \");\n    i0.ɵɵtext(3, \"\\n                  \");\n    i0.ɵɵtext(4, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n              \");\n  }\n  if (rf & 2) {\n    const value_r16 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", value_r16)(\"options\", ctx_r9.valid_types);\n  }\n}\nfunction ViewPayrollComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n\\n          \");\n    i0.ɵɵelementStart(3, \"th\", 11);\n    i0.ɵɵtext(4, \"S/N \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n          \");\n    i0.ɵɵelementStart(6, \"th\", 12);\n    i0.ɵɵtext(7, \"Payroll Description \");\n    i0.ɵɵelementStart(8, \"p-sortIcon\", 13);\n    i0.ɵɵtext(9, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n            \");\n    i0.ɵɵelement(11, \"p-columnFilter\", 14);\n    i0.ɵɵtext(12, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n          \");\n    i0.ɵɵelementStart(14, \"th\", 15);\n    i0.ɵɵtext(15, \"Trg Start Date Time \");\n    i0.ɵɵelement(16, \"p-sortIcon\", 16);\n    i0.ɵɵtext(17, \"\\n            \");\n    i0.ɵɵelementStart(18, \"p-columnFilter\", 17);\n    i0.ɵɵtext(19, \"\\n              \");\n    i0.ɵɵtemplate(20, ViewPayrollComponent_ng_template_9_ng_template_20_Template, 3, 0, \"ng-template\", 18);\n    i0.ɵɵtext(21, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n          \");\n    i0.ɵɵelementStart(24, \"th\", 19);\n    i0.ɵɵtext(25, \"Trg End Date Time \");\n    i0.ɵɵelement(26, \"p-sortIcon\", 20);\n    i0.ɵɵtext(27, \"\\n            \");\n    i0.ɵɵelementStart(28, \"p-columnFilter\", 21);\n    i0.ɵɵtext(29, \"\\n              \");\n    i0.ɵɵtemplate(30, ViewPayrollComponent_ng_template_9_ng_template_30_Template, 3, 0, \"ng-template\", 18);\n    i0.ɵɵtext(31, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(32, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(33, \"\\n          \");\n    i0.ɵɵelementStart(34, \"th\", 22);\n    i0.ɵɵtext(35, \"Valid \");\n    i0.ɵɵelement(36, \"p-sortIcon\", 23);\n    i0.ɵɵtext(37, \"\\n            \");\n    i0.ɵɵelementStart(38, \"p-columnFilter\", 24);\n    i0.ɵɵtext(39, \"\\n              \");\n    i0.ɵɵtemplate(40, ViewPayrollComponent_ng_template_9_ng_template_40_Template, 6, 2, \"ng-template\", 18);\n    i0.ɵɵtext(41, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(43, \"\\n          \");\n    i0.ɵɵelementStart(44, \"th\", 25);\n    i0.ɵɵtext(45, \"Unpaid \");\n    i0.ɵɵelement(46, \"p-sortIcon\", 26);\n    i0.ɵɵtext(47, \"\\n            \");\n    i0.ɵɵelement(48, \"p-columnFilter\", 27);\n    i0.ɵɵtext(49, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(50, \"\\n          \");\n    i0.ɵɵelementStart(51, \"th\", 28);\n    i0.ɵɵtext(52, \"Paid \");\n    i0.ɵɵelement(53, \"p-sortIcon\", 29);\n    i0.ɵɵtext(54, \"\\n            \");\n    i0.ɵɵelement(55, \"p-columnFilter\", 30);\n    i0.ɵɵtext(56, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(57, \"\\n\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(58, \"\\n      \");\n  }\n}\nconst _c1 = function (a0, a1, a2) {\n  return {\n    \"row-awards\": a0,\n    \"row-attendance\": a1,\n    \"row-allowance\": a2\n  };\n};\nfunction ViewPayrollComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n\\n        \");\n    i0.ɵɵelementStart(1, \"tr\", 33);\n    i0.ɵɵtext(2, \"\\n          \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n          \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n          \");\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n          \");\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n          \");\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n          \");\n    i0.ɵɵelementStart(20, \"td\");\n    i0.ɵɵtext(21);\n    i0.ɵɵpipe(22, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n          \");\n    i0.ɵɵelementStart(24, \"td\");\n    i0.ɵɵtext(25);\n    i0.ɵɵpipe(26, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \"\\n\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n      \");\n  }\n  if (rf & 2) {\n    const resultList_r20 = ctx.$implicit;\n    const i_r21 = ctx.rowIndex;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pSelectableRow\", resultList_r20)(\"ngClass\", i0.ɵɵpureFunction3(23, _c1, resultList_r20.refType === \"AWARDS\", resultList_r20.refType === \"ATTENDANCE\", resultList_r20.refType === \"ALLOWANCES\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i_r21 + 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.translatePayrollDescription(resultList_r20.refCode, resultList_r20.refType));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(11, 9, resultList_r20.payrollStartDt, \"dd-MM-yyyy (HHmm)\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(15, 12, resultList_r20.payrollEndDt, \"dd-MM-yyyy (HHmm)\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r3.valid_typesDict[resultList_r20.validInd].label);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(22, 15, resultList_r20.unpaidAmt, \"USD\", \"symbol\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(26, 19, resultList_r20.paidAmt, \"USD\", \"symbol\"));\n  }\n}\nfunction ViewPayrollComponent_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n          \");\n    i0.ɵɵelementStart(3, \"td\", 34);\n    i0.ɵɵtext(4, \"No records found.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n      \");\n  }\n}\nconst _c2 = function () {\n  return [10, 25, 50];\n};\nclass ViewPayrollComponent {\n  constructor(viewpayrollService, ns2HttpService, codeService, dateUtilsService, exportUtilsService, toastService, localeId) {\n    this.viewpayrollService = viewpayrollService;\n    this.ns2HttpService = ns2HttpService;\n    this.codeService = codeService;\n    this.dateUtilsService = dateUtilsService;\n    this.exportUtilsService = exportUtilsService;\n    this.toastService = toastService;\n    this.localeId = localeId;\n    this.resultList = [];\n    this.searchInput = \"\";\n    this.startDate = \"\";\n    this.endDate = \"\";\n    this.selection = \"\";\n    this.selectEvent = new core_1.EventEmitter();\n    this.title = '';\n    this.userinfo = [];\n    // showTable = false;\n    //row selection\n    this.selectedAwardRecord = [];\n    this.pageData = {\n      currentPage: 0\n    };\n    this.pageSize = 10;\n    //CodeType dictionary { [codetypeID: string]: { [codeId]: payrollCodeType } }\n    this.PayrollDescriptionDict = {}; //awards only currently\n    this.valid_typesDict = {};\n    this.att_typesDict = {};\n    this.allowance_typesDict = {};\n    this.codeTypeTslDict = {\n      ATTENDANCE: \"PRL_ATTD_CODE\",\n      ALLOWANCES: \"PRL_ALLW_CODE\",\n      AWARDS: \"PRL_AWD_CODE\"\n    };\n    // PayrollDescriptionDict1: { [codeId: string]: { [codetypeID: string]: PayrollCodeType } }= {}; //awards only currently\n    this.PayrollDescriptionDict1 = {}; //awards only currently\n    this.PayrollDescriptionDict2 = {};\n  }\n  ngOnInit() {\n    console.log(\"view component initiated\");\n    this.loadDropDownValidType();\n    this.loadCodes();\n    console.log(this.startDate);\n    console.log(this.endDate);\n  }\n  loadData(event) {\n    this.lazyLoadEvent = event;\n    this.loading = true;\n    console.log(event);\n    console.log(\"options\");\n    setTimeout(() => {\n      const options = this.ns2HttpService.convertLazyEvent(event, this.pageData, this.pageSize);\n      //Get Payroll Detail by NRIC\n      this.viewpayrollService.getPayrollDetailByNRIC(this.searchInput, options).subscribe(res => {\n        console.log(res);\n        console.log(res.body.data.content);\n        this.resultList = res.body.data.content;\n        this.totalRecords = res.body.data.totalElements;\n        console.log(this.resultList);\n        this.loading = false;\n        if (this.selection === 'search') {\n          this.searchnricdate();\n        }\n      }, error => {\n        console.log(error);\n        this.toastService.error(error.error?.error_desc);\n      });\n      // //Get Personal Detail by NRIC\n      this.viewpayrollService.getNsmenInformationByNRIC(this.searchInput).subscribe(res1 => {\n        console.log(res1);\n        this.title = '';\n        this.title = this.title.concat(res1.body.data.nric, \" \", res1.body.data.rank, \" \", res1.body.data.name);\n        this.loading = false;\n      }, error => {\n        console.log(error);\n      });\n    }, 2000);\n  }\n  onPage(event) {\n    this.pageSize = event.rows;\n    this.pageData.currentPage = event.first / event.rows;\n  }\n  //refresh table\n  refreshTable() {\n    this.loadData(this.lazyLoadEvent);\n    console.log(\"refreshed\");\n  }\n  //Export Function to CSV\n  exportCSV(dataTable) {\n    // TODO: Implement export CSV function or call it from a utility class\n    const options = this.ns2HttpService.convertLazyEvent(this.lazyLoadEvent, 0, this.totalRecords);\n    this.viewpayrollService.getPayrollDetailByNRIC(this.searchInput, options).subscribe(resp => {\n      console.log(resp);\n      if (resp.body?.data?.content) {\n        const data = resp.body?.data?.content;\n        const columns = [{\n          field: 'sn',\n          header: 'SN',\n          index: 0\n        }, {\n          field: 'nric',\n          header: 'NRIC',\n          index: 1\n        }, {\n          field: 'payrollDescription',\n          header: 'Payroll Description',\n          index: 2\n        }, {\n          field: 'payrollStartDt',\n          header: 'Payroll Start Date Time',\n          index: 3\n        }, {\n          field: 'payrollEndDt',\n          header: 'Payroll End Date Time',\n          index: 4\n        }, {\n          field: 'validInd',\n          header: 'Valid',\n          index: 5\n        }, {\n          field: 'unpaid',\n          header: 'Unpaid',\n          index: 6\n        }, {\n          field: 'paid',\n          header: 'Paid',\n          index: 7\n        }];\n        const dtoList = [];\n        console.log(\"data\", data);\n        data.forEach((d, index) => {\n          const dto = {\n            sn: index + 1,\n            nric: d.nric,\n            payrollDescription: `${String(this.PayrollDescriptionDict[d.refCode].label)}`,\n            payrollStartDt: `${String(this.dateUtilsService.formatStrDate(d.payrollStartDt, \"DD-MM-YYYY (HHmm)\"))} ${String(d.payrollStartDt ? d.payrollStartDt : \"\")}`,\n            payrollEndDt: `${String(this.dateUtilsService.formatStrDate(d.payrollEndDt, \"DD-MM-YYYY (HHmm)\"))} ${String(d.payrollEndDt ? d.payrollEndDt : \"\")}`,\n            validInd: d.validInd,\n            unpaid: d.unpaidAmt,\n            paid: d.paidAmt\n          };\n          dtoList.push(dto);\n        });\n        this.exportUtilsService.exportCSV(dataTable, dtoList, resp.body.data.total_no_of_elems, columns, \"data_\".concat((0, common_1.formatDate)(new Date(), \"dd-MM-YYYY\", this.localeId)));\n      }\n    }, error => {\n      console.log(error.error?.error_desc);\n      this.loading = false;\n    });\n  }\n  //Search function using just NRIC\n  searchnric() {\n    this.title = '';\n    console.log(\"searching\");\n    this.viewPayrollTable.filter(\"\", 'from', 'contains');\n    this.viewPayrollTable.filter(\"\", 'to', 'contains');\n    this.loadData(this.lazyLoadEvent);\n  }\n  //search result based on NRIC and the range of the start and end date\n  searchnricdate() {\n    this.title = '';\n    this.selection = \"\";\n    console.log(\"searching nric and date\");\n    console.log(this.startDate);\n    console.log(this.endDate);\n    //start date after\n    this.viewPayrollTable.filter(this.startDate, 'from', 'after');\n    //end date before\n    this.viewPayrollTable.filter(this.endDate, 'to', 'before');\n    console.log(this.viewPayrollTable);\n  }\n  onRowSelect(event) {\n    console.log(event);\n    console.log(event.data.payrollId);\n    console.log(\"testing\");\n    // console.log(\"Emit event = \" + event);\n    this.selectEvent.emit(event.data.payrollId);\n  }\n  //loading Dropdown Code Types\n  loadDropDownValidType() {\n    console.log(\"Loading Valid Type\");\n    this.codeService.gets('PRL_PAYROLL_VALID').subscribe(codes => {\n      console.log(codes);\n      //getting all codes types for dropdown\n      this.valid_types = codes[0];\n      //loop through arrays from codetypekey\n      codes.forEach(codetypekey => {\n        // console.log(codetypekey);\n        // console.log(codetypekey[0].codetypeId);\n        //loop through arrays from codetypekey\n        Object.keys(codetypekey).forEach(key => {\n          // console.log(codetypekey[Number(key)].codeId); // key\n          // console.log(codetypekey[Number(key)].label); // label\n          this.valid_typesDict[codetypekey[Number(key)].codeId] = {\n            label: codetypekey[Number(key)].label['en-US']\n          };\n        });\n      });\n      // this.valid_types = codes[0];\n      console.log(this.valid_typesDict);\n    });\n  }\n  // translate payroll description by code id and type\n  translatePayrollDescription(code, type) {\n    // console.log(code);\n    // console.log(type);\n    const result = this.PayrollDescriptionDict1[code][this.codeTypeTslDict[type]].label;\n    // console.log(result);\n    return result;\n  }\n  //Loading Payroll Description Code Type\n  loadCodes() {\n    console.log(\"Loading Attendance,Allowance,Award Type\");\n    this.codeService.gets('PRL_ATTD_CODE,PRL_ALLW_CODE,PRL_AWD_CODE').subscribe(codes => {\n      // console.log(codes);\n      //codeId\n      console.log(\"helloz\");\n      //key = 0,1,2\n      codes.forEach(codetypekey => {\n        // console.log(codetypekey);\n        //loop through arrays from codetypekey\n        Object.keys(codetypekey).forEach(key => {\n          // console.log(codetypekey[Number(key)]);\n          console.log(\"payrolldict1\");\n          const currentId = codetypekey[Number(key)].codeId;\n          const currentTypeName = codetypekey[Number(key)].codetypeId;\n          if (!this.PayrollDescriptionDict1[currentId]) {\n            this.PayrollDescriptionDict1[currentId] = {\n              [currentTypeName]: {\n                label: codetypekey[Number(key)].label['en-US']\n              }\n            };\n          } else {\n            // console.log(this.PayrollDescriptionDict1[currentId]);\n            let dupeDictJson = \"{\\n\";\n            for (const [superkey, value] of Object.entries(this.PayrollDescriptionDict1[currentId])) {\n              dupeDictJson += '\\t\"' + String(superkey) + '\":{ \"label\":\"' + String(value.label) + '\"},\\n';\n            }\n            dupeDictJson += '\\t\"' + String(currentTypeName) + '\":{ \"label\":\"' + String(codetypekey[Number(key)].label['en-US']) + '\"}\\n}';\n            this.PayrollDescriptionDict1[currentId] = JSON.parse(dupeDictJson);\n          }\n        });\n      });\n    });\n    // console.log(this.PayrollDescriptionDict1);\n    // console.log(this.PayrollDescriptionDict1[\"1\"][\"PRL_ATTD_CODE\"]);\n  }\n}\n\nexports.ViewPayrollComponent = ViewPayrollComponent;\nViewPayrollComponent.ɵfac = function ViewPayrollComponent_Factory(t) {\n  return new (t || ViewPayrollComponent)(i0.ɵɵdirectiveInject(i1.viewPayrollService), i0.ɵɵdirectiveInject(i2.Ns2HttpService), i0.ɵɵdirectiveInject(i3.IcCodeService), i0.ɵɵdirectiveInject(i4.DateUtilsService), i0.ɵɵdirectiveInject(i5.ExportUtilsService), i0.ɵɵdirectiveInject(i6.CustomToastService), i0.ɵɵdirectiveInject(core_1.LOCALE_ID));\n};\nViewPayrollComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ViewPayrollComponent,\n  selectors: [[\"n2-view-payroll\"]],\n  viewQuery: function ViewPayrollComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.viewPayrollTable = _t.first);\n    }\n  },\n  inputs: {\n    searchInput: \"searchInput\",\n    startDate: \"startDate\",\n    endDate: \"endDate\",\n    selection: \"selection\"\n  },\n  outputs: {\n    selectEvent: \"selectEvent\"\n  },\n  decls: 18,\n  vars: 10,\n  consts: [[1, \"col-12\"], [\"header\", \"Result\", 1, \"flex-1\"], [\"styleClass\", \"p-datatable-gridlines\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"selectionMode\", \"single\", \"dataKey\", \"payrollDescription\", \"responsiveLayout\", \"scroll\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"selection\", \"totalRecords\", \"loading\", \"lazy\", \"onPage\", \"onRowSelect\", \"onLazyLoad\"], [\"viewPayrollTable\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"flex\", \"align-items-center\", \"justify-content-between\"], [2, \"font-size\", \"25px\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-file\", \"pTooltip\", \"CSV\", \"tooltipPosition\", \"bottom\", 1, \"mr-2\", 3, \"click\"], [\"scope\", \"col\"], [\"scope\", \"col\", \"pSortableColumn\", \"refCode\"], [\"field\", \"refCode\"], [\"type\", \"text\", \"field\", \"refCode\", \"display\", \"menu\"], [\"scope\", \"col\", \"pSortableColumn\", \"payrollStartDt\"], [\"field\", \"payrollStartDt\", \"matchMode\", \"before\"], [\"type\", \"date\", \"field\", \"payrollStartDt\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"pTemplate\", \"filter\"], [\"scope\", \"col\", \"pSortableColumn\", \"payrollEndDt\"], [\"field\", \"payrollEndDt\", \"matchMode\", \"before\"], [\"type\", \"date\", \"field\", \"payrollEndDt\", \"display\", \"menu\"], [\"scope\", \"col\", \"pSortableColumn\", \"validInd\"], [\"field\", \"validInd\"], [\"field\", \"validInd\", \"matchMode\", \"equals\", \"display\", \"menu\"], [\"scope\", \"col\", \"pSortableColumn\", \"unpaidAmt\"], [\"field\", \"unpaidAmt\"], [\"type\", \"numeric\", \"field\", \"unpaidAmt\", \"display\", \"menu\", \"currency\", \"USD\"], [\"scope\", \"col\", \"pSortableColumn\", \"paidAmt\"], [\"field\", \"paidAmt\"], [\"type\", \"numeric\", \"field\", \"paidAmt\", \"display\", \"menu\", \"currency\", \"USD\"], [\"dateFormat\", \"dd-MM-yyyy (hhmm)\", 3, \"onSelect\"], [\"optionValue\", \"codeId\", \"optionLabel\", \"label.en-US\", \"placeholder\", \"Any\", 3, \"ngModel\", \"options\", \"onChange\"], [3, \"pSelectableRow\", \"ngClass\"], [\"colspan\", \"12\"]],\n  template: function ViewPayrollComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"p-panel\", 1);\n      i0.ɵɵtext(3, \"\\n\\n\\n    \");\n      i0.ɵɵelementStart(4, \"p-table\", 2, 3);\n      i0.ɵɵlistener(\"onPage\", function ViewPayrollComponent_Template_p_table_onPage_4_listener($event) {\n        return ctx.onPage($event);\n      })(\"onRowSelect\", function ViewPayrollComponent_Template_p_table_onRowSelect_4_listener($event) {\n        return ctx.onRowSelect($event);\n      })(\"onLazyLoad\", function ViewPayrollComponent_Template_p_table_onLazyLoad_4_listener($event) {\n        return ctx.loadData($event);\n      });\n      i0.ɵɵtext(6, \"\\n      \");\n      i0.ɵɵtemplate(7, ViewPayrollComponent_ng_template_7_Template, 8, 1, \"ng-template\", 4);\n      i0.ɵɵtext(8, \"\\n      \");\n      i0.ɵɵtemplate(9, ViewPayrollComponent_ng_template_9_Template, 59, 0, \"ng-template\", 5);\n      i0.ɵɵtext(10, \"\\n      \");\n      i0.ɵɵtemplate(11, ViewPayrollComponent_ng_template_11_Template, 29, 27, \"ng-template\", 6);\n      i0.ɵɵtext(12, \"\\n      \");\n      i0.ɵɵtemplate(13, ViewPayrollComponent_ng_template_13_Template, 7, 0, \"ng-template\", 7);\n      i0.ɵɵtext(14, \"\\n\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(17, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", ctx.resultList)(\"paginator\", true)(\"rows\", 10)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(9, _c2))(\"selection\", ctx.selectedAwardRecord)(\"totalRecords\", ctx.totalRecords)(\"loading\", ctx.loading)(\"lazy\", true);\n    }\n  },\n  dependencies: [i7.NgControlStatus, i7.NgModel, i8.NgClass, i9.PrimeTemplate, i10.ButtonDirective, i11.Tooltip, i12.Table, i12.SortableColumn, i12.SelectableRow, i12.SortIcon, i12.ColumnFilter, i13.Dropdown, i14.Calendar, i15.Panel, i16.Ripple, i8.CurrencyPipe, i8.DatePipe],\n  styles: [\".p-panel-45-content[_ngcontent-%COMP%] {\\n  padding-left: 0%;\\n}\\n\\n[_nghost-%COMP%]     .row-attendance {\\n  background-color: rgba(255, 255, 255, 0.8) !important;\\n}\\n\\n[_nghost-%COMP%]     .row-allowance {\\n  background-color: rgba(159, 254, 54, 0.8) !important;\\n}\\n\\n[_nghost-%COMP%]     .row-awards {\\n  background-color: rgba(135, 206, 235, 0.8) !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpZXctcGF5cm9sbC5jb21wb25lbnQuc2NzcyIsIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHByb2plY3RzJTIwMlxcbnNwYXlpaWFwcFxcc3JjXFxtYWluXFx3ZWJhcHBcXGFwcFxccGF5cm9sbFxccGF5cm9sbFxcdmlldy1wYXlyb2xsXFx2aWV3LXBheXJvbGwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtBQ0NKOztBREVBO0VBQ0kscURBQUE7QUNDSjs7QURFQTtFQUNJLG9EQUFBO0FDQ0o7O0FERUE7RUFDSSxxREFBQTtBQ0NKIiwiZmlsZSI6InZpZXctcGF5cm9sbC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wLXBhbmVsLTQ1LWNvbnRlbnR7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDAlO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLnJvdy1hdHRlbmRhbmNlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsLjgpICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAucm93LWFsbG93YW5jZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE1OSwgMjU0LCA1NCwuOCkgIWltcG9ydGFudDtcclxufVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5yb3ctYXdhcmRzIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTM1LCAyMDYsIDIzNSwuOCkgIWltcG9ydGFudDtcclxufVxyXG4iLCIucC1wYW5lbC00NS1jb250ZW50IHtcbiAgcGFkZGluZy1sZWZ0OiAwJTtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5yb3ctYXR0ZW5kYW5jZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KSAhaW1wb3J0YW50O1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnJvdy1hbGxvd2FuY2Uge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE1OSwgMjU0LCA1NCwgMC44KSAhaW1wb3J0YW50O1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnJvdy1hd2FyZHMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEzNSwgMjA2LCAyMzUsIDAuOCkgIWltcG9ydGFudDtcbn0iXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvcGF5cm9sbC9wYXlyb2xsL3ZpZXctcGF5cm9sbC92aWV3LXBheXJvbGwuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi9wcm9qZWN0cyUyMDIvbnNwYXlpaWFwcC9zcmMvbWFpbi93ZWJhcHAvYXBwL3BheXJvbGwvcGF5cm9sbC92aWV3LXBheXJvbGwvdmlldy1wYXlyb2xsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQUE7QUNDSjs7QURFQTtFQUNJLHFEQUFBO0FDQ0o7O0FERUE7RUFDSSxvREFBQTtBQ0NKOztBREVBO0VBQ0kscURBQUE7QUNDSjtBRENBLDQ4Q0FBNDhDIiwic291cmNlc0NvbnRlbnQiOlsiLnAtcGFuZWwtNDUtY29udGVudHtcclxuICAgIHBhZGRpbmctbGVmdDogMCU7XHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAucm93LWF0dGVuZGFuY2Uge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwuOCkgIWltcG9ydGFudDtcclxufVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5yb3ctYWxsb3dhbmNlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTU5LCAyNTQsIDU0LC44KSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLnJvdy1hd2FyZHMge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMzUsIDIwNiwgMjM1LC44KSAhaW1wb3J0YW50O1xyXG59XHJcbiIsIi5wLXBhbmVsLTQ1LWNvbnRlbnQge1xuICBwYWRkaW5nLWxlZnQ6IDAlO1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnJvdy1hdHRlbmRhbmNlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpICFpbXBvcnRhbnQ7XG59XG5cbjpob3N0IDo6bmctZGVlcCAucm93LWFsbG93YW5jZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTU5LCAyNTQsIDU0LCAwLjgpICFpbXBvcnRhbnQ7XG59XG5cbjpob3N0IDo6bmctZGVlcCAucm93LWF3YXJkcyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTM1LCAyMDYsIDIzNSwgMC44KSAhaW1wb3J0YW50O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ViewPayrollComponent","constructor","viewpayrollService","ns2HttpService","codeService","dateUtilsService","exportUtilsService","toastService","localeId","core_1","currentPage","ATTENDANCE","ALLOWANCES","AWARDS","ngOnInit","console","log","loadDropDownValidType","loadCodes","startDate","endDate","loadData","event","lazyLoadEvent","loading","setTimeout","options","convertLazyEvent","pageData","pageSize","getPayrollDetailByNRIC","searchInput","subscribe","res","body","data","content","resultList","totalRecords","totalElements","selection","searchnricdate","error","error_desc","getNsmenInformationByNRIC","res1","title","concat","nric","rank","name","onPage","rows","first","refreshTable","exportCSV","dataTable","resp","columns","field","header","index","dtoList","forEach","d","dto","sn","payrollDescription","String","PayrollDescriptionDict","refCode","label","payrollStartDt","formatStrDate","payrollEndDt","validInd","unpaid","unpaidAmt","paid","paidAmt","push","total_no_of_elems","Date","searchnric","viewPayrollTable","filter","onRowSelect","payrollId","selectEvent","emit","gets","codes","valid_types","codetypekey","Object","keys","key","valid_typesDict","Number","codeId","translatePayrollDescription","code","type","result","PayrollDescriptionDict1","codeTypeTslDict","currentId","currentTypeName","codetypeId","dupeDictJson","superkey","value","entries","JSON","parse","exports","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payroll\\payroll\\view-payroll\\view-payroll.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payroll\\payroll\\view-payroll\\view-payroll.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output, ViewChild, Inject, LOCALE_ID } from '@angular/core';\r\nimport { IPayrollRecord, PayrollCodeType, INsmenRecord, testType, CodeTranslation } from '../model/view-payroll.model';\r\nimport { viewPayrollService } from '../service/view-payroll.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { Table } from 'primeng/table';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { IcCodeService } from 'app/ng-connect';\r\nimport { ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport { formatDate } from '@angular/common';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { values } from 'lodash';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'n2-view-payroll',\r\n  templateUrl: './view-payroll.component.html',\r\n  styleUrls: ['./view-payroll.component.scss']\r\n})\r\nexport class ViewPayrollComponent implements OnInit {\r\n\r\n  resultList: IPayrollRecord[] = [];\r\n  @Input() searchInput = \"\";\r\n\r\n  @Input() startDate = \"\";\r\n  @Input() endDate = \"\";\r\n  @Input() selection = \"\";\r\n\r\n  @Output() selectEvent = new EventEmitter<object>();\r\n\r\n\r\n  searchNricInput: string;\r\n  title = '';\r\n  userinfo: INsmenRecord[] = [];\r\n  // showTable = false;\r\n  //row selection\r\n  selectedAwardRecord: IPayrollRecord[] = [];\r\n\r\n  //lazy loading\r\n  totalRecords: number;\r\n  loading: boolean;\r\n  pageData: { currentPage: number } = {\r\n    currentPage: 0\r\n  }\r\n  pageSize = 10;\r\n  lazyLoadEvent!: LazyLoadEvent;\r\n\r\n  //Attendance Code Type\r\n  valid_types: any[];\r\n  attendance_types: any[];\r\n  allowance_types: any[];\r\n  award_types: any[];\r\n\r\n  //specific date\r\n  startDateModel: Date;\r\n  minDate: Date;\r\n\r\n  //CodeType dictionary { [codetypeID: string]: { [codeId]: payrollCodeType } }\r\n  PayrollDescriptionDict: { [codeId: string]: PayrollCodeType; } = {}; //awards only currently\r\n  valid_typesDict: { [codeId: string]: PayrollCodeType; } = {};\r\n  att_typesDict: { [codeId: string]: PayrollCodeType; } = {};\r\n  allowance_typesDict: { [codeId: string]: PayrollCodeType; } = {};\r\n\r\n  codeTypeTslDict: { [key: string]: string } = {\r\n    ATTENDANCE: \"PRL_ATTD_CODE\",\r\n    ALLOWANCES: \"PRL_ALLW_CODE\",\r\n    AWARDS: \"PRL_AWD_CODE\"\r\n  };\r\n\r\n  // PayrollDescriptionDict1: { [codeId: string]: { [codetypeID: string]: PayrollCodeType } }= {}; //awards only currently\r\n  PayrollDescriptionDict1: { [codeId: string]: testType } = {}; //awards only currently\r\n  PayrollDescriptionDict2: {} = {};\r\n  // PayrollDescriptionDict1: { [codeId: string] : PayrollCodeType;} = {}; //awards only currently\r\n\r\n\r\n  @ViewChild('viewPayrollTable', { static: true })\r\n  private viewPayrollTable: Table;\r\n\r\n  constructor(\r\n    private viewpayrollService: viewPayrollService,\r\n    private ns2HttpService: Ns2HttpService,\r\n    private codeService: IcCodeService,\r\n    private dateUtilsService: DateUtilsService,\r\n    private exportUtilsService: ExportUtilsService,\r\n    private toastService: CustomToastService,\r\n    @Inject(LOCALE_ID) protected localeId: string\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    console.log(\"view component initiated\");\r\n    this.loadDropDownValidType();\r\n    this.loadCodes();\r\n    console.log(this.startDate);\r\n    console.log(this.endDate);\r\n  }\r\n\r\n  loadData(event: any): void {\r\n    this.lazyLoadEvent = event;\r\n    this.loading = true;\r\n    console.log(event);\r\n    console.log(\"options\");\r\n    setTimeout(() => {\r\n      const options = this.ns2HttpService.convertLazyEvent(event, this.pageData, this.pageSize);\r\n      //Get Payroll Detail by NRIC\r\n      this.viewpayrollService.getPayrollDetailByNRIC(this.searchInput, options).subscribe(\r\n        (res: HttpResponse<any>) => {\r\n          console.log(res);\r\n          console.log(res.body.data.content);\r\n          this.resultList = res.body.data.content;\r\n          this.totalRecords = res.body.data.totalElements;\r\n          console.log(this.resultList);\r\n          this.loading = false;\r\n          if (this.selection === 'search') {\r\n            this.searchnricdate();\r\n          }\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          console.log(error);\r\n          this.toastService.error(error.error?.error_desc)\r\n        }\r\n      );\r\n      // //Get Personal Detail by NRIC\r\n      this.viewpayrollService.getNsmenInformationByNRIC(this.searchInput).subscribe(\r\n        (res1: HttpResponse<any>) => {\r\n          console.log(res1);\r\n          this.title = '';\r\n          this.title = this.title.concat(res1.body.data.nric, \" \", res1.body.data.rank, \" \", res1.body.data.name);\r\n          this.loading = false;\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    }, 2000);\r\n  }\r\n\r\n  onPage(event: any): void {\r\n    this.pageSize = event.rows;\r\n    this.pageData.currentPage = event.first / event.rows;\r\n  }\r\n\r\n  //refresh table\r\n  refreshTable(): void {\r\n    this.loadData(this.lazyLoadEvent);\r\n    console.log(\"refreshed\");\r\n  }\r\n\r\n  //Export Function to CSV\r\n  exportCSV(dataTable: Table): void {\r\n    // TODO: Implement export CSV function or call it from a utility class\r\n    const options = this.ns2HttpService.convertLazyEvent(this.lazyLoadEvent, 0, this.totalRecords);\r\n    this.viewpayrollService.getPayrollDetailByNRIC(this.searchInput, options).subscribe(\r\n      resp => {\r\n        console.log(resp);\r\n\r\n        if (resp.body?.data?.content) {\r\n          const data = resp.body?.data?.content;\r\n          const columns =\r\n            [\r\n              { field: 'sn', header: 'SN', index: 0 },\r\n              { field: 'nric', header: 'NRIC', index: 1 },\r\n              { field: 'payrollDescription', header: 'Payroll Description', index: 2 },\r\n              { field: 'payrollStartDt', header: 'Payroll Start Date Time', index: 3 },\r\n              { field: 'payrollEndDt', header: 'Payroll End Date Time', index: 4 },\r\n              { field: 'validInd', header: 'Valid', index: 5 },\r\n              { field: 'unpaid', header: 'Unpaid', index: 6 },\r\n              { field: 'paid', header: 'Paid', index: 7 }\r\n            ];\r\n\r\n\r\n          const dtoList: any[] = [];\r\n          console.log(\"data\", data);\r\n          data.forEach((d: IPayrollRecord, index: number) => {\r\n            const dto = {\r\n              sn: index + 1,\r\n              nric: d.nric,\r\n              payrollDescription: `${String(this.PayrollDescriptionDict[d.refCode].label)}`,\r\n              payrollStartDt: `${String(this.dateUtilsService.formatStrDate(d.payrollStartDt, \"DD-MM-YYYY (HHmm)\"))} ${String(d.payrollStartDt ? d.payrollStartDt : \"\")}`,\r\n              payrollEndDt: `${String(this.dateUtilsService.formatStrDate(d.payrollEndDt, \"DD-MM-YYYY (HHmm)\"))} ${String(d.payrollEndDt ? d.payrollEndDt : \"\")}`,\r\n              validInd: d.validInd,\r\n              unpaid: d.unpaidAmt,\r\n              paid: d.paidAmt\r\n            }\r\n            dtoList.push(dto);\r\n          });\r\n          this.exportUtilsService.exportCSV(dataTable, dtoList, resp.body.data.total_no_of_elems, columns,\r\n            \"data_\".concat(formatDate(new Date(), \"dd-MM-YYYY\", this.localeId)));\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error.error?.error_desc);\r\n        this.loading = false;\r\n      })\r\n  }\r\n\r\n  //Search function using just NRIC\r\n  searchnric(): void {\r\n    this.title = '';\r\n    console.log(\"searching\");\r\n\r\n    this.viewPayrollTable.filter(\"\", 'from', 'contains');\r\n    this.viewPayrollTable.filter(\"\", 'to', 'contains');\r\n    this.loadData(this.lazyLoadEvent);\r\n  }\r\n\r\n  //search result based on NRIC and the range of the start and end date\r\n  searchnricdate(): void {\r\n    this.title = '';\r\n    this.selection = \"\";\r\n    console.log(\"searching nric and date\");\r\n    console.log(this.startDate);\r\n    console.log(this.endDate);\r\n\r\n    //start date after\r\n    this.viewPayrollTable.filter(this.startDate, 'from', 'after');\r\n    //end date before\r\n    this.viewPayrollTable.filter(this.endDate, 'to', 'before');\r\n    console.log(this.viewPayrollTable);\r\n\r\n  }\r\n\r\n  onRowSelect(event: any): void {\r\n    console.log(event);\r\n    console.log(event.data.payrollId);\r\n    console.log(\"testing\");\r\n    // console.log(\"Emit event = \" + event);\r\n    this.selectEvent.emit(event.data.payrollId);\r\n  }\r\n\r\n  //loading Dropdown Code Types\r\n  loadDropDownValidType(): void {\r\n    console.log(\"Loading Valid Type\");\r\n\r\n    this.codeService.gets('PRL_PAYROLL_VALID')\r\n      .subscribe((codes: any[]) => {\r\n        console.log(codes);\r\n        //getting all codes types for dropdown\r\n        this.valid_types = codes[0];\r\n        //loop through arrays from codetypekey\r\n        codes.forEach((codetypekey) => {\r\n          // console.log(codetypekey);\r\n          // console.log(codetypekey[0].codetypeId);\r\n\r\n          //loop through arrays from codetypekey\r\n          Object.keys(codetypekey).forEach((key) => {\r\n\r\n            // console.log(codetypekey[Number(key)].codeId); // key\r\n            // console.log(codetypekey[Number(key)].label); // label\r\n            this.valid_typesDict[codetypekey[Number(key)].codeId] = {\r\n              label: codetypekey[Number(key)].label['en-US']\r\n            };\r\n          });\r\n        });\r\n        // this.valid_types = codes[0];\r\n        console.log(this.valid_typesDict);\r\n      });\r\n  }\r\n\r\n  // translate payroll description by code id and type\r\n  translatePayrollDescription(code: string, type: string): string {\r\n    // console.log(code);\r\n    // console.log(type);\r\n\r\n    const result = this.PayrollDescriptionDict1[code][this.codeTypeTslDict[type]].label;\r\n    // console.log(result);\r\n    return result;\r\n  }\r\n\r\n  //Loading Payroll Description Code Type\r\n  loadCodes(): void {\r\n    console.log(\"Loading Attendance,Allowance,Award Type\");\r\n    this.codeService.gets('PRL_ATTD_CODE,PRL_ALLW_CODE,PRL_AWD_CODE')\r\n      .subscribe((codes: any[]) => {\r\n        // console.log(codes);\r\n        //codeId\r\n        console.log(\"helloz\");\r\n\r\n        //key = 0,1,2\r\n        codes.forEach((codetypekey) => {\r\n          // console.log(codetypekey);\r\n          //loop through arrays from codetypekey\r\n          Object.keys(codetypekey).forEach((key) => {\r\n\r\n            // console.log(codetypekey[Number(key)]);\r\n\r\n            console.log(\"payrolldict1\");\r\n            const currentId = codetypekey[Number(key)].codeId;\r\n            const currentTypeName = codetypekey[Number(key)].codetypeId;\r\n\r\n            if (!this.PayrollDescriptionDict1[currentId]) {\r\n              this.PayrollDescriptionDict1[currentId] =\r\n              {\r\n                [currentTypeName]: ({\r\n                  label: codetypekey[Number(key)].label['en-US']\r\n                })\r\n              };\r\n            }\r\n            else {\r\n              // console.log(this.PayrollDescriptionDict1[currentId]);\r\n              let dupeDictJson = \"{\\n\"\r\n              for (const [superkey, value] of Object.entries(this.PayrollDescriptionDict1[currentId])) {\r\n                dupeDictJson += '\\t\"' + String(superkey) + '\":{ \"label\":\"' + String(value.label) + '\"},\\n';\r\n              }\r\n              dupeDictJson += '\\t\"' + String(currentTypeName) + '\":{ \"label\":\"' + String(codetypekey[Number(key)].label['en-US']) + '\"}\\n}';\r\n\r\n              this.PayrollDescriptionDict1[currentId] = JSON.parse(dupeDictJson)\r\n            }\r\n\r\n          });\r\n        });\r\n\r\n      });\r\n    // console.log(this.PayrollDescriptionDict1);\r\n    // console.log(this.PayrollDescriptionDict1[\"1\"][\"PRL_ATTD_CODE\"]);\r\n\r\n  }\r\n}\r\n","<div class=\"col-12\">\r\n  <p-panel class='flex-1' header='Result'>\r\n\r\n\r\n    <p-table #viewPayrollTable [value]=\"resultList\" styleClass=\"p-datatable-gridlines\" [paginator]=\"true\" [rows]=\"10\"\r\n      [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,25,50]\"\r\n      currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" selectionMode=\"single\"\r\n      [selection]=\"selectedAwardRecord\" dataKey=\"payrollDescription\" [totalRecords]=\"totalRecords\"\r\n      (onPage)=\"onPage($event)\" (onRowSelect)=\"onRowSelect($event)\" [loading]=\"loading\" [lazy]=\"true\"\r\n      (onLazyLoad)=\"loadData($event)\" responsiveLayout=\"scroll\">\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"flex align-items-center justify-content-between\">\r\n          <span style=\"font-size: 25px\"><button type=\"button\" pButton pRipple icon=\"pi pi-file\"\r\n              (click)=\"exportCSV(viewPayrollTable)\" class=\"mr-2\" pTooltip=\"CSV\"\r\n              tooltipPosition=\"bottom\"></button>{{title}}</span>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n\r\n          <th scope=\"col\">S/N </th>\r\n          <th scope=\"col\" pSortableColumn=\"refCode\">Payroll Description <p-sortIcon field=\"refCode\">\r\n            </p-sortIcon>\r\n            <p-columnFilter type=\"text\" field=\"refCode\" display=\"menu\"></p-columnFilter>\r\n          </th>\r\n          <th scope=\"col\" pSortableColumn=\"payrollStartDt\">Trg Start Date Time <p-sortIcon field=\"payrollStartDt\"\r\n              matchMode=\"before\"></p-sortIcon>\r\n            <p-columnFilter type=\"date\" field=\"payrollStartDt\" display=\"menu\" matchMode=\"contains\">\r\n              <ng-template pTemplate=\"filter\" let-filter=\"filterCallback\">\r\n                <p-calendar dateFormat=\"dd-MM-yyyy (hhmm)\" (onSelect)=\"filter($event)\"></p-calendar>\r\n              </ng-template>\r\n            </p-columnFilter>\r\n          </th>\r\n          <th scope=\"col\" pSortableColumn=\"payrollEndDt\">Trg End Date Time <p-sortIcon field=\"payrollEndDt\"\r\n              matchMode=\"before\"></p-sortIcon>\r\n            <p-columnFilter type=\"date\" field=\"payrollEndDt\" display=\"menu\">\r\n              <ng-template pTemplate=\"filter\" let-filter=\"filterCallback\">\r\n                <p-calendar dateFormat=\"dd-MM-yyyy (hhmm)\" (onSelect)=\"filter($event)\"></p-calendar>\r\n              </ng-template>\r\n            </p-columnFilter>\r\n          </th>\r\n          <th scope=\"col\" pSortableColumn=\"validInd\">Valid <p-sortIcon field=\"validInd\"></p-sortIcon>\r\n            <p-columnFilter field=\"validInd\" matchMode=\"equals\" display=\"menu\">\r\n              <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                <p-dropdown [ngModel]=\"value\" [options]=\"valid_types\" optionValue=\"codeId\" optionLabel=\"label.en-US\"\r\n                  (onChange)=\"filter($event.value)\" placeholder=\"Any\">\r\n                  <!-- [options]=\"valid_typeValues\"  optionLabel=\"label.en-US\" optionValue=\"codeId\" -->\r\n                  <!-- <ng-template let-option pTemplate=\"item\">\r\n                  <span [class]=\"'view-payroll status-' + option.value\">{{\r\n                    option.label.en\r\n                    }}</span>\r\n                </ng-template> -->\r\n                </p-dropdown>\r\n              </ng-template>\r\n            </p-columnFilter>\r\n          </th>\r\n          <th scope=\"col\" pSortableColumn=\"unpaidAmt\">Unpaid <p-sortIcon field=\"unpaidAmt\"></p-sortIcon>\r\n            <p-columnFilter type=\"numeric\" field=\"unpaidAmt\" display=\"menu\" currency=\"USD\"></p-columnFilter>\r\n          </th>\r\n          <th scope=\"col\" pSortableColumn=\"paidAmt\">Paid <p-sortIcon field=\"paidAmt\"></p-sortIcon>\r\n            <p-columnFilter type=\"numeric\" field=\"paidAmt\" display=\"menu\" currency=\"USD\"></p-columnFilter>\r\n          </th>\r\n\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-resultList let-i=\"rowIndex\">\r\n\r\n        <tr [pSelectableRow]=\"resultList\"\r\n          [ngClass]=\"{'row-awards': resultList.refType === 'AWARDS', 'row-attendance': resultList.refType === 'ATTENDANCE','row-allowance': resultList.refType === 'ALLOWANCES'}\">\r\n          <td>{{i+1}}</td>\r\n          <td>{{translatePayrollDescription(resultList.refCode,resultList.refType)}}</td>\r\n          <td>{{resultList.payrollStartDt | date: 'dd-MM-yyyy (HHmm)'}} </td>\r\n          <td>{{resultList.payrollEndDt | date: 'dd-MM-yyyy (HHmm)'}}</td>\r\n          <td>{{valid_typesDict[resultList.validInd].label}}</td>\r\n          <td>{{resultList.unpaidAmt | currency: 'USD':'symbol'}}</td>\r\n          <td>{{resultList.paidAmt | currency: 'USD':'symbol' }}</td>\r\n\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"12\">No records found.</td>\r\n        </tr>\r\n      </ng-template>\r\n\r\n    </p-table>\r\n  </p-panel>\r\n</div>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}