{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OverpaymentService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/common/http\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nclass OverpaymentService {\n  constructor(http, applicationConfigService, ns2Http) {\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n    this.ns2Http = ns2Http;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('api/payment/overpayment');\n  }\n  getAll(options) {\n    return this.ns2Http.get(this.resourceUrl, options);\n  }\n  getRefundDetailsByOverpaymentId(overpaymentId, options) {\n    const url = `${this.resourceUrl}/${overpaymentId}/refunds`;\n    return this.ns2Http.get(url, options);\n  }\n  searchByNric(nric, options) {\n    const url = `${this.resourceUrl}/search/${nric}`;\n    return this.ns2Http.get(url, options);\n  }\n  searchByCSN(csn, options) {\n    const url = `${this.resourceUrl}/search/company/${csn}`;\n    return this.ns2Http.get(url, options);\n  }\n  getByNric(nric, options) {\n    const url = `${this.resourceUrl}/nsman/${nric}`;\n    return this.ns2Http.get(url, options);\n  }\n  getByCsn(csn, options) {\n    const url = `${this.resourceUrl}/company/${csn}`;\n    return this.ns2Http.get(url, options);\n  }\n  getOustandingOverpaymentsByNric(nric) {\n    const url = `${this.resourceUrl}/nsman/outstanding/${nric}`;\n    return this.ns2Http.get(url);\n  }\n  getOustandingOverpaymentsByCsn(csn) {\n    const url = `${this.resourceUrl}/company/${csn}/outstanding/`;\n    return this.ns2Http.get(url);\n  }\n}\nexports.OverpaymentService = OverpaymentService;\nOverpaymentService.ɵfac = function OverpaymentService_Factory(t) {\n  return new (t || OverpaymentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService), i0.ɵɵinject(i3.Ns2HttpService));\n};\nOverpaymentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OverpaymentService,\n  factory: OverpaymentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;;;;;AAUA,MACaA,kBAAkB;EAG7BC,YAAsBC,IAAgB,EAC5BC,wBAAkD,EAClDC,OAAuB;IAFX,SAAI,GAAJF,IAAI;IAChB,6BAAwB,GAAxBC,wBAAwB;IACxB,YAAO,GAAPC,OAAO;IAJV,gBAAW,GAAG,IAAI,CAACD,wBAAwB,CAACE,cAAc,CAAC,yBAAyB,CAAC;EAIxD;EAEpCC,MAAM,CAACC,OAAa;IAClB,OAAO,IAAI,CAACH,OAAO,CAACI,GAAG,CAAC,IAAI,CAACC,WAAW,EAAEF,OAAO,CAAC;EACpD;EAEAG,+BAA+B,CAACC,aAAqB,EAAEJ,OAAa;IAClE,MAAMK,GAAG,GAAG,GAAG,IAAI,CAACH,WAAW,IAAIE,aAAa,UAAU;IAC1D,OAAO,IAAI,CAACP,OAAO,CAACI,GAAG,CAACI,GAAG,EAAEL,OAAO,CAAC;EACvC;EAEAM,YAAY,CAACC,IAAY,EAAEP,OAAa;IACtC,MAAMK,GAAG,GAAG,GAAG,IAAI,CAACH,WAAW,WAAWK,IAAI,EAAE;IAChD,OAAO,IAAI,CAACV,OAAO,CAACI,GAAG,CAACI,GAAG,EAAEL,OAAO,CAAC;EACvC;EAEAQ,WAAW,CAACC,GAAW,EAAET,OAAa;IACpC,MAAMK,GAAG,GAAG,GAAG,IAAI,CAACH,WAAW,mBAAmBO,GAAG,EAAE;IACvD,OAAO,IAAI,CAACZ,OAAO,CAACI,GAAG,CAACI,GAAG,EAAEL,OAAO,CAAC;EACvC;EAEAU,SAAS,CAACH,IAAY,EAAEP,OAAa;IACnC,MAAMK,GAAG,GAAG,GAAG,IAAI,CAACH,WAAW,UAAUK,IAAI,EAAE;IAC/C,OAAO,IAAI,CAACV,OAAO,CAACI,GAAG,CAACI,GAAG,EAAEL,OAAO,CAAC;EACvC;EAEAW,QAAQ,CAACF,GAAW,EAAET,OAAa;IACjC,MAAMK,GAAG,GAAG,GAAG,IAAI,CAACH,WAAW,YAAYO,GAAG,EAAE;IAChD,OAAO,IAAI,CAACZ,OAAO,CAACI,GAAG,CAACI,GAAG,EAAEL,OAAO,CAAC;EACvC;EAEAY,+BAA+B,CAACL,IAAY;IAC1C,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACH,WAAW,sBAAsBK,IAAI,EAAE;IAC3D,OAAO,IAAI,CAACV,OAAO,CAACI,GAAG,CAACI,GAAG,CAAC;EAC9B;EAEAQ,8BAA8B,CAACJ,GAAW;IACxC,MAAMJ,GAAG,GAAG,GAAG,IAAI,CAACH,WAAW,YAAYO,GAAG,eAAe;IAC7D,OAAO,IAAI,CAACZ,OAAO,CAACI,GAAG,CAACI,GAAG,CAAC;EAC9B;;AA7CFS;;mBACarB,kBAAkB;AAAA;;SAAlBA,kBAAkB;EAAAsB,SAAlBtB,kBAAkB;EAAAuB,YADL;AAAM","names":["OverpaymentService","constructor","http","applicationConfigService","ns2Http","getEndpointFor","getAll","options","get","resourceUrl","getRefundDetailsByOverpaymentId","overpaymentId","url","searchByNric","nric","searchByCSN","csn","getByNric","getByCsn","getOustandingOverpaymentsByNric","getOustandingOverpaymentsByCsn","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payment\\overpayment\\service\\overpayment.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {ApplicationConfigService} from 'app/core/config/application-config.service';\r\nimport {IOverpayment} from '../overpayment-tab/overpayment-tab.model';\r\nimport {Ns2HttpService} from 'app/shared/service/ns2-http.service';\r\n\r\nexport type EntityResponseType = HttpResponse<IOverpayment>;\r\nexport type EntityArrayResponseType = HttpResponse<IOverpayment[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OverpaymentService {\r\n  public resourceUrl = this.applicationConfigService.getEndpointFor('api/payment/overpayment');\r\n\r\n  constructor(protected http: HttpClient,\r\n    private applicationConfigService: ApplicationConfigService,\r\n    private ns2Http: Ns2HttpService) {}\r\n\r\n  getAll(options?: any): Observable<any> {\r\n    return this.ns2Http.get(this.resourceUrl, options);\r\n  }\r\n\r\n  getRefundDetailsByOverpaymentId(overpaymentId: string, options?: any): Observable<any> {\r\n    const url = `${this.resourceUrl}/${overpaymentId}/refunds`;\r\n    return this.ns2Http.get(url, options);\r\n  }\r\n\r\n  searchByNric(nric: string, options?: any): Observable<any> {\r\n    const url = `${this.resourceUrl}/search/${nric}`;\r\n    return this.ns2Http.get(url, options);\r\n  }\r\n\r\n  searchByCSN(csn: string, options?: any): Observable<any> {\r\n    const url = `${this.resourceUrl}/search/company/${csn}`;\r\n    return this.ns2Http.get(url, options);\r\n  }\r\n\r\n  getByNric(nric: string, options?: any): Observable<any> {\r\n    const url = `${this.resourceUrl}/nsman/${nric}`;\r\n    return this.ns2Http.get(url, options);\r\n  }\r\n\r\n  getByCsn(csn: string, options? :any): Observable<any> {\r\n    const url = `${this.resourceUrl}/company/${csn}`;\r\n    return this.ns2Http.get(url, options);\r\n  }\r\n\r\n  getOustandingOverpaymentsByNric(nric: string): Observable<any> {\r\n    const url = `${this.resourceUrl}/nsman/outstanding/${nric}`;\r\n    return this.ns2Http.get(url);\r\n  }\r\n\r\n  getOustandingOverpaymentsByCsn(csn: string): Observable<any> {\r\n    const url = `${this.resourceUrl}/company/${csn}/outstanding/`;\r\n    return this.ns2Http.get(url);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}