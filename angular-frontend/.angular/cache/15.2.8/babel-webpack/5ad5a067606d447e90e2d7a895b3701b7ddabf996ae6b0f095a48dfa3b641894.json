{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClaimSectionForEclaimComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@angular/core\");\nconst moment_1 = tslib_1.__importDefault(require(\"moment\"));\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i2 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i3 = tslib_1.__importStar(require(\"app/claim/service/claim.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/ng-connect\"));\nconst i5 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i6 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i7 = tslib_1.__importStar(require(\"primeng/tooltip\"));\nconst i8 = tslib_1.__importStar(require(\"primeng/accordion\"));\nfunction ClaimSectionForEclaimComponent_ng_template_2_label_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" (\", ctx_r4.dateUtilsService.getDayOfWeek(ctx_r4.dateUtilsService.convertStrToDate(ctx_r4.seClaimDetails.trgStartDte, \"DD-MM-YYYY\")), \") \");\n  }\n}\nfunction ClaimSectionForEclaimComponent_ng_template_2_label_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" (\", ctx_r5.dateUtilsService.getDayOfWeek(ctx_r5.dateUtilsService.convertStrToDate(ctx_r5.seClaimDetails.trgEndDte, \"DD-MM-YYYY\")), \") \");\n  }\n}\nconst _c0 = function () {\n  return {\n    \"margin-left\": \"0.5em\"\n  };\n};\nfunction ClaimSectionForEclaimComponent_ng_template_2_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n      \");\n    i0.ɵɵtext(2, \"\\n        \");\n    i0.ɵɵelementStart(3, \"a\", 17);\n    i0.ɵɵlistener(\"click\", function ClaimSectionForEclaimComponent_ng_template_2_div_40_Template_a_click_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const overlappingClaims_r7 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      ctx_r9.popUpEnquiryClaim(overlappingClaims_r7.claimId, overlappingClaims_r7.claimType);\n      return i0.ɵɵresetView($event.stopPropagation());\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"slice\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const overlappingClaims_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(9, _c0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\"\\n          \", overlappingClaims_r7.caseId, \"(\", overlappingClaims_r7.coyName.length > 15 ? i0.ɵɵpipeBind3(5, 5, overlappingClaims_r7.coyName, 0, 15) + \"...\" : overlappingClaims_r7.coyName, \")\", i_r8 < ctx_r6.seClaimDetails.overlappingClaimList.length - 1 ? \",\" : \"\", \"\\n        \");\n  }\n}\nconst _c1 = function () {\n  return {\n    \"flex-basis\": \"100px\"\n  };\n};\nfunction ClaimSectionForEclaimComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n\");\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"div\", 9);\n    i0.ɵɵtext(3, \"\\n      \");\n    i0.ɵɵelementStart(4, \"label\", 10);\n    i0.ɵɵtext(5, \"Trg Period:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n      \");\n    i0.ɵɵelementStart(7, \"div\", 11);\n    i0.ɵɵtext(8, \"\\n        \");\n    i0.ɵɵelementStart(9, \"div\");\n    i0.ɵɵtext(10, \"\\n          \");\n    i0.ɵɵelementStart(11, \"label\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n          \");\n    i0.ɵɵtemplate(14, ClaimSectionForEclaimComponent_ng_template_2_label_14_Template, 2, 1, \"label\", 12);\n    i0.ɵɵtext(15, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n      \");\n    i0.ɵɵelementStart(18, \"div\", 13);\n    i0.ɵɵtext(19, \"to\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n      \");\n    i0.ɵɵelementStart(21, \"div\", 11);\n    i0.ɵɵtext(22, \"\\n          \");\n    i0.ɵɵelementStart(23, \"div\");\n    i0.ɵɵtext(24, \"\\n            \");\n    i0.ɵɵelementStart(25, \"label\");\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \"\\n            \");\n    i0.ɵɵtemplate(28, ClaimSectionForEclaimComponent_ng_template_2_label_28_Template, 2, 1, \"label\", 12);\n    i0.ɵɵtext(29, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n       \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(32, \"\\n    \");\n    i0.ɵɵelement(33, \"div\", 14);\n    i0.ɵɵtext(34, \"\\n    \");\n    i0.ɵɵelementStart(35, \"div\", 15);\n    i0.ɵɵtext(36, \"\\n      \");\n    i0.ɵɵelementStart(37, \"span\");\n    i0.ɵɵtext(38, \"Overlapping Claims: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(39, \"\\n      \");\n    i0.ɵɵtemplate(40, ClaimSectionForEclaimComponent_ng_template_2_div_40_Template, 7, 10, \"div\", 16);\n    i0.ɵɵtext(41, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n  \");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.fallOutsideCurrentYr() ? \"warning-date\" : null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c1));\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r0.seClaimDetails.trgStartDte);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", true);\n    i0.ɵɵadvance(12);\n    i0.ɵɵtextInterpolate(ctx_r0.seClaimDetails.trgEndDte);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", true);\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.seClaimDetails.overlappingClaimList);\n  }\n}\nconst _c2 = function () {\n  return {\n    \"margin-left\": \"0.5em\",\n    \"margin-right\": \"0.5em\"\n  };\n};\nfunction ClaimSectionForEclaimComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"label\", 6);\n    i0.ɵɵtext(3, \"Work Hour:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n        \");\n    i0.ɵɵelementStart(5, \"div\", 7);\n    i0.ɵɵtext(6, \"\\n          \");\n    i0.ɵɵelementStart(7, \"span\", 18);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n          \");\n    i0.ɵɵelementStart(10, \"span\");\n    i0.ɵɵtext(11, \"to\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n          \");\n    i0.ɵɵelementStart(13, \"span\", 18);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵpropertyInterpolate2(\"pTooltip\", \"\", ctx_r1.padLeft(ctx_r1.initialSEClaimDetails.hrWorkStart.toString(), \"0\", 4), \" (\", ctx_r1.formatTime(ctx_r1.initialSEClaimDetails.hrWorkStart), \")\");\n    i0.ɵɵproperty(\"tooltipDisabled\", !ctx_r1.checkWorkHourStart())(\"ngClass\", ctx_r1.checkWorkHourStart() ? \"warning-date\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\\n            \", ctx_r1.padLeft(ctx_r1.seClaimDetails.workStartTime, \"0\", 4), \" (\", ctx_r1.formatTime(ctx_r1.seClaimDetails.workStartTime), \")\\n          \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(14, _c2));\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate2(\"pTooltip\", \"\", ctx_r1.padLeft(ctx_r1.initialSEClaimDetails.hrWorkEnd.toString(), \"0\", 4), \" (\", ctx_r1.formatTime(ctx_r1.initialSEClaimDetails.hrWorkEnd), \")\");\n    i0.ɵɵproperty(\"tooltipDisabled\", !ctx_r1.checkWorkHourEnd())(\"ngClass\", ctx_r1.checkWorkHourEnd() ? \"warning-date\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\\n            \", ctx_r1.padLeft(ctx_r1.seClaimDetails.workEndTime, \"0\", 4), \" (\", ctx_r1.formatTime(ctx_r1.seClaimDetails.workEndTime), \")\\n          \");\n  }\n}\nfunction ClaimSectionForEclaimComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"label\", 6);\n    i0.ɵɵtext(3, \"Company:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n        \");\n    i0.ɵɵelementStart(5, \"div\", 7);\n    i0.ɵɵtext(6, \"\\n          \");\n    i0.ɵɵelementStart(7, \"span\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r2.seClaimDetails.coyName);\n  }\n}\nfunction ClaimSectionForEclaimComponent_div_47_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const restDay_r12 = ctx.$implicit;\n    const i_r13 = ctx.index;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n            \", restDay_r12 + (i_r13 < ctx_r11.seClaimDetails.restDayList.length - 1 ? \", \" : \" \"), \"\\n          \");\n  }\n}\nfunction ClaimSectionForEclaimComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"label\", 6);\n    i0.ɵɵtext(3, \"Rest Day:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n        \");\n    i0.ɵɵelementStart(5, \"div\", 7);\n    i0.ɵɵtext(6, \"\\n          \");\n    i0.ɵɵtemplate(7, ClaimSectionForEclaimComponent_div_47_span_7_Template, 2, 1, \"span\", 16);\n    i0.ɵɵtext(8, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.seClaimDetails.restDayList);\n  }\n}\nclass ClaimSectionForEclaimComponent {\n  constructor(dateUtilsService, router, claimService, codeService) {\n    this.dateUtilsService = dateUtilsService;\n    this.router = router;\n    this.claimService = claimService;\n    this.codeService = codeService;\n    this.selectedChange = new core_1.EventEmitter();\n    this.isNewPolicy = false;\n    console.log(\"test\");\n  }\n  ngOnInit() {\n    this.retrieveOccupationMap();\n  }\n  ngOnChanges(changes) {\n    if (changes['seClaimDetails']?.currentValue) {\n      this.seClaimDetails = changes['seClaimDetails'].currentValue;\n      this.loadCodes('claim_option_long', this.seClaimDetails?.headerDto?.claimOption.toString());\n    }\n  }\n  accordionClick() {\n    this.selectedChange.emit(this.selected);\n  }\n  padLeft(text, padChar, size) {\n    return (String(padChar).repeat(size) + text).substr(size * -1, size);\n  }\n  formatTime(time) {\n    let rslt = \"\";\n    if ((0, moment_1.default)(time, ['HH:mm']).isValid()) {\n      rslt = (0, moment_1.default)(time, ['HH:mm']).format('hh:mm A');\n    }\n    return rslt;\n  }\n  popUpEnquiryClaim(claimId, claimType) {\n    const params2 = {\n      claimId\n    };\n    // TODO: after enquiry version of the page is done, uncomment and put in the real route\n    // if(claimType === \"S\"){\n    //   const url = this.router.serializeUrl(this.router.createUrlTree(['claim/se-claim/view-latest-owner'],{queryParams: params2}));\n    //   window.open(url, \"enquireSEClaim\", 'location=0,menubar=0,status=0,height=1000, width=1500');\n    // } else if (claimType === \"E\") {\n    //   const url = this.router.serializeUrl(this.router.createUrlTree(['claim/se-claim/view-latest-owner'],{queryParams: params2}));\n    //   window.open(url, \"enquireECClaim\", 'location=0,menubar=0,status=0,height=1000, width=1500');\n    // }\n  }\n\n  fallOutsideCurrentYr() {\n    const curYr = new Date().getFullYear();\n    let outsideCurrYear = false;\n    const startDate = this.dateUtilsService.convertStrToDate(this.seClaimDetails.trgStartDte, \"DD-MM-YYYY\");\n    if (startDate.getFullYear() < curYr || startDate.getFullYear() > curYr) {\n      outsideCurrYear = true;\n    }\n    const endDate = this.dateUtilsService.convertStrToDate(this.seClaimDetails.trgEndDte, \"DD-MM-YYYY\");\n    if (endDate.getFullYear() < curYr || endDate.getFullYear() > curYr) {\n      outsideCurrYear = true;\n    }\n    return outsideCurrYear;\n  }\n  checkWorkHourStart() {\n    let isDiffFromPrepop = false;\n    if (parseInt(this.seClaimDetails?.workStartTime, 10) !== this.initialSEClaimDetails?.hrWorkStart) {\n      isDiffFromPrepop = true;\n    }\n    return this.isNewPolicy && this.seClaimDetails?.headerDto.claimOption === '2' && isDiffFromPrepop;\n  }\n  checkWorkHourEnd() {\n    let isDiffFromPrepop = false;\n    if (parseInt(this.seClaimDetails?.workEndTime, 10) !== this.initialSEClaimDetails?.hrWorkEnd) {\n      isDiffFromPrepop = true;\n    }\n    return this.isNewPolicy && this.seClaimDetails?.headerDto.claimOption === '2' && isDiffFromPrepop;\n  }\n  checkOccupation() {\n    let isDiffFromPrepop = false;\n    if (this.seClaimDetails?.occupationCode !== this.initialSEClaimDetails?.occupationCode) {\n      isDiffFromPrepop = true;\n    } else if (this.seClaimDetails?.occupationCode === this.initialSEClaimDetails?.occupationCode) {\n      if (this.seClaimDetails?.occupationCode === '990' && this.seClaimDetails?.otherOccupationDesc !== this.initialSEClaimDetails?.otherOccupnDesc) {\n        isDiffFromPrepop = true;\n      }\n    }\n    return this.isNewPolicy && this.seClaimDetails?.headerDto.claimOption === '2' && isDiffFromPrepop;\n  }\n  checkCommencementDate() {\n    let isDiffFromPrepop = false;\n    if (this.seClaimDetails?.commencementDte !== this.initialSEClaimDetails?.commencementDate) {\n      isDiffFromPrepop = true;\n    }\n    return this.isNewPolicy && this.seClaimDetails?.headerDto.claimOption === '2' && isDiffFromPrepop;\n  }\n  retrieveOccupationMap() {\n    this.claimService.retrieveOccupationList(null).subscribe(resp => {\n      if (resp.body.data) {\n        this.occupationMap = new Map(Object.entries(resp.body.data));\n      }\n    });\n  }\n  loadCodes(codeType, codeId) {\n    this.codeService.get(codeType, codeId).subscribe(code => {\n      this.claimOption = code?.label['en-US'];\n    });\n  }\n}\nexports.ClaimSectionForEclaimComponent = ClaimSectionForEclaimComponent;\nClaimSectionForEclaimComponent.ɵfac = function ClaimSectionForEclaimComponent_Factory(t) {\n  return new (t || ClaimSectionForEclaimComponent)(i0.ɵɵdirectiveInject(i1.DateUtilsService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ClaimService), i0.ɵɵdirectiveInject(i4.IcCodeService));\n};\nClaimSectionForEclaimComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClaimSectionForEclaimComponent,\n  selectors: [[\"n2-claim-for-eclaim-section\"]],\n  inputs: {\n    selected: \"selected\",\n    seClaimDetails: \"seClaimDetails\",\n    initialSEClaimDetails: \"initialSEClaimDetails\",\n    isNewPolicy: \"isNewPolicy\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 52,\n  vars: 14,\n  consts: [[\"multiple\", \"true\", 3, \"selected\", \"selectedChange\", \"click\"], [\"pTemplate\", \"header\"], [1, \"grid\"], [1, \"col-6\"], [\"class\", \"field grid\", 4, \"ngIf\"], [1, \"field\", \"grid\"], [1, \"col-3\", \"col-form-label\"], [1, \"col\"], [3, \"tooltipDisabled\", \"ngClass\", \"pTooltip\"], [1, \"grid\", \"col-3\", 2, \"margin\", \"0\", \"padding\", \"0\", 3, \"ngClass\"], [1, \"flex\", \"col-1\", \"align-items-center\"], [1, \"flex\", \"col-2\", \"align-items-center\", \"justify-content-center\", \"flex-grow-1\"], [4, \"ngIf\"], [1, \"flex\", \"col-1\", \"align-items-center\", \"justify-content-center\"], [1, \"grid\", \"col-1\", 2, \"margin\", \"0\", \"padding\", \"0\"], [1, \"grid\", \"col-8\", \"align-items-center\", 2, \"margin\", \"0\", \"padding\", \"0\"], [4, \"ngFor\", \"ngForOf\"], [\"href\", \"javascript:\", 3, \"click\"], [3, \"pTooltip\", \"tooltipDisabled\", \"ngClass\"]],\n  template: function ClaimSectionForEclaimComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-accordionTab\", 0);\n      i0.ɵɵlistener(\"selectedChange\", function ClaimSectionForEclaimComponent_Template_p_accordionTab_selectedChange_0_listener($event) {\n        return ctx.selected = $event;\n      })(\"click\", function ClaimSectionForEclaimComponent_Template_p_accordionTab_click_0_listener() {\n        return ctx.accordionClick();\n      });\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵtemplate(2, ClaimSectionForEclaimComponent_ng_template_2_Template, 43, 9, \"ng-template\", 1);\n      i0.ɵɵtext(3, \"\\n\\n  \");\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵtext(5, \"\\n    \");\n      i0.ɵɵtext(6, \"\\n    \");\n      i0.ɵɵelementStart(7, \"div\", 3);\n      i0.ɵɵtext(8, \"\\n\");\n      i0.ɵɵtext(9, \"\\n      \");\n      i0.ɵɵtemplate(10, ClaimSectionForEclaimComponent_div_10_Template, 17, 15, \"div\", 4);\n      i0.ɵɵtext(11, \"\\n      \");\n      i0.ɵɵelementStart(12, \"div\", 5);\n      i0.ɵɵtext(13, \"\\n        \");\n      i0.ɵɵelementStart(14, \"label\", 6);\n      i0.ɵɵtext(15, \"Claim Option:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \"\\n        \");\n      i0.ɵɵelementStart(17, \"div\", 7);\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n      \");\n      i0.ɵɵelementStart(21, \"div\", 5);\n      i0.ɵɵtext(22, \"\\n        \");\n      i0.ɵɵelementStart(23, \"label\", 6);\n      i0.ɵɵtext(24, \"Occupation:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \"\\n        \");\n      i0.ɵɵelementStart(26, \"div\", 7);\n      i0.ɵɵtext(27, \"\\n          \");\n      i0.ɵɵelementStart(28, \"span\", 8);\n      i0.ɵɵtext(29);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(31, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(32, \"\\n      \");\n      i0.ɵɵtemplate(33, ClaimSectionForEclaimComponent_div_33_Template, 11, 1, \"div\", 4);\n      i0.ɵɵtext(34, \"\\n      \");\n      i0.ɵɵelementStart(35, \"div\", 5);\n      i0.ɵɵtext(36, \"\\n        \");\n      i0.ɵɵelementStart(37, \"label\", 6);\n      i0.ɵɵtext(38, \"Commencement Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(39, \"\\n        \");\n      i0.ɵɵelementStart(40, \"div\", 7);\n      i0.ɵɵtext(41, \"\\n          \");\n      i0.ɵɵelementStart(42, \"span\", 8);\n      i0.ɵɵtext(43);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(44, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(45, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(46, \"\\n      \");\n      i0.ɵɵtemplate(47, ClaimSectionForEclaimComponent_div_47_Template, 10, 1, \"div\", 4);\n      i0.ɵɵtext(48, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(49, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(50, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(51, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"selected\", true)(\"selected\", ctx.selected);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.seClaimDetails.trgStartDte === ctx.seClaimDetails.trgEndDte);\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate1(\"\\n          \", ctx.claimOption, \"\\n        \");\n      i0.ɵɵadvance(10);\n      i0.ɵɵpropertyInterpolate(\"pTooltip\", ctx.initialSEClaimDetails.occupationCode === \"990\" ? ctx.initialSEClaimDetails.otherOccupnDesc : ctx.occupationMap.get(ctx.initialSEClaimDetails.occupationCode));\n      i0.ɵɵproperty(\"tooltipDisabled\", !ctx.checkOccupation())(\"ngClass\", ctx.checkOccupation() ? \"warning-date\" : null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\\n            \", ctx.seClaimDetails.occupationCode === \"990\" ? ctx.seClaimDetails.otherOccupationDesc : ctx.occupationMap == null ? null : ctx.occupationMap.get(ctx.seClaimDetails.occupationCode), \"\\n          \");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.isNewPolicy && ctx.seClaimDetails.headerDto.claimOption === \"2\"));\n      i0.ɵɵadvance(9);\n      i0.ɵɵpropertyInterpolate(\"pTooltip\", ctx.initialSEClaimDetails.commencementDate);\n      i0.ɵɵproperty(\"tooltipDisabled\", !ctx.checkCommencementDate())(\"ngClass\", ctx.checkCommencementDate() ? \"warning-date\" : null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\\n            \", ctx.seClaimDetails.commencementDte, \"\\n          \");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.seClaimDetails.headerDto.claimOption !== \"2\");\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i6.PrimeTemplate, i7.Tooltip, i8.AccordionTab, i5.SlicePipe],\n  styles: [\"[_nghost-%COMP%]     .warning-date {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsYWltLXNlY3Rpb24tZm9yLWVjbGFpbS5jb21wb25lbnQuc2NzcyIsIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxccHJvamVjdHMlMjAyXFxuc3BheWlpYXBwXFxzcmNcXG1haW5cXHdlYmFwcFxcYXBwXFxjbGFpbVxcc2UtY2xhaW1cXHBvcC11cFxcdmlldy1lY2xhaW1cXGNsYWltLXNlY3Rpb25cXGNsYWltLXNlY3Rpb24tZm9yLWVjbGFpbS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7QUNDRiIsImZpbGUiOiJjbGFpbS1zZWN0aW9uLWZvci1lY2xhaW0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCA6Om5nLWRlZXAgIC53YXJuaW5nLWRhdGV7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG4iLCI6aG9zdCA6Om5nLWRlZXAgLndhcm5pbmctZGF0ZSB7XG4gIGNvbG9yOiByZWQ7XG59Il19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvY2xhaW0vc2UtY2xhaW0vcG9wLXVwL3ZpZXctZWNsYWltL2NsYWltLXNlY3Rpb24vY2xhaW0tc2VjdGlvbi1mb3ItZWNsYWltLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vcHJvamVjdHMlMjAyL25zcGF5aWlhcHAvc3JjL21haW4vd2ViYXBwL2FwcC9jbGFpbS9zZS1jbGFpbS9wb3AtdXAvdmlldy1lY2xhaW0vY2xhaW0tc2VjdGlvbi9jbGFpbS1zZWN0aW9uLWZvci1lY2xhaW0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFBO0FDQ0Y7QURDQSxvckJBQW9yQiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IDo6bmctZGVlcCAgLndhcm5pbmctZGF0ZXtcclxuICBjb2xvcjogcmVkO1xyXG59XHJcbiIsIjpob3N0IDo6bmctZGVlcCAud2FybmluZy1kYXRlIHtcbiAgY29sb3I6IHJlZDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ctx_r9","ClaimSectionForEclaimComponent","constructor","dateUtilsService","router","claimService","codeService","core_1","console","log","ngOnInit","retrieveOccupationMap","ngOnChanges","changes","currentValue","seClaimDetails","loadCodes","headerDto","claimOption","toString","accordionClick","selectedChange","emit","selected","padLeft","text","padChar","size","String","repeat","substr","formatTime","time","rslt","isValid","format","popUpEnquiryClaim","claimId","claimType","params2","fallOutsideCurrentYr","curYr","Date","getFullYear","outsideCurrYear","startDate","convertStrToDate","trgStartDte","endDate","trgEndDte","checkWorkHourStart","isDiffFromPrepop","parseInt","workStartTime","initialSEClaimDetails","hrWorkStart","isNewPolicy","checkWorkHourEnd","workEndTime","hrWorkEnd","checkOccupation","occupationCode","otherOccupationDesc","otherOccupnDesc","checkCommencementDate","commencementDte","commencementDate","retrieveOccupationList","subscribe","resp","body","data","occupationMap","Map","Object","entries","codeType","codeId","get","code","label","exports","selectors","inputs","outputs","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\pop-up\\view-eclaim\\claim-section\\claim-section-for-eclaim.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\pop-up\\view-eclaim\\claim-section\\claim-section-for-eclaim.component.html"],"sourcesContent":["import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {SEClaim} from \"app/claim/se-claim/model/se-claim.model\";\r\nimport {DateUtilsService} from \"app/core/util/date-utils.service\";\r\nimport moment from \"moment\";\r\nimport {Router} from \"@angular/router\";\r\nimport {InitialSEClaim} from \"app/claim/se-claim/model/initial-se-claim.model\";\r\nimport {ClaimService} from \"app/claim/service/claim.service\";\r\nimport {CodeView, IcCodeService} from \"app/ng-connect\";\r\n\r\n@Component({\r\n  selector: 'n2-claim-for-eclaim-section',\r\n  templateUrl: './claim-section-for-eclaim.component.html',\r\n  styleUrls: ['./claim-section-for-eclaim.component.scss']\r\n})\r\nexport class ClaimSectionForEclaimComponent implements OnInit, OnChanges {\r\n\r\n  @Input() selected:boolean;\r\n  @Output() selectedChange = new EventEmitter<boolean>();\r\n  @Input() seClaimDetails: SEClaim;\r\n  @Input() initialSEClaimDetails: InitialSEClaim;\r\n  @Input() isNewPolicy = false;\r\n  occupationMap: Map<string,string>;\r\n  claimOption: string;\r\n\r\n  constructor(public dateUtilsService:DateUtilsService,\r\n              private router: Router,\r\n              private claimService: ClaimService,\r\n              private codeService: IcCodeService) {\r\n    console.log(\"test\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveOccupationMap();\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void{\r\n    if(changes['seClaimDetails']?.currentValue) {\r\n      this.seClaimDetails = changes['seClaimDetails'].currentValue;\r\n      this.loadCodes('claim_option_long',this.seClaimDetails?.headerDto?.claimOption.toString());\r\n    }\r\n  }\r\n\r\n  accordionClick(): void{\r\n    this.selectedChange.emit(this.selected);\r\n  }\r\n\r\n  padLeft(text: string, padChar: string, size: number): string {\r\n    return (String(padChar).repeat(size) + text).substr(size * -1, size);\r\n  }\r\n\r\n  formatTime(time: any): string {\r\n    let rslt = \"\";\r\n    if(moment(time,['HH:mm']).isValid()){\r\n      rslt =moment(time,['HH:mm']).format('hh:mm A');\r\n    }\r\n    return rslt;\r\n  }\r\n\r\n  popUpEnquiryClaim(claimId: string, claimType: string): void{\r\n\r\n    const params2 = {\r\n      claimId\r\n    }\r\n    // TODO: after enquiry version of the page is done, uncomment and put in the real route\r\n    // if(claimType === \"S\"){\r\n    //   const url = this.router.serializeUrl(this.router.createUrlTree(['claim/se-claim/view-latest-owner'],{queryParams: params2}));\r\n    //   window.open(url, \"enquireSEClaim\", 'location=0,menubar=0,status=0,height=1000, width=1500');\r\n    // } else if (claimType === \"E\") {\r\n    //   const url = this.router.serializeUrl(this.router.createUrlTree(['claim/se-claim/view-latest-owner'],{queryParams: params2}));\r\n    //   window.open(url, \"enquireECClaim\", 'location=0,menubar=0,status=0,height=1000, width=1500');\r\n    // }\r\n  }\r\n\r\n  fallOutsideCurrentYr(): boolean{\r\n    const curYr = new Date().getFullYear();\r\n    let outsideCurrYear = false;\r\n    const startDate = this.dateUtilsService.convertStrToDate(this.seClaimDetails.trgStartDte,\"DD-MM-YYYY\");\r\n    if(startDate.getFullYear()< curYr || startDate.getFullYear()> curYr){\r\n      outsideCurrYear = true;\r\n    }\r\n    const endDate = this.dateUtilsService.convertStrToDate(this.seClaimDetails.trgEndDte,\"DD-MM-YYYY\");\r\n    if(endDate.getFullYear()< curYr || endDate.getFullYear()> curYr){\r\n      outsideCurrYear = true;\r\n    }\r\n    return outsideCurrYear;\r\n  }\r\n\r\n  checkWorkHourStart(): boolean{\r\n    let isDiffFromPrepop = false;\r\n    if(parseInt(this.seClaimDetails?.workStartTime,10) !== this.initialSEClaimDetails?.hrWorkStart){\r\n      isDiffFromPrepop = true;\r\n    }\r\n    return this.isNewPolicy && this.seClaimDetails?.headerDto.claimOption === '2' && isDiffFromPrepop;\r\n  }\r\n\r\n  checkWorkHourEnd(): boolean{\r\n    let isDiffFromPrepop = false;\r\n    if(parseInt(this.seClaimDetails?.workEndTime,10) !== this.initialSEClaimDetails?.hrWorkEnd){\r\n      isDiffFromPrepop = true;\r\n    }\r\n    return this.isNewPolicy && this.seClaimDetails?.headerDto.claimOption === '2' && isDiffFromPrepop;\r\n  }\r\n\r\n  checkOccupation(): boolean{\r\n    let isDiffFromPrepop = false;\r\n    if(this.seClaimDetails?.occupationCode !== this.initialSEClaimDetails?.occupationCode){\r\n      isDiffFromPrepop = true;\r\n    } else if(this.seClaimDetails?.occupationCode === this.initialSEClaimDetails?.occupationCode) {\r\n      if(this.seClaimDetails?.occupationCode === '990' && this.seClaimDetails?.otherOccupationDesc !== this.initialSEClaimDetails?.otherOccupnDesc){\r\n        isDiffFromPrepop = true;\r\n      }\r\n    }\r\n    return this.isNewPolicy && this.seClaimDetails?.headerDto.claimOption === '2' && isDiffFromPrepop;\r\n  }\r\n\r\n  checkCommencementDate(): boolean{\r\n    let isDiffFromPrepop = false;\r\n    if(this.seClaimDetails?.commencementDte!== this.initialSEClaimDetails?.commencementDate){\r\n      isDiffFromPrepop = true;\r\n    }\r\n    return this.isNewPolicy && this.seClaimDetails?.headerDto.claimOption === '2' && isDiffFromPrepop;\r\n  }\r\n\r\n  retrieveOccupationMap(): void{\r\n    this.claimService.retrieveOccupationList(null).subscribe(resp => {\r\n        if (resp.body.data) {\r\n              this.occupationMap = new Map(Object.entries(resp.body.data))\r\n          }\r\n        });\r\n  }\r\n\r\n  loadCodes(codeType: string, codeId: string): void {\r\n    this.codeService.get(codeType, codeId)\r\n      .subscribe((code: CodeView) => {\r\n        this.claimOption = code?.label['en-US'] as string;\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<p-accordionTab [selected]=\"true\" multiple=\"true\" [(selected)]=\"selected\" (click) = \"accordionClick()\">\r\n  <ng-template pTemplate=\"header\" >\r\n<!--    outside current year warning date class-->\r\n    <div class = \"grid col-3\"\r\n         style = \"margin: 0; padding:0\" [ngClass]=\"this.fallOutsideCurrentYr()? 'warning-date' : null\">\r\n      <label class = \"flex col-1 align-items-center\" [style] = \"{'flex-basis':'100px'}\">Trg Period:</label>\r\n      <div class = \"flex col-2 align-items-center justify-content-center flex-grow-1\">\r\n        <div>\r\n          <label>{{this.seClaimDetails.trgStartDte}}</label>\r\n          <label *ngIf=\"true\" > ({{this.dateUtilsService.getDayOfWeek(this.dateUtilsService.convertStrToDate(this.seClaimDetails.trgStartDte,\"DD-MM-YYYY\"))}}) </label>\r\n        </div>\r\n      </div>\r\n      <div class=\"flex col-1 align-items-center justify-content-center\">to</div>\r\n      <div class = \"flex col-2 align-items-center justify-content-center flex-grow-1\">\r\n          <div>\r\n            <label>{{this.seClaimDetails.trgEndDte}}</label>\r\n            <label *ngIf=\"true\" > ({{this.dateUtilsService.getDayOfWeek(this.dateUtilsService.convertStrToDate(this.seClaimDetails.trgEndDte,\"DD-MM-YYYY\"))}}) </label>\r\n          </div>\r\n       </div>\r\n    </div>\r\n    <div class = \"grid col-1\" style = \"margin: 0; padding:0\"></div>\r\n    <div class = \"grid col-8 align-items-center\"\r\n         style = \"margin: 0; padding:0\">\r\n      <span >Overlapping Claims: </span>\r\n      <div *ngFor =\"let overlappingClaims of this.seClaimDetails.overlappingClaimList; let i = index\" >\r\n      <!--TODO: When enquiry is out, need to link to that page-->\r\n        <a href=\"javascript:\" [style] = \"{'margin-left':'0.5em'}\" (click) = \"popUpEnquiryClaim(overlappingClaims.claimId, overlappingClaims.claimType); $event.stopPropagation();\">\r\n          {{overlappingClaims.caseId}}({{(overlappingClaims.coyName.length>15)? (overlappingClaims.coyName | slice:0:15)+'...':(overlappingClaims.coyName)}}){{i < this.seClaimDetails.overlappingClaimList.length - 1? \",\":\"\"}}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <div class=\"grid\">\r\n    <!-- Left side -->\r\n    <div class=\"col-6\">\r\n<!--      trg date = same then workhour come out-->\r\n      <div class=\"field grid\" *ngIf = \"this.seClaimDetails.trgStartDte === this.seClaimDetails.trgEndDte\">\r\n        <label class=\"col-3 col-form-label\">Work Hour:</label>\r\n        <div class = \"col\">\r\n          <span pTooltip=\"{{this.padLeft(this.initialSEClaimDetails.hrWorkStart.toString(),'0',4)}} ({{this.formatTime(this.initialSEClaimDetails.hrWorkStart)}})\"\r\n                [tooltipDisabled] = \"!checkWorkHourStart()\"\r\n                [ngClass]=\"checkWorkHourStart()? 'warning-date' : null\">\r\n            {{this.padLeft(this.seClaimDetails.workStartTime,'0',4)}} ({{this.formatTime(this.seClaimDetails.workStartTime)}})\r\n          </span>\r\n          <span [style] = \"{'margin-left':'0.5em','margin-right':'0.5em'}\">to</span>\r\n          <span pTooltip=\"{{this.padLeft(this.initialSEClaimDetails.hrWorkEnd.toString(),'0',4)}} ({{this.formatTime(this.initialSEClaimDetails.hrWorkEnd)}})\"\r\n                [tooltipDisabled] = \"!checkWorkHourEnd()\"\r\n                [ngClass]=\"checkWorkHourEnd()? 'warning-date' : null\">\r\n            {{this.padLeft(this.seClaimDetails.workEndTime,'0',4)}} ({{this.formatTime(this.seClaimDetails.workEndTime)}})\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class = \"field grid\">\r\n        <label class=\"col-3 col-form-label\">Claim Option:</label>\r\n        <div class=\"col\">\r\n          {{this.claimOption}}\r\n        </div>\r\n      </div>\r\n      <div class=\"field grid\">\r\n        <label class=\"col-3 col-form-label\">Occupation:</label>\r\n        <div class = \"col\">\r\n          <span [tooltipDisabled] = \"!checkOccupation()\"\r\n                [ngClass]=\"checkOccupation()? 'warning-date' : null\"\r\n                pTooltip=\"{{this.initialSEClaimDetails.occupationCode === '990' ? this.initialSEClaimDetails.otherOccupnDesc: this.occupationMap.get(this.initialSEClaimDetails.occupationCode) }}\">\r\n            {{this.seClaimDetails.occupationCode === '990'? this.seClaimDetails.otherOccupationDesc : this.occupationMap?.get(this.seClaimDetails.occupationCode)}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"!(isNewPolicy && this.seClaimDetails.headerDto.claimOption ==='2')\" class=\"field grid\">\r\n        <label class=\"col-3 col-form-label\">Company:</label>\r\n        <div class = \"col\">\r\n          <span>{{this.seClaimDetails.coyName}}</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"field grid\">\r\n        <label class=\"col-3 col-form-label\">Commencement Date:</label>\r\n        <div class = \"col\">\r\n          <span  [tooltipDisabled] = \"!checkCommencementDate()\"\r\n                 [ngClass]=\"checkCommencementDate()? 'warning-date' : null\"\r\n                pTooltip=\"{{this.initialSEClaimDetails.commencementDate}}\">\r\n            {{this.seClaimDetails.commencementDte}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"this.seClaimDetails.headerDto.claimOption !=='2'\" class=\"field grid\">\r\n        <label class=\"col-3 col-form-label\">Rest Day:</label>\r\n        <div class=\"col\">\r\n          <span *ngFor =\"let restDay of this.seClaimDetails.restDayList; let i = index\">\r\n            {{restDay + (i < this.seClaimDetails.restDayList.length - 1? \", \": \" \")}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</p-accordionTab>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}