{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StopPaymentService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i2 = tslib_1.__importStar(require(\"@angular/common/http\"));\nconst i3 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nclass StopPaymentService {\n  constructor(ns2Http, http, applicationConfigService) {\n    this.ns2Http = ns2Http;\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('api/payment/stop-payment');\n  }\n  getAllStopPayment(options) {\n    console.log(this.resourceUrl);\n    return this.ns2Http.get(this.resourceUrl, options);\n  }\n  create(values) {\n    const url = `${this.resourceUrl}`;\n    return this.ns2Http.post(url, values);\n  }\n  patch(id, fields) {\n    const url = `${this.resourceUrl}/${id}`;\n    return this.ns2Http.patch(url, fields);\n  }\n  delete(ids) {\n    const url = `${this.resourceUrl}/delete`;\n    return this.ns2Http.post(url, ids);\n  }\n  deleteAll(options) {\n    const url = `${this.resourceUrl}/delete-all`;\n    return this.ns2Http.post(url, null, options);\n  }\n  upload(body) {\n    const url = `${this.resourceUrl}/upload`;\n    return this.ns2Http.post(url, body);\n  }\n  //KAH/RNSA\n  // TODO: Decide if we want to split out KAH/RNSA from Stop Payment\n  getKahRnsaSummary() {\n    const url = 'assets/mock/payment/kah-rnsa-summary.json';\n    return this.http.get(url, {\n      observe: 'response'\n    });\n  }\n  getKahRnsaReleaseHistory(options) {\n    const url = `${this.resourceUrl}/kah-rnsa/release-history`;\n    return this.ns2Http.get(url, options);\n  }\n}\nexports.StopPaymentService = StopPaymentService;\nStopPaymentService.ɵfac = function StopPaymentService_Factory(t) {\n  return new (t || StopPaymentService)(i0.ɵɵinject(i1.Ns2HttpService), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i3.ApplicationConfigService));\n};\nStopPaymentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StopPaymentService,\n  factory: StopPaymentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;;;;;AAUA,MAGaA,kBAAkB;EAG7BC,YACUC,OAAuB,EACvBC,IAAgB,EAChBC,wBAAkD;IAFlD,YAAO,GAAPF,OAAO;IACP,SAAI,GAAJC,IAAI;IACJ,6BAAwB,GAAxBC,wBAAwB;IAL3B,gBAAW,GAAG,IAAI,CAACA,wBAAwB,CAACC,cAAc,CAAC,0BAA0B,CAAC;EAO7F;EAEOC,iBAAiB,CAACC,OAAa;IACpCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,WAAW,CAAC;IAC7B,OAAO,IAAI,CAACR,OAAO,CAACS,GAAG,CAAC,IAAI,CAACD,WAAW,EAAEH,OAAO,CAAC;EACpD;EAEOK,MAAM,CAACC,MAAsB;IAClC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACJ,WAAW,EAAE;IACjC,OAAO,IAAI,CAACR,OAAO,CAACa,IAAI,CAACD,GAAG,EAAED,MAAM,CAAC;EACvC;EAEOG,KAAK,CAACC,EAAU,EAAEC,MAAW;IAClC,MAAMJ,GAAG,GAAG,GAAG,IAAI,CAACJ,WAAW,IAAIO,EAAE,EAAE;IACvC,OAAO,IAAI,CAACf,OAAO,CAACc,KAAK,CAACF,GAAG,EAAEI,MAAM,CAAC;EACxC;EAEOC,MAAM,CAACC,GAAa;IACzB,MAAMN,GAAG,GAAG,GAAG,IAAI,CAACJ,WAAW,SAAS;IACxC,OAAO,IAAI,CAACR,OAAO,CAACa,IAAI,CAACD,GAAG,EAAEM,GAAG,CAAC;EACpC;EAEOC,SAAS,CAACd,OAAY;IAC3B,MAAMO,GAAG,GAAG,GAAG,IAAI,CAACJ,WAAW,aAAa;IAC5C,OAAO,IAAI,CAACR,OAAO,CAACa,IAAI,CAACD,GAAG,EAAE,IAAI,EAAEP,OAAO,CAAC;EAC9C;EAEOe,MAAM,CAACC,IAAS;IACrB,MAAMT,GAAG,GAAG,GAAG,IAAI,CAACJ,WAAW,SAAS;IACxC,OAAO,IAAI,CAACR,OAAO,CAACa,IAAI,CAACD,GAAG,EAAES,IAAI,CAAC;EACrC;EAEA;EACA;EACOC,iBAAiB;IACtB,MAAMV,GAAG,GAAG,2CAA2C;IACvD,OAAO,IAAI,CAACX,IAAI,CAACQ,GAAG,CAAeG,GAAG,EAAE;MAAEW,OAAO,EAAE;IAAU,CAAE,CAAC;EAClE;EAEOC,wBAAwB,CAACnB,OAAa;IAC3C,MAAMO,GAAG,GAAG,GAAG,IAAI,CAACJ,WAAW,2BAA2B;IAC1D,OAAO,IAAI,CAACR,OAAO,CAACS,GAAG,CAACG,GAAG,EAAEP,OAAO,CAAC;EACvC;;AArDFoB;;mBAGa3B,kBAAkB;AAAA;;SAAlBA,kBAAkB;EAAA4B,SAAlB5B,kBAAkB;EAAA6B,YAFjB;AAAM","names":["StopPaymentService","constructor","ns2Http","http","applicationConfigService","getEndpointFor","getAllStopPayment","options","console","log","resourceUrl","get","create","values","url","post","patch","id","fields","delete","ids","deleteAll","upload","body","getKahRnsaSummary","observe","getKahRnsaReleaseHistory","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payment\\bankfile-stop-payment\\stop-payment\\service\\stop-payment.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { IStopPayment } from 'app/payment/bankfile-stop-payment/stop-payment/model/stop-payment.model';\r\nimport { IKahRnsaData } from 'app/payment/deduction/model/kah-rnsa-data';\r\nimport { IKahRnsaReleaseRecord } from 'app/payment/bankfile-stop-payment/stop-payment/model/kah-rnsa-release-record.model';\r\nimport {Observable} from \"rxjs\";\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { Options } from 'selenium-webdriver';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StopPaymentService {\r\n  public resourceUrl = this.applicationConfigService.getEndpointFor('api/payment/stop-payment');\r\n\r\n  constructor(\r\n    private ns2Http: Ns2HttpService,\r\n    private http: HttpClient,\r\n    private applicationConfigService: ApplicationConfigService\r\n  ) {\r\n  }\r\n\r\n  public getAllStopPayment(options?: any): Observable<any> {\r\n    console.log(this.resourceUrl);\r\n    return this.ns2Http.get(this.resourceUrl, options);\r\n  }\r\n\r\n  public create(values: IStopPayment[]): Observable<any> {\r\n    const url = `${this.resourceUrl}`;\r\n    return this.ns2Http.post(url, values);\r\n  }\r\n\r\n  public patch(id: string, fields: any): Observable<any> {\r\n    const url = `${this.resourceUrl}/${id}`;\r\n    return this.ns2Http.patch(url, fields);\r\n  }\r\n\r\n  public delete(ids: string[]): Observable<any> {\r\n    const url = `${this.resourceUrl}/delete`;\r\n    return this.ns2Http.post(url, ids);\r\n  }\r\n\r\n  public deleteAll(options: any): Observable<any> {\r\n    const url = `${this.resourceUrl}/delete-all`;\r\n    return this.ns2Http.post(url, null, options);\r\n  }\r\n\r\n  public upload(body: any): Observable<any> {\r\n    const url = `${this.resourceUrl}/upload`;\r\n    return this.ns2Http.post(url, body);\r\n  }\r\n\r\n  //KAH/RNSA\r\n  // TODO: Decide if we want to split out KAH/RNSA from Stop Payment\r\n  public getKahRnsaSummary(): Observable<any> {\r\n    const url = 'assets/mock/payment/kah-rnsa-summary.json';\r\n    return this.http.get<IKahRnsaData>(url, { observe: 'response' });\r\n  }\r\n\r\n  public getKahRnsaReleaseHistory(options?: any): Observable<any> {\r\n    const url = `${this.resourceUrl}/kah-rnsa/release-history`;\r\n    return this.ns2Http.get(url, options);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}