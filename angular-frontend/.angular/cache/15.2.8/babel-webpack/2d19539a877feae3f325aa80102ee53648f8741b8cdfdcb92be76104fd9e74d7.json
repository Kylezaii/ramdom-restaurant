{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserForceLoginDialogComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/login/login.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/core/auth/auth-jwt.service\"));\nconst i5 = tslib_1.__importStar(require(\"@ng-bootstrap/ng-bootstrap\"));\nconst i6 = tslib_1.__importStar(require(\"ngx-webstorage\"));\nconst i7 = tslib_1.__importStar(require(\"ngx-cookie-service\"));\nconst i8 = tslib_1.__importStar(require(\"@fortawesome/angular-fontawesome\"));\nconst i9 = tslib_1.__importStar(require(\"../shared/language/translate.directive\"));\nconst i10 = tslib_1.__importStar(require(\"../shared/alert/alert-error.component\"));\nclass UserForceLoginDialogComponent {\n  constructor(router, accountService, loginService, authServerProvider, activeModal, $sessionStorage, cookieService) {\n    this.router = router;\n    this.accountService = accountService;\n    this.loginService = loginService;\n    this.authServerProvider = authServerProvider;\n    this.activeModal = activeModal;\n    this.$sessionStorage = $sessionStorage;\n    this.cookieService = cookieService;\n    this.account = {};\n  }\n  ngOnInit() {\n    const jwt = this.cookieService.get('oneTimeAuthenticationToken');\n    if (jwt) {\n      this.resolveToken(jwt);\n    }\n    if (this.loginName && this.authMethod) {\n      this.account.username = this.loginName;\n      this.account.authMethod = this.authMethod;\n    } else {\n      this.account.username = this.cookieService.get('username');\n      this.account.authMethod = this.cookieService.get('authMethod');\n      this.cookieService.delete('username');\n      this.cookieService.delete('authMethod');\n    }\n  }\n  resolveToken(token) {\n    this.$sessionStorage.store('authenticationToken', token);\n    this.cookieService.delete('oneTimeAuthenticationToken');\n  }\n  cancel() {\n    this.activeModal.close(false);\n    this.loginService.logout();\n  }\n  proceed() {\n    this.activeModal.close(true);\n    this.authServerProvider.forceUserLogin({\n      loginName: this.account.username,\n      authMethod: this.account.authMethod\n    }).subscribe(res => {\n      const token = res.body.id_token;\n      if (token) {\n        this.router.navigate(['']);\n        this.$sessionStorage.store('authenticationToken', token);\n        this.accountService.identity().subscribe(account => {\n          this.account = account;\n        });\n      }\n    });\n  }\n}\nexports.UserForceLoginDialogComponent = UserForceLoginDialogComponent;\nUserForceLoginDialogComponent.ɵfac = function UserForceLoginDialogComponent_Factory(t) {\n  return new (t || UserForceLoginDialogComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i3.LoginService), i0.ɵɵdirectiveInject(i4.AuthServerProvider), i0.ɵɵdirectiveInject(i5.NgbActiveModal), i0.ɵɵdirectiveInject(i6.SessionStorageService), i0.ɵɵdirectiveInject(i7.CookieService));\n};\nUserForceLoginDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserForceLoginDialogComponent,\n  selectors: [[\"ic-user-forcelogin-dialog\"]],\n  decls: 33,\n  vars: 2,\n  consts: [[1, \"modal-header\"], [\"icTranslate\", \"login.session.exist\", 1, \"modal-title\"], [1, \"modal-body\"], [\"icTranslate\", \"login.session.message\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"click\"], [3, \"icon\"], [\"icTranslate\", \"login.session.button.proceed\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"], [\"icTranslate\", \"login.session.button.cancel\"]],\n  template: function UserForceLoginDialogComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"h4\", 1);\n      i0.ɵɵtext(3, \"Session Exist\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(5, \"\\n\");\n      i0.ɵɵelementStart(6, \"div\", 2);\n      i0.ɵɵtext(7, \"\\n  \");\n      i0.ɵɵelement(8, \"ic-alert-error\");\n      i0.ɵɵtext(9, \"\\n  \");\n      i0.ɵɵelementStart(10, \"p\", 3);\n      i0.ɵɵtext(11, \"\\n    You already have existing login session or been logout by other session, do you want to continue and discard existing session?\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\n\");\n      i0.ɵɵelementStart(14, \"div\", 4);\n      i0.ɵɵtext(15, \"\\n  \");\n      i0.ɵɵelementStart(16, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function UserForceLoginDialogComponent_Template_button_click_16_listener() {\n        return ctx.proceed();\n      });\n      i0.ɵɵtext(17, \"\\n    \");\n      i0.ɵɵelement(18, \"fa-icon\", 6);\n      i0.ɵɵtext(19, \"\\u00A0\");\n      i0.ɵɵelementStart(20, \"span\", 7);\n      i0.ɵɵtext(21, \"Yes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(22, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \"\\n  \");\n      i0.ɵɵelementStart(24, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function UserForceLoginDialogComponent_Template_button_click_24_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(25, \"\\n    \");\n      i0.ɵɵelement(26, \"fa-icon\", 6);\n      i0.ɵɵtext(27, \"\\u00A0\");\n      i0.ɵɵelementStart(28, \"span\", 9);\n      i0.ɵɵtext(29, \"No\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(31, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(32, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"icon\", \"save\");\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"icon\", \"ban\");\n    }\n  },\n  dependencies: [i8.FaIconComponent, i9.TranslateDirective, i10.AlertErrorComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["UserForceLoginDialogComponent","constructor","router","accountService","loginService","authServerProvider","activeModal","$sessionStorage","cookieService","ngOnInit","jwt","get","resolveToken","loginName","authMethod","account","username","delete","token","store","cancel","close","logout","proceed","forceUserLogin","subscribe","res","body","id_token","navigate","identity","exports","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\login\\user-forcelogin-dialog.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\login\\user-forcelogin-dialog.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from 'app/login/login.service';\r\nimport { AuthServerProvider } from 'app/core/auth/auth-jwt.service';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { Router } from '@angular/router';\r\nimport { SessionStorageService } from 'ngx-webstorage';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'ic-user-forcelogin-dialog',\r\n  templateUrl: './user-forcelogin-dialog.component.html',\r\n})\r\nexport class UserForceLoginDialogComponent implements OnInit {\r\n  account: any = {};\r\n  loginName?: string;\r\n  authMethod?: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private accountService: AccountService,\r\n    private loginService: LoginService,\r\n    private authServerProvider: AuthServerProvider,\r\n    public activeModal: NgbActiveModal,\r\n    private $sessionStorage: SessionStorageService,\r\n    private cookieService: CookieService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const jwt = this.cookieService.get('oneTimeAuthenticationToken');\r\n    if (jwt) {\r\n      this.resolveToken(jwt);\r\n    }\r\n\r\n    if (this.loginName && this.authMethod) {\r\n      this.account.username = this.loginName;\r\n      this.account.authMethod = this.authMethod;\r\n    } else {\r\n      this.account.username = this.cookieService.get('username');\r\n      this.account.authMethod = this.cookieService.get('authMethod');\r\n      this.cookieService.delete('username');\r\n      this.cookieService.delete('authMethod');\r\n    }\r\n  }\r\n\r\n  resolveToken(token: string): void {\r\n    this.$sessionStorage.store('authenticationToken', token);\r\n    this.cookieService.delete('oneTimeAuthenticationToken');\r\n  }\r\n\r\n  cancel(): void {\r\n    this.activeModal.close(false);\r\n    this.loginService.logout();\r\n  }\r\n\r\n  proceed(): void {\r\n    this.activeModal.close(true);\r\n    this.authServerProvider.forceUserLogin({ loginName: this.account.username, authMethod: this.account.authMethod }).subscribe(res => {\r\n      const token = res.body.id_token;\r\n      if (token) {\r\n        this.router.navigate(['']);\r\n        this.$sessionStorage.store('authenticationToken', token);\r\n        this.accountService.identity().subscribe(account => {\r\n          this.account = account;\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\" icTranslate=\"login.session.exist\">Session Exist</h4>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <ic-alert-error></ic-alert-error>\r\n  <p icTranslate=\"login.session.message\">\r\n    You already have existing login session or been logout by other session, do you want to continue and discard existing session?\r\n  </p>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm\" data-dismiss=\"modal\" (click)=\"proceed()\">\r\n    <fa-icon [icon]=\"'save'\"></fa-icon>&nbsp;<span icTranslate=\"login.session.button.proceed\">Yes</span>\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm\" data-dismiss=\"modal\" (click)=\"cancel()\">\r\n    <fa-icon [icon]=\"'ban'\"></fa-icon>&nbsp;<span icTranslate=\"login.session.button.cancel\">No</span>\r\n  </button>\r\n</div>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}