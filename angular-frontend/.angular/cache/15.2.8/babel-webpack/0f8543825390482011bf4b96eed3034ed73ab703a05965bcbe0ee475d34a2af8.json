{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClaimInboxComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst forms_1 = require(\"@angular/forms\");\nconst moment_1 = tslib_1.__importDefault(require(\"moment\"));\nconst common_1 = require(\"@angular/common\");\nconst http_1 = require(\"@angular/common/http\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/workload/service/workload-inbox.service\"));\nconst i2 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i3 = tslib_1.__importStar(require(\"app/core/util/alert.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/shared/confirm/nsp-confirm.service\"));\nconst i5 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i6 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i7 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i8 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i9 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i10 = tslib_1.__importStar(require(\"app/ng-connect\"));\nconst i11 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i12 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i13 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i15 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i16 = tslib_1.__importStar(require(\"primeng/dropdown\"));\nconst i17 = tslib_1.__importStar(require(\"primeng/inputtext\"));\nconst i18 = tslib_1.__importStar(require(\"primeng/dialog\"));\nconst i19 = tslib_1.__importStar(require(\"primeng/inputtextarea\"));\nconst i20 = tslib_1.__importStar(require(\"primeng/confirmpopup\"));\nconst i21 = tslib_1.__importStar(require(\"primeng/toast\"));\nconst i22 = tslib_1.__importStar(require(\"../../../shared/component/file-upload/file-upload2.component\"));\nconst i23 = tslib_1.__importStar(require(\"../../../shared/pipe/default-string.pipe\"));\nconst _c0 = [\"dataTable\"];\nconst _c1 = function () {\n  return {\n    \"margin-right\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nconst _c2 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nfunction ClaimInboxComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"form\", 13);\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelementStart(3, \"div\", 14);\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"div\", 15);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementStart(7, \"p-button\", 16);\n    i0.ɵɵlistener(\"click\", function ClaimInboxComponent_ng_template_5_Template_p_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(3);\n      return i0.ɵɵresetView(ctx_r6.exportCSV(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                            \");\n    i0.ɵɵelementStart(9, \"p-dropdown\", 17);\n    i0.ɵɵlistener(\"onChange\", function ClaimInboxComponent_ng_template_5_Template_p_dropdown_onChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onChangeECFilter($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n                            \");\n    i0.ɵɵelementStart(11, \"p-dropdown\", 18);\n    i0.ɵɵlistener(\"onChange\", function ClaimInboxComponent_ng_template_5_Template_p_dropdown_onChange_11_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.applyFilter(\"claimantNRIC\", ctx_r9.captionGroup.get(\"selectedDupNric\").value));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n                            \");\n    i0.ɵɵelementStart(13, \"p\")(14, \"b\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementStart(16, \"span\", 19);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(19, \"\\n\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n                        \");\n    i0.ɵɵelementStart(21, \"div\", 20);\n    i0.ɵɵtext(22, \"\\n                            \");\n    i0.ɵɵelement(23, \"p-confirmPopup\", 21);\n    i0.ɵɵtext(24, \"\\n\\n                            \");\n    i0.ɵɵelement(25, \"input\", 22);\n    i0.ɵɵtext(26, \"\\n                            \");\n    i0.ɵɵelementStart(27, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function ClaimInboxComponent_ng_template_5_Template_button_click_27_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.retrieveClaim());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n                            \");\n    i0.ɵɵelementStart(29, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function ClaimInboxComponent_ng_template_5_Template_button_click_29_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.openDialog($event, \"adoptClaim\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n                            \");\n    i0.ɵɵelementStart(31, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function ClaimInboxComponent_ng_template_5_Template_button_click_31_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onClickTransferOwnership());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(32, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(33, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(34, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(35, \"\\n            \");\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.captionGroup);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(27, _c1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(28, _c1));\n    i0.ɵɵproperty(\"options\", ctx_r1.ecseClaimFilterOptions);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(29, _c1));\n    i0.ɵɵproperty(\"options\", ctx_r1.nricWithMoreThanOneClaimOptions)(\"placeholder\", ctx_r1.duplicateNricPlaceHolder)(\"showClear\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.selectedECSEFilter.label, \":\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\"\\n                                \", ctx_r1.quickFilterclaimCount.claimsPendRecompNo, \" (Recomp);\\n                                \", ctx_r1.quickFilterclaimCount.claimsDueToDate, \" (Today);\\n                                \", ctx_r1.quickFilterclaimCount.claimsOverDue, \" (Overdue);\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", ctx_r1.quickFilterclaimCount.claimsTotal, \" (Total)\\n                            \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(30, _c2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(31, _c2));\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.captionGroup.get(\"selectedDupNric\").value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(32, _c2));\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.enableAdoptClaimBtn());\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(33, _c2));\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.enableTxferOSBtn());\n  }\n}\nfunction ClaimInboxComponent_ng_template_7_ng_template_45_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵelementStart(1, \"p-dropdown\", 53);\n    i0.ɵɵlistener(\"onChange\", function ClaimInboxComponent_ng_template_7_ng_template_45_Template_p_dropdown_onChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const filter_r19 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r19($event.value));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\n                        \");\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r14.selectedReason)(\"options\", ctx_r14.reasonList);\n  }\n}\nfunction ClaimInboxComponent_ng_template_7_th_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 54);\n    i0.ɵɵtext(1, \"DF\");\n    i0.ɵɵelement(2, \"p-sortIcon\", 55);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClaimInboxComponent_ng_template_7_th_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 56);\n    i0.ɵɵtext(1, \"Option\");\n    i0.ɵɵelement(2, \"p-sortIcon\", 57);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClaimInboxComponent_ng_template_7_ng_template_59_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵelementStart(1, \"p-dropdown\", 58);\n    i0.ɵɵlistener(\"onChange\", function ClaimInboxComponent_ng_template_7_ng_template_59_Template_p_dropdown_onChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const filter_r23 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r23($event.value));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\n                        \");\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r17.selectedOwner)(\"options\", ctx_r17.ownerMap);\n  }\n}\nfunction ClaimInboxComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n            \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                \");\n    i0.ɵɵelementStart(3, \"th\", 26);\n    i0.ɵɵelement(4, \"p-tableHeaderCheckbox\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                \");\n    i0.ɵɵelementStart(6, \"th\", 27);\n    i0.ɵɵtext(7, \"SN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                \");\n    i0.ɵɵelementStart(9, \"th\", 28);\n    i0.ɵɵtext(10, \"Case ID\");\n    i0.ɵɵelement(11, \"p-sortIcon\", 29);\n    i0.ɵɵtext(12, \"\\n                    \");\n    i0.ɵɵelement(13, \"p-columnFilter\", 30);\n    i0.ɵɵtext(14, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n                \");\n    i0.ɵɵelementStart(16, \"th\", 31);\n    i0.ɵɵtext(17, \"Name\");\n    i0.ɵɵelement(18, \"p-sortIcon\", 32);\n    i0.ɵɵtext(19, \"\\n                    \");\n    i0.ɵɵelement(20, \"p-columnFilter\", 33);\n    i0.ɵɵtext(21, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n                \");\n    i0.ɵɵelementStart(23, \"th\", 34);\n    i0.ɵɵtext(24, \"Due Date\");\n    i0.ɵɵelement(25, \"p-sortIcon\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n                \");\n    i0.ɵɵelementStart(27, \"th\", 36);\n    i0.ɵɵtext(28, \"Trg Start\");\n    i0.ɵɵelement(29, \"p-sortIcon\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n                \");\n    i0.ɵɵelementStart(31, \"th\", 38);\n    i0.ɵɵtext(32, \"Company\");\n    i0.ɵɵelement(33, \"p-sortIcon\", 39);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(34, \"\\n                \");\n    i0.ɵɵelementStart(35, \"th\", 40);\n    i0.ɵɵtext(36, \"Occupation\");\n    i0.ɵɵelement(37, \"p-sortIcon\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(38, \"\\n                \");\n    i0.ɵɵelementStart(39, \"th\", 42);\n    i0.ɵɵtext(40, \"Reason\");\n    i0.ɵɵelement(41, \"p-sortIcon\", 43);\n    i0.ɵɵtext(42, \"\\n                    \");\n    i0.ɵɵelementStart(43, \"p-columnFilter\", 44);\n    i0.ɵɵtext(44, \"\\n                        \");\n    i0.ɵɵtemplate(45, ClaimInboxComponent_ng_template_7_ng_template_45_Template, 3, 2, \"ng-template\", 45);\n    i0.ɵɵtext(46, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(47, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(48, \"\\n                \");\n    i0.ɵɵtemplate(49, ClaimInboxComponent_ng_template_7_th_49_Template, 3, 0, \"th\", 46);\n    i0.ɵɵtext(50, \"\\n                \");\n    i0.ɵɵtemplate(51, ClaimInboxComponent_ng_template_7_th_51_Template, 3, 0, \"th\", 47);\n    i0.ɵɵtext(52, \"\\n\\n                \");\n    i0.ɵɵelementStart(53, \"th\", 48);\n    i0.ɵɵtext(54, \"Owner\");\n    i0.ɵɵelement(55, \"p-sortIcon\", 49);\n    i0.ɵɵtext(56, \"\\n                    \");\n    i0.ɵɵelementStart(57, \"p-columnFilter\", 50);\n    i0.ɵɵtext(58, \"\\n                        \");\n    i0.ɵɵtemplate(59, ClaimInboxComponent_ng_template_7_ng_template_59_Template, 3, 2, \"ng-template\", 45);\n    i0.ɵɵtext(60, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(61, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(62, \"\\n                \");\n    i0.ɵɵelementStart(63, \"th\", 51);\n    i0.ɵɵtext(64, \"Receipt Date\");\n    i0.ɵɵelement(65, \"p-sortIcon\", 52);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(66, \"\\n\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(67, \"\\n        \");\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(49);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.captionGroup.controls[\"ecseFilter\"].value.label == \"EC\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.captionGroup.controls[\"ecseFilter\"].value.label == \"SE\");\n  }\n}\nfunction ClaimInboxComponent_ng_template_9_td_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const claimRecord_r26 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(claimRecord_r26.df);\n  }\n}\nfunction ClaimInboxComponent_ng_template_9_td_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const claimRecord_r26 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(claimRecord_r26.optionDesc);\n  }\n}\nfunction ClaimInboxComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n\\n        \");\n    i0.ɵɵelementStart(1, \"tr\", 59);\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"p-tableCheckbox\", 60);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n            \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n            \");\n    i0.ɵɵelementStart(9, \"td\")(10, \"a\", 61);\n    i0.ɵɵlistener(\"click\", function ClaimInboxComponent_ng_template_9_Template_a_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r34);\n      const claimRecord_r26 = restoredCtx.$implicit;\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.navigateVerificationPage(claimRecord_r26));\n    });\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(12, \"\\n            \");\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelement(15, \"br\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n            \");\n    i0.ɵɵelementStart(18, \"td\", 62);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n            \");\n    i0.ɵɵelementStart(22, \"td\");\n    i0.ɵɵtext(23);\n    i0.ɵɵpipe(24, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n            \");\n    i0.ɵɵelementStart(26, \"td\");\n    i0.ɵɵtext(27);\n    i0.ɵɵpipe(28, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n            \");\n    i0.ɵɵelementStart(30, \"td\");\n    i0.ɵɵtext(31);\n    i0.ɵɵpipe(32, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(33, \"\\n            \");\n    i0.ɵɵelementStart(34, \"td\");\n    i0.ɵɵtext(35);\n    i0.ɵɵpipe(36, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(37, \"\\n            \");\n    i0.ɵɵtemplate(38, ClaimInboxComponent_ng_template_9_td_38_Template, 2, 1, \"td\", 63);\n    i0.ɵɵtext(39, \"\\n            \");\n    i0.ɵɵtemplate(40, ClaimInboxComponent_ng_template_9_td_40_Template, 2, 1, \"td\", 63);\n    i0.ɵɵtext(41, \"\\n            \");\n    i0.ɵɵelementStart(42, \"td\");\n    i0.ɵɵtext(43);\n    i0.ɵɵpipe(44, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(45, \"\\n            \");\n    i0.ɵɵelementStart(46, \"td\");\n    i0.ɵɵtext(47);\n    i0.ɵɵpipe(48, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(49, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(50, \"\\n    \");\n  }\n  if (rf & 2) {\n    const claimRecord_r26 = ctx.$implicit;\n    const rowIndex_r27 = ctx.rowIndex;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pSelectableRow\", claimRecord_r26);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", claimRecord_r26);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(rowIndex_r27 + 1);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(claimRecord_r26.caseId);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", claimRecord_r26.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", claimRecord_r26.nric, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.dueSoon(claimRecord_r26.dueDate) ? \"alert-text\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(20, 16, ctx_r3.dateUtilsService.convertUnixToDateString(claimRecord_r26.dueDate, ctx_r3.dateFormat)));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(24, 18, ctx_r3.dateUtilsService.convertUnixToDateString(claimRecord_r26.start, ctx_r3.dateFormat)));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(28, 20, claimRecord_r26.coy));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(32, 22, claimRecord_r26.occupation));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(36, 24, claimRecord_r26.reason));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.captionGroup.controls[\"ecseFilter\"].value.label == \"EC\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.captionGroup.controls[\"ecseFilter\"].value.label == \"SE\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(44, 26, claimRecord_r26.ownerInit));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(48, 28, ctx_r3.dateUtilsService.convertUnixToDateString(claimRecord_r26.receiptDate, ctx_r3.dateFormat)));\n  }\n}\nfunction ClaimInboxComponent_ng_template_11_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 66);\n    i0.ɵɵtext(1, \"No records found.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClaimInboxComponent_ng_template_11_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 67);\n    i0.ɵɵtext(1, \"No records found.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClaimInboxComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n             \");\n    i0.ɵɵtemplate(3, ClaimInboxComponent_ng_template_11_td_3_Template, 2, 0, \"td\", 64);\n    i0.ɵɵtext(4, \"\\n            \");\n    i0.ɵɵtemplate(5, ClaimInboxComponent_ng_template_11_td_5_Template, 2, 0, \"td\", 65);\n    i0.ɵɵtext(6, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n    \");\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.captionGroup.controls[\"ecseFilter\"].value.label == \"SE\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.captionGroup.controls[\"ecseFilter\"].value.label == \"EC\");\n  }\n}\nfunction ClaimInboxComponent_ng_template_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"button\", 68);\n    i0.ɵɵlistener(\"click\", function ClaimInboxComponent_ng_template_31_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r38);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.displayTxferClaimOwnershipDialog.display = false);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\n        \");\n    i0.ɵɵelementStart(3, \"button\", 69);\n    i0.ɵɵlistener(\"click\", function ClaimInboxComponent_ng_template_31_Template_button_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r38);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.onSubmit($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n\\n    \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(5, _c2));\n  }\n}\nconst _c3 = function () {\n  return [10, 15, 20];\n};\nconst _c4 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nconst _c5 = function () {\n  return {\n    width: \"50vw\"\n  };\n};\nconst _c6 = function () {\n  return {\n    \"960px\": \"75vw\"\n  };\n};\nclass ClaimInboxComponent {\n  constructor(workloadService, primengConfig, messageService, alertService, nspConfirmService, account, dateUtilsService, ns2Http, toastService, formBuilder, codeService, exportUtilsService, router) {\n    this.workloadService = workloadService;\n    this.primengConfig = primengConfig;\n    this.messageService = messageService;\n    this.alertService = alertService;\n    this.nspConfirmService = nspConfirmService;\n    this.account = account;\n    this.dateUtilsService = dateUtilsService;\n    this.ns2Http = ns2Http;\n    this.toastService = toastService;\n    this.formBuilder = formBuilder;\n    this.codeService = codeService;\n    this.exportUtilsService = exportUtilsService;\n    this.router = router;\n    // public cols: any [] = [];\n    this.selectAll = false;\n    this.totalRecords = 0;\n    this.selectedRows = [];\n    this.claimsDtoList = [];\n    this.autoResize = true;\n    this.displayTxferClaimOwnershipDialog = {\n      display: false\n    };\n    this.dateFormat = \"DD-MM-YYYY\";\n    this.quickFilterclaimCount = {\n      claimsPendRecompNo: 0,\n      claimsDueToDate: 0,\n      claimsOverDue: 0,\n      claimsTotal: 0\n    };\n    this.duplicateNricPlaceHolder = \"0 Duplicates\";\n    this.eventFirst = 0;\n    this.ownerMap = [];\n    this.reasonList = [];\n    this.pageData = {\n      currentPage: 0\n    };\n    this.pageSize = 10;\n    this.CLAIM_TYPE_SELF_EMP = \"S\";\n    this.CLAIM_TYPE_EMP = \"E\";\n    this.account.identity().subscribe(account2 => {\n      this.currentAccount = this.copyAccount(account2);\n    });\n    this.ecseClaimFilterOptions = [{\n      codeId: 'MY_EC',\n      codeDesc: 'My EC',\n      claimFilterStr: \"owner=\" + String(this.currentAccount.subjectId) + \"&claimType=E\",\n      label: 'EC',\n      codeType: 'item_ec_class'\n    }, {\n      codeId: 'MY_SE',\n      codeDesc: 'My SE',\n      claimFilterStr: \"owner=\" + String(this.currentAccount.subjectId) + \"&claimType=S\",\n      label: 'SE',\n      codeType: 'item_se_class'\n    }, {\n      codeId: 'ALL_EC',\n      codeDesc: 'All EC',\n      claimFilterStr: \"&claimType=E\",\n      label: 'EC',\n      codeType: 'item_ec_class'\n    }, {\n      codeId: 'ALL_SE',\n      codeDesc: 'All SE',\n      claimFilterStr: \"&claimType=S\",\n      label: 'SE',\n      codeType: 'item_se_class'\n    }, {\n      codeId: 'UNASSIGNED_EC',\n      codeDesc: 'Unassigned EC',\n      claimFilterStr: \"&claimType=E&owner=null\",\n      label: 'EC',\n      codeType: 'item_ec_class'\n    }, {\n      codeId: 'UNASSIGNED_SE',\n      codeDesc: 'Unassigned SE',\n      claimFilterStr: \"&claimType=S&owner=null\",\n      label: 'SE',\n      codeType: 'item_se_class'\n    }];\n  }\n  ngOnInit() {\n    this.primengConfig.ripple = true;\n    this.account.identity().subscribe(account => {\n      this.currentAccount = this.copyAccount(account);\n    });\n    this.captionGroup = this.formBuilder.group({\n      selectedDupNric: new forms_1.FormControl(),\n      ecseFilter: new forms_1.FormControl(),\n      filterCaseId: new forms_1.FormControl()\n    });\n    this.selectedECSEFilter = this.ecseClaimFilterOptions[0];\n    this.captionGroup.controls['ecseFilter'].setValue(this.ecseClaimFilterOptions[0]);\n  }\n  getECSEFilters() {\n    const obs = this.workloadService.getECSEFilter(null);\n    if (obs) {\n      obs.subscribe(resp => {\n        if (resp.body.data) {\n          this.ecseClaimFilterOptions = resp.body.data;\n          if (!this.selectedECSEFilter) {\n            this.selectedECSEFilter = this.ecseClaimFilterOptions[0];\n            this.captionGroup.controls['ecseFilter'].setValue(this.ecseClaimFilterOptions[0]);\n          }\n        }\n      });\n    }\n    return obs;\n  }\n  getClaimRecordsData(event) {\n    this.lastTableLazyLoadEvent = event;\n    this.loading = true;\n    setTimeout(() => {\n      const options = this.ns2Http.convertLazyEvent(event, this.pageData, this.pageSize);\n      if (this.selectedECSEFilter) {\n        console.log(\"this is nowsss\", this.captionGroup.get('ecseFilter')?.value);\n        options.params = this.ns2Http.appendHttpParam(this.selectedECSEFilter.claimFilterStr, options.params);\n        this.loadCodes(this.captionGroup.get('ecseFilter')?.value.codeType);\n      }\n      this.workloadService.getClaimRecordsData(options).subscribe(resp => {\n        if (resp.body.data) {\n          this.claimsDtoList = resp.body.data.dtoList;\n          this.totalRecords = resp.body.data.total_no_of_elems;\n          if (resp.body.data.duplicateNrics) {\n            this.nricWithMoreThanOneClaimOptions = resp.body.data.duplicateNrics;\n          }\n          if (resp.body.data.ownerMap) {\n            this.setOwnerMap(resp.body.data.ownerMap);\n          }\n          if (resp.body.data.quickFilterClaimCount) {\n            this.quickFilterclaimCount = {\n              claimsPendRecompNo: resp.body.data.quickFilterClaimCount.claimsPendRecompNo,\n              claimsDueToDate: resp.body.data.quickFilterClaimCount.claimsDueToDate,\n              claimsOverDue: resp.body.data.quickFilterClaimCount.claimsOverDue,\n              claimsTotal: resp.body.data.quickFilterClaimCount.total\n            };\n          }\n          this.duplicateNricPlaceHolder = `${this.nricWithMoreThanOneClaimOptions.length} Duplicates`;\n          this.dueCount = this.claimsDtoList.filter(y => this.dateUtilsService.convertStrToMoment(y.dueDate, this.dateFormat).isBefore((0, moment_1.default)().endOf('day')) && y.ownerLoginID === null && y.owner === null).length;\n        }\n        this.loading = false;\n      });\n    }, 0);\n    return this.claimsDtoList;\n  }\n  loadCodes(codeType) {\n    this.codeService.gets(codeType).subscribe(codes => {\n      this.reasonList = codes[0].map(x => {\n        return x.label['en-US'];\n      });\n    });\n  }\n  setOwnerMap(ownerMap) {\n    this.ownerMap = [];\n    Object.entries(ownerMap).forEach(x => {\n      const rslt = x[1];\n      let displayName = rslt[\"displayName\"];\n      if (this.currentAccount.subjectId === rslt[\"ownerId\"]) {\n        displayName = displayName.concat(\" (Me)\");\n      }\n      this.ownerMap.push({\n        key: x[0],\n        value: displayName\n      });\n    });\n  }\n  dueSoon(dueDate) {\n    const differ = this.dateUtilsService.convertUnixToMoment(dueDate).startOf('day').diff((0, moment_1.default)().startOf('day'), 'days');\n    return differ <= 2;\n  }\n  applyFilter(column, filterValue) {\n    this.table.filter(filterValue, column, 'equals');\n    this.pageData.currentPage = 0;\n    this.pageSize = 10;\n  }\n  onChangeECFilter(event) {\n    this.selectedECSEFilter = this.captionGroup.get('ecseFilter')?.value;\n    console.log(\"changefilter\", event);\n    console.log(\"selected is now \", this.captionGroup.get('ecseFilter')?.value);\n    this.getClaimRecordsData(this.lastTableLazyLoadEvent);\n  }\n  onSelectAllChange(event) {\n    const checked = event.checked;\n    if (checked) {\n      this.selectedRows = this.claimsDtoList;\n      this.selectAll = true;\n    } else {\n      this.selectedRows = [];\n      this.selectAll = false;\n    }\n  }\n  onClickTransferOwnership() {\n    this.displayTxferClaimOwnershipDialog.display = true;\n  }\n  onSubmit(event) {\n    console.log(\"pressed transfer\");\n    this.nspConfirmService.onConfirmPopup(event, \"confirmTransferClaims\", this.displayTxferClaimOwnershipDialog, () => {\n      console.log(\"transfering ownership\");\n      if (this.selectedRows) {\n        const reqList = [];\n        const request = {\n          reqList,\n          txferReason: this.claimsTransferComment\n        };\n        this.selectedRows.forEach(x => {\n          const req = {\n            claimInboxId: x.id,\n            caseId: x.caseId,\n            lastOwnerId: x.ownerId\n          };\n          request.reqList.push(req);\n        });\n        this.workloadService.transferOwnership(request).subscribe(resp => {\n          if (resp) {\n            if (resp.status === 200) {\n              this.toastService.success(resp.body.success_message);\n              this.resetDataTable();\n            }\n          }\n        }, error => {\n          console.log(\"error is\" + String(error?.error?.error_desc));\n          this.toastService.error(String(error?.error?.error_desc));\n        });\n      }\n    });\n  }\n  enableTxferOSBtn() {\n    let enable = true;\n    if (this.selectedRows.length > 0) {\n      this.selectedRows.forEach(x => {\n        if (x.ownerLoginId === null || x.ownerLoginId.trim().length === 0 || x.ownerLoginId.value !== null && x.ownerLoginId === this.currentAccount.subjectId) {\n          enable = false;\n          return;\n        }\n      });\n    } else {\n      enable = false;\n    }\n    return enable;\n  }\n  /**\r\n   * fetches records based on same nric which are ownerless and changes the ownership to current user\r\n   * @returns\r\n   */\n  enableAdoptClaimBtn() {\n    let dueSelectedCount;\n    let nonDueSelectedCount;\n    if (this.selectedRows.length > 0) {\n      for (const x of this.selectedRows) {\n        if (x.ownerLoginId !== null || x.ownerInit !== null) {\n          return false;\n        }\n      }\n      dueSelectedCount = this.selectedRows.filter(x => this.dateUtilsService.convertStrToMoment(x.dueDate, this.dateFormat).isBefore((0, moment_1.default)().endOf('day'))).length;\n      nonDueSelectedCount = this.selectedRows.filter(x => this.dateUtilsService.convertStrToMoment(x.dueDate, this.dateFormat).isAfter((0, moment_1.default)().endOf('day'))).length;\n      if (dueSelectedCount < this.dueCount && nonDueSelectedCount > 0) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n    return true;\n  }\n  copyAccount(account) {\n    console.log(\"the account\", account);\n    return {\n      email: account.email,\n      firstName: account.firstName,\n      lastName: account.lastName,\n      login: account.username,\n      authorities: account.authorities,\n      groups: account.groups,\n      subjectId: account.subjectId,\n      userInitials: account.userInitials\n    };\n  }\n  openDialog(event, type) {\n    console.log(\"btn is\" + type);\n    this.nspConfirmService.onConfirmPopup(event, type, null, () => {\n      const data = [];\n      this.selectedRows.forEach(x => {\n        data.push({\n          id: x.id,\n          caseId: x.caseId,\n          ownerId: x.ownerId\n        });\n      });\n      this.workloadService.adoptClaim(data).subscribe(resp => {\n        if (resp) {\n          if (resp.ok) {\n            this.toastService.success(resp.body.success_message);\n            this.resetDataTable();\n          }\n        }\n      }, error => {\n        console.log(\"error is\" + String(error?.error?.error_desc));\n        this.toastService.error(String(error?.error?.error_desc));\n      });\n    });\n  }\n  exportCSV(dataTable) {\n    let params = new http_1.HttpParams();\n    params = this.ns2Http.appendHttpParam(this.selectedECSEFilter.claimFilterStr, params);\n    this.workloadService.getClaimRecordsData({\n      params\n    }).subscribe(resp => {\n      if (resp.body.data) {\n        const columns = [{\n          field: 'caseId',\n          header: 'Case ID',\n          index: 1\n        }, {\n          field: 'claimantNRIC',\n          header: 'NRIC',\n          index: 2\n        }, {\n          field: 'claimantName',\n          header: 'Name',\n          index: 3\n        }, {\n          field: 'dueDate',\n          header: 'Due Date',\n          index: 4\n        }, {\n          field: 'dateTrgStart',\n          header: 'Trg Start',\n          index: 5\n        }, {\n          field: 'company',\n          header: 'Company',\n          index: 6\n        }, {\n          field: 'occupation',\n          header: 'Occupation',\n          index: 7\n        }, {\n          field: 'reason',\n          header: 'Reason',\n          index: 8\n        }, {\n          field: 'ownerInit',\n          header: 'Owner',\n          index: 10\n        }, {\n          field: 'receiptDate',\n          header: 'Receipt Date',\n          index: 11\n        }];\n        if (this.captionGroup.controls['ecseFilter'].value.label === 'EC') {\n          columns.push({\n            field: 'directorFeeInd',\n            header: 'DF',\n            index: 9\n          });\n        } else if (this.captionGroup.controls['ecseFilter'].value.label === 'SE') {\n          columns.push({\n            field: 'claimOptDesc',\n            header: 'Option',\n            index: 9\n          });\n        }\n        columns.sort((a, b) => a.index - b.index);\n        const dtoList = [];\n        resp.body.data.dtoList.forEach(data => {\n          let dto = {};\n          if (this.captionGroup.controls['ecseFilter'].value.label === 'EC') {\n            dto = {\n              caseId: data.caseId,\n              claimantNRIC: data.nric,\n              claimantName: data.name,\n              dueDate: this.dateUtilsService.convertUnixToDateString(data.dueDate, this.dateFormat),\n              dateTrgStart: this.dateUtilsService.convertUnixToDateString(data.start, this.dateFormat),\n              company: data.coy,\n              occupation: data.occupation,\n              reason: data.reason,\n              directorFeeInd: data.df,\n              ownerInit: data.ownerInit,\n              receiptDate: this.dateUtilsService.convertUnixToDateString(data.receiptDate, this.dateFormat)\n            };\n          } else if (this.captionGroup.controls['ecseFilter'].value.label === 'SE') {\n            dto = {\n              caseId: data.caseId,\n              claimantNRIC: data.nric,\n              claimantName: data.name,\n              dueDate: this.dateUtilsService.convertUnixToDateString(data.dueDate, this.dateFormat),\n              dateTrgStart: this.dateUtilsService.convertUnixToDateString(data.start, this.dateFormat),\n              company: data.coy,\n              occupation: data.occupation,\n              reason: data.reason,\n              claimOptDesc: data.optionDesc,\n              ownerInit: data.ownerInit,\n              receiptDate: this.dateUtilsService.convertUnixToDateString(data.receiptDate, this.dateFormat)\n            };\n          }\n          dtoList.push(dto);\n        });\n        this.exportUtilsService.exportCSV(dataTable, dtoList, resp.body.data.total_no_of_elems, columns, \"claim_verifier_\".concat((0, common_1.formatDate)(new Date(), \"dd-MM-YYYY\", 'en-US')));\n        this.loading = false;\n      }\n    });\n  }\n  navigateVerificationPage(dto) {\n    const currentSubjectId = this.currentAccount.subjectId;\n    //if clicked claim owner belongs to current user\n    if (dto.ownerId === currentSubjectId) {\n      if (dto.claimType === this.CLAIM_TYPE_SELF_EMP) {\n        this.router.navigate(['/claim/se-claim/claim-verification-se'], {\n          queryParams: {\n            claimId: dto.claimId,\n            reason: dto.reason,\n            claimInboxId: dto.id,\n            claimantNRIC: dto.claimantNRIC,\n            station: dto.station\n          }\n        });\n        // this.router.navigate(['/claim/se-claim/claim-verification-se', {dto:JSON.stringify(dto)}]);\n      } else if (dto.claimType === this.CLAIM_TYPE_EMP) {\n        this.router.navigate(['/claim/ec-claim/claim-verification-ec'], {\n          queryParams: {\n            caseId: dto.caseId,\n            claimId: dto.claimId,\n            reason: dto.reason,\n            claimInboxId: dto.id,\n            nric: dto.nric,\n            station: dto.station\n          }\n        });\n      }\n    } else {\n      //route to enquiry\n      //TODO\n      console.log(\"route to enquiry\");\n    }\n  }\n  displayID() {\n    console.log(\"selectedrows\", this.selectedRows);\n  }\n  //to do\n  retrieveClaim() {\n    console.log(\"retrieving claim\");\n  }\n  onPage(event) {\n    console.log(\"pageevent\", event);\n    this.eventFirst = event.first;\n    this.pageData.currentPage = event.first / event.rows;\n    this.selectAll = false;\n    this.selectedRows = [];\n  }\n  resetDataTable() {\n    this.selectAll = false;\n    this.selectedRows = [];\n    this.table.filters = {};\n    this.pageData.currentPage = 0;\n    this.pageSize = 10;\n    this.table.reset();\n  }\n}\nexports.ClaimInboxComponent = ClaimInboxComponent;\nClaimInboxComponent.ɵfac = function ClaimInboxComponent_Factory(t) {\n  return new (t || ClaimInboxComponent)(i0.ɵɵdirectiveInject(i1.WorkloadInboxService), i0.ɵɵdirectiveInject(i2.PrimeNGConfig), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i3.AlertService), i0.ɵɵdirectiveInject(i4.NspConfirmationService), i0.ɵɵdirectiveInject(i5.AccountService), i0.ɵɵdirectiveInject(i6.DateUtilsService), i0.ɵɵdirectiveInject(i7.Ns2HttpService), i0.ɵɵdirectiveInject(i8.CustomToastService), i0.ɵɵdirectiveInject(i9.FormBuilder), i0.ɵɵdirectiveInject(i10.IcCodeService), i0.ɵɵdirectiveInject(i11.ExportUtilsService), i0.ɵɵdirectiveInject(i12.Router));\n};\nClaimInboxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClaimInboxComponent,\n  selectors: [[\"n2-claim-inbox\"]],\n  viewQuery: function ClaimInboxComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n    }\n  },\n  decls: 36,\n  vars: 24,\n  consts: [[\"dataKey\", \"id\", \"styleClass\", \"p-datatable-gridlines p-datatable-striped\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"responsiveLayout\", \"scroll\", 3, \"value\", \"paginator\", \"rows\", \"lazy\", \"showCurrentPageReport\", \"selectAll\", \"totalRecords\", \"selection\", \"filterDelay\", \"loading\", \"rowsPerPageOptions\", \"selectAllChange\", \"onLazyLoad\", \"selectionChange\", \"onPage\"], [\"dataTable\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"col-md-12\", \"nsp-align-right\", \"nsp-top-padding\", \"nsp-bottom-padding\"], [\"pButton\", \"\", \"label\", \"press\", 1, \"p-button-raised\", 3, \"click\"], [\"header\", \"Transfer Claim Ownership\", 3, \"visible\", \"breakpoints\", \"draggable\", \"resizable\", \"visibleChange\"], [1, \"form-group\"], [\"pInputTextarea\", \"\", \"type\", \"text\", \"id\", \"claimsTransferComment\", \"rows\", \"8\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"pTemplate\", \"footer\"], [\"key\", \"confirmTransferClaims\", \"header\", \"Confirmation\", \"icon\", \"fa fa-question-circle\", \"width\", \"425\"], [3, \"formGroup\"], [1, \"grid\"], [1, \"col-4\", \"nsp-align-left\"], [\"icon\", \"pi pi-file-o\", 3, \"click\"], [\"formControlName\", \"ecseFilter\", \"optionLabel\", \"codeDesc\", 3, \"options\", \"onChange\"], [\"formControlName\", \"selectedDupNric\", 3, \"options\", \"placeholder\", \"showClear\", \"onChange\"], [2, \"color\", \"rgb(175, 3, 3)\"], [1, \"col-8\", \"nsp-align-right\"], [\"key\", \"adoptClaim\", \"header\", \"Confirmation\", \"icon\", \"fa fa-question-circle\", \"width\", \"425\"], [\"pInputText\", \"\", \"type\", \"text\", \"formControlName\", \"filterCaseId\", \"placeholder\", \"Case ID\"], [\"pButton\", \"\", \"label\", \"Retrieve Claim\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"label\", \"Adopt Claim\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"label\", \"Transfer Ownerhip\", 3, \"disabled\", \"click\"], [\"scope\", \"col\", 2, \"width\", \"3%\"], [\"scope\", \"col\"], [\"scope\", \"col\", \"pSortableColumn\", \"caseId\"], [\"field\", \"caseId\"], [\"type\", \"text\", \"field\", \"caseId\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"claimantNRIC\"], [\"field\", \"claimantNRIC\"], [\"type\", \"text\", \"field\", \"claimantNRIC\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"dueDate\"], [\"field\", \"dueDate\"], [\"scope\", \"col\", \"pSortableColumn\", \"dateTrgStart\"], [\"field\", \"dateTrgStart\"], [\"scope\", \"col\", \"pSortableColumn\", \"company\"], [\"field\", \"company\"], [\"scope\", \"col\", \"pSortableColumn\", \"occupation\"], [\"field\", \"occupation\"], [\"scope\", \"col\", \"pSortableColumn\", \"reason\"], [\"field\", \"reason\"], [\"type\", \"text\", \"field\", \"reason\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"pTemplate\", \"filter\"], [\"scope\", \"col\", \"pSortableColumn\", \"directorFeeInd\", 4, \"ngIf\"], [\"scope\", \"col\", \"pSortableColumn\", \"claimOptDesc\", 4, \"ngIf\"], [\"scope\", \"col\", \"pSortableColumn\", \"ownerInit\"], [\"field\", \"ownerInit\"], [\"type\", \"text\", \"field\", \"ownerInit\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"receiptDate\"], [\"field\", \"receiptDate\"], [\"placeholder\", \"Reason\", 3, \"ngModel\", \"options\", \"onChange\"], [\"scope\", \"col\", \"pSortableColumn\", \"directorFeeInd\"], [\"field\", \"directorFeeInd\"], [\"scope\", \"col\", \"pSortableColumn\", \"claimOptDesc\"], [\"field\", \"claimOptDesc\"], [\"optionLabel\", \"value\", \"optionValue\", \"key\", \"placeholder\", \"Owner\", 3, \"ngModel\", \"options\", \"onChange\"], [3, \"pSelectableRow\"], [3, \"value\"], [3, \"routerLink\", \"click\"], [3, \"ngClass\"], [4, \"ngIf\"], [\"colspan\", \"13\", 4, \"ngIf\"], [\"colspan\", \"12\", 4, \"ngIf\"], [\"colspan\", \"13\"], [\"colspan\", \"12\"], [\"pButton\", \"\", \"label\", \"Cancel\", 1, \"p-button-danger\", 3, \"click\"], [\"pButton\", \"\", \"label\", \"Submit\", 3, \"click\"]],\n  template: function ClaimInboxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"p-toast\");\n      i0.ɵɵtext(1, \"\\n\\n\\n\");\n      i0.ɵɵelementStart(2, \"p-table\", 0, 1);\n      i0.ɵɵlistener(\"selectAllChange\", function ClaimInboxComponent_Template_p_table_selectAllChange_2_listener($event) {\n        return ctx.onSelectAllChange($event);\n      })(\"onLazyLoad\", function ClaimInboxComponent_Template_p_table_onLazyLoad_2_listener($event) {\n        return ctx.getClaimRecordsData($event);\n      })(\"selectionChange\", function ClaimInboxComponent_Template_p_table_selectionChange_2_listener($event) {\n        return ctx.selectedRows = $event;\n      })(\"onPage\", function ClaimInboxComponent_Template_p_table_onPage_2_listener($event) {\n        return ctx.onPage($event);\n      });\n      i0.ɵɵtext(4, \"\\n\\n            \");\n      i0.ɵɵtemplate(5, ClaimInboxComponent_ng_template_5_Template, 36, 34, \"ng-template\", 2);\n      i0.ɵɵtext(6, \"\\n\\n        \");\n      i0.ɵɵtemplate(7, ClaimInboxComponent_ng_template_7_Template, 68, 2, \"ng-template\", 3);\n      i0.ɵɵtext(8, \"\\n    \");\n      i0.ɵɵtemplate(9, ClaimInboxComponent_ng_template_9_Template, 51, 30, \"ng-template\", 4);\n      i0.ɵɵtext(10, \"\\n    \");\n      i0.ɵɵtemplate(11, ClaimInboxComponent_ng_template_11_Template, 8, 2, \"ng-template\", 5);\n      i0.ɵɵtext(12, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\n\\n\");\n      i0.ɵɵelementStart(14, \"div\", 6);\n      i0.ɵɵtext(15, \"\\n    \");\n      i0.ɵɵelementStart(16, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function ClaimInboxComponent_Template_button_click_16_listener() {\n        return ctx.displayID();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(17, \"\\n\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \"\\n\\n\\n\");\n      i0.ɵɵelementStart(19, \"p-dialog\", 8);\n      i0.ɵɵlistener(\"visibleChange\", function ClaimInboxComponent_Template_p_dialog_visibleChange_19_listener($event) {\n        return ctx.displayTxferClaimOwnershipDialog.display = $event;\n      });\n      i0.ɵɵtext(20, \"\\n    \");\n      i0.ɵɵelement(21, \"ic-file-upload\");\n      i0.ɵɵtext(22, \"\\n\\n    \");\n      i0.ɵɵelementStart(23, \"div\", 9);\n      i0.ɵɵtext(24, \"\\n    \");\n      i0.ɵɵelementStart(25, \"p\");\n      i0.ɵɵtext(26, \"Claims transferred due to:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(27, \"\\n\\n        \");\n      i0.ɵɵelementStart(28, \"textarea\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function ClaimInboxComponent_Template_textarea_ngModelChange_28_listener($event) {\n        return ctx.claimsTransferComment = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(29, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \"\\n\\n    \");\n      i0.ɵɵtemplate(31, ClaimInboxComponent_ng_template_31_Template, 5, 6, \"ng-template\", 11);\n      i0.ɵɵtext(32, \"\\n    \");\n      i0.ɵɵelement(33, \"p-confirmPopup\", 12);\n      i0.ɵɵtext(34, \"\\n\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(35, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", ctx.claimsDtoList)(\"paginator\", true)(\"rows\", 10)(\"lazy\", true)(\"showCurrentPageReport\", true)(\"selectAll\", ctx.selectAll)(\"totalRecords\", ctx.totalRecords)(\"selection\", ctx.selectedRows)(\"filterDelay\", 0)(\"loading\", ctx.loading)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(20, _c3));\n      i0.ɵɵadvance(14);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(21, _c4));\n      i0.ɵɵadvance(3);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(22, _c5));\n      i0.ɵɵproperty(\"visible\", ctx.displayTxferClaimOwnershipDialog.display)(\"breakpoints\", i0.ɵɵpureFunction0(23, _c6))(\"draggable\", false)(\"resizable\", false);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.claimsTransferComment);\n    }\n  },\n  dependencies: [i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.NgModel, i13.NgClass, i13.NgIf, i9.FormGroupDirective, i9.FormControlName, i2.PrimeTemplate, i14.ButtonDirective, i14.Button, i12.RouterLink, i15.Table, i15.SortableColumn, i15.SelectableRow, i15.SortIcon, i15.TableCheckbox, i15.TableHeaderCheckbox, i15.ColumnFilter, i16.Dropdown, i17.InputText, i18.Dialog, i19.InputTextarea, i20.ConfirmPopup, i21.Toast, i22.FileUpload2Component, i23.DefaultStringPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbGFpbS1pbmJveC5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvd29ya2xvYWQvY2xhaW0tdmVyaWZpZXIvY2xhaW0taW5ib3gvY2xhaW0taW5ib3guY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLHdLQUF3SyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ctx_r9","ClaimInboxComponent","constructor","workloadService","primengConfig","messageService","alertService","nspConfirmService","account","dateUtilsService","ns2Http","toastService","formBuilder","codeService","exportUtilsService","router","display","claimsPendRecompNo","claimsDueToDate","claimsOverDue","claimsTotal","currentPage","identity","subscribe","account2","currentAccount","copyAccount","ecseClaimFilterOptions","codeId","codeDesc","claimFilterStr","String","subjectId","label","codeType","ngOnInit","ripple","captionGroup","group","selectedDupNric","forms_1","ecseFilter","filterCaseId","selectedECSEFilter","controls","setValue","getECSEFilters","obs","getECSEFilter","resp","body","data","getClaimRecordsData","event","lastTableLazyLoadEvent","loading","setTimeout","options","convertLazyEvent","pageData","pageSize","console","log","get","value","params","appendHttpParam","loadCodes","claimsDtoList","dtoList","totalRecords","total_no_of_elems","duplicateNrics","nricWithMoreThanOneClaimOptions","ownerMap","setOwnerMap","quickFilterClaimCount","quickFilterclaimCount","total","duplicateNricPlaceHolder","length","dueCount","filter","y","convertStrToMoment","dueDate","dateFormat","isBefore","endOf","ownerLoginID","owner","gets","codes","reasonList","map","x","Object","entries","forEach","rslt","displayName","concat","push","key","dueSoon","differ","convertUnixToMoment","startOf","diff","applyFilter","column","filterValue","table","onChangeECFilter","onSelectAllChange","checked","selectedRows","selectAll","onClickTransferOwnership","displayTxferClaimOwnershipDialog","onSubmit","onConfirmPopup","reqList","request","txferReason","claimsTransferComment","req","claimInboxId","id","caseId","lastOwnerId","ownerId","transferOwnership","status","success","success_message","resetDataTable","error","error_desc","enableTxferOSBtn","enable","ownerLoginId","trim","enableAdoptClaimBtn","dueSelectedCount","nonDueSelectedCount","ownerInit","isAfter","email","firstName","lastName","login","username","authorities","groups","userInitials","openDialog","type","adoptClaim","ok","exportCSV","dataTable","http_1","columns","field","header","index","sort","a","b","dto","claimantNRIC","nric","claimantName","name","convertUnixToDateString","dateTrgStart","start","company","coy","occupation","reason","directorFeeInd","df","receiptDate","claimOptDesc","optionDesc","Date","navigateVerificationPage","currentSubjectId","claimType","CLAIM_TYPE_SELF_EMP","navigate","queryParams","claimId","station","CLAIM_TYPE_EMP","displayID","retrieveClaim","onPage","eventFirst","first","rows","filters","reset","exports","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\workload\\claim-verifier\\claim-inbox\\claim-inbox.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\workload\\claim-verifier\\claim-inbox\\claim-inbox.component.html"],"sourcesContent":["import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport {AccountService} from 'app/core/auth/account.service';\r\nimport {AlertService} from 'app/core/util/alert.service';\r\nimport {DateUtilsService} from 'app/core/util/date-utils.service';\r\nimport {CustomToastService} from 'app/layouts/service/customtoast.service';\r\nimport {NspConfirmationService} from 'app/shared/confirm/nsp-confirm.service';\r\nimport {Ns2HttpService} from 'app/shared/service/ns2-http.service';\r\nimport {WorkloadInboxService} from 'app/workload/service/workload-inbox.service';\r\nimport moment from 'moment';\r\nimport {LazyLoadEvent, MessageService, PrimeNGConfig} from 'primeng/api';\r\nimport {Observable} from 'rxjs';\r\nimport {Table} from 'primeng/table';\r\nimport { IcCodeService } from 'app/ng-connect';\r\nimport { formatDate } from \"@angular/common\";\r\nimport { ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'n2-claim-inbox',\r\n  templateUrl: './claim-inbox.component.html',\r\n  styleUrls: ['./claim-inbox.component.scss']\r\n})\r\nexport class ClaimInboxComponent implements OnInit {\r\n\r\n\r\n  public ecseClaimFilterOptions!: any;\r\n  currentAccount: any;\r\n\r\n  lastTableLazyLoadEvent: LazyLoadEvent;\r\n\r\n  public nricWithMoreThanOneClaimOptions!: string[];\r\n  // public cols: any [] = [];\r\n  selectAll = false;\r\n  loading!: boolean;\r\n  totalRecords = 0;\r\n  public selectedRows: any[] = [];\r\n  public claimsDtoList: any[] = [];\r\n  autoResize = true;\r\n  claimsTransferComment!: string;\r\n  displayTxferClaimOwnershipDialog: any = {display: false};\r\n  dateFormat = \"DD-MM-YYYY\";\r\n  quickFilterclaimCount: any = {\r\n    claimsPendRecompNo: 0,\r\n    claimsDueToDate: 0,\r\n    claimsOverDue: 0,\r\n    claimsTotal: 0\r\n  }\r\n  duplicateNricPlaceHolder = \"0 Duplicates\";\r\n  public selectedECSEFilter: any;\r\n  eventFirst = 0;\r\n  selectedOwner: any;\r\n  ownerMap: any[] = [];\r\n  selectedReason: string;\r\n  reasonList: any[] = [];\r\n\r\n\r\n  pageData: { currentPage: number } = {\r\n    currentPage: 0\r\n  }\r\n  captionGroup: FormGroup;\r\n  pageSize = 10;\r\n\r\n  dueCount: any;\r\n\r\n  readonly CLAIM_TYPE_SELF_EMP =\"S\";\r\n  readonly CLAIM_TYPE_EMP =\"E\";\r\n\r\n  @ViewChild('dataTable', {static: true})\r\n  private table!: Table;\r\n\r\n  constructor(\r\n    private workloadService: WorkloadInboxService,\r\n    private primengConfig: PrimeNGConfig,\r\n    private messageService: MessageService,\r\n    private alertService: AlertService,\r\n    private nspConfirmService: NspConfirmationService,\r\n    private account: AccountService,\r\n    public dateUtilsService: DateUtilsService,\r\n    private ns2Http: Ns2HttpService,\r\n    private toastService: CustomToastService,\r\n    private formBuilder: FormBuilder,\r\n    private codeService: IcCodeService,\r\n    private exportUtilsService: ExportUtilsService,\r\n    private router: Router\r\n\r\n\r\n  ) {\r\n\r\n    this.account.identity().subscribe((account2: any) => {\r\n      this.currentAccount = this.copyAccount(account2);\r\n    });\r\n\r\n    this.ecseClaimFilterOptions = [\r\n      {\r\n        codeId: 'MY_EC',\r\n        codeDesc: 'My EC',\r\n        claimFilterStr: \"owner=\" + String(this.currentAccount.subjectId) + \"&claimType=E\",\r\n        label: 'EC',\r\n        codeType: 'item_ec_class'\r\n      },\r\n      {\r\n        codeId: 'MY_SE',\r\n        codeDesc: 'My SE',\r\n        claimFilterStr: \"owner=\" + String(this.currentAccount.subjectId) + \"&claimType=S\",\r\n        label: 'SE',\r\n        codeType: 'item_se_class'\r\n      },\r\n      {codeId: 'ALL_EC', codeDesc: 'All EC', claimFilterStr: \"&claimType=E\", label: 'EC', codeType: 'item_ec_class'},\r\n      {codeId: 'ALL_SE', codeDesc: 'All SE', claimFilterStr: \"&claimType=S\", label: 'SE', codeType: 'item_se_class'},\r\n      {codeId: 'UNASSIGNED_EC', codeDesc: 'Unassigned EC', claimFilterStr: \"&claimType=E&owner=null\", label: 'EC', codeType: 'item_ec_class'},\r\n      {codeId: 'UNASSIGNED_SE', codeDesc: 'Unassigned SE', claimFilterStr: \"&claimType=S&owner=null\", label: 'SE', codeType: 'item_se_class'},\r\n    ];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.primengConfig.ripple = true;\r\n    this.account.identity().subscribe((account: any) => {\r\n      this.currentAccount = this.copyAccount(account);\r\n    });\r\n\r\n    this.captionGroup = this.formBuilder.group({\r\n      selectedDupNric: new FormControl(),\r\n      ecseFilter: new FormControl(),\r\n      filterCaseId: new FormControl()\r\n    })\r\n\r\n    this.selectedECSEFilter = this.ecseClaimFilterOptions[0];\r\n    this.captionGroup.controls['ecseFilter'].setValue(this.ecseClaimFilterOptions[0]);\r\n\r\n  }\r\n\r\n\r\n  getECSEFilters(): Observable<any> {\r\n    const obs = this.workloadService.getECSEFilter(null);\r\n    if (obs) {\r\n      obs.subscribe((resp: any) => {\r\n        if (resp.body.data) {\r\n          this.ecseClaimFilterOptions = resp.body.data;\r\n          if (!this.selectedECSEFilter) {\r\n            this.selectedECSEFilter = this.ecseClaimFilterOptions[0];\r\n            this.captionGroup.controls['ecseFilter'].setValue(this.ecseClaimFilterOptions[0]);\r\n          }\r\n        }\r\n      })\r\n    }\r\n    return obs;\r\n  }\r\n\r\n  getClaimRecordsData(event: any): any[] {\r\n    this.lastTableLazyLoadEvent = event;\r\n    this.loading = true;\r\n    setTimeout(() => {\r\n      const options = this.ns2Http.convertLazyEvent(event, this.pageData, this.pageSize);\r\n\r\n      if (this.selectedECSEFilter) {\r\n        console.log(\"this is nowsss\", this.captionGroup.get('ecseFilter')?.value);\r\n        options.params = this.ns2Http.appendHttpParam(this.selectedECSEFilter.claimFilterStr, options.params);\r\n        this.loadCodes(this.captionGroup.get('ecseFilter')?.value.codeType);\r\n\r\n      }\r\n\r\n      this.workloadService.getClaimRecordsData(options).subscribe(resp => {\r\n        if (resp.body.data) {\r\n\r\n          this.claimsDtoList = resp.body.data.dtoList;\r\n          this.totalRecords = resp.body.data.total_no_of_elems;\r\n          if (resp.body.data.duplicateNrics) {\r\n            this.nricWithMoreThanOneClaimOptions = resp.body.data.duplicateNrics;\r\n          }\r\n          if(resp.body.data.ownerMap){\r\n            this.setOwnerMap(resp.body.data.ownerMap);\r\n          }\r\n          if(resp.body.data.quickFilterClaimCount){\r\n            this.quickFilterclaimCount = {\r\n              claimsPendRecompNo: resp.body.data.quickFilterClaimCount.claimsPendRecompNo,\r\n              claimsDueToDate: resp.body.data.quickFilterClaimCount.claimsDueToDate,\r\n              claimsOverDue: resp.body.data.quickFilterClaimCount.claimsOverDue,\r\n              claimsTotal: resp.body.data.quickFilterClaimCount.total\r\n            }\r\n          }\r\n          this.duplicateNricPlaceHolder = `${this.nricWithMoreThanOneClaimOptions.length} Duplicates`\r\n          this.dueCount = this.claimsDtoList.filter(y => this.dateUtilsService.convertStrToMoment(y.dueDate, this.dateFormat).isBefore(moment().endOf('day'))\r\n            && (y.ownerLoginID === null && y.owner === null)).length;\r\n        }\r\n        this.loading = false;\r\n      });\r\n    }, 0);\r\n    return this.claimsDtoList;\r\n\r\n  }\r\n\r\n  loadCodes(codeType: string): void {\r\n    this.codeService.gets(codeType)\r\n    .subscribe((codes: any[]) => {\r\n      this.reasonList = codes[0].map((x:any)=> {\r\n        return x.label['en-US'] as string;\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  setOwnerMap(ownerMap: any){\r\n    this.ownerMap = [];\r\n    Object.entries(ownerMap).forEach(x=>{\r\n      const rslt:any = x[1];\r\n      let displayName = rslt[\"displayName\"]\r\n      if(this.currentAccount.subjectId === rslt[\"ownerId\"]){\r\n        displayName = displayName.concat(\" (Me)\");\r\n      }\r\n      this.ownerMap.push({\r\n        key: x[0],\r\n        value: displayName\r\n      })\r\n    })\r\n  }\r\n\r\n  dueSoon(dueDate: number): boolean{\r\n    const differ =  this.dateUtilsService.convertUnixToMoment(dueDate)\r\n    .startOf('day').diff(moment().startOf('day'), 'days')\r\n    return differ <= 2;\r\n\r\n  }\r\n\r\n  applyFilter(column: string, filterValue: string): void {\r\n    this.table.filter(filterValue, column, 'equals');\r\n    this.pageData.currentPage = 0;\r\n    this.pageSize = 10;\r\n  }\r\n\r\n  onChangeECFilter(event: any): void {\r\n    this.selectedECSEFilter = this.captionGroup.get('ecseFilter')?.value;\r\n    console.log(\"changefilter\", event);\r\n    console.log(\"selected is now \", this.captionGroup.get('ecseFilter')?.value);\r\n    this.getClaimRecordsData(this.lastTableLazyLoadEvent);\r\n  }\r\n\r\n  onSelectAllChange(event: any): void {\r\n    const checked = event.checked;\r\n    if (checked) {\r\n      this.selectedRows = this.claimsDtoList;\r\n      this.selectAll = true;\r\n    } else {\r\n      this.selectedRows = [];\r\n      this.selectAll = false;\r\n    }\r\n  }\r\n\r\n  onClickTransferOwnership(): void {\r\n    this.displayTxferClaimOwnershipDialog.display = true;\r\n  }\r\n\r\n  onSubmit(event: Event): void {\r\n    console.log(\"pressed transfer\");\r\n    this.nspConfirmService.onConfirmPopup(event, \"confirmTransferClaims\", this.displayTxferClaimOwnershipDialog,\r\n      () => {\r\n        console.log(\"transfering ownership\");\r\n        if (this.selectedRows) {\r\n          const reqList:any[] = [];\r\n          const request = {\r\n            reqList,\r\n            txferReason: this.claimsTransferComment\r\n          }\r\n          this.selectedRows.forEach(x => {\r\n            const req = {\r\n              claimInboxId: x.id,\r\n              caseId: x.caseId,\r\n              lastOwnerId: x.ownerId\r\n            }\r\n            request.reqList.push(req);\r\n\r\n          })\r\n          this.workloadService.transferOwnership(request).subscribe((resp: any) => {\r\n            if (resp) {\r\n              if (resp.status === 200) {\r\n                this.toastService.success(resp.body.success_message);\r\n                this.resetDataTable();\r\n              }\r\n            }\r\n          },\r\n          (error: any) => {\r\n            console.log(\"error is\" + String(error?.error?.error_desc));\r\n            this.toastService.error(String(error?.error?.error_desc));\r\n          }\r\n        );}\r\n      })\r\n\r\n  }\r\n\r\n  enableTxferOSBtn(): boolean {\r\n    let enable = true;\r\n    if (this.selectedRows.length > 0) {\r\n      this.selectedRows.forEach(x => {\r\n        if (x.ownerLoginId === null || x.ownerLoginId.trim().length === 0 ||\r\n          (x.ownerLoginId.value !== null && x.ownerLoginId === this.currentAccount.subjectId)) {\r\n          enable = false;\r\n          return;\r\n        }\r\n      });\r\n    } else {\r\n      enable = false;\r\n    }\r\n    return enable;\r\n  }\r\n\r\n  /**\r\n   * fetches records based on same nric which are ownerless and changes the ownership to current user\r\n   * @returns\r\n   */\r\n  enableAdoptClaimBtn(): boolean {\r\n    let dueSelectedCount;\r\n    let nonDueSelectedCount;\r\n    if (this.selectedRows.length > 0) {\r\n      for (const x of this.selectedRows) {\r\n        if (x.ownerLoginId !== null || x.ownerInit !== null) {\r\n          return false;\r\n        }\r\n      }\r\n      dueSelectedCount = this.selectedRows.filter(x => this.dateUtilsService.convertStrToMoment(x.dueDate, this.dateFormat).isBefore(moment().endOf('day'))).length;\r\n      nonDueSelectedCount = this.selectedRows.filter(x => this.dateUtilsService.convertStrToMoment(x.dueDate, this.dateFormat).isAfter(moment().endOf('day'))).length;\r\n      if (dueSelectedCount < this.dueCount && nonDueSelectedCount > 0) {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  copyAccount(account: any): any {\r\n    console.log(\"the account\", account)\r\n    return {\r\n      email: account.email,\r\n      firstName: account.firstName,\r\n      lastName: account.lastName,\r\n      login: account.username,\r\n      authorities: account.authorities,\r\n      groups: account.groups,\r\n      subjectId: account.subjectId,\r\n      userInitials: account.userInitials\r\n    };\r\n  }\r\n\r\n  openDialog(event: Event, type: string): void {\r\n    console.log(\"btn is\" + type);\r\n\r\n    this.nspConfirmService.onConfirmPopup(event, type, null,\r\n      () => {\r\n        const data: any[] = [];\r\n        this.selectedRows.forEach(x => {\r\n          data.push({\r\n            id: x.id,\r\n            caseId: x.caseId,\r\n            ownerId: x.ownerId\r\n          })\r\n        })\r\n        this.workloadService.adoptClaim(data).subscribe((resp: any) => {\r\n          if (resp) {\r\n            if (resp.ok) {\r\n              this.toastService.success(resp.body.success_message);\r\n              this.resetDataTable();\r\n            }\r\n          }\r\n        },\r\n        (error: any) => {\r\n          console.log(\"error is\" + String(error?.error?.error_desc));\r\n          this.toastService.error(String(error?.error?.error_desc));\r\n        }\r\n      );})\r\n\r\n  }\r\n\r\n  exportCSV(dataTable: Table): void{\r\n\r\n    let params = new HttpParams;\r\n    params = this.ns2Http.appendHttpParam(this.selectedECSEFilter.claimFilterStr, params);\r\n\r\n    this.workloadService.getClaimRecordsData({params}).subscribe((resp: any) => {\r\n      if(resp.body.data) {\r\n        const columns =\r\n          [\r\n            {field: 'caseId', header: 'Case ID', index: 1},\r\n            {field: 'claimantNRIC', header: 'NRIC', index: 2},\r\n            {field: 'claimantName', header: 'Name', index: 3},\r\n            {field: 'dueDate', header: 'Due Date', index: 4},\r\n            {field: 'dateTrgStart', header: 'Trg Start', index: 5},\r\n            {field: 'company', header: 'Company', index: 6},\r\n            {field: 'occupation', header: 'Occupation', index: 7},\r\n            {field: 'reason', header: 'Reason', index: 8},\r\n            {field: 'ownerInit', header: 'Owner', index: 10},\r\n            {field: 'receiptDate', header: 'Receipt Date', index: 11}\r\n          ];\r\n\r\n          if(this.captionGroup.controls['ecseFilter'].value.label ==='EC'){\r\n            columns.push(\r\n              {field: 'directorFeeInd', header: 'DF', index: 9}\r\n            );\r\n          }else if(this.captionGroup.controls['ecseFilter'].value.label ==='SE'){\r\n            columns.push(\r\n              {field: 'claimOptDesc', header: 'Option', index: 9}\r\n            );\r\n          }\r\n\r\n        columns.sort((a, b) => a.index - b.index);\r\n        const dtoList:any[] = [];\r\n        resp.body.data.dtoList.forEach((data:any)=>{\r\n          let dto = {};\r\n          if(this.captionGroup.controls['ecseFilter'].value.label ==='EC'){\r\n            dto = {\r\n              caseId: data.caseId,\r\n              claimantNRIC: data.nric,\r\n              claimantName: data.name,\r\n              dueDate: this.dateUtilsService.convertUnixToDateString(data.dueDate, this.dateFormat),\r\n              dateTrgStart: this.dateUtilsService.convertUnixToDateString(data.start, this.dateFormat),\r\n              company: data.coy,\r\n              occupation: data.occupation,\r\n              reason: data.reason,\r\n              directorFeeInd: data.df,\r\n              ownerInit: data.ownerInit,\r\n              receiptDate: this.dateUtilsService.convertUnixToDateString(data.receiptDate, this.dateFormat),\r\n            }\r\n          }else if(this.captionGroup.controls['ecseFilter'].value.label ==='SE'){\r\n            dto = {\r\n              caseId: data.caseId,\r\n              claimantNRIC: data.nric,\r\n              claimantName: data.name,\r\n              dueDate: this.dateUtilsService.convertUnixToDateString(data.dueDate, this.dateFormat),\r\n              dateTrgStart: this.dateUtilsService.convertUnixToDateString(data.start, this.dateFormat),\r\n              company: data.coy,\r\n              occupation: data.occupation,\r\n              reason: data.reason,\r\n              claimOptDesc: data.optionDesc,\r\n              ownerInit: data.ownerInit,\r\n              receiptDate: this.dateUtilsService.convertUnixToDateString(data.receiptDate, this.dateFormat),\r\n            }\r\n          }\r\n          dtoList.push(dto);\r\n\r\n\r\n        })\r\n        this.exportUtilsService.exportCSV(dataTable, dtoList,resp.body.data.total_no_of_elems, columns,\r\n          \"claim_verifier_\".concat(formatDate(new Date(),\"dd-MM-YYYY\", 'en-US')));\r\n      this.loading = false;\r\n    }});\r\n\r\n  }\r\n\r\n  navigateVerificationPage(dto: any): void{\r\n    const currentSubjectId = this.currentAccount.subjectId;\r\n    //if clicked claim owner belongs to current user\r\n    if(dto.ownerId === currentSubjectId){\r\n      if(dto.claimType===this.CLAIM_TYPE_SELF_EMP){\r\n        this.router.navigate(['/claim/se-claim/claim-verification-se'], {queryParams: {\r\n          claimId: dto.claimId, \r\n          reason: dto.reason, \r\n          claimInboxId: dto.id,\r\n          claimantNRIC: dto.claimantNRIC,\r\n          station: dto.station\r\n        }});\r\n        // this.router.navigate(['/claim/se-claim/claim-verification-se', {dto:JSON.stringify(dto)}]);\r\n      }else if(dto.claimType===this.CLAIM_TYPE_EMP){\r\n        this.router.navigate(['/claim/ec-claim/claim-verification-ec'],{queryParams: {\r\n          caseId: dto.caseId,\r\n          claimId: dto.claimId, \r\n          reason: dto.reason, \r\n          claimInboxId: dto.id,\r\n          nric: dto.nric,\r\n          station: dto.station\r\n        }});\r\n      }\r\n    }else{\r\n      //route to enquiry\r\n      //TODO\r\n      console.log(\"route to enquiry\")\r\n    }\r\n   \r\n  }\r\n\r\n\r\n  displayID(): void {\r\n    console.log(\"selectedrows\", this.selectedRows);\r\n\r\n  }\r\n\r\n  //to do\r\n  retrieveClaim(): void {\r\n    console.log(\"retrieving claim\");\r\n  }\r\n\r\n  onPage(event: any): void {\r\n    console.log(\"pageevent\", event);\r\n    this.eventFirst = event.first;\r\n    this.pageData.currentPage = event.first / event.rows;\r\n    this.selectAll = false;\r\n    this.selectedRows = [];\r\n\r\n  }\r\n\r\n\r\n  resetDataTable(): void {\r\n    this.selectAll = false;\r\n    this.selectedRows = [];\r\n    this.table.filters = {};\r\n    this.pageData.currentPage = 0;\r\n    this.pageSize = 10;\r\n    this.table.reset();\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n\r\n\r\n<p-table [value]=\"claimsDtoList\"\r\n            [paginator]=\"true\"\r\n            [rows]=10\r\n            [lazy] = \"true\"\r\n            [showCurrentPageReport]=\"true\"\r\n            [selectAll]=\"selectAll\"\r\n            (selectAllChange)=\"onSelectAllChange($event)\"\r\n            (onLazyLoad)=\"getClaimRecordsData($event)\"\r\n            [totalRecords] = \"totalRecords\"\r\n            [(selection)] = \"selectedRows\"\r\n            dataKey = \"id\"\r\n            [filterDelay]=\"0\"\r\n            [loading] = \"loading\"\r\n            styleClass=\"p-datatable-gridlines p-datatable-striped\"\r\n            [rowsPerPageOptions]=\"[10,15,20]\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            responsiveLayout=\"scroll\"\r\n            (onPage) = \"onPage($event)\"\r\n            #dataTable\r\n            >\r\n\r\n            <ng-template pTemplate=\"caption\">\r\n                <form [formGroup] = \"captionGroup\">\r\n                    <div class=\"grid\">\r\n                        <div class = \"col-4 nsp-align-left\">\r\n                            <p-button icon=\"pi pi-file-o\" [style]=\"{'margin-right': '.5em', 'margin-bottom': '.5em'}\"  (click) = \"exportCSV(dataTable)\"></p-button>\r\n                            <p-dropdown [options]=\"ecseClaimFilterOptions\" [style]=\"{'margin-right': '.5em', 'margin-bottom': '.5em'}\" formControlName=\"ecseFilter\"\r\n                            (onChange)=\"onChangeECFilter($event)\" optionLabel=\"codeDesc\" ></p-dropdown>\r\n                            <p-dropdown [options]=\"nricWithMoreThanOneClaimOptions\" [style]=\"{'margin-right': '.5em', 'margin-bottom': '.5em'}\"formControlName=\"selectedDupNric\"\r\n                            [placeholder]=\"duplicateNricPlaceHolder\" (onChange)=\"applyFilter('claimantNRIC', captionGroup.get('selectedDupNric').value)\" [showClear]=\"true\"></p-dropdown>\r\n                            <p><b>{{ selectedECSEFilter.label }}:<span style=\"color:rgb(175, 3, 3);\">\r\n                                {{ quickFilterclaimCount.claimsPendRecompNo }} (Recomp);\r\n                                {{ quickFilterclaimCount.claimsDueToDate }} (Today);\r\n                                {{ quickFilterclaimCount.claimsOverDue }} (Overdue);</span>\r\n                                {{ quickFilterclaimCount.claimsTotal }} (Total)\r\n                            </b></p>\r\n\r\n                        </div>\r\n                        <div class = \"col-8 nsp-align-right\">\r\n                            <p-confirmPopup key = \"adoptClaim\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n\r\n                            <input pInputText   type=\"text\"  formControlName=\"filterCaseId\" placeholder=\"Case ID\" [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\">\r\n                            <button pButton  label=\"Retrieve Claim\"  (click) = \"retrieveClaim()\" [disabled]=\"!captionGroup.get('selectedDupNric').value\" [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\"></button>\r\n                            <button pButton  label=\"Adopt Claim\"  (click) = \"openDialog($event, 'adoptClaim')\" [disabled] = \"!enableAdoptClaimBtn()\" [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\"></button>\r\n                            <button pButton  label=\"Transfer Ownerhip\" [disabled] = \"!enableTxferOSBtn()\" (click)=\"onClickTransferOwnership()\" [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\"></button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </ng-template>\r\n\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th scope=\"col\" style=\"width:3%\"><p-tableHeaderCheckbox></p-tableHeaderCheckbox></th>\r\n                <th scope=\"col\">SN</th>\r\n                <th scope=\"col\" pSortableColumn = \"caseId\">Case ID<p-sortIcon field=\"caseId\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"caseId\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" pSortableColumn =\"claimantNRIC\">Name<p-sortIcon field=\"claimantNRIC\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"claimantNRIC\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" pSortableColumn =\"dueDate\">Due Date<p-sortIcon field=\"dueDate\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"dateTrgStart\">Trg Start<p-sortIcon field=\"dateTrgStart\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"company\">Company<p-sortIcon field=\"company\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"occupation\">Occupation<p-sortIcon field=\"occupation\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"reason\">Reason<p-sortIcon field=\"reason\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"reason\" display=\"menu\" matchMode=\"contains\">\r\n                        <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                            <p-dropdown [ngModel]=\"selectedReason\" [options]=\"reasonList\" (onChange)=\"filter($event.value)\"  placeholder=\"Reason\"></p-dropdown>\r\n                        </ng-template>\r\n                    </p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" *ngIf=\"captionGroup.controls['ecseFilter'].value.label =='EC'\"\r\n                pSortableColumn =\"directorFeeInd\">DF<p-sortIcon field=\"directorFeeInd\"></p-sortIcon></th>\r\n                <th scope=\"col\" *ngIf=\"captionGroup.controls['ecseFilter'].value.label =='SE'\"\r\n                pSortableColumn =\"claimOptDesc\">Option<p-sortIcon field=\"claimOptDesc\"></p-sortIcon></th>\r\n\r\n                <th scope=\"col\" pSortableColumn =\"ownerInit\">Owner<p-sortIcon field=\"ownerInit\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"ownerInit\" display=\"menu\" matchMode=\"contains\">\r\n                        <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                            <p-dropdown [ngModel]=\"selectedOwner\" [options]=\"ownerMap\" (onChange)=\"filter($event.value)\"\r\n                            optionLabel=\"value\" optionValue=\"key\" placeholder=\"Owner\"></p-dropdown>\r\n                        </ng-template>\r\n                    </p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" pSortableColumn =\"receiptDate\">Receipt Date<p-sortIcon field=\"receiptDate\"></p-sortIcon></th>\r\n\r\n            </tr>\r\n        </ng-template>\r\n    <ng-template pTemplate=\"body\" let-claimRecord let-rowIndex = \"rowIndex\" let-columns=\"columns\">\r\n\r\n        <tr [pSelectableRow]=\"claimRecord\">\r\n            <td><p-tableCheckbox [value]=\"claimRecord\"></p-tableCheckbox></td>\r\n            <td>{{ rowIndex + 1}}</td>\r\n            <td><a [routerLink]=\"\" (click)=\"navigateVerificationPage(claimRecord)\">{{claimRecord.caseId}}</a></td>\r\n            <td>{{claimRecord.name }} <br/> {{ claimRecord.nric}}</td>\r\n            <td [ngClass]=\"this.dueSoon(claimRecord.dueDate) ? 'alert-text': null\">{{ dateUtilsService.convertUnixToDateString(claimRecord.dueDate, dateFormat) | defaultString}}</td>\r\n            <td>{{ dateUtilsService.convertUnixToDateString(claimRecord.start, dateFormat) | defaultString}}</td>\r\n            <td>{{claimRecord.coy | defaultString}}</td>\r\n            <td>{{claimRecord.occupation | defaultString}}</td>\r\n            <td>{{claimRecord.reason | defaultString}}</td>\r\n            <td *ngIf=\"captionGroup.controls['ecseFilter'].value.label =='EC'\">{{claimRecord.df}}</td>\r\n            <td *ngIf=\"captionGroup.controls['ecseFilter'].value.label =='SE'\">{{claimRecord.optionDesc}}</td>\r\n            <td>{{claimRecord.ownerInit | defaultString}}</td>\r\n            <td>{{ dateUtilsService.convertUnixToDateString(claimRecord.receiptDate, dateFormat) | defaultString }}</td>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n             <td *ngIf=\"captionGroup.controls['ecseFilter'].value.label =='SE'\" colspan=\"13\">No records found.</td>\r\n            <td *ngIf=\"captionGroup.controls['ecseFilter'].value.label =='EC'\" colspan=\"12\">No records found.</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n\r\n<div class=\"col-md-12 nsp-align-right nsp-top-padding nsp-bottom-padding\">\r\n    <button pButton class =\"p-button-raised\" label=\"press\"  [style]=\"{'margin-left': '.5em'}\"\r\n    (click) = \"displayID()\"></button>\r\n\r\n</div>\r\n\r\n\r\n<p-dialog header=\"Transfer Claim Ownership\" [(visible)]=\"displayTxferClaimOwnershipDialog.display\" [breakpoints]=\"{'960px': '75vw'}\" [style]=\"{width: '50vw'}\"\r\n    [draggable]=\"false\" [resizable]=\"false\">\r\n    <ic-file-upload></ic-file-upload>\r\n\r\n    <div class=\"form-group\">\r\n    <p>Claims transferred due to:</p>\r\n\r\n        <textarea pInputTextarea  [(ngModel)]=\"claimsTransferComment\" type=\"text\" id=\"claimsTransferComment\" rows=\"8\" class = \"form-control\"></textarea>\r\n    </div>\r\n\r\n    <ng-template pTemplate=\"footer\">\r\n        <button pButton class =\"p-button-danger\" label=\"Cancel\"  (click)=\"displayTxferClaimOwnershipDialog.display=false\" [style]=\"{'margin-left': '.5em' , 'margin-bottom': '.5em'}\"\r\n        ></button>\r\n        <button pButton  label=\"Submit\"  (click)=\"onSubmit($event)\" [style]=\"{'margin-left': '.5em' , 'margin-bottom': '.5em'}\"\r\n        ></button>\r\n\r\n    </ng-template>\r\n    <p-confirmPopup key=\"confirmTransferClaims\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n\r\n</p-dialog>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}