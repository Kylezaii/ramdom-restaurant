{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FormlyDropdownAllowanceComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@ngx-formly/core\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/shared/service/formly-map.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/ng-connect\"));\nconst i3 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i4 = tslib_1.__importStar(require(\"primeng/dropdown\"));\nconst i5 = tslib_1.__importStar(require(\"@ngx-formly/core\"));\nclass FormlyDropdownAllowanceComponent extends core_1.FieldType {\n  constructor(formlyMapService, codeService) {\n    super();\n    this.formlyMapService = formlyMapService;\n    this.codeService = codeService;\n    this.allowances = [];\n  }\n  ngOnInit() {\n    this.getAllowances();\n    console.log(this.allowances);\n  }\n  getAllowances() {\n    this.codeService.gets('PRL_ALLW_CODE').subscribe(resp => {\n      console.log(resp);\n      resp[0].forEach(x => {\n        // console.log(x);\n        this.allowances.push({\n          name: x.label['en-US'],\n          key: x.codeId\n        });\n      });\n      this.formControl.patchValue(this.allowances.at(0).key);\n    }, error => {\n      console.log(\"error is\" + String(error?.error?.error_desc));\n    });\n  }\n}\nexports.FormlyDropdownAllowanceComponent = FormlyDropdownAllowanceComponent;\nFormlyDropdownAllowanceComponent.ɵfac = function FormlyDropdownAllowanceComponent_Factory(t) {\n  return new (t || FormlyDropdownAllowanceComponent)(i0.ɵɵdirectiveInject(i1.FormlyMapService), i0.ɵɵdirectiveInject(i2.IcCodeService));\n};\nFormlyDropdownAllowanceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormlyDropdownAllowanceComponent,\n  selectors: [[\"n2-dropdown-allowance\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 4,\n  consts: [[\"optionLabel\", \"name\", \"optionValue\", \"key\", 3, \"options\", \"formControl\", \"formlyAttributes\", \"placeholder\"]],\n  template: function FormlyDropdownAllowanceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \"\\n  \");\n      i0.ɵɵelement(1, \"p-dropdown\", 0);\n      i0.ɵɵtext(2, \"\\n  \");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"options\", ctx.allowances)(\"formControl\", ctx.formControl)(\"formlyAttributes\", ctx.field)(\"placeholder\", ctx.to.placeholder);\n    }\n  },\n  dependencies: [i3.NgControlStatus, i3.FormControlDirective, i4.Dropdown, i5.ɵFormlyAttributes],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;AAEA;;;;;;;AAMA,MAQaA,gCAAiC,SAAQC,gBAA0B;EAI9EC,YACUC,gBAAkC,EAClCC,WAA0B;IAElC,KAAK,EAAE;IAHC,qBAAgB,GAAhBD,gBAAgB;IAChB,gBAAW,GAAXC,WAAW;IAJrB,eAAU,GAAU,EAAE;EAOtB;EAEAC,QAAQ;IACN,IAAI,CAACC,aAAa,EAAE;IACpBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,UAAU,CAAC;EAC9B;EAEAH,aAAa;IACX,IAAI,CAACF,WAAW,CAACM,IAAI,CAAC,eAAe,CAAC,CAACC,SAAS,CAAEC,IAAW,IAAI;MAC/DL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;MACjBA,IAAI,CAAC,CAAC,CAAC,CAACC,OAAO,CAAEC,CAAM,IAAI;QACzB;QACA,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC;UACnBC,IAAI,EAAEF,CAAC,CAACG,KAAK,CAAC,OAAO,CAAC;UACtBC,GAAG,EAAEJ,CAAC,CAACK;SACR,CAAC;MACJ,CAAC,CAAC;MACF,IAAI,CAACC,WAAW,CAACC,UAAU,CAAC,IAAI,CAACZ,UAAU,CAACa,EAAE,CAAC,CAAC,CAAC,CAACJ,GAAG,CAAC;IACxD,CAAC,EACEK,KAAU,IAAI;MACbhB,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGgB,MAAM,CAACD,KAAK,EAAEA,KAAK,EAAEE,UAAU,CAAC,CAAC;IAC5D,CAAC,CAAC;EACN;;AAvCFC;;mBAQa1B,gCAAgC;AAAA;;QAAhCA,gCAAgC;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MAL3CC;MAAAA,gCAEiF;MACjFA;;;MAHYA,eAAsB;MAAtBA,wCAAsB","names":["FormlyDropdownAllowanceComponent","core_1","constructor","formlyMapService","codeService","ngOnInit","getAllowances","console","log","allowances","gets","subscribe","resp","forEach","x","push","name","label","key","codeId","formControl","patchValue","at","error","String","error_desc","exports","selectors","features","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\shared\\component\\formly-input-field\\formly-dropdown-allowance.component.ts"],"sourcesContent":["import { HttpParams } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FieldType, FieldTypeConfig } from '@ngx-formly/core';\r\nimport { ClaimService } from 'app/claim/service/claim.service';\r\nimport { IcCodeService } from 'app/ng-connect';\r\nimport { FormlyMapService } from 'app/shared/service/formly-map.service';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\n\r\n@Component({\r\n  selector: 'n2-dropdown-allowance',\r\n  template: `\r\n  <p-dropdown [options]=\"allowances\"\r\n  [formControl]=\"formControl\" [formlyAttributes]=\"field\"\r\n  [placeholder]=\"to.placeholder\" optionLabel=\"name\" optionValue=\"key\"></p-dropdown>\r\n  `,\r\n})\r\nexport class FormlyDropdownAllowanceComponent extends FieldType<FieldTypeConfig> implements OnInit {\r\n\r\n  allowances: any[] = [];\r\n\r\n  constructor(\r\n    private formlyMapService: FormlyMapService,\r\n    private codeService: IcCodeService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllowances();\r\n    console.log(this.allowances);\r\n  }\r\n\r\n  getAllowances(): void {\r\n    this.codeService.gets('PRL_ALLW_CODE').subscribe((resp: any[]) => {\r\n      console.log(resp);\r\n      resp[0].forEach((x: any) => {\r\n        // console.log(x);\r\n        this.allowances.push({\r\n          name: x.label['en-US'],\r\n          key: x.codeId\r\n        });\r\n      })\r\n      this.formControl.patchValue(this.allowances.at(0).key);\r\n    },\r\n      (error: any) => {\r\n        console.log(\"error is\" + String(error?.error?.error_desc));\r\n      });\r\n  }\r\n}"]},"metadata":{},"sourceType":"script","externalDependencies":[]}