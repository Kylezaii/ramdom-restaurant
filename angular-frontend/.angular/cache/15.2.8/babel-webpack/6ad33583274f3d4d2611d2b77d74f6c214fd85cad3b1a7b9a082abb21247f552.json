{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HealthService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/common/http\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nclass HealthService {\n  constructor(http, applicationConfigService) {\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n  }\n  checkHealth() {\n    return this.http.get(this.applicationConfigService.getEndpointFor('management/health'));\n  }\n}\nexports.HealthService = HealthService;\nHealthService.ɵfac = function HealthService_Factory(t) {\n  return new (t || HealthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n};\nHealthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HealthService,\n  factory: HealthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;;;;AAOA,MACaA,aAAa;EACxBC,YAAoBC,IAAgB,EAAUC,wBAAkD;IAA5E,SAAI,GAAJD,IAAI;IAAsB,6BAAwB,GAAxBC,wBAAwB;EAA6B;EAEnGC,WAAW;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,wBAAwB,CAACG,cAAc,CAAC,mBAAmB,CAAC,CAAC;EACjG;;AANFC;;mBACaP,aAAa;AAAA;;SAAbA,aAAa;EAAAQ,SAAbR,aAAa;EAAAS,YADA;AAAM","names":["HealthService","constructor","http","applicationConfigService","checkHealth","get","getEndpointFor","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\health\\health.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { Health } from './health.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class HealthService {\r\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\r\n\r\n  checkHealth(): Observable<Health> {\r\n    return this.http.get<Health>(this.applicationConfigService.getEndpointFor('management/health'));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}