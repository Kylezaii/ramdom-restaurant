{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/D1347074/Desktop/projects 2/nspayiiapp/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InsuranceAvgIncomeComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@angular/common\");\nconst http_1 = require(\"@angular/common/http\");\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst moment_1 = tslib_1.__importDefault(require(\"moment\"));\nconst rxjs_1 = require(\"rxjs\");\nconst claim_json_1 = tslib_1.__importDefault(require(\"../../../../../../i18n/en/claim.json\"));\nconst annual_income_component_1 = require(\"../annual-income/annual-income.component\");\nconst nspay2_constants_1 = require(\"app/nspay2.constants\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/shared/confirm/nsp-confirm.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/claim/se-claim/service/se-claim.service\"));\nconst i5 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i6 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i7 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i8 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i9 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i10 = tslib_1.__importStar(require(\"primeng/card\"));\nconst i11 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/confirmpopup\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/messages\"));\nconst i15 = tslib_1.__importStar(require(\"primeng/inputnumber\"));\nconst i16 = tslib_1.__importStar(require(\"../../../../../shared/language/translate.directive\"));\nconst i17 = tslib_1.__importStar(require(\"../annual-income/annual-income.component\"));\nconst _c0 = [\"mthlyTable\"];\nconst _c1 = [\"consolTable\"];\nfunction InsuranceAvgIncomeComponent_p_messages_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"div\", 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n    \");\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6.claimJson.nspay2App.claim.warning[\"CLM-W016\"]);\n  }\n}\nfunction InsuranceAvgIncomeComponent_p_messages_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-messages\", 9);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵtemplate(2, InsuranceAvgIncomeComponent_p_messages_0_ng_template_2_Template, 4, 1, \"ng-template\", 10);\n    i0.ɵɵtext(3, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceAvgIncomeComponent_p_messages_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"div\", 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n    \");\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r7.claimJson.nspay2App.claim.warning[\"CLM-W015\"]);\n  }\n}\nfunction InsuranceAvgIncomeComponent_p_messages_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-messages\", 9);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵtemplate(2, InsuranceAvgIncomeComponent_p_messages_2_ng_template_2_Template, 4, 1, \"ng-template\", 12);\n    i0.ɵɵtext(3, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceAvgIncomeComponent_p_messages_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"div\", 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n    \");\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.claimJson.nspay2App.claim.warning[\"CLM-W026\"]);\n  }\n}\nfunction InsuranceAvgIncomeComponent_p_messages_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-messages\", 9);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵtemplate(2, InsuranceAvgIncomeComponent_p_messages_4_ng_template_2_Template, 4, 1, \"ng-template\", 13);\n    i0.ɵɵtext(3, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c2 = function () {\n  return {\n    field: \"Eligible Months\"\n  };\n};\nfunction InsuranceAvgIncomeComponent_small_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 14);\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c2));\n  }\n}\nconst _c3 = function () {\n  return {\n    field: \"Production Bonus Divisor\"\n  };\n};\nfunction InsuranceAvgIncomeComponent_small_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 14);\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c3));\n  }\n}\nconst _c4 = function () {\n  return {\n    \"display\": \"inline\"\n  };\n};\nconst _c5 = function () {\n  return {\n    \"display\": \"inline\",\n    \"margin-left\": \"2em\"\n  };\n};\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_3_fieldset_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"fieldset\");\n    i0.ɵɵtext(1, \"\\n                                                \");\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3, \"\\n                                                    \");\n    i0.ɵɵelementStart(4, \"input\", 34);\n    i0.ɵɵlistener(\"click\", function InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_3_fieldset_16_Template_input_click_4_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r25.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                                                    \");\n    i0.ɵɵelementStart(6, \"label\", 35);\n    i0.ɵɵtext(7, \"Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n                                                \");\n    i0.ɵɵelementStart(10, \"div\");\n    i0.ɵɵtext(11, \"\\n                                                    \");\n    i0.ɵɵelementStart(12, \"input\", 36);\n    i0.ɵɵlistener(\"click\", function InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_3_fieldset_16_Template_input_click_12_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r27 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r27.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n                                                    \");\n    i0.ɵɵelementStart(14, \"label\", 35);\n    i0.ɵɵtext(15, \"Consolidated\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n                                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c4));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c5));\n    i0.ɵɵadvance(8);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c5));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_3_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                                                \");\n    i0.ɵɵelementStart(1, \"fieldset\", 37);\n    i0.ɵɵtext(2, \"\\n                                                    \");\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4, \"\\n                                                        \");\n    i0.ɵɵelementStart(5, \"input\", 34);\n    i0.ɵɵlistener(\"click\", function InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_3_ng_template_18_Template_input_click_5_listener($event) {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r28.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                                                        \");\n    i0.ɵɵelementStart(7, \"label\", 35);\n    i0.ɵɵtext(8, \"Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n\\n                                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n                                                    \");\n    i0.ɵɵelementStart(11, \"div\");\n    i0.ɵɵtext(12, \"\\n                                                        \");\n    i0.ɵɵelementStart(13, \"input\", 36);\n    i0.ɵɵlistener(\"click\", function InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_3_ng_template_18_Template_input_click_13_listener($event) {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r30 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r30.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                                        \");\n    i0.ɵɵelementStart(15, \"label\", 35);\n    i0.ɵɵtext(16, \"Consolidated\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n                                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n                                            \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c4));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c5));\n    i0.ɵɵadvance(8);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c5));\n  }\n}\nconst _c6 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_3_button_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_3_button_26_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r31.refreshOtherClaim());\n    });\n    i0.ɵɵtext(1, \"\\n                                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(4);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c6));\n    i0.ɵɵproperty(\"disabled\", !ctx_r23.enableRefreshOClaim());\n  }\n}\nconst _c7 = function () {\n  return {\n    \"text-align\": \"center\"\n  };\n};\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_3_th_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r33 = ctx.$implicit;\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c7));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", yrmth_r33, \"\\n                            \");\n  }\n}\nconst _c8 = function () {\n  return {\n    \"width\": \"200px\"\n  };\n};\nconst _c9 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-right\": \".5em\"\n  };\n};\nconst _c10 = function () {\n  return {\n    \"width\": \"10em\"\n  };\n};\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                            \");\n    i0.ɵɵelement(3, \"th\", 24);\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"th\", 24);\n    i0.ɵɵtext(6, \"\\n                                \");\n    i0.ɵɵelementStart(7, \"form\", 1);\n    i0.ɵɵtext(8, \"\\n                                    \");\n    i0.ɵɵelementStart(9, \"div\", 25);\n    i0.ɵɵtext(10, \"\\n                                        \");\n    i0.ɵɵelementStart(11, \"div\", 26);\n    i0.ɵɵtext(12, \"\\n                                            \");\n    i0.ɵɵelementStart(13, \"p-button\", 27);\n    i0.ɵɵlistener(\"click\", function InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_3_Template_p_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r35);\n      i0.ɵɵnextContext();\n      const _r17 = i0.ɵɵreference(1);\n      const ctx_r34 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r34.exportToCSV(_r17));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                            \");\n    i0.ɵɵtext(15, \"\\n                                            \");\n    i0.ɵɵtemplate(16, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_3_fieldset_16_Template, 18, 9, \"fieldset\", 28);\n    i0.ɵɵtext(17, \"\\n                                            \");\n    i0.ɵɵtemplate(18, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_3_ng_template_18_Template, 20, 9, \"ng-template\", null, 29, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(20, \"\\n                                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                                        \");\n    i0.ɵɵelement(22, \"p-confirmPopup\", 30);\n    i0.ɵɵtext(23, \"\\n\\n                                        \");\n    i0.ɵɵelementStart(24, \"div\", 31);\n    i0.ɵɵtext(25, \"\\n                                            \");\n    i0.ɵɵtemplate(26, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_3_button_26_Template, 2, 4, \"button\", 32);\n    i0.ɵɵtext(27, \"\\n                                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(32, \"\\n                        \");\n    i0.ɵɵelementStart(33, \"tr\");\n    i0.ɵɵtext(34, \"\\n                            \");\n    i0.ɵɵelementStart(35, \"th\", 24);\n    i0.ɵɵtext(36, \"Month/Year\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(37, \"\\n                            \");\n    i0.ɵɵelementStart(38, \"th\", 24);\n    i0.ɵɵtext(39);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(40, \"\\n                            \");\n    i0.ɵɵelementStart(41, \"th\", 24);\n    i0.ɵɵtext(42, \"Ave Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(43, \"\\n                            \");\n    i0.ɵɵtext(44, \"\\n                            \");\n    i0.ɵɵtext(45, \"\\n                            \");\n    i0.ɵɵtemplate(46, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_3_th_46_Template, 2, 4, \"th\", 33);\n    i0.ɵɵpipe(47, \"slice\");\n    i0.ɵɵtext(48, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(49, \"\\n                    \");\n  }\n  if (rf & 2) {\n    const _r21 = i0.ɵɵreference(19);\n    const ctx_r18 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(21, _c8));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"colspan\", ctx_r18.aveInsurForm.controls[\"yrmthList\"].value.length + 2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r18.captionGroup);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(22, _c9));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r18.isActive() && !ctx_r18.readOnly && ctx_r18.hasValidAuthorityAndStation())(\"ngIfElse\", _r21);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r18.isActive() && !ctx_r18.readOnly && ctx_r18.hasValidAuthorityAndStation());\n    i0.ɵɵadvance(9);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(23, _c10));\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(24, _c7));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r18.aveInsurForm.get(\"eligibleMthCount\").value, \"-mth Account\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(25, _c7));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(47, 17, ctx_r18.getYrmthList(), ctx_r18.maxMths - (ctx_r18.aveInsurForm == null ? null : ctx_r18.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r18.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_1_td_17_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 44);\n  }\n  if (rf & 2) {\n    const yrmth_r51 = i0.ɵɵnextContext().$implicit;\n    const ctx_r53 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r53.getInnerFormControl(ctx_r53.incomeTaxInsurArrayMthly, yrmth_r51, \"firstYrCommission\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_1_td_17_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                    \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n  }\n  if (rf & 2) {\n    const yrmth_r51 = i0.ɵɵnextContext().$implicit;\n    const ctx_r55 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(3, 1, ctx_r55.getInnerFormControl(ctx_r55.incomeTaxInsurArrayMthly, yrmth_r51, \"firstYrCommission\").value, \"1.2-2\"), \"\\n                                    \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_1_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵtemplate(2, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_1_td_17_p_inputNumber_2_Template, 1, 2, \"p-inputNumber\", 42);\n    i0.ɵɵtext(3, \"\\n                                \");\n    i0.ɵɵtemplate(4, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_1_td_17_ng_template_4_Template, 5, 4, \"ng-template\", null, 43, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r51 = ctx.$implicit;\n    const _r54 = i0.ɵɵreference(5);\n    const ctx_r50 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", yrmth_r51);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r50.isActive() && !ctx_r50.readOnly && ctx_r50.hasValidAuthorityAndStation())(\"ngIfElse\", _r54);\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \" \");\n    i0.ɵɵelementStart(7, \"div\", 39);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(10, \"\\n                            \");\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12, \" \");\n    i0.ɵɵelementStart(13, \"div\", 39);\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(16, \"\\n                            \");\n    i0.ɵɵtemplate(17, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_1_td_17_Template, 7, 3, \"td\", 40);\n    i0.ɵɵpipe(18, \"slice\");\n    i0.ɵɵtext(19, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r38 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r38.cols[0]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(9, 4, ctx_r38.getSumOfCurrRow(\"firstYrCommission\"), \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(15, 7, ctx_r38.getSumOfCurrRow(\"firstYrCommission\") / ctx_r38.aveInsurForm.get(\"eligibleMthCount\").value, \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(18, 10, ctx_r38.getYrmthList(), ctx_r38.maxMths - (ctx_r38.aveInsurForm == null ? null : ctx_r38.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r38.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_3_td_16_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 47);\n  }\n  if (rf & 2) {\n    const yrmth_r59 = i0.ɵɵnextContext().$implicit;\n    const ctx_r61 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r61.getInnerFormControl(ctx_r61.incomeTaxInsurArrayMthly, yrmth_r59, \"singlePremium\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_3_td_16_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                    \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n  }\n  if (rf & 2) {\n    const yrmth_r59 = i0.ɵɵnextContext().$implicit;\n    const ctx_r63 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(3, 1, ctx_r63.getInnerFormControl(ctx_r63.incomeTaxInsurArrayMthly, yrmth_r59, \"singlePremium\").value, \"1.2-2\"), \"\\n                                    \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_3_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵtemplate(2, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_3_td_16_p_inputNumber_2_Template, 1, 2, \"p-inputNumber\", 45);\n    i0.ɵɵtext(3, \"\\n                                \");\n    i0.ɵɵtemplate(4, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_3_td_16_ng_template_4_Template, 5, 4, \"ng-template\", null, 46, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r59 = ctx.$implicit;\n    const _r62 = i0.ɵɵreference(5);\n    const ctx_r58 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", yrmth_r59);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r58.isActive() && !ctx_r58.readOnly && ctx_r58.hasValidAuthorityAndStation())(\"ngIfElse\", _r62);\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 39);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                            \");\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11, \" \");\n    i0.ɵɵelementStart(12, \"div\", 39);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(15, \"\\n                            \");\n    i0.ɵɵtemplate(16, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_3_td_16_Template, 7, 3, \"td\", 40);\n    i0.ɵɵpipe(17, \"slice\");\n    i0.ɵɵtext(18, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r39 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r39.cols[1]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(8, 4, ctx_r39.getSumOfCurrRow(\"singlePremium\"), \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(14, 7, ctx_r39.getSumOfCurrRow(\"singlePremium\") / ctx_r39.aveInsurForm.get(\"eligibleMthCount\").value, \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(17, 10, ctx_r39.getYrmthList(), ctx_r39.maxMths - (ctx_r39.aveInsurForm == null ? null : ctx_r39.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r39.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_5_td_16_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 50);\n  }\n  if (rf & 2) {\n    const yrmth_r67 = i0.ɵɵnextContext().$implicit;\n    const ctx_r69 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r69.getInnerFormControl(ctx_r69.incomeTaxInsurArrayMthly, yrmth_r67, \"prdCommission\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_5_td_16_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                    \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n  }\n  if (rf & 2) {\n    const yrmth_r67 = i0.ɵɵnextContext().$implicit;\n    const ctx_r71 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(3, 1, ctx_r71.getInnerFormControl(ctx_r71.incomeTaxInsurArrayMthly, yrmth_r67, \"prdCommission\").value, \"1.2-2\"), \"\\n                                    \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_5_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵtemplate(2, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_5_td_16_p_inputNumber_2_Template, 1, 2, \"p-inputNumber\", 48);\n    i0.ɵɵtext(3, \"\\n                                \");\n    i0.ɵɵtemplate(4, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_5_td_16_ng_template_4_Template, 5, 4, \"ng-template\", null, 49, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r67 = ctx.$implicit;\n    const _r70 = i0.ɵɵreference(5);\n    const ctx_r66 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", yrmth_r67);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r66.isActive() && !ctx_r66.readOnly && ctx_r66.hasValidAuthorityAndStation())(\"ngIfElse\", _r70);\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 39);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                            \");\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11, \" \");\n    i0.ɵɵelementStart(12, \"div\", 39);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(15, \"\\n                            \");\n    i0.ɵɵtemplate(16, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_5_td_16_Template, 7, 3, \"td\", 40);\n    i0.ɵɵpipe(17, \"slice\");\n    i0.ɵɵtext(18, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r40 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r40.cols[2]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(8, 4, ctx_r40.getSumOfCurrRow(\"prdCommission\"), \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(14, 7, ctx_r40.getSumOfCurrRow(\"prdCommission\") / ctx_r40.aveInsurForm.get(\"eligibleMthCount\").value, \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(17, 10, ctx_r40.getYrmthList(), ctx_r40.maxMths - (ctx_r40.aveInsurForm == null ? null : ctx_r40.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r40.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_7_td_16_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 53);\n  }\n  if (rf & 2) {\n    const yrmth_r75 = i0.ɵɵnextContext().$implicit;\n    const ctx_r77 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r77.getInnerFormControl(ctx_r77.incomeTaxInsurArrayMthly, yrmth_r75, \"generalInsurance\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_7_td_16_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                    \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n  }\n  if (rf & 2) {\n    const yrmth_r75 = i0.ɵɵnextContext().$implicit;\n    const ctx_r79 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(3, 1, ctx_r79.getInnerFormControl(ctx_r79.incomeTaxInsurArrayMthly, yrmth_r75, \"generalInsurance\").value, \"1.2-2\"), \"\\n                                    \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_7_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵtemplate(2, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_7_td_16_p_inputNumber_2_Template, 1, 2, \"p-inputNumber\", 51);\n    i0.ɵɵtext(3, \"\\n                                \");\n    i0.ɵɵtemplate(4, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_7_td_16_ng_template_4_Template, 5, 4, \"ng-template\", null, 52, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r75 = ctx.$implicit;\n    const _r78 = i0.ɵɵreference(5);\n    const ctx_r74 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", yrmth_r75);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r74.isActive() && !ctx_r74.readOnly && ctx_r74.hasValidAuthorityAndStation())(\"ngIfElse\", _r78);\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 39);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                            \");\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11, \" \");\n    i0.ɵɵelementStart(12, \"div\", 39);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(15, \"\\n                            \");\n    i0.ɵɵtemplate(16, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_7_td_16_Template, 7, 3, \"td\", 40);\n    i0.ɵɵpipe(17, \"slice\");\n    i0.ɵɵtext(18, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r41 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r41.cols[3]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(8, 4, ctx_r41.getSumOfCurrRow(\"generalInsurance\"), \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(14, 7, ctx_r41.getSumOfCurrRow(\"generalInsurance\") / ctx_r41.aveInsurForm.get(\"eligibleMthCount\").value, \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(17, 10, ctx_r41.getYrmthList(), ctx_r41.maxMths - (ctx_r41.aveInsurForm == null ? null : ctx_r41.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r41.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_9_td_16_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 56);\n  }\n  if (rf & 2) {\n    const yrmth_r83 = i0.ɵɵnextContext().$implicit;\n    const ctx_r85 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r85.getInnerFormControl(ctx_r85.incomeTaxInsurArrayMthly, yrmth_r83, \"otherCommission\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_9_td_16_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                    \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n  }\n  if (rf & 2) {\n    const yrmth_r83 = i0.ɵɵnextContext().$implicit;\n    const ctx_r87 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(3, 1, ctx_r87.getInnerFormControl(ctx_r87.incomeTaxInsurArrayMthly, yrmth_r83, \"otherCommission\").value, \"1.2-2\"), \"\\n                                    \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_9_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵtemplate(2, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_9_td_16_p_inputNumber_2_Template, 1, 2, \"p-inputNumber\", 54);\n    i0.ɵɵtext(3, \"\\n                                \");\n    i0.ɵɵtemplate(4, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_9_td_16_ng_template_4_Template, 5, 4, \"ng-template\", null, 55, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r83 = ctx.$implicit;\n    const _r86 = i0.ɵɵreference(5);\n    const ctx_r82 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", yrmth_r83);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r82.isActive() && !ctx_r82.readOnly && ctx_r82.hasValidAuthorityAndStation())(\"ngIfElse\", _r86);\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 39);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                            \");\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11, \" \");\n    i0.ɵɵelementStart(12, \"div\", 39);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(15, \"\\n                            \");\n    i0.ɵɵtemplate(16, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_9_td_16_Template, 7, 3, \"td\", 40);\n    i0.ɵɵpipe(17, \"slice\");\n    i0.ɵɵtext(18, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r42 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r42.cols[4]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(8, 4, ctx_r42.getSumOfCurrRow(\"otherCommission\"), \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(14, 7, ctx_r42.getSumOfCurrRow(\"otherCommission\") / ctx_r42.aveInsurForm.get(\"eligibleMthCount\").value, \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(17, 10, ctx_r42.getYrmthList(), ctx_r42.maxMths - (ctx_r42.aveInsurForm == null ? null : ctx_r42.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r42.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_11_td_16_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 59);\n  }\n  if (rf & 2) {\n    const yrmth_r91 = i0.ɵɵnextContext().$implicit;\n    const ctx_r93 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r93.getInnerFormControl(ctx_r93.incomeTaxInsurArrayMthly, yrmth_r91, \"prdBonus\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_11_td_16_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                    \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n  }\n  if (rf & 2) {\n    const yrmth_r91 = i0.ɵɵnextContext().$implicit;\n    const ctx_r95 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(3, 1, ctx_r95.getInnerFormControl(ctx_r95.incomeTaxInsurArrayMthly, yrmth_r91, \"prdBonus\").value, \"1.2-2\"), \"\\n                                    \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_11_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵtemplate(2, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_11_td_16_p_inputNumber_2_Template, 1, 2, \"p-inputNumber\", 57);\n    i0.ɵɵtext(3, \"\\n                                \");\n    i0.ɵɵtemplate(4, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_11_td_16_ng_template_4_Template, 5, 4, \"ng-template\", null, 58, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r91 = ctx.$implicit;\n    const _r94 = i0.ɵɵreference(5);\n    const ctx_r90 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", yrmth_r91);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r90.isActive() && !ctx_r90.readOnly && ctx_r90.hasValidAuthorityAndStation())(\"ngIfElse\", _r94);\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 39);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                            \");\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11, \" \");\n    i0.ɵɵelementStart(12, \"div\", 39);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(15, \"\\n                            \");\n    i0.ɵɵtemplate(16, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_11_td_16_Template, 7, 3, \"td\", 40);\n    i0.ɵɵpipe(17, \"slice\");\n    i0.ɵɵtext(18, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r43 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r43.cols[5]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(8, 4, ctx_r43.getSumOfCurrRow(\"prdBonus\"), \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(14, 7, ctx_r43.getSumOfCurrRow(\"prdBonus\") / (ctx_r43.aveInsurForm == null ? null : ctx_r43.aveInsurForm.get(\"prdnBonusDivisor\").value), \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(17, 10, ctx_r43.getYrmthList(), ctx_r43.maxMths - (ctx_r43.aveInsurForm == null ? null : ctx_r43.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r43.maxMths));\n  }\n}\nconst _c11 = function () {\n  return {\n    \"border-bottom\": \"2px solid black\",\n    \"border-top\": \"2px solid black\"\n  };\n};\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_13_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r99 = ctx.$implicit;\n    const ctx_r98 = i0.ɵɵnextContext(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c11));\n    i0.ɵɵproperty(\"formGroupName\", yrmth_r99);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(4, 4, ctx_r98.getTotalPayableCol(yrmth_r99, ctx_r98.incomeTaxInsurArrayMthly), \"1.2-2\"), \"\\n                                \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 39);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                            \");\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11, \" \");\n    i0.ɵɵelementStart(12, \"div\", 39);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(15, \"\\n                            \");\n    i0.ɵɵtemplate(16, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_13_td_16_Template, 6, 8, \"td\", 60);\n    i0.ɵɵpipe(17, \"slice\");\n    i0.ɵɵtext(18, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r44 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r44.cols[6], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(18, _c11));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(8, 8, ctx_r44.getSumOfTotalPayable(), \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(19, _c11));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(14, 11, ctx_r44.getSumOfTotalPayable() / ctx_r44.aveInsurForm.get(\"eligibleMthCount\").value, \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(17, 14, ctx_r44.getYrmthList(), ctx_r44.maxMths - (ctx_r44.aveInsurForm == null ? null : ctx_r44.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r44.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_15_td_16_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 63);\n  }\n  if (rf & 2) {\n    const yrmth_r102 = i0.ɵɵnextContext().$implicit;\n    const ctx_r104 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r104.getInnerFormControl(ctx_r104.incomeTaxInsurArrayMthly, yrmth_r102, \"renewalCommission\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_15_td_16_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                    \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n  }\n  if (rf & 2) {\n    const yrmth_r102 = i0.ɵɵnextContext().$implicit;\n    const ctx_r106 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(3, 1, ctx_r106.getInnerFormControl(ctx_r106.incomeTaxInsurArrayMthly, yrmth_r102, \"renewalCommission\").value, \"1.2-2\"), \"\\n                                    \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_15_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵtemplate(2, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_15_td_16_p_inputNumber_2_Template, 1, 2, \"p-inputNumber\", 61);\n    i0.ɵɵtext(3, \"\\n                                \");\n    i0.ɵɵtemplate(4, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_15_td_16_ng_template_4_Template, 5, 4, \"ng-template\", null, 62, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r102 = ctx.$implicit;\n    const _r105 = i0.ɵɵreference(5);\n    const ctx_r101 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", yrmth_r102);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r101.isActive() && !ctx_r101.readOnly && ctx_r101.hasValidAuthorityAndStation())(\"ngIfElse\", _r105);\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 39);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                            \");\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11, \" \");\n    i0.ɵɵelementStart(12, \"div\", 39);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(15, \"\\n                            \");\n    i0.ɵɵtemplate(16, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_15_td_16_Template, 7, 3, \"td\", 40);\n    i0.ɵɵpipe(17, \"slice\");\n    i0.ɵɵtext(18, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r45 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r45.cols[7]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(8, 4, ctx_r45.getSumOfCurrRow(\"renewalCommission\"), \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(14, 7, ctx_r45.getSumOfCurrRow(\"renewalCommission\") / ctx_r45.aveInsurForm.get(\"eligibleMthCount\").value, \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(17, 10, ctx_r45.getYrmthList(), ctx_r45.maxMths - (ctx_r45.aveInsurForm == null ? null : ctx_r45.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r45.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_17_td_16_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 66);\n  }\n  if (rf & 2) {\n    const yrmth_r110 = i0.ɵɵnextContext().$implicit;\n    const ctx_r112 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r112.getInnerFormControl(ctx_r112.incomeTaxInsurArrayMthly, yrmth_r110, \"overridingCommission\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_17_td_16_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                    \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n  }\n  if (rf & 2) {\n    const yrmth_r110 = i0.ɵɵnextContext().$implicit;\n    const ctx_r114 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(3, 1, ctx_r114.getInnerFormControl(ctx_r114.incomeTaxInsurArrayMthly, yrmth_r110, \"overridingCommission\").value, \"1.2-2\"), \"\\n                                    \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_17_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵtemplate(2, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_17_td_16_p_inputNumber_2_Template, 1, 2, \"p-inputNumber\", 64);\n    i0.ɵɵtext(3, \"\\n                                \");\n    i0.ɵɵtemplate(4, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_17_td_16_ng_template_4_Template, 5, 4, \"ng-template\", null, 65, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r110 = ctx.$implicit;\n    const _r113 = i0.ɵɵreference(5);\n    const ctx_r109 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", yrmth_r110);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r109.isActive() && !ctx_r109.readOnly && ctx_r109.hasValidAuthorityAndStation())(\"ngIfElse\", _r113);\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 39);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                            \");\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11, \" \");\n    i0.ɵɵelementStart(12, \"div\", 39);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(15, \"\\n                            \");\n    i0.ɵɵtemplate(16, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_17_td_16_Template, 7, 3, \"td\", 40);\n    i0.ɵɵpipe(17, \"slice\");\n    i0.ɵɵtext(18, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r46.cols[8]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(8, 4, ctx_r46.getSumOfCurrRow(\"overridingCommission\"), \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(14, 7, ctx_r46.getSumOfCurrRow(\"overridingCommission\") / ctx_r46.aveInsurForm.get(\"eligibleMthCount\").value, \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(17, 10, ctx_r46.getYrmthList(), ctx_r46.maxMths - (ctx_r46.aveInsurForm == null ? null : ctx_r46.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r46.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_19_td_16_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 69);\n  }\n  if (rf & 2) {\n    const yrmth_r118 = i0.ɵɵnextContext().$implicit;\n    const ctx_r120 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r120.getInnerFormControl(ctx_r120.incomeTaxInsurArrayMthly, yrmth_r118, \"otherNonPayable\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_19_td_16_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                    \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n  }\n  if (rf & 2) {\n    const yrmth_r118 = i0.ɵɵnextContext().$implicit;\n    const ctx_r122 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(3, 1, ctx_r122.getInnerFormControl(ctx_r122.incomeTaxInsurArrayMthly, yrmth_r118, \"otherNonPayable\").value, \"1.2-2\"), \"\\n                                    \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_19_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵtemplate(2, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_19_td_16_p_inputNumber_2_Template, 1, 2, \"p-inputNumber\", 67);\n    i0.ɵɵtext(3, \"\\n                                \");\n    i0.ɵɵtemplate(4, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_19_td_16_ng_template_4_Template, 5, 4, \"ng-template\", null, 68, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r118 = ctx.$implicit;\n    const _r121 = i0.ɵɵreference(5);\n    const ctx_r117 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", yrmth_r118);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r117.isActive() && !ctx_r117.readOnly && ctx_r117.hasValidAuthorityAndStation())(\"ngIfElse\", _r121);\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 39);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                            \");\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11, \" \");\n    i0.ɵɵelementStart(12, \"div\", 39);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(15, \"\\n                            \");\n    i0.ɵɵtemplate(16, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_19_td_16_Template, 7, 3, \"td\", 40);\n    i0.ɵɵpipe(17, \"slice\");\n    i0.ɵɵtext(18, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r47 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r47.cols[9]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(8, 4, ctx_r47.getSumOfCurrRow(\"otherNonPayable\"), \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(14, 7, ctx_r47.getSumOfCurrRow(\"otherNonPayable\") / ctx_r47.aveInsurForm.get(\"eligibleMthCount\").value, \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(17, 10, ctx_r47.getYrmthList(), ctx_r47.maxMths - (ctx_r47.aveInsurForm == null ? null : ctx_r47.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r47.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_21_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r126 = ctx.$implicit;\n    const ctx_r125 = i0.ɵɵnextContext(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c11));\n    i0.ɵɵproperty(\"formGroupName\", yrmth_r126);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(4, 4, ctx_r125.getTotalNonPayableCol(yrmth_r126, ctx_r125.incomeTaxInsurArrayMthly), \"1.2-2\"), \"\\n                                \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 39);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                            \");\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11, \" \");\n    i0.ɵɵelementStart(12, \"div\", 39);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(15, \"\\n                            \");\n    i0.ɵɵtemplate(16, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_21_td_16_Template, 6, 8, \"td\", 60);\n    i0.ɵɵpipe(17, \"slice\");\n    i0.ɵɵtext(18, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r48 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r48.cols[10], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(18, _c11));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(8, 8, ctx_r48.getSumOfTotalNonPayable(), \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(19, _c11));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(14, 11, ctx_r48.getSumOfTotalNonPayable() / ctx_r48.aveInsurForm.get(\"eligibleMthCount\").value, \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(17, 14, ctx_r48.getYrmthList(), ctx_r48.maxMths - (ctx_r48.aveInsurForm == null ? null : ctx_r48.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r48.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_23_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r129 = ctx.$implicit;\n    const ctx_r128 = i0.ɵɵnextContext(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c11));\n    i0.ɵɵproperty(\"formGroupName\", yrmth_r129);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(4, 4, ctx_r128.getTotalPayableCol(yrmth_r129, ctx_r128.incomeTaxInsurArrayMthly) + ctx_r128.getTotalNonPayableCol(yrmth_r129, ctx_r128.incomeTaxInsurArrayMthly), \"1.2-2\"), \"\\n                                \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 39);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                            \");\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11, \" \");\n    i0.ɵɵelementStart(12, \"div\", 39);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(15, \"\\n                            \");\n    i0.ɵɵtemplate(16, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_23_td_16_Template, 6, 8, \"td\", 60);\n    i0.ɵɵpipe(17, \"slice\");\n    i0.ɵɵtext(18, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r49 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r49.cols[11], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(18, _c11));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(8, 8, ctx_r49.getSumOfTotalNonPayable() + ctx_r49.getSumOfTotalPayable(), \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(19, _c11));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(14, 11, ctx_r49.getSumOfTotalNonPayable() / ctx_r49.aveInsurForm.get(\"eligibleMthCount\").value + ctx_r49.getSumOfTotalPayable() / ctx_r49.aveInsurForm.get(\"eligibleMthCount\").value, \"1.2-2\"), \" \\u00A0pa\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(17, 14, ctx_r49.getYrmthList(), ctx_r49.maxMths - (ctx_r49.aveInsurForm == null ? null : ctx_r49.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r49.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                        \");\n    i0.ɵɵtemplate(1, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_1_Template, 20, 14, \"tr\", 7);\n    i0.ɵɵtext(2, \"\\n                        \");\n    i0.ɵɵtemplate(3, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_3_Template, 19, 14, \"tr\", 7);\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵtemplate(5, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_5_Template, 19, 14, \"tr\", 7);\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵtemplate(7, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_7_Template, 19, 14, \"tr\", 7);\n    i0.ɵɵtext(8, \"\\n                        \");\n    i0.ɵɵtemplate(9, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_9_Template, 19, 14, \"tr\", 7);\n    i0.ɵɵtext(10, \"\\n                        \");\n    i0.ɵɵtemplate(11, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_11_Template, 19, 14, \"tr\", 7);\n    i0.ɵɵtext(12, \"\\n                        \");\n    i0.ɵɵtemplate(13, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_13_Template, 19, 20, \"tr\", 7);\n    i0.ɵɵtext(14, \"\\n                        \");\n    i0.ɵɵtemplate(15, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_15_Template, 19, 14, \"tr\", 7);\n    i0.ɵɵtext(16, \"\\n                        \");\n    i0.ɵɵtemplate(17, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_17_Template, 19, 14, \"tr\", 7);\n    i0.ɵɵtext(18, \"\\n                        \");\n    i0.ɵɵtemplate(19, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_19_Template, 19, 14, \"tr\", 7);\n    i0.ɵɵtext(20, \"\\n                        \");\n    i0.ɵɵtemplate(21, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_21_Template, 19, 20, \"tr\", 7);\n    i0.ɵɵtext(22, \"\\n                        \");\n    i0.ɵɵtemplate(23, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_tr_23_Template, 19, 20, \"tr\", 7);\n    i0.ɵɵtext(24, \"\\n                    \");\n  }\n  if (rf & 2) {\n    const rowIndex_r37 = ctx.rowIndex;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r37 == 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r37 == 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r37 == 2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r37 == 3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r37 == 4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r37 == 5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r37 == 5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r37 == 5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r37 == 5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r37 == 5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r37 == 5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r37 == 5);\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_p_table_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-table\", 20, 21);\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵtemplate(3, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_3_Template, 50, 26, \"ng-template\", 22);\n    i0.ɵɵtext(4, \"\\n                    \");\n    i0.ɵɵtext(5, \"\\n                    \");\n    i0.ɵɵtemplate(6, InsuranceAvgIncomeComponent_div_31_p_table_4_ng_template_6_Template, 25, 12, \"ng-template\", 23);\n    i0.ɵɵtext(7, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r9.getYrmthList())(\"filterDelay\", 0)(\"loading\", ctx_r9.loading);\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_4_fieldset_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r140 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"fieldset\");\n    i0.ɵɵtext(1, \"\\n                                                    \");\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3, \"\\n                                                        \");\n    i0.ɵɵelementStart(4, \"input\", 34);\n    i0.ɵɵlistener(\"click\", function InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_4_fieldset_15_Template_input_click_4_listener($event) {\n      i0.ɵɵrestoreView(_r140);\n      const ctx_r139 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r139.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                                                        \");\n    i0.ɵɵelementStart(6, \"label\", 35);\n    i0.ɵɵtext(7, \"Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n\\n                                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n                                                    \");\n    i0.ɵɵelementStart(10, \"div\");\n    i0.ɵɵtext(11, \"\\n                                                        \");\n    i0.ɵɵelementStart(12, \"input\", 36);\n    i0.ɵɵlistener(\"click\", function InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_4_fieldset_15_Template_input_click_12_listener($event) {\n      i0.ɵɵrestoreView(_r140);\n      const ctx_r141 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r141.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n                                                        \");\n    i0.ɵɵelementStart(14, \"label\", 35);\n    i0.ɵɵtext(15, \"Consolidated\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n                                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c4));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c5));\n    i0.ɵɵadvance(8);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c5));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_4_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r143 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                                                    \");\n    i0.ɵɵelementStart(1, \"fieldset\", 37);\n    i0.ɵɵtext(2, \"\\n                                                        \");\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4, \"\\n                                                            \");\n    i0.ɵɵelementStart(5, \"input\", 34);\n    i0.ɵɵlistener(\"click\", function InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_4_ng_template_17_Template_input_click_5_listener($event) {\n      i0.ɵɵrestoreView(_r143);\n      const ctx_r142 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r142.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                                                            \");\n    i0.ɵɵelementStart(7, \"label\", 35);\n    i0.ɵɵtext(8, \"Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n\\n                                                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n                                                        \");\n    i0.ɵɵelementStart(11, \"div\");\n    i0.ɵɵtext(12, \"\\n                                                            \");\n    i0.ɵɵelementStart(13, \"input\", 36);\n    i0.ɵɵlistener(\"click\", function InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_4_ng_template_17_Template_input_click_13_listener($event) {\n      i0.ɵɵrestoreView(_r143);\n      const ctx_r144 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r144.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                                            \");\n    i0.ɵɵelementStart(15, \"label\", 35);\n    i0.ɵɵtext(16, \"Consolidated\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n                                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n                                                \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c4));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c5));\n    i0.ɵɵadvance(8);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c5));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_4_button_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r146 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_4_button_25_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r146);\n      const ctx_r145 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r145.refreshOtherClaim());\n    });\n    i0.ɵɵtext(1, \"\\n                                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r137 = i0.ɵɵnextContext(4);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c6));\n    i0.ɵɵproperty(\"disabled\", !ctx_r137.enableRefreshOClaim());\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_4_th_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r147 = ctx.$implicit;\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c7));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", yrmth_r147, \"\\n                                \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r149 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                                \");\n    i0.ɵɵelement(3, \"th\", 24);\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"th\", 24);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementStart(7, \"form\", 1);\n    i0.ɵɵtext(8, \"\\n                                        \");\n    i0.ɵɵelementStart(9, \"div\", 25);\n    i0.ɵɵtext(10, \"\\n                                            \");\n    i0.ɵɵelementStart(11, \"div\", 26);\n    i0.ɵɵtext(12, \"\\n                                                \");\n    i0.ɵɵelementStart(13, \"p-button\", 27);\n    i0.ɵɵlistener(\"click\", function InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_4_Template_p_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r149);\n      i0.ɵɵnextContext();\n      const _r131 = i0.ɵɵreference(2);\n      const ctx_r148 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r148.exportToCSV(_r131));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                                \");\n    i0.ɵɵtemplate(15, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_4_fieldset_15_Template, 18, 9, \"fieldset\", 28);\n    i0.ɵɵtext(16, \"\\n                                                \");\n    i0.ɵɵtemplate(17, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_4_ng_template_17_Template, 20, 9, \"ng-template\", null, 29, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(19, \"\\n                                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n                                            \");\n    i0.ɵɵelement(21, \"p-confirmPopup\", 30);\n    i0.ɵɵtext(22, \"\\n\\n                                            \");\n    i0.ɵɵelementStart(23, \"div\", 31);\n    i0.ɵɵtext(24, \"\\n                                                \");\n    i0.ɵɵtemplate(25, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_4_button_25_Template, 2, 4, \"button\", 71);\n    i0.ɵɵtext(26, \"\\n                                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \"\\n                                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n                            \");\n    i0.ɵɵelementStart(32, \"tr\");\n    i0.ɵɵtext(33, \"\\n                                \");\n    i0.ɵɵelementStart(34, \"th\", 24);\n    i0.ɵɵtext(35, \"Month/Year\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(36, \"\\n                                \");\n    i0.ɵɵelementStart(37, \"th\", 24);\n    i0.ɵɵtext(38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(39, \"\\n                                \");\n    i0.ɵɵelementStart(40, \"th\", 24);\n    i0.ɵɵtext(41, \"Ave Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n                                \");\n    i0.ɵɵtemplate(43, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_4_th_43_Template, 2, 4, \"th\", 33);\n    i0.ɵɵpipe(44, \"slice\");\n    i0.ɵɵtext(45, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(46, \"\\n                        \");\n  }\n  if (rf & 2) {\n    const _r135 = i0.ɵɵreference(18);\n    const ctx_r132 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(19, _c8));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"colspan\", ctx_r132.aveInsurForm.controls[\"yrmthList\"].value.length + 2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r132.captionGroup);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(20, _c9));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r132.isActive() && !ctx_r132.readOnly && ctx_r132.hasValidAuthorityAndStation())(\"ngIfElse\", _r135);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r132.isActive() && !ctx_r132.readOnly && ctx_r132.hasValidAuthorityAndStation());\n    i0.ɵɵadvance(12);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(21, _c7));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r132.aveInsurForm.get(\"eligibleMthCount\").value, \"-mth Account\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(22, _c7));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(44, 15, ctx_r132.getYrmthList(), ctx_r132.maxMths - (ctx_r132.aveInsurForm == null ? null : ctx_r132.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r132.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_1_p_inputNumber_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 44);\n  }\n  if (rf & 2) {\n    const ctx_r164 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r164.getInnerFormControl(ctx_r164.incomeTaxInsurArrayConsol, \"consolidated\", \"firstYrCommission\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_1_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                            \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                        \");\n  }\n  if (rf & 2) {\n    const ctx_r166 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                                \", i0.ɵɵpipeBind2(3, 1, ctx_r166.getInnerFormControl(ctx_r166.incomeTaxInsurArrayConsol, \"consolidated\", \"firstYrCommission\").value, \"1.2-2\"), \"\\n                                            \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_1_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵtext(3, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"td\", 72);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementStart(7, \"div\", 39);\n    i0.ɵɵtext(8, \"\\n                                        \");\n    i0.ɵɵtemplate(9, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_1_p_inputNumber_9_Template, 1, 2, \"p-inputNumber\", 42);\n    i0.ɵɵtext(10, \"\\n                                        \");\n    i0.ɵɵtemplate(11, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_1_ng_template_11_Template, 5, 4, \"ng-template\", null, 73, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(13, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n                                \");\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17, \"\\n                                    \");\n    i0.ɵɵelementStart(18, \"div\", 39);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n                                \");\n    i0.ɵɵtemplate(23, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_1_td_23_Template, 5, 0, \"td\", 74);\n    i0.ɵɵpipe(24, \"slice\");\n    i0.ɵɵtext(25, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r165 = i0.ɵɵreference(12);\n    const ctx_r152 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r152.cols[0]);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r152.isActive() && !ctx_r152.readOnly && ctx_r152.hasValidAuthorityAndStation())(\"ngIfElse\", _r165);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(20, 5, ctx_r152.incomeTaxInsurArrayConsol.get(\"consolidated\").get(\"firstYrCommission\").value / (ctx_r152.aveInsurForm == null ? null : ctx_r152.aveInsurForm.get(\"eligibleMthCount\").value), \"1.2-2\"), \" \\u00A0pa\\n                                    \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(24, 8, ctx_r152.getYrmthList(), ctx_r152.maxMths - (ctx_r152.aveInsurForm == null ? null : ctx_r152.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r152.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_3_p_inputNumber_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 47);\n  }\n  if (rf & 2) {\n    const ctx_r169 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r169.getInnerFormControl(ctx_r169.incomeTaxInsurArrayConsol, \"consolidated\", \"singlePremium\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_3_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                            \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                        \");\n  }\n  if (rf & 2) {\n    const ctx_r171 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                                \", i0.ɵɵpipeBind2(3, 1, ctx_r171.getInnerFormControl(ctx_r171.incomeTaxInsurArrayConsol, \"consolidated\", \"singlePremium\").value, \"1.2-2\"), \"\\n                                            \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_3_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵtext(3, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"td\", 72);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementStart(7, \"div\", 39);\n    i0.ɵɵtext(8, \"\\n                                        \");\n    i0.ɵɵtemplate(9, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_3_p_inputNumber_9_Template, 1, 2, \"p-inputNumber\", 45);\n    i0.ɵɵtext(10, \"\\n                                        \");\n    i0.ɵɵtemplate(11, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_3_ng_template_11_Template, 5, 4, \"ng-template\", null, 75, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(13, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n                                \");\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17, \"\\n                                    \");\n    i0.ɵɵelementStart(18, \"div\", 39);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n                                \");\n    i0.ɵɵtemplate(23, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_3_td_23_Template, 5, 0, \"td\", 74);\n    i0.ɵɵpipe(24, \"slice\");\n    i0.ɵɵtext(25, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r170 = i0.ɵɵreference(12);\n    const ctx_r153 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r153.cols[1]);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r153.isActive() && !ctx_r153.readOnly && ctx_r153.hasValidAuthorityAndStation())(\"ngIfElse\", _r170);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(20, 5, ctx_r153.incomeTaxInsurArrayConsol.get(\"consolidated\").get(\"singlePremium\").value / (ctx_r153.aveInsurForm == null ? null : ctx_r153.aveInsurForm.get(\"eligibleMthCount\").value), \"1.2-2\"), \" \\u00A0pa\\n                                    \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(24, 8, ctx_r153.getYrmthList(), ctx_r153.maxMths - (ctx_r153.aveInsurForm == null ? null : ctx_r153.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r153.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_5_p_inputNumber_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 50);\n  }\n  if (rf & 2) {\n    const ctx_r174 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r174.getInnerFormControl(ctx_r174.incomeTaxInsurArrayConsol, \"consolidated\", \"prdCommission\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_5_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                            \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                        \");\n  }\n  if (rf & 2) {\n    const ctx_r176 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                                \", i0.ɵɵpipeBind2(3, 1, ctx_r176.getInnerFormControl(ctx_r176.incomeTaxInsurArrayConsol, \"consolidated\", \"prdCommission\").value, \"1.2-2\"), \"\\n                                            \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_5_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵtext(3, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"td\", 72);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementStart(7, \"div\", 39);\n    i0.ɵɵtext(8, \"\\n                                        \");\n    i0.ɵɵtemplate(9, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_5_p_inputNumber_9_Template, 1, 2, \"p-inputNumber\", 48);\n    i0.ɵɵtext(10, \"\\n                                        \");\n    i0.ɵɵtemplate(11, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_5_ng_template_11_Template, 5, 4, \"ng-template\", null, 76, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(13, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n                                \");\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17, \"\\n                                    \");\n    i0.ɵɵelementStart(18, \"div\", 39);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n                                \");\n    i0.ɵɵtemplate(23, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_5_td_23_Template, 5, 0, \"td\", 74);\n    i0.ɵɵpipe(24, \"slice\");\n    i0.ɵɵtext(25, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r175 = i0.ɵɵreference(12);\n    const ctx_r154 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r154.cols[2]);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r154.isActive() && !ctx_r154.readOnly && ctx_r154.hasValidAuthorityAndStation())(\"ngIfElse\", _r175);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(20, 5, ctx_r154.incomeTaxInsurArrayConsol.get(\"consolidated\").get(\"prdCommission\").value / (ctx_r154.aveInsurForm == null ? null : ctx_r154.aveInsurForm.get(\"eligibleMthCount\").value), \"1.2-2\"), \" \\u00A0pa\\n                                    \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(24, 8, ctx_r154.getYrmthList(), ctx_r154.maxMths - (ctx_r154.aveInsurForm == null ? null : ctx_r154.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r154.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_7_p_inputNumber_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 53);\n  }\n  if (rf & 2) {\n    const ctx_r179 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r179.getInnerFormControl(ctx_r179.incomeTaxInsurArrayConsol, \"consolidated\", \"generalInsurance\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_7_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                            \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                        \");\n  }\n  if (rf & 2) {\n    const ctx_r181 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                                \", i0.ɵɵpipeBind2(3, 1, ctx_r181.getInnerFormControl(ctx_r181.incomeTaxInsurArrayConsol, \"consolidated\", \"generalInsurance\").value, \"1.2-2\"), \"\\n                                            \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_7_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵtext(3, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"td\", 72);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementStart(7, \"div\", 39);\n    i0.ɵɵtext(8, \"\\n                                        \");\n    i0.ɵɵtemplate(9, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_7_p_inputNumber_9_Template, 1, 2, \"p-inputNumber\", 51);\n    i0.ɵɵtext(10, \"\\n                                        \");\n    i0.ɵɵtemplate(11, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_7_ng_template_11_Template, 5, 4, \"ng-template\", null, 77, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(13, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n                                \");\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17, \"\\n                                    \");\n    i0.ɵɵelementStart(18, \"div\", 39);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n                                \");\n    i0.ɵɵtemplate(23, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_7_td_23_Template, 5, 0, \"td\", 74);\n    i0.ɵɵpipe(24, \"slice\");\n    i0.ɵɵtext(25, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r180 = i0.ɵɵreference(12);\n    const ctx_r155 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r155.cols[3]);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r155.isActive() && !ctx_r155.readOnly && ctx_r155.hasValidAuthorityAndStation())(\"ngIfElse\", _r180);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(20, 5, ctx_r155.incomeTaxInsurArrayConsol.get(\"consolidated\").get(\"generalInsurance\").value / (ctx_r155.aveInsurForm == null ? null : ctx_r155.aveInsurForm.get(\"eligibleMthCount\").value), \"1.2-2\"), \" \\u00A0pa\\n                                    \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(24, 8, ctx_r155.getYrmthList(), ctx_r155.maxMths - (ctx_r155.aveInsurForm == null ? null : ctx_r155.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r155.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_9_p_inputNumber_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 56);\n  }\n  if (rf & 2) {\n    const ctx_r184 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r184.getInnerFormControl(ctx_r184.incomeTaxInsurArrayConsol, \"consolidated\", \"otherCommission\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_9_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                            \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                        \");\n  }\n  if (rf & 2) {\n    const ctx_r186 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                                \", i0.ɵɵpipeBind2(3, 1, ctx_r186.getInnerFormControl(ctx_r186.incomeTaxInsurArrayConsol, \"consolidated\", \"otherCommission\").value, \"1.2-2\"), \"\\n                                            \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_9_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵtext(3, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"td\", 72);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementStart(7, \"div\", 39);\n    i0.ɵɵtext(8, \"\\n                                        \");\n    i0.ɵɵtemplate(9, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_9_p_inputNumber_9_Template, 1, 2, \"p-inputNumber\", 54);\n    i0.ɵɵtext(10, \"\\n                                        \");\n    i0.ɵɵtemplate(11, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_9_ng_template_11_Template, 5, 4, \"ng-template\", null, 78, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(13, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n                                \");\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17, \"\\n                                    \");\n    i0.ɵɵelementStart(18, \"div\", 39);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n                                \");\n    i0.ɵɵtemplate(23, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_9_td_23_Template, 5, 0, \"td\", 74);\n    i0.ɵɵpipe(24, \"slice\");\n    i0.ɵɵtext(25, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r185 = i0.ɵɵreference(12);\n    const ctx_r156 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r156.cols[4]);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r156.isActive() && !ctx_r156.readOnly && ctx_r156.hasValidAuthorityAndStation())(\"ngIfElse\", _r185);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(20, 5, ctx_r156.incomeTaxInsurArrayConsol.get(\"consolidated\").get(\"otherCommission\").value / (ctx_r156.aveInsurForm == null ? null : ctx_r156.aveInsurForm.get(\"eligibleMthCount\").value), \"1.2-2\"), \" \\u00A0pa\\n                                    \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(24, 8, ctx_r156.getYrmthList(), ctx_r156.maxMths - (ctx_r156.aveInsurForm == null ? null : ctx_r156.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r156.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_11_p_inputNumber_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 59);\n  }\n  if (rf & 2) {\n    const ctx_r189 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r189.getInnerFormControl(ctx_r189.incomeTaxInsurArrayConsol, \"consolidated\", \"prdBonus\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_11_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                            \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                        \");\n  }\n  if (rf & 2) {\n    const ctx_r191 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                                \", i0.ɵɵpipeBind2(3, 1, ctx_r191.getInnerFormControl(ctx_r191.incomeTaxInsurArrayConsol, \"consolidated\", \"prdBonus\").value, \"1.2-2\"), \"\\n                                            \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_11_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵtext(3, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"td\", 72);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementStart(7, \"div\", 39);\n    i0.ɵɵtext(8, \"\\n                                        \");\n    i0.ɵɵtemplate(9, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_11_p_inputNumber_9_Template, 1, 2, \"p-inputNumber\", 57);\n    i0.ɵɵtext(10, \"\\n                                        \");\n    i0.ɵɵtemplate(11, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_11_ng_template_11_Template, 5, 4, \"ng-template\", null, 79, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(13, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n                                \");\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17, \"\\n                                    \");\n    i0.ɵɵelementStart(18, \"div\", 39);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n                                \");\n    i0.ɵɵtemplate(23, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_11_td_23_Template, 5, 0, \"td\", 74);\n    i0.ɵɵpipe(24, \"slice\");\n    i0.ɵɵtext(25, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r190 = i0.ɵɵreference(12);\n    const ctx_r157 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r157.cols[5]);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r157.isActive() && !ctx_r157.readOnly && ctx_r157.hasValidAuthorityAndStation())(\"ngIfElse\", _r190);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(20, 5, ctx_r157.incomeTaxInsurArrayConsol.get(\"consolidated\").get(\"prdBonus\").value / (ctx_r157.aveInsurForm == null ? null : ctx_r157.aveInsurForm.get(\"prdnBonusDivisor\").value), \"1.2-2\"), \" \\u00A0pa\\n                                    \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(24, 8, ctx_r157.getYrmthList(), ctx_r157.maxMths - (ctx_r157.aveInsurForm == null ? null : ctx_r157.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r157.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_13_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵtext(3, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementStart(7, \"div\", 39);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n                                \");\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13, \"\\n                                    \");\n    i0.ɵɵelementStart(14, \"div\", 39);\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n                                \");\n    i0.ɵɵtemplate(19, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_13_td_19_Template, 5, 0, \"td\", 74);\n    i0.ɵɵpipe(20, \"slice\");\n    i0.ɵɵtext(21, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r158 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r158.cols[6]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(9, 4, ctx_r158.getTotalPayableCol(\"consolidated\", ctx_r158.incomeTaxInsurArrayConsol), \"1.2-2\"), \" \\u00A0pa\\n                                    \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(16, 7, ctx_r158.computeConsolidatedAvgTotalPayable(\"consolidated\", ctx_r158.incomeTaxInsurArrayConsol), \"1.2-2\"), \" \\u00A0pa\\n                                    \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(20, 10, ctx_r158.getYrmthList(), ctx_r158.maxMths - (ctx_r158.aveInsurForm == null ? null : ctx_r158.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r158.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_15_p_inputNumber_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 63);\n  }\n  if (rf & 2) {\n    const ctx_r196 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r196.getInnerFormControl(ctx_r196.incomeTaxInsurArrayConsol, \"consolidated\", \"renewalCommission\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_15_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                            \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                        \");\n  }\n  if (rf & 2) {\n    const ctx_r198 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                                \", i0.ɵɵpipeBind2(3, 1, ctx_r198.getInnerFormControl(ctx_r198.incomeTaxInsurArrayConsol, \"consolidated\", \"renewalCommission\").value, \"1.2-2\"), \"\\n                                            \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_15_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵtext(3, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"td\", 72);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementStart(7, \"div\", 39);\n    i0.ɵɵtext(8, \"\\n                                        \");\n    i0.ɵɵtemplate(9, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_15_p_inputNumber_9_Template, 1, 2, \"p-inputNumber\", 61);\n    i0.ɵɵtext(10, \"\\n                                        \");\n    i0.ɵɵtemplate(11, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_15_ng_template_11_Template, 5, 4, \"ng-template\", null, 80, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(13, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n                                \");\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17, \"\\n                                    \");\n    i0.ɵɵelementStart(18, \"div\", 39);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n                                \");\n    i0.ɵɵtemplate(23, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_15_td_23_Template, 5, 0, \"td\", 74);\n    i0.ɵɵpipe(24, \"slice\");\n    i0.ɵɵtext(25, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r197 = i0.ɵɵreference(12);\n    const ctx_r159 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r159.cols[7]);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r159.isActive() && !ctx_r159.readOnly && ctx_r159.hasValidAuthorityAndStation())(\"ngIfElse\", _r197);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(20, 5, ctx_r159.incomeTaxInsurArrayConsol.get(\"consolidated\").get(\"renewalCommission\").value / (ctx_r159.aveInsurForm == null ? null : ctx_r159.aveInsurForm.get(\"eligibleMthCount\").value), \"1.2-2\"), \" \\u00A0pa\\n                                    \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(24, 8, ctx_r159.getYrmthList(), ctx_r159.maxMths - (ctx_r159.aveInsurForm == null ? null : ctx_r159.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r159.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_17_p_inputNumber_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 66);\n  }\n  if (rf & 2) {\n    const ctx_r201 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r201.getInnerFormControl(ctx_r201.incomeTaxInsurArrayConsol, \"consolidated\", \"overridingCommission\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_17_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                            \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                        \");\n  }\n  if (rf & 2) {\n    const ctx_r203 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                                \", i0.ɵɵpipeBind2(3, 1, ctx_r203.getInnerFormControl(ctx_r203.incomeTaxInsurArrayConsol, \"consolidated\", \"overridingCommission\").value, \"1.2-2\"), \"\\n                                            \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_17_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵtext(3, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"td\", 72);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementStart(7, \"div\", 39);\n    i0.ɵɵtext(8, \"\\n                                        \");\n    i0.ɵɵtemplate(9, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_17_p_inputNumber_9_Template, 1, 2, \"p-inputNumber\", 64);\n    i0.ɵɵtext(10, \"\\n                                        \");\n    i0.ɵɵtemplate(11, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_17_ng_template_11_Template, 5, 4, \"ng-template\", null, 81, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(13, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n                                \");\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17, \"\\n                                    \");\n    i0.ɵɵelementStart(18, \"div\", 39);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n                                \");\n    i0.ɵɵtemplate(23, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_17_td_23_Template, 5, 0, \"td\", 74);\n    i0.ɵɵpipe(24, \"slice\");\n    i0.ɵɵtext(25, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r202 = i0.ɵɵreference(12);\n    const ctx_r160 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r160.cols[8]);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r160.isActive() && !ctx_r160.readOnly && ctx_r160.hasValidAuthorityAndStation())(\"ngIfElse\", _r202);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(20, 5, ctx_r160.incomeTaxInsurArrayConsol.get(\"consolidated\").get(\"overridingCommission\").value / (ctx_r160.aveInsurForm == null ? null : ctx_r160.aveInsurForm.get(\"eligibleMthCount\").value), \"1.2-2\"), \" \\u00A0pa\\n                                    \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(24, 8, ctx_r160.getYrmthList(), ctx_r160.maxMths - (ctx_r160.aveInsurForm == null ? null : ctx_r160.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r160.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_19_p_inputNumber_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 69);\n  }\n  if (rf & 2) {\n    const ctx_r206 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r206.getInnerFormControl(ctx_r206.incomeTaxInsurArrayConsol, \"consolidated\", \"otherNonPayable\"));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_19_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                            \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                        \");\n  }\n  if (rf & 2) {\n    const ctx_r208 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                                \", i0.ɵɵpipeBind2(3, 1, ctx_r208.getInnerFormControl(ctx_r208.incomeTaxInsurArrayConsol, \"consolidated\", \"otherNonPayable\").value, \"1.2-2\"), \"\\n                                            \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_19_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵtext(3, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"td\", 72);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementStart(7, \"div\", 39);\n    i0.ɵɵtext(8, \"\\n                                        \");\n    i0.ɵɵtemplate(9, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_19_p_inputNumber_9_Template, 1, 2, \"p-inputNumber\", 67);\n    i0.ɵɵtext(10, \"\\n                                        \");\n    i0.ɵɵtemplate(11, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_19_ng_template_11_Template, 5, 4, \"ng-template\", null, 82, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(13, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n                                \");\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17, \"\\n                                    \");\n    i0.ɵɵelementStart(18, \"div\", 39);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n                                \");\n    i0.ɵɵtemplate(23, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_19_td_23_Template, 5, 0, \"td\", 74);\n    i0.ɵɵpipe(24, \"slice\");\n    i0.ɵɵtext(25, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r207 = i0.ɵɵreference(12);\n    const ctx_r161 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r161.cols[9]);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r161.isActive() && !ctx_r161.readOnly && ctx_r161.hasValidAuthorityAndStation())(\"ngIfElse\", _r207);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(20, 5, ctx_r161.incomeTaxInsurArrayConsol.get(\"consolidated\").get(\"otherNonPayable\").value / (ctx_r161.aveInsurForm == null ? null : ctx_r161.aveInsurForm.get(\"eligibleMthCount\").value), \"1.2-2\"), \" \\u00A0pa\\n                                    \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(24, 8, ctx_r161.getYrmthList(), ctx_r161.maxMths - (ctx_r161.aveInsurForm == null ? null : ctx_r161.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r161.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_21_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵtext(3, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementStart(7, \"div\", 39);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n                                \");\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13, \"\\n                                    \");\n    i0.ɵɵelementStart(14, \"div\", 39);\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n                                \");\n    i0.ɵɵtemplate(19, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_21_td_19_Template, 5, 0, \"td\", 74);\n    i0.ɵɵpipe(20, \"slice\");\n    i0.ɵɵtext(21, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r162 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r162.cols[10]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(9, 4, ctx_r162.getTotalNonPayableCol(\"consolidated\", ctx_r162.incomeTaxInsurArrayConsol), \"1.2-2\"), \" \\u00A0pa\\n                                    \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(16, 7, ctx_r162.computeConsolidatedAvgTotalNonPayable(\"consolidated\", ctx_r162.incomeTaxInsurArrayConsol), \"1.2-2\"), \" \\u00A0pa                                    \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(20, 10, ctx_r162.getYrmthList(), ctx_r162.maxMths - (ctx_r162.aveInsurForm == null ? null : ctx_r162.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r162.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_23_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵtext(3, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementStart(7, \"div\", 39);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n                                \");\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13, \"\\n                                    \");\n    i0.ɵɵelementStart(14, \"div\", 39);\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n                                \");\n    i0.ɵɵtemplate(19, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_23_td_19_Template, 5, 0, \"td\", 74);\n    i0.ɵɵpipe(20, \"slice\");\n    i0.ɵɵtext(21, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r163 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r163.cols[11]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(9, 4, ctx_r163.getTotalPayableCol(\"consolidated\", ctx_r163.incomeTaxInsurArrayConsol) + ctx_r163.getTotalNonPayableCol(\"consolidated\", ctx_r163.incomeTaxInsurArrayConsol), \"1.2-2\"), \" \\u00A0pa\\n                                    \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(16, 7, ctx_r163.computeConsolidatedAvgTotalPayable(\"consolidated\", ctx_r163.incomeTaxInsurArrayConsol) + ctx_r163.computeConsolidatedAvgTotalNonPayable(\"consolidated\", ctx_r163.incomeTaxInsurArrayConsol), \"1.2-2\"), \" \\u00A0pa                                    \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(20, 10, ctx_r163.getYrmthList(), ctx_r163.maxMths - (ctx_r163.aveInsurForm == null ? null : ctx_r163.aveInsurForm.get(\"eligibleMthCount\").value), ctx_r163.maxMths));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵtemplate(1, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_1_Template, 26, 12, \"tr\", 7);\n    i0.ɵɵtext(2, \"\\n                            \");\n    i0.ɵɵtemplate(3, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_3_Template, 26, 12, \"tr\", 7);\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵtemplate(5, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_5_Template, 26, 12, \"tr\", 7);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵtemplate(7, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_7_Template, 26, 12, \"tr\", 7);\n    i0.ɵɵtext(8, \"\\n                            \");\n    i0.ɵɵtemplate(9, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_9_Template, 26, 12, \"tr\", 7);\n    i0.ɵɵtext(10, \"\\n                            \");\n    i0.ɵɵtemplate(11, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_11_Template, 26, 12, \"tr\", 7);\n    i0.ɵɵtext(12, \"\\n                            \");\n    i0.ɵɵtemplate(13, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_13_Template, 22, 14, \"tr\", 7);\n    i0.ɵɵtext(14, \"\\n                            \");\n    i0.ɵɵtemplate(15, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_15_Template, 26, 12, \"tr\", 7);\n    i0.ɵɵtext(16, \"\\n                            \");\n    i0.ɵɵtemplate(17, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_17_Template, 26, 12, \"tr\", 7);\n    i0.ɵɵtext(18, \"\\n                            \");\n    i0.ɵɵtemplate(19, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_19_Template, 26, 12, \"tr\", 7);\n    i0.ɵɵtext(20, \"\\n                            \");\n    i0.ɵɵtemplate(21, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_21_Template, 22, 14, \"tr\", 7);\n    i0.ɵɵtext(22, \"\\n                            \");\n    i0.ɵɵtemplate(23, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_tr_23_Template, 22, 14, \"tr\", 7);\n    i0.ɵɵtext(24, \"\\n                        \");\n  }\n  if (rf & 2) {\n    const rowIndex_r151 = ctx.rowIndex;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r151 == 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r151 == 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r151 == 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r151 == 3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r151 == 4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r151 == 5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r151 == 5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r151 == 5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r151 == 5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r151 == 5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r151 == 5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r151 == 5);\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                    \");\n    i0.ɵɵelementStart(1, \"p-table\", 20, 70);\n    i0.ɵɵtext(3, \"\\n                        \");\n    i0.ɵɵtemplate(4, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_4_Template, 47, 23, \"ng-template\", 22);\n    i0.ɵɵtext(5, \"\\n                        \");\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵtemplate(7, InsuranceAvgIncomeComponent_div_31_ng_template_9_ng_template_7_Template, 25, 12, \"ng-template\", 23);\n    i0.ɵɵtext(8, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n                \");\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r11.getYrmthList())(\"filterDelay\", 0)(\"loading\", ctx_r11.loading);\n  }\n}\nconst _c12 = function () {\n  return {\n    \"width\": \"5em\",\n    \"text-align\": \"right\"\n  };\n};\nfunction InsuranceAvgIncomeComponent_div_31_p_inputNumber_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-inputNumber\", 83);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"maxlength\", 3)(\"inputStyle\", i0.ɵɵpureFunction0(2, _c12));\n  }\n}\nconst _c13 = function () {\n  return {\n    field: \"Claim NIP\"\n  };\n};\nfunction InsuranceAvgIncomeComponent_div_31_small_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 14);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c13));\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\"\\n                            \", ctx_r15.footerGroup.get(\"claimNip\").value, \"%\\n                        \");\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r216 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 84);\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵtext(2, \"\\n                        \");\n    i0.ɵɵelementStart(3, \"p-button\", 85);\n    i0.ɵɵlistener(\"click\", function InsuranceAvgIncomeComponent_div_31_div_43_Template_p_button_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r216);\n      const ctx_r215 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r215.copyToItem($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r16.enableCopytoItem());\n  }\n}\nfunction InsuranceAvgIncomeComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵelementStart(2, \"div\", 1);\n    i0.ɵɵtext(3, \"\\n                \");\n    i0.ɵɵtemplate(4, InsuranceAvgIncomeComponent_div_31_p_table_4_Template, 8, 3, \"p-table\", 15);\n    i0.ɵɵtext(5, \"\\n\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n            \");\n    i0.ɵɵelementStart(7, \"div\", 1);\n    i0.ɵɵtext(8, \"\\n                \");\n    i0.ɵɵtemplate(9, InsuranceAvgIncomeComponent_div_31_ng_template_9_Template, 10, 3, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(11, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n            \");\n    i0.ɵɵelementStart(13, \"div\", 2);\n    i0.ɵɵtext(14, \"\\n                \");\n    i0.ɵɵelementStart(15, \"form\", 1);\n    i0.ɵɵtext(16, \"\\n                    \");\n    i0.ɵɵelementStart(17, \"div\", 3);\n    i0.ɵɵtext(18, \"\\n                        \");\n    i0.ɵɵelementStart(19, \"div\");\n    i0.ɵɵtext(20, \"Claim NIP:\\n                            \");\n    i0.ɵɵtemplate(21, InsuranceAvgIncomeComponent_div_31_p_inputNumber_21_Template, 2, 3, \"p-inputNumber\", 17);\n    i0.ɵɵtext(22, \"\\n                            \");\n    i0.ɵɵtemplate(23, InsuranceAvgIncomeComponent_div_31_small_23_Template, 2, 2, \"small\", 5);\n    i0.ɵɵtext(24, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n                        \");\n    i0.ɵɵtemplate(26, InsuranceAvgIncomeComponent_div_31_ng_template_26_Template, 1, 1, \"ng-template\", null, 18, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(28, \"\\n\\n                        \");\n    i0.ɵɵelementStart(29, \"div\");\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n                        \");\n    i0.ɵɵelementStart(32, \"div\");\n    i0.ɵɵtext(33);\n    i0.ɵɵpipe(34, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(35, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(36, \"\\n                    \");\n    i0.ɵɵelementStart(37, \"div\", 3);\n    i0.ɵɵtext(38, \"\\n                        \");\n    i0.ɵɵelementStart(39, \"div\");\n    i0.ɵɵtext(40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(41, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n                    \");\n    i0.ɵɵtemplate(43, InsuranceAvgIncomeComponent_div_31_div_43_Template, 5, 1, \"div\", 19);\n    i0.ɵɵtext(44, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(45, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(46, \"\\n        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r10 = i0.ɵɵreference(10);\n    const _r14 = i0.ɵɵreference(27);\n    const ctx_r5 = i0.ɵɵnextContext();\n    let tmp_7_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r5.incomeTaxInsurArrayMthly);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.aveInsurForm.controls[\"captionGroup\"].get(\"radioOption\").value === \"MTH\")(\"ngIfElse\", _r10);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r5.incomeTaxInsurArrayConsol);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"formGroup\", ctx_r5.footerGroup);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.isActive() && !ctx_r5.readOnly && ctx_r5.hasValidAuthorityAndStation())(\"ngIfElse\", _r14);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx_r5.aveInsurForm.controls[\"footerGroup\"].get(\"claimNip\")) == null ? null : tmp_7_0.touched) && !ctx_r5.isValidNumber((tmp_7_0 = ctx_r5.aveInsurForm.controls[\"footerGroup\"].get(\"claimNip\")) == null ? null : tmp_7_0.value));\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"Proposed NIP: \", ctx_r5.proposedNIP, \" %\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Overriding Commission: \", i0.ɵɵpipeBind2(34, 13, ctx_r5.getOverridingCommPerc(), \"1.2-2\"), \" %\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate2(\"Total Amount Payable: \", ctx_r5.getTotalAmtPayable(), \" (\", ctx_r5.getTotalAmtPayableDesc(), \")\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.isActive() && !ctx_r5.readOnly && ctx_r5.hasValidAuthorityAndStation());\n  }\n}\nclass InsuranceAvgIncomeComponent {\n  get captionGroup() {\n    return this.aveInsurForm?.get('captionGroup');\n  }\n  constructor(formBuilder, dateUtilsService, nspConfirmService, seClaimService, toastService, confirmationService, ref, exportUtilsService, accountService, localeId) {\n    this.formBuilder = formBuilder;\n    this.dateUtilsService = dateUtilsService;\n    this.nspConfirmService = nspConfirmService;\n    this.seClaimService = seClaimService;\n    this.toastService = toastService;\n    this.confirmationService = confirmationService;\n    this.ref = ref;\n    this.exportUtilsService = exportUtilsService;\n    this.accountService = accountService;\n    this.localeId = localeId;\n    this.radioOptions = [{\n      name: 'Monthly',\n      key: 'MTH'\n    }, {\n      name: 'Consolidated',\n      key: 'CON'\n    }];\n    this.sourceYrOptions = [];\n    // captionGroup: FormGroup;\n    this.loading = true;\n    this.currHardCopyDetails = {};\n    this.currSelectedOption = {};\n    this.currIrasDetails = {};\n    this.seHardCopyDetails = {};\n    this.selectedWDOption = {};\n    this.itemDetailsSection = {};\n    this.totalAmtPayEvent = new core_1.EventEmitter();\n    this.irasDetails = {};\n    this.dateFormat = \"DD-MM-YYYY\";\n    this.PEND_VERIFY_STATUS = \"PVE\";\n    this.PEND_ACTION_STATUS = \"PAC\";\n    // colStartDt: any;\n    // colEndDt: any;\n    this.colMthRange = [];\n    this.maxMths = 6;\n    this.dataSet = {\n      dataList: []\n    };\n    this.yrmthList = [];\n    this.subSetList = [];\n    this.referenceClaimNip = 0;\n    this.claimNIP = 0;\n    this.proposedNIP = 0;\n    this.actualNIP = 0;\n    this.overridingCommission = 0;\n    this.totalAmtPay = 0;\n    this.aveInsurForm = this.formBuilder.group({\n      id: new forms_1.FormControl(null, null),\n      workingDataId: new forms_1.FormControl('', null),\n      consolidated: new forms_1.FormControl(false, null),\n      eligibleMthCount: new forms_1.FormControl(6, null),\n      prdnBonusDivisor: new forms_1.FormControl(12, null),\n      incomeTaxInsurArrayMthly: this.formBuilder.group({}),\n      incomeTaxInsurArrayConsol: this.formBuilder.group({}),\n      captionGroup: this.formBuilder.group({\n        radioOption: new forms_1.FormControl(this.radioOptions[0].key, null)\n      }),\n      footerGroup: this.formBuilder.group({\n        claimNip: new forms_1.FormControl(0, null)\n      }),\n      annualIncomeList: new forms_1.FormArray([]),\n      yrmthList: new forms_1.FormControl([], null),\n      startYrmth: new forms_1.FormControl('', null),\n      endYrmth: new forms_1.FormControl('', null)\n    });\n    this.subscription = new rxjs_1.Subscription();\n    this.claimJson = claim_json_1.default;\n  }\n  static createNewAveInsurFormGroup(startYrmth, endYrmth, formBuilder, dateUtilsService) {\n    console.log(\"mila\");\n    const aveInsurFormGroup = formBuilder.group({\n      id: new forms_1.FormControl(null, null),\n      workingDataId: new forms_1.FormControl('', null),\n      consolidated: false,\n      startYrmth: new forms_1.FormControl(startYrmth, null),\n      endYrmth: new forms_1.FormControl(endYrmth, null),\n      yrmthList: new forms_1.FormControl([], null),\n      eligibleMthCount: new forms_1.FormControl(6, null),\n      prdnBonusDivisor: new forms_1.FormControl(12, null),\n      incomeTaxInsurArrayMthly: formBuilder.group({}),\n      incomeTaxInsurArrayConsol: formBuilder.group({}),\n      annualIncomeList: new forms_1.FormArray([]),\n      footerGroup: formBuilder.group({\n        claimNip: new forms_1.FormControl(0, null)\n      }),\n      captionGroup: formBuilder.group({\n        radioOption: new forms_1.FormControl(\"MTH\", null)\n      })\n    });\n    // aveInsurFormGroup.get('captionGroup.radioOption').setValue(\"MTH\");\n    const annualIncomeFormGroup = formBuilder.group({\n      source: new forms_1.FormControl(null, null),\n      assessment: new forms_1.FormControl(null, null),\n      acctgPeriodStrt: new forms_1.FormControl(null, null),\n      acctgPeriodEnd: new forms_1.FormControl(null, null),\n      occupationNature: new forms_1.FormControl(null, null),\n      revenue: new forms_1.FormControl(null, null),\n      adjProfit: new forms_1.FormControl(null, null)\n    });\n    aveInsurFormGroup.get('annualIncomeList').push(annualIncomeFormGroup);\n    const claimStartYrMth = dateUtilsService.convertStrToDate(aveInsurFormGroup.get('startYrmth').value, \"DD-MM-YYYY\");\n    const claimEndYrMth = dateUtilsService.convertStrToDate(aveInsurFormGroup.get('endYrmth').value, \"DD-MM-YYYY\");\n    const claimStartDt = (0, moment_1.default)(new Date(claimStartYrMth.getFullYear(), claimStartYrMth.getMonth(), 1));\n    const claimEndDt = (0, moment_1.default)(new Date(claimEndYrMth.getFullYear(), +claimEndYrMth.getMonth() + 1, 0));\n    const colStartDt = claimEndDt.clone().subtract(+aveInsurFormGroup?.get('eligibleMthCount').value - 1, 'months');\n    const colEndDt = claimEndDt.clone();\n    const colMthRange = [];\n    for (let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')) {\n      colMthRange.push(mth.format(\"DD-MM-YYYY\"));\n    }\n    const yrmthList = colMthRange.map(x => (0, moment_1.default)(dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\n    aveInsurFormGroup.get('yrmthList').setValue(yrmthList);\n    //create empty dataFormArray\n    yrmthList.forEach(x => {\n      aveInsurFormGroup.get('incomeTaxInsurArrayMthly').addControl(x, formBuilder.group({\n        yrmth: new forms_1.FormControl(x, null),\n        yrmthReCon: new forms_1.FormControl(x, null),\n        firstYrCommission: new forms_1.FormControl(null, null),\n        singlePremium: new forms_1.FormControl(null, null),\n        prdCommission: new forms_1.FormControl(null, null),\n        generalInsurance: new forms_1.FormControl(null, null),\n        otherCommission: new forms_1.FormControl(null, null),\n        prdBonus: new forms_1.FormControl(null, null),\n        renewalCommission: new forms_1.FormControl(null, null),\n        overridingCommission: new forms_1.FormControl(null, null),\n        otherNonPayable: new forms_1.FormControl(null, null),\n        totalPayableCommission: new forms_1.FormControl(null, null)\n      }));\n    });\n    //create empty consolDataFormArray\n    aveInsurFormGroup.get('incomeTaxInsurArrayConsol').addControl('consolidated', formBuilder.group({\n      yrmth: new forms_1.FormControl(null, null),\n      yrmthReCon: new forms_1.FormControl(null, null),\n      firstYrCommission: new forms_1.FormControl(null, null),\n      singlePremium: new forms_1.FormControl(null, null),\n      prdCommission: new forms_1.FormControl(null, null),\n      generalInsurance: new forms_1.FormControl(null, null),\n      otherCommission: new forms_1.FormControl(null, null),\n      prdBonus: new forms_1.FormControl(null, null),\n      renewalCommission: new forms_1.FormControl(null, null),\n      overridingCommission: new forms_1.FormControl(null, null),\n      otherNonPayable: new forms_1.FormControl(null, null),\n      totalPayableCommission: new forms_1.FormControl(null, null)\n    }));\n    return aveInsurFormGroup;\n  }\n  static staticAddRow(dataEntry, formBuilder) {\n    //does validation to makesure the yrmth tallies to yrmthRecon other wise default to 0\n    let formObj;\n    if (dataEntry?.yrmthReCon !== undefined && dataEntry?.yrmth !== dataEntry?.yrmthReCon) {\n      formObj = {\n        yrmth: dataEntry?.yrmth,\n        yrmthReCon: new forms_1.FormControl(dataEntry?.yrmthReCon, null),\n        firstYrCommission: new forms_1.FormControl(null, null),\n        singlePremium: new forms_1.FormControl(null, null),\n        prdCommission: new forms_1.FormControl(null, null),\n        generalInsurance: new forms_1.FormControl(null, null),\n        otherCommission: new forms_1.FormControl(null, null),\n        prdBonus: new forms_1.FormControl(null, null),\n        renewalCommission: new forms_1.FormControl(null, null),\n        overridingCommission: new forms_1.FormControl(null, null),\n        otherNonPayable: new forms_1.FormControl(null, null),\n        totalPayableCommission: new forms_1.FormControl(null, null)\n      };\n    } else {\n      //if it tallies, use result from db\n      formObj = {\n        yrmth: dataEntry?.yrmth,\n        yrmthReCon: new forms_1.FormControl(dataEntry?.yrmthReCon, null),\n        firstYrCommission: new forms_1.FormControl(dataEntry?.firstYrCommission, null),\n        singlePremium: new forms_1.FormControl(dataEntry?.singlePremium, null),\n        prdCommission: new forms_1.FormControl(dataEntry?.prdCommission, null),\n        generalInsurance: new forms_1.FormControl(dataEntry?.generalInsurance, null),\n        otherCommission: new forms_1.FormControl(dataEntry?.otherCommission, null),\n        prdBonus: new forms_1.FormControl(dataEntry?.prdBonus, null),\n        renewalCommission: new forms_1.FormControl(dataEntry?.renewalCommission, null),\n        overridingCommission: new forms_1.FormControl(dataEntry?.overridingCommission, null),\n        otherNonPayable: new forms_1.FormControl(dataEntry?.otherNonPayable, null),\n        totalPayableCommission: new forms_1.FormControl(0, null)\n      };\n    }\n    return formBuilder.group(formObj);\n  }\n  static mapInsurAveFormGroupToWD(fg, obj, dateUtilsService) {\n    const dataList = [];\n    const annualIncomeDtoList = [];\n    const insurAveWD = {\n      id: fg.get('id')?.value,\n      workingDataId: obj.workingDataId,\n      year: fg?.get('year')?.value || obj.year,\n      consolidated: fg?.get('consolidated')?.value,\n      claimNip: fg?.get('footerGroup.claimNip')?.value,\n      archiveDt: obj.archiveDt,\n      dataList,\n      eligibleMthCount: fg.get('eligibleMthCount').value,\n      prdnBonusDivisor: fg.get('prdnBonusDivisor').value,\n      workingDataTypeCode: obj.workingDataTypeCode,\n      startYrmth: fg.get('startYrmth').value,\n      endYrmth: fg.get('endYrmth').value,\n      annualIncomeList: annualIncomeDtoList\n    };\n    console.log(\"the fgra\", fg);\n    const yrmthList = fg.get('yrmthList').value;\n    const subYrMthList = yrmthList.slice(6 - fg.get('eligibleMthCount').value);\n    console.log('sub yr mmth', subYrMthList);\n    if (fg !== undefined && fg !== null) {\n      let yrmthFG;\n      if (fg.get('consolidated').value) {\n        yrmthFG = fg.get('incomeTaxInsurArrayConsol').get('consolidated');\n        const subWD = {\n          firstYrCommission: yrmthFG.get(\"firstYrCommission\").value,\n          singlePremium: yrmthFG.get(\"singlePremium\").value,\n          prdCommission: yrmthFG.get(\"prdCommission\").value,\n          generalInsurance: yrmthFG.get(\"generalInsurance\").value,\n          otherCommission: yrmthFG.get(\"otherCommission\").value,\n          prdBonus: yrmthFG.get(\"prdBonus\").value,\n          renewalCommission: yrmthFG.get(\"renewalCommission\").value,\n          overridingCommission: yrmthFG.get(\"overridingCommission\").value,\n          otherNonPayable: yrmthFG.get(\"otherNonPayable\").value\n        };\n        dataList.push(subWD);\n      } else {\n        subYrMthList.forEach(key => {\n          yrmthFG = fg.get('incomeTaxInsurArrayMthly').get(key);\n          const subWD = {\n            yrmth: yrmthFG.get(\"yrmthReCon\").value,\n            firstYrCommission: yrmthFG.get(\"firstYrCommission\").value,\n            singlePremium: yrmthFG.get(\"singlePremium\").value,\n            prdCommission: yrmthFG.get(\"prdCommission\").value,\n            generalInsurance: yrmthFG.get(\"generalInsurance\").value,\n            otherCommission: yrmthFG.get(\"otherCommission\").value,\n            prdBonus: yrmthFG.get(\"prdBonus\").value,\n            renewalCommission: yrmthFG.get(\"renewalCommission\").value,\n            overridingCommission: yrmthFG.get(\"overridingCommission\").value,\n            otherNonPayable: yrmthFG.get(\"otherNonPayable\").value\n          };\n          dataList.push(subWD);\n        });\n      }\n      const annualIncomeListFA = fg.get('annualIncomeList');\n      annualIncomeListFA.controls.forEach(control => {\n        const annualIncomeDto = {\n          workingDataId: obj.workingDataId,\n          seq: annualIncomeDtoList.length + 1,\n          source: control.get('source').value,\n          assessment: dateUtilsService.isValid(control.get('assessment').value) ? dateUtilsService.convertDateToStr(control.get('assessment').value, \"DD-MM-YYYY\") : null,\n          acctgStartDate: dateUtilsService.isValid(control.get('acctgPeriodStrt').value) ? dateUtilsService.convertDateToStr(control.get('acctgPeriodStrt').value, \"DD-MM-YYYY\") : null,\n          acctgEndDate: dateUtilsService.isValid(control.get('acctgPeriodEnd').value) ? dateUtilsService.convertDateToStr(control.get('acctgPeriodEnd').value, \"DD-MM-YYYY\") : null,\n          occupationNature: control.get('occupationNature').value,\n          revenue: control.get('revenue').value,\n          adjProfit: control.get('adjProfit').value\n        };\n        annualIncomeDtoList.push(annualIncomeDto);\n      });\n    }\n    console.log(\"whole saved is\", insurAveWD);\n    return insurAveWD;\n  }\n  static mapInsurAveWDToFormGroup(insurAveWD, formBuilder, dateUtilsService) {\n    const insurAveFormGroup = formBuilder.group({\n      workingDataId: new forms_1.FormControl(insurAveWD.workingDataId),\n      id: new forms_1.FormControl(insurAveWD.id, null),\n      consolidated: new forms_1.FormControl(insurAveWD.consolidated, null),\n      eligibleMthCount: new forms_1.FormControl(insurAveWD.eligibleMthCount, null),\n      prdnBonusDivisor: new forms_1.FormControl(insurAveWD.prdnBonusDivisor, null),\n      incomeTaxInsurArrayMthly: formBuilder.group({}),\n      incomeTaxInsurArrayConsol: formBuilder.group({}),\n      captionGroup: formBuilder.group({\n        radioOption: new forms_1.FormControl(insurAveWD.consolidated ? \"CON\" : \"MTH\", null)\n      }),\n      footerGroup: formBuilder.group({\n        claimNip: new forms_1.FormControl(insurAveWD.claimNip, null)\n      }),\n      annualIncomeList: new forms_1.FormArray([]),\n      yrmthList: new forms_1.FormControl(null, null),\n      startYrmth: new forms_1.FormControl('', null),\n      endYrmth: new forms_1.FormControl('', null)\n    });\n    InsuranceAvgIncomeComponent.staticGenerateYrMth(insurAveWD, dateUtilsService, insurAveFormGroup.get('yrmthList'), insurAveFormGroup.get('startYrmth'), insurAveFormGroup.get('endYrmth'));\n    let dataRecon = [];\n    const newDataList = [];\n    if (insurAveWD.consolidated === true) {\n      //expect 1\n      if (insurAveWD.dataList) {\n        insurAveFormGroup.get('captionGroup.radioOption').setValue('CON');\n        // construct populated for consolidated view\n        dataRecon = InsuranceAvgIncomeComponent.staticConstructConsolidatedHeaderData(insurAveWD.dataList, true, false, false, insurAveFormGroup.get('yrmthList').value);\n        InsuranceAvgIncomeComponent.staticConstructForm(dataRecon, insurAveFormGroup.get('incomeTaxInsurArrayConsol'), formBuilder, insurAveFormGroup);\n        // construct empty for mthly view\n        dataRecon = InsuranceAvgIncomeComponent.staticConstructConsolidatedHeaderData(newDataList, false, true, false, insurAveFormGroup.get('yrmthList').value);\n        InsuranceAvgIncomeComponent.staticConstructForm(newDataList, insurAveFormGroup.get('incomeTaxInsurArrayMthly'), formBuilder, insurAveFormGroup);\n      }\n    } else {\n      //list of mthly records\n      if (insurAveWD.dataList) {\n        insurAveFormGroup.get('captionGroup.radioOption').setValue('MTH');\n        // construct populated for mthly view\n        dataRecon = InsuranceAvgIncomeComponent.staticConstructConsolidatedHeaderData(insurAveWD.dataList, false, false, false, insurAveFormGroup.get('yrmthList').value);\n        InsuranceAvgIncomeComponent.staticConstructForm(dataRecon, insurAveFormGroup.get('incomeTaxInsurArrayMthly'), formBuilder, insurAveFormGroup);\n        //construct empty for consolidated view\n        dataRecon = InsuranceAvgIncomeComponent.staticConstructConsolidatedHeaderData(newDataList, true, true, false, insurAveFormGroup.get('yrmthList').value);\n        InsuranceAvgIncomeComponent.staticConstructForm(newDataList, insurAveFormGroup.get('incomeTaxInsurArrayConsol'), formBuilder, insurAveFormGroup);\n      }\n    }\n    insurAveFormGroup.get('footerGroup.claimNip').setValue(insurAveWD?.claimNip);\n    //set eligible mth divisor and prdn bonus divisor\n    insurAveFormGroup.get('eligibleMthCount').setValue(insurAveWD?.eligibleMthCount);\n    insurAveFormGroup.get('prdnBonusDivisor').setValue(insurAveWD?.prdnBonusDivisor);\n    insurAveFormGroup.get('consolidated').setValue(insurAveWD?.consolidated);\n    insurAveWD.annualIncomeList.forEach(annualIncomeWD => {\n      const annualIncomeFormGroup = annual_income_component_1.AnnualIncomeComponent.mapAnnualIncomeWDToFormGroup(annualIncomeWD, formBuilder, dateUtilsService);\n      insurAveFormGroup.get('annualIncomeList').push(annualIncomeFormGroup);\n    });\n    return insurAveFormGroup;\n  }\n  static staticGenerateYrMth(dataSet, dateUtilsService, yrmthListCtrl, startYrmthCtrl, endYrmthCtrl) {\n    let claimStartDt;\n    let claimEndDt;\n    const colMthRange = [];\n    let yrmthList = [];\n    if (dataSet) {\n      const dateFormat = \"DD-MM-YYYY\";\n      const claimStartYrMth = dateUtilsService.convertStrToDate(dataSet?.startYrmth, dateFormat);\n      const claimEndYrMth = dateUtilsService.convertStrToDate(dataSet.endYrmth, dateFormat);\n      claimStartDt = (0, moment_1.default)(new Date(claimStartYrMth.getFullYear(), claimStartYrMth.getMonth(), 1));\n      claimEndDt = (0, moment_1.default)(new Date(claimEndYrMth.getFullYear(), +claimEndYrMth.getMonth() + 1, 0));\n      const colStartDt = claimEndDt.clone().subtract(5, 'months');\n      const colEndDt = claimEndDt.clone();\n      for (let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')) {\n        colMthRange.push(mth.format(\"DD-MM-YYYY\"));\n      }\n      yrmthList = colMthRange.map(x => (0, moment_1.default)(dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\n    }\n    const cloneYrmthList = JSON.parse(JSON.stringify(yrmthList));\n    yrmthListCtrl.setValue(yrmthList);\n    startYrmthCtrl.setValue(\"01-\".concat(cloneYrmthList[0]));\n    endYrmthCtrl.setValue(\"01-\".concat(cloneYrmthList[cloneYrmthList.length - 1]));\n  }\n  static staticConstructForm(dataList, arrformGroup, formBuilder, aveInsurForm) {\n    //heck solution to add row records/row headers\n    console.log(\"the real formgroup is\", arrformGroup);\n    if (arrformGroup === aveInsurForm.get('incomeTaxInsurArrayConsol')) {\n      arrformGroup.addControl('consolidated', InsuranceAvgIncomeComponent.staticAddRow(dataList[0], formBuilder));\n    } else {\n      dataList.forEach(x => {\n        // formGroup.push(this.addRow(x));\n        arrformGroup.addControl(x?.yrmthReCon, InsuranceAvgIncomeComponent.staticAddRow(x, formBuilder));\n      });\n    }\n  }\n  static staticConstructConsolidatedHeaderData(dataList, consolidated, empty, newForm, yrmthList) {\n    const sanitizedDataList = [];\n    let sortedData;\n    if (empty || newForm || consolidated) {\n      yrmthList.forEach((yrmth, colIndex) => {\n        dataList.push({\n          yrmthReCon: yrmth\n        });\n      });\n      sortedData = dataList;\n    } else {\n      yrmthList.forEach(yrmth => {\n        for (let i = 0; i < dataList.length; i++) {\n          if (dataList[i].yrmth === yrmth && sanitizedDataList.findIndex(x => x.yrmth === yrmth) < 0) {\n            sanitizedDataList.push(dataList[i]);\n          }\n        }\n      });\n      yrmthList.forEach(yrmth => {\n        const index = sanitizedDataList.findIndex(x => x.yrmth === yrmth);\n        if (index < 0) {\n          sanitizedDataList.push({\n            yrmthReCon: yrmth\n          });\n        } else {\n          sanitizedDataList[index].yrmthReCon = yrmth;\n        }\n      });\n      sortedData = sanitizedDataList.sort((a, b) => (0, moment_1.default)(a.yrmthReCon, \"MM-YYYY\") < (0, moment_1.default)(b.yrmthReCon, \"MM-YYYY\") ? -1 : 1);\n    }\n    return sortedData;\n  }\n  ngOnInit() {\n    // this.captionGroup = this.formBuilder.group({\n    //   radioOption: new FormControl(this.radioOptions[0].key, null)\n    // });\n    this.cols = [\"First Year Commission\", \"Single Premium\", \"Production Commission\", \"General Insurance\", \"Other Commission\", \"Production Bonus\", \"Total Payable Commission\", \"Renewal Commission\", \"Overriding Commission\", \"Other Non-Payable Commission\", \"Total Non-Payable Components\", \"Total Commission\"];\n  }\n  ngOnChanges(changes) {\n    if (changes.irasDetails?.currentValue) {\n      console.log(\"the iras\", changes.irasDetails.currentValue);\n      this.currIrasDetails = changes.irasDetails?.currentValue;\n    }\n    if (changes.trgStartDte) {\n      console.log(\"current range is\", this.incomeTaxInsurArrayMthly.controls);\n      this.generateYrMth(null);\n    }\n    if (changes.seHardCopyDetails?.currentValue) {\n      this.currHardCopyDetails = changes.seHardCopyDetails.currentValue;\n      // this.constructDynamicMthRange();\n      this.constructSourceYearOptions();\n      this.retrieveReferenceClaimNip();\n    }\n    if (changes.selectedWDOption?.currentValue) {\n      this.currSelectedOption = changes.selectedWDOption?.currentValue;\n      console.log(\"changed selection\", this.currSelectedOption);\n      //on selection, yr mth list has to be remapped\n      this.yrmthList = [];\n      this.retrieveInsurWD();\n    }\n  }\n  tester() {\n    console.log(\"pika\", this.aveInsurForm);\n  }\n  getInnerFormControl(fg, controlName, innerControlName) {\n    return fg?.get(controlName)?.get(innerControlName);\n  }\n  constructSourceYearOptions() {\n    const claimEndDt = this.dateUtilsService.convertStrToDate(this.currHardCopyDetails.trgEndDte, \"DD-MM-YYYY\");\n    this.sourceYrOptions = [{\n      name: 'NA ' + this.dateUtilsService.convertMomentToStr((0, moment_1.default)(claimEndDt).subtract(1, 'years'), \"YY\"),\n      key: this.dateUtilsService.convertMomentToStr((0, moment_1.default)(claimEndDt).subtract(1, 'years'), \"YY\")\n    }, {\n      name: 'NA ' + this.dateUtilsService.convertMomentToStr((0, moment_1.default)(claimEndDt), \"YY\"),\n      key: this.dateUtilsService.convertMomentToStr((0, moment_1.default)(claimEndDt), \"YY\")\n    }, {\n      name: 'NA ' + this.dateUtilsService.convertMomentToStr((0, moment_1.default)(claimEndDt).add(1, 'years'), \"YY\"),\n      key: this.dateUtilsService.convertMomentToStr((0, moment_1.default)(claimEndDt).add(1, 'years'), \"YY\")\n    }];\n    console.log('the year options', this.sourceYrOptions);\n  }\n  generateYrMth(dataSet) {\n    //base range is 6 mths from backend, other wise is 6 mths from claim start mth - 6 to claim start mth -1\n    let claimStartDt;\n    let claimEndDt;\n    if (dataSet) {\n      console.log(\"dataSet\", dataSet);\n      const claimStartYrMth = this.dateUtilsService.convertStrToDate(dataSet?.startYrmth, this.dateFormat);\n      const claimEndYrMth = this.dateUtilsService.convertStrToDate(dataSet.endYrmth, this.dateFormat);\n      claimStartDt = (0, moment_1.default)(new Date(claimStartYrMth.getFullYear(), claimStartYrMth.getMonth(), 1));\n      claimEndDt = (0, moment_1.default)(new Date(claimEndYrMth.getFullYear(), +claimEndYrMth.getMonth() + 1, 0));\n      const colStartDt = claimEndDt.clone().subtract(+this.aveInsurForm?.get('eligibleMthCount').value - 1, 'months');\n      const colEndDt = claimEndDt.clone();\n      this.colMthRange = [];\n      for (let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')) {\n        this.colMthRange.push(mth.format(\"DD-MM-YYYY\"));\n      }\n      this.yrmthList = this.colMthRange.map(x => (0, moment_1.default)(this.dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\n      console.log(\"yr mth list\", this.yrmthList);\n    }\n    //adds more form control if needed\n    if (this.trgStartDte !== undefined && this.trgStartDte !== null) {\n      console.log(\"incomign trg date\", this.trgStartDte);\n      claimStartDt = this.dateUtilsService.convertStrToMoment(this.trgStartDte, this.dateFormat).subtract(6, 'months');\n      claimEndDt = this.dateUtilsService.convertStrToMoment(this.trgStartDte, this.dateFormat).subtract(1, 'months');\n      // const colStartDt = claimEndDt.clone().subtract(+this.aveInsurForm?.get('eligibleMthCount').value - 1, 'months');\n      // const colEndDt = claimEndDt.clone();\n      const colStartDt = claimStartDt.clone();\n      const colEndDt = claimEndDt.clone();\n      this.colMthRange = [];\n      for (let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')) {\n        this.colMthRange.push(mth.format(\"DD-MM-YYYY\"));\n      }\n      this.yrmthList = this.colMthRange.map(x => (0, moment_1.default)(this.dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\n      console.log(\"yr mth list\", this.yrmthList);\n      this.adjustFormArray();\n    }\n    const cloneYrmthList = JSON.parse(JSON.stringify(this.yrmthList));\n    console.log(\"clone is\", cloneYrmthList);\n    this.aveInsurForm.get('yrmthList').setValue(cloneYrmthList);\n    this.aveInsurForm.get('startYrmth').setValue(\"01-\".concat(cloneYrmthList[0]));\n    this.aveInsurForm.get('endYrmth').setValue(\"01-\".concat(cloneYrmthList[cloneYrmthList.length - 1]));\n  }\n  adjustFormArray() {\n    const existingYrMthControls = Object.keys(this.incomeTaxInsurArrayMthly.controls);\n    const diffColHeaders = this.yrmthList.filter(x => !existingYrMthControls.includes(x));\n    console.log(\"added new\", diffColHeaders);\n    if (this.incomeTaxInsurArrayMthly.controls) {\n      let formObj;\n      diffColHeaders.forEach(yrmth => {\n        formObj = {\n          yrmth,\n          yrmthReCon: new forms_1.FormControl(yrmth, null),\n          firstYrCommission: new forms_1.FormControl(null, null),\n          singlePremium: new forms_1.FormControl(null, null),\n          prdCommission: new forms_1.FormControl(null, null),\n          generalInsurance: new forms_1.FormControl(null, null),\n          otherCommission: new forms_1.FormControl(null, null),\n          prdBonus: new forms_1.FormControl(null, null),\n          renewalCommission: new forms_1.FormControl(null, null),\n          overridingCommission: new forms_1.FormControl(null, null),\n          otherNonPayable: new forms_1.FormControl(null, null),\n          totalPayableCommission: new forms_1.FormControl(null, null)\n        };\n        this.incomeTaxInsurArrayMthly.addControl(yrmth, this.formBuilder.group(formObj));\n      });\n      console.log(\"new range is filtered\", this.incomeTaxInsurArrayMthly.controls);\n    }\n  }\n  get incomeTaxInsurArrayMthly() {\n    return this.aveInsurForm?.get('incomeTaxInsurArrayMthly');\n  }\n  get incomeTaxInsurArrayConsol() {\n    return this.aveInsurForm?.get('incomeTaxInsurArrayConsol');\n  }\n  get annualIncomeList() {\n    return this.aveInsurForm.get('annualIncomeList');\n  }\n  get footerGroup() {\n    return this.aveInsurForm.get('footerGroup');\n  }\n  constructForm(dataList, arrformGroup) {\n    //heck solution to add row records/row headers\n    if (arrformGroup === this.incomeTaxInsurArrayConsol) {\n      arrformGroup.addControl('consolidated', this.addRow(dataList[0]));\n    } else {\n      dataList.forEach(x => {\n        // formGroup.push(this.addRow(x));\n        arrformGroup.addControl(x?.yrmthReCon, this.addRow(x));\n      });\n    }\n  }\n  addRow(dataEntry) {\n    //does validation to makesure the yrmth tallies to yrmthRecon other wise default to 0\n    let formObj;\n    if (dataEntry?.yrmthReCon !== undefined && dataEntry?.yrmth !== dataEntry?.yrmthReCon) {\n      formObj = {\n        yrmth: dataEntry?.yrmth,\n        yrmthReCon: new forms_1.FormControl(dataEntry?.yrmthReCon, null),\n        firstYrCommission: new forms_1.FormControl(null, null),\n        singlePremium: new forms_1.FormControl(null, null),\n        prdCommission: new forms_1.FormControl(null, null),\n        generalInsurance: new forms_1.FormControl(null, null),\n        otherCommission: new forms_1.FormControl(null, null),\n        prdBonus: new forms_1.FormControl(null, null),\n        renewalCommission: new forms_1.FormControl(null, null),\n        overridingCommission: new forms_1.FormControl(null, null),\n        otherNonPayable: new forms_1.FormControl(null, null),\n        totalPayableCommission: new forms_1.FormControl(null, null)\n      };\n    } else {\n      //if it tallies, use result from db\n      formObj = {\n        yrmth: dataEntry?.yrmth,\n        yrmthReCon: new forms_1.FormControl(dataEntry?.yrmthReCon, null),\n        firstYrCommission: new forms_1.FormControl(dataEntry?.firstYrCommission, null),\n        singlePremium: new forms_1.FormControl(dataEntry?.singlePremium, null),\n        prdCommission: new forms_1.FormControl(dataEntry?.prdCommission, null),\n        generalInsurance: new forms_1.FormControl(dataEntry?.generalInsurance, null),\n        otherCommission: new forms_1.FormControl(dataEntry?.otherCommission, null),\n        prdBonus: new forms_1.FormControl(dataEntry?.prdBonus, null),\n        renewalCommission: new forms_1.FormControl(dataEntry?.renewalCommission, null),\n        overridingCommission: new forms_1.FormControl(dataEntry?.overridingCommission, null),\n        otherNonPayable: new forms_1.FormControl(dataEntry?.otherNonPayable, null),\n        totalPayableCommission: new forms_1.FormControl(0, null)\n      };\n    }\n    return this.formBuilder.group(formObj);\n  }\n  enableCopytoItem() {\n    const claimItemList = this.itemDetailsSection.itemForm?.get('otherSEItemArr');\n    let itxItem = null;\n    if (claimItemList.length > 0) {\n      itxItem = claimItemList?.controls.filter(x => x.get('itemType').value === 'AVE')[0];\n      return itxItem?.get('latestStatus').value === this.PEND_VERIFY_STATUS || itxItem?.get('latestStatus').value === this.PEND_ACTION_STATUS;\n    } else return false;\n  }\n  copyToItem(event) {\n    this.totalAmtPayEvent.emit(this.getTotalAmtPayable());\n  }\n  confirmFile(event, key) {\n    console.log(\"clicing option\");\n    this.nspConfirmService.onConfirmPopupMsg(event, \"All Working Data fields will be cleared\", key, null, () => {\n      console.log(\"confirm change option\");\n    });\n  }\n  confirmSwitch(e, type) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const value = e.target.value;\n      console.log(\"incoming value\", value);\n      if (value !== _this.aveInsurForm.get('captionGroup.radioOption').value) {\n        e.preventDefault();\n        const confirm = yield _this.showConfirm(e, type);\n        if (!confirm) {\n          return;\n        } else {\n          _this.aveInsurForm.get('captionGroup.radioOption').setValue(value);\n          _this.aveInsurForm.get('consolidated').setValue(value === 'CON');\n          _this.clearForm(value);\n        }\n      }\n    })();\n  }\n  showConfirm(e, type) {\n    return new Promise(resolve => {\n      this.confirmationService.confirm({\n        target: e.target,\n        message: 'All Working Data fields will be cleared',\n        header: 'Confirmation',\n        key: type,\n        icon: 'pi pi-exclamation-triangle',\n        acceptLabel: 'Proceed',\n        rejectLabel: 'Cancel',\n        accept() {\n          return resolve(true);\n        }\n      });\n    });\n  }\n  clearForm(radioKey) {\n    let yrmthFG;\n    if (radioKey === \"MTH\") {\n      Object.keys(this.incomeTaxInsurArrayConsol.controls).forEach(key => {\n        yrmthFG = this.incomeTaxInsurArrayConsol.get(key);\n        yrmthFG.get('firstYrCommission').setValue(0);\n        yrmthFG.get('singlePremium').setValue(0);\n        yrmthFG.get('prdCommission').setValue(0);\n        yrmthFG.get('generalInsurance').setValue(0);\n        yrmthFG.get('otherCommission').setValue(0);\n        yrmthFG.get('prdBonus').setValue(0);\n        yrmthFG.get('renewalCommission').setValue(0);\n        yrmthFG.get('overridingCommission').setValue(0);\n        yrmthFG.get('otherNonPayable').setValue(0);\n      });\n    } else {\n      Object.keys(this.incomeTaxInsurArrayMthly.controls).forEach(key => {\n        console.log(\"key is\", key);\n        yrmthFG = this.incomeTaxInsurArrayMthly.get(key);\n        console.log(\"yrt mth\", yrmthFG);\n        yrmthFG.get('firstYrCommission').setValue(0);\n        yrmthFG.get('singlePremium').setValue(0);\n        yrmthFG.get('prdCommission').setValue(0);\n        yrmthFG.get('generalInsurance').setValue(0);\n        yrmthFG.get('otherCommission').setValue(0);\n        yrmthFG.get('prdBonus').setValue(0);\n        yrmthFG.get('renewalCommission').setValue(0);\n        yrmthFG.get('overridingCommission').setValue(0);\n        yrmthFG.get('otherNonPayable').setValue(0);\n      });\n    }\n  }\n  isActive() {\n    return this.currSelectedOption?.obj?.archiveDt === 0;\n  }\n  getFiltered(unfilteredFA) {\n    return unfilteredFA.filter(x => x.value.yrmthReCon !== null).filter(item => this.yrmthList.includes(item.value.yrmthReCon));\n  }\n  retrieveInsurWD() {\n    if (!this.currSelectedOption.changes && !this.currSelectedOption.newWD) {\n      let params = new http_1.HttpParams();\n      params = params.append(\"workingDataId\", this.currSelectedOption?.obj.workingDataId);\n      this.aveInsurForm = this.formBuilder.group({\n        id: new forms_1.FormControl(null, null),\n        workingDataId: new forms_1.FormControl('', null),\n        consolidated: new forms_1.FormControl(false, null),\n        eligibleMthCount: new forms_1.FormControl(6, null),\n        prdnBonusDivisor: new forms_1.FormControl(12, null),\n        incomeTaxInsurArrayMthly: this.formBuilder.group({}),\n        incomeTaxInsurArrayConsol: this.formBuilder.group({}),\n        captionGroup: this.formBuilder.group({\n          radioOption: new forms_1.FormControl(this.radioOptions[0].key, null)\n        }),\n        footerGroup: this.formBuilder.group({\n          claimNip: new forms_1.FormControl(0, null)\n        }),\n        annualIncomeList: new forms_1.FormArray([]),\n        yrmthList: new forms_1.FormControl([], null),\n        startYrmth: new forms_1.FormControl('', null),\n        endYrmth: new forms_1.FormControl('', null)\n      });\n      this.seClaimService.retrieveInsurWD({\n        params\n      }).subscribe(resp => {\n        if (resp) {\n          if (resp.status === 200 && resp.body.data) {\n            this.generateYrMth(resp.body.data);\n            this.populateAveInsurForm(resp.body.data, false);\n            this.valueChangeSubscribe();\n          }\n        }\n      }, error => {\n        console.log(\"error is\" + String(error?.error?.error_desc));\n        this.toastService.error(String(error?.error?.error_desc));\n      });\n    } else if (this.currSelectedOption.changes && !this.currSelectedOption.newWD) {\n      console.log(\"calling from exist\");\n      this.aveInsurForm = this.workingDataWithChanges.get(this.currSelectedOption?.obj?.workingDataId).formGroup;\n      this.yrmthList = this.aveInsurForm.get('yrmthList').value;\n      // this.generateYrMth(null);\n      this.setRadioOption(this.aveInsurForm.get('consolidated').value);\n      console.log(\"get from changes WD Map\", this.aveInsurForm);\n      this.loading = false;\n    } else if (this.currSelectedOption.newWD) {\n      console.log(\"get from new WD Map\");\n      console.log(\"selected key\", this.currSelectedOption?.key.toString());\n      this.aveInsurForm = this.newUnsavedWorkingData.get(this.currSelectedOption?.key.toString()).formGroup;\n      if (this.aveInsurForm.get('consolidated')) {\n        this.setRadioOption(this.aveInsurForm.get('consolidated').value);\n        //defaulted to monthly\n      } else this.setRadioOption(false);\n      this.loading = false;\n    }\n  }\n  setRadioOption(consolidated) {\n    if (consolidated) {\n      this.aveInsurForm.get('captionGroup.radioOption').setValue('CON');\n    } else this.aveInsurForm.get('captionGroup.radioOption').setValue('MTH');\n  }\n  populateAveInsurForm(dataSet, newForm) {\n    this.dataSet = dataSet;\n    const newDataList = [];\n    let dataRecon = [];\n    if (this.dataSet.consolidated === true) {\n      //expect 1\n      if (this.dataSet.dataList) {\n        this.aveInsurForm.get('captionGroup.radioOption').setValue('CON');\n        // construct populated for consolidated view\n        dataRecon = this.constructConsolidatedHeaderData(this.dataSet.dataList, true, false, newForm);\n        this.constructForm(dataRecon, this.incomeTaxInsurArrayConsol);\n        // construct empty for mthly view\n        this.constructConsolidatedHeaderData(newDataList, false, true, newForm);\n        this.constructForm(newDataList, this.incomeTaxInsurArrayMthly);\n      } else {\n        console.log(\"empty\");\n      }\n    } else {\n      //list of mthly records\n      if (this.dataSet.dataList) {\n        this.aveInsurForm.get('captionGroup.radioOption').setValue('MTH');\n        // construct populated for mthly view\n        dataRecon = this.constructConsolidatedHeaderData(this.dataSet.dataList, false, false, newForm);\n        this.constructForm(dataRecon, this.incomeTaxInsurArrayMthly);\n        //construct empty for consolidated view\n        this.constructConsolidatedHeaderData(newDataList, true, true, newForm);\n        this.constructForm(newDataList, this.incomeTaxInsurArrayConsol);\n      }\n    }\n    this.aveInsurForm.get('footerGroup.claimNip').setValue(dataSet?.claimNip);\n    this.constructAnnualIncomeForm(dataSet.annualIncomeList);\n    //set eligible mth divisor and prdn bonus divisor\n    this.aveInsurForm.get('eligibleMthCount').setValue(dataSet.eligibleMthCount);\n    this.aveInsurForm.get('prdnBonusDivisor').setValue(dataSet.prdnBonusDivisor);\n    this.aveInsurForm.get('consolidated').setValue(this.dataSet.consolidated);\n    this.loading = false;\n    return this.aveInsurForm;\n  }\n  valueChangeSubscribe() {\n    // this.subscription = this.captionGroup.get('radioOption').valueChanges.subscribe(x=>{\n    //   this.aveInsurForm.get(\"consolidated\").setValue(this.captionGroup.get('radioOption').value===\"CON\")\n    // })\n    this.aveInsurForm.valueChanges.subscribe(changes => {\n      console.log(\"has changes\", changes);\n      this.currSelectedOption.changes = true;\n      this.saveSEClaimRequest.workingDataSectionInd = true;\n      if (!this.workingDataWithChanges.has(this.currSelectedOption?.obj?.workingDataId)) {\n        console.log(\"puting to id\", this.currSelectedOption?.obj?.workingDataId);\n        console.log(\"during subscribe\", this.aveInsurForm.controls);\n        this.workingDataWithChanges.set(this.currSelectedOption?.obj?.workingDataId, {\n          obj: this.currSelectedOption.obj,\n          formGroup: this.aveInsurForm\n        });\n        // this.currSelectedOption.newArchived = false;\n      }\n    });\n  }\n\n  constructAnnualIncomeForm(annualIncomeList) {\n    if (annualIncomeList.length > 0) {\n      annualIncomeList.forEach(annualIncomeWD => {\n        const annualIncomeFormGroup = annual_income_component_1.AnnualIncomeComponent.mapAnnualIncomeWDToFormGroup(annualIncomeWD, this.formBuilder, this.dateUtilsService);\n        // const annualIncomeFormGroup: FormGroup = this.formBuilder.group({\n        //   seq: new FormControl(annualIncomeWD.seq, null),\n        //   source: new FormControl(annualIncomeWD.source, null),\n        //   assessment: new FormControl(annualIncomeWD.assessment === null? null :this.dateUtilsService.convertStrToDate(annualIncomeWD.assessment, \"DD-MM-YYYY\"), null),\n        //   acctgPeriodStrt: new FormControl(annualIncomeWD.acctgStartDate === null? null :this.dateUtilsService.convertStrToDate(annualIncomeWD.acctgStartDate, \"DD-MM-YYYY\"), null),\n        //   acctgPeriodEnd: new FormControl(annualIncomeWD.acctgEndDate === null? null :this.dateUtilsService.convertStrToDate(annualIncomeWD.acctgEndDate, \"DD-MM-YYYY\"), null),\n        //   occupationNature: new FormControl(annualIncomeWD.occupationNature, null),\n        //   revenue: new FormControl(annualIncomeWD.revenue, null),\n        //   adjProfit: new FormControl(annualIncomeWD.adjProfit, null),\n        // });\n        this.aveInsurForm.get('annualIncomeList').push(annualIncomeFormGroup);\n      });\n    }\n  }\n  refreshOtherClaim() {\n    let params = new http_1.HttpParams();\n    params = params.append(\"nric\", this.currHardCopyDetails?.headerDto.nsManNric);\n    params = params.append(\"yrmthList\", JSON.stringify(this.getYrmthList()));\n    params = params.append(\"caseId\", this.currHardCopyDetails?.headerDto.caseId);\n    this.seClaimService.retrieveRefreshOtherInsurClaims({\n      params\n    }).subscribe(resp => {\n      if (resp) {\n        if (resp.status === 200 && resp.body.data) {\n          const refreshedArr = [];\n          resp.body.data.forEach(y => {\n            const ctrl = this.incomeTaxInsurArrayMthly.get(y.yrmth);\n            this.refreshOtherClaimSetValue(ctrl, y);\n            refreshedArr.push(y.yrmth);\n          });\n          const existingYrMthControls = Object.keys(this.incomeTaxInsurArrayMthly.controls);\n          const unrefreshed = refreshedArr.filter(x => !existingYrMthControls.includes(x));\n          unrefreshed.forEach(unrefreshMths => {\n            this.refreshOtherClaimSetValue(this.incomeTaxInsurArrayConsol.get(unrefreshMths), null);\n          });\n        }\n      }\n    });\n  }\n  refreshOtherClaimSetValue(ctrl, dataR) {\n    if (ctrl) {\n      ctrl.get('firstYrCommission').setValue(dataR.firstYrCommission || null);\n      ctrl.get('generalInsurance').setValue(dataR.generalInsurance || null);\n      ctrl.get('otherCommission').setValue(dataR.otherCommission || null);\n      ctrl.get('otherNonPayable').setValue(dataR.otherNonPayable || null);\n      ctrl.get('overridingCommission').setValue(dataR.overridingCommission || null);\n      ctrl.get('prdBonus').setValue(dataR.prdBonus || null);\n      ctrl.get('prdCommission').setValue(dataR.prdCommission || null);\n      ctrl.get('renewalCommission').setValue(dataR.renewalCommission || null);\n      ctrl.get('singlePremium').setValue(dataR.singlePremium || null);\n    }\n  }\n  enableRefreshOClaim() {\n    return this.aveInsurForm.get('captionGroup.radioOption').value === 'MTH';\n  }\n  constructConsolidatedHeaderData(dataList, consolidated, empty, newForm) {\n    //logic\n    console.log(\"before data\", dataList);\n    //12 columns of 12 mths from claimstartdate/trgStartDte - 13 mths to trgStartDte - 1 mths\n    const sanitizedDataList = [];\n    let sortedData;\n    if (empty || newForm || consolidated) {\n      console.log(\"before yrmthlist\", this.yrmthList);\n      this.colMthRange.forEach((mth, colIndex) => {\n        dataList.push({\n          yrmthReCon: (0, moment_1.default)(this.dateUtilsService.convertStrToDate(mth, \"DD-MM-YYYY\")).format(\"MM-YYYY\")\n        });\n      });\n      sortedData = dataList;\n    } else {\n      this.yrmthList.forEach(yrmth => {\n        for (let i = 0; i < dataList.length; i++) {\n          if (dataList[i].yrmth === yrmth && sanitizedDataList.findIndex(x => x.yrmth === yrmth) < 0) {\n            sanitizedDataList.push(dataList[i]);\n          }\n        }\n      });\n      this.yrmthList.forEach(yrmth => {\n        const index = sanitizedDataList.findIndex(x => x.yrmth === yrmth);\n        if (index < 0) {\n          sanitizedDataList.push({\n            yrmthReCon: yrmth\n          });\n        } else {\n          sanitizedDataList[index].yrmthReCon = yrmth;\n        }\n      });\n      console.log(\"after data\", sanitizedDataList);\n      sortedData = sanitizedDataList.sort((a, b) => (0, moment_1.default)(a.yrmthReCon, \"MM-YYYY\") < (0, moment_1.default)(b.yrmthReCon, \"MM-YYYY\") ? -1 : 1);\n    }\n    console.log(\"sorted data is\", sortedData);\n    return sortedData;\n  }\n  getForm() {\n    console.log(\"rikza\", this.incomeTaxInsurArrayMthly.controls);\n  }\n  getYrmthList() {\n    return this.aveInsurForm.get('yrmthList').value;\n  }\n  // original datalist backcount, if datalist length = 6, colmthrange = 4, backcount with starting index =2 slice through datalist.length\n  //dependent on eligible mths\n  getSumOfCurrRow(formCtrlName) {\n    let sum = 0;\n    let fieldCtrl;\n    this.getYrmthList().slice(this.maxMths - this.aveInsurForm?.get('eligibleMthCount').value, this.maxMths).forEach(yrmth => {\n      fieldCtrl = this.incomeTaxInsurArrayMthly?.get(yrmth)?.get(formCtrlName).value || 0;\n      // fieldCtrl is field level, i.e. firstYrCommission\n      sum += fieldCtrl;\n    });\n    return sum;\n  }\n  getTotalPayableCol(yrmthCtrlName, formArr) {\n    let sum = 0;\n    sum = Number(formArr.get(yrmthCtrlName).get('firstYrCommission').value || 0) + Number(formArr.get(yrmthCtrlName).get('singlePremium').value || 0) + Number(formArr.get(yrmthCtrlName).get('prdCommission').value || 0) + Number(formArr.get(yrmthCtrlName).get('generalInsurance').value || 0) + Number(formArr.get(yrmthCtrlName).get('otherCommission').value || 0) + Number(formArr.get(yrmthCtrlName).get('prdBonus').value || 0);\n    return sum;\n  }\n  getTotalNonPayableCol(yrmthCtrlName, formArr) {\n    let sum = 0;\n    sum = Number(formArr.get(yrmthCtrlName).get('renewalCommission').value) + Number(formArr.get(yrmthCtrlName).get('overridingCommission').value) + Number(formArr.get(yrmthCtrlName).get('otherNonPayable').value);\n    return sum;\n  }\n  getSumOfTotalPayable() {\n    let sum = 0;\n    sum = Number(this.getSumOfCurrRow('firstYrCommission')) + Number(this.getSumOfCurrRow('singlePremium')) + Number(this.getSumOfCurrRow('prdCommission')) + Number(this.getSumOfCurrRow('generalInsurance')) + Number(this.getSumOfCurrRow('otherCommission')) + Number(this.getSumOfCurrRow('prdBonus'));\n    return sum;\n  }\n  getSumOfTotalNonPayable() {\n    let sum = 0;\n    sum = Number(this.getSumOfCurrRow('renewalCommission')) + Number(this.getSumOfCurrRow('overridingCommission')) + Number(this.getSumOfCurrRow('otherNonPayable'));\n    return sum;\n  }\n  roundVal(value) {\n    return Math.round(value);\n  }\n  getOverridingCommPerc() {\n    let rslt = 0;\n    if (this.captionGroup.get('radioOption').value === 'MTH') {\n      rslt = this.getSumOfCurrRow('overridingCommission') / (this.getSumOfTotalNonPayable() + this.getSumOfTotalPayable()) * 100 || 0;\n    } else {\n      rslt = this.incomeTaxInsurArrayConsol.get('consolidated').get('overridingCommission').value / (this.getTotalNonPayableCol('consolidated', this.incomeTaxInsurArrayConsol) + this.getTotalPayableCol('consolidated', this.incomeTaxInsurArrayConsol)) * 100 || 0;\n    }\n    return rslt;\n    // return this.roundVal(this.captionGroup.get('radioOption').value==='MTH'? (this.getSumOfCurrRow('overridingCommission')/this.aveInsurForm?.get('eligibleMthCount').value)/\n    // ((this.getSumOfTotalNonPayable() + this.getSumOfTotalPayable())/this.aveInsurForm?.get('eligibleMthCount').value) * 100:\n    // (this.incomeTaxInsurArrayConsol.get('consolidated').get('overridingCommission').value/this.aveInsurForm?.get('eligibleMthCount').value)/\n    // (this.computeConsolidatedAvgTotalPayable('consolidated',this.incomeTaxInsurArrayConsol) + this.computeConsolidatedAvgTotalNonPayable('consolidated',this.incomeTaxInsurArrayConsol)) * 100);\n  }\n\n  computeConsolidatedAvgTotalPayable(ctrlName, formArr) {\n    let avgSum = 0;\n    avgSum = Number(formArr.get(ctrlName).get('firstYrCommission').value / this.aveInsurForm?.get('eligibleMthCount').value) + Number(formArr.get(ctrlName).get('singlePremium').value / this.aveInsurForm?.get('eligibleMthCount').value) + Number(formArr.get(ctrlName).get('prdCommission').value / this.aveInsurForm?.get('eligibleMthCount').value) + Number(formArr.get(ctrlName).get('generalInsurance').value / this.aveInsurForm?.get('eligibleMthCount').value) + Number(formArr.get(ctrlName).get('otherCommission').value / this.aveInsurForm?.get('eligibleMthCount').value) + Number(formArr.get(ctrlName).get('prdBonus').value / this.aveInsurForm?.get('prdnBonusDivisor').value);\n    return avgSum;\n  }\n  computeConsolidatedAvgTotalNonPayable(ctrlName, formArr) {\n    let avgSum = 0;\n    avgSum = Number(formArr.get(ctrlName).get('renewalCommission').value / this.colMthRange.length) + Number(formArr.get(ctrlName).get('overridingCommission').value / this.colMthRange.length) + Number(formArr.get(ctrlName).get('otherNonPayable').value / this.colMthRange.length);\n    return avgSum;\n  }\n  retrieveReferenceClaimNip() {\n    console.log(\"retrieving reference\");\n    let params = new http_1.HttpParams();\n    params = params.append(\"claimId\", this.currHardCopyDetails?.claimId);\n    params = params.append(\"trgEndYear\", this.dateUtilsService.convertDateToStr(this.dateUtilsService.convertStrToDate(this.currHardCopyDetails.trgEndDte, \"DD-MM-YYYY\"), 'YYYY'));\n    this.seClaimService.retrieveReferenceClaimNip({\n      params\n    }).subscribe(resp => {\n      if (resp) {\n        if (resp.status === 200) {\n          this.setProposedNip(resp.body.data);\n        }\n      }\n    });\n  }\n  setProposedNip(refNip) {\n    if (refNip === undefined || refNip === null) {\n      if (this.getOverridingCommPerc() < 20) {\n        this.proposedNIP = 75;\n      } else {\n        this.proposedNIP = 80;\n      }\n    } else {\n      this.proposedNIP = refNip >= 80 ? 80 : refNip;\n    }\n    console.log(\"proposed NIP is \", this.proposedNIP);\n  }\n  getTotalAmtPayable() {\n    let amtPayable = 0;\n    if (this.captionGroup.get('radioOption').value === 'MTH') {\n      amtPayable = this.aveInsurForm.get('footerGroup.claimNip').value / 100 * this.getSumOfTotalPayable() / this.aveInsurForm?.get('eligibleMthCount').value + 0.42 * this.getSumOfCurrRow('firstYrCommission') / this.aveInsurForm?.get('eligibleMthCount').value;\n    } else {\n      amtPayable = this.aveInsurForm.get('footerGroup.claimNip').value / 100 * this.computeConsolidatedAvgTotalPayable('consolidated', this.incomeTaxInsurArrayConsol) + 0.42 * this.incomeTaxInsurArrayConsol.get('consolidated').get('firstYrCommission').value / this.aveInsurForm?.get('eligibleMthCount').value;\n    }\n    return this.roundVal(amtPayable);\n  }\n  getTotalAmtPayableDesc() {\n    let amtPayableDesc = \"\";\n    if (this.captionGroup.get('radioOption').value === 'MTH') {\n      amtPayableDesc = `${String(this.aveInsurForm.get('footerGroup.claimNip').value)} % * TPC(${String(this.roundVal2Dec(this.getSumOfTotalPayable() / this.aveInsurForm?.get('eligibleMthCount').value))})\n      + 42% * FYC (${this.roundVal2Dec(this.getSumOfCurrRow('firstYrCommission') / this.aveInsurForm?.get('eligibleMthCount').value)}  `;\n    } else {\n      amtPayableDesc = `${String(this.aveInsurForm.get('footerGroup.claimNip').value)} % * TPC(${String(this.roundVal2Dec(this.computeConsolidatedAvgTotalPayable('consolidated', this.incomeTaxInsurArrayConsol)))}) \n      + 42% * FYC ( ${String(this.roundVal2Dec(this.incomeTaxInsurArrayConsol.get('consolidated').get('firstYrCommission').value / this.aveInsurForm?.get('eligibleMthCount').value))}) `;\n    }\n    return amtPayableDesc;\n  }\n  roundVal2Dec(num) {\n    return Math.round((num + Number.EPSILON) * 100) / 100;\n  }\n  isValidNumber(obj) {\n    return !isNaN(obj);\n  }\n  isTradeIncomeMorethanTotalCommision() {\n    let irasRecord;\n    //if actual\n    if (this.irasDetails?.filter(x => x.basis === \"2\").length > 0) {\n      irasRecord = this.irasDetails?.filter(x => x.basis === \"2\")[0];\n      //if provisional\n    } else if (this.irasDetails?.filter(x => x.basis === \"1\").length > 0) {\n      irasRecord = this.irasDetails?.filter(x => x.basis === \"1\")[0];\n    }\n    if (this.aveInsurForm.get('captionGroup.radioOption').value === 'MTH') {\n      return irasRecord?.tradeIncome > this.getSumOfTotalNonPayable() + this.getSumOfTotalPayable();\n    } else {\n      return irasRecord?.tradeIncome > this.getTotalNonPayableCol('consolidated', this.incomeTaxInsurArrayConsol) + this.getTotalPayableCol('consolidated', this.incomeTaxInsurArrayConsol);\n    }\n  }\n  isWorkingDataTotalPayableNotEqualItemApprAmt() {\n    const claimItemList = this.itemDetailsSection.itemForm?.get('otherSEItemArr');\n    let itxItem = null;\n    let annualtotalPayable = 0;\n    if (claimItemList.length > 0) {\n      itxItem = claimItemList?.controls.find(x => x.get('itemType').value === 'AVE');\n      const apprAmt = itxItem?.get('apprAmt')?.value;\n      console.log(\"appr amt in ave is \", apprAmt);\n      if (this.aveInsurForm.get('captionGroup.radioOption').value === 'MTH') {\n        annualtotalPayable = this.getSumOfTotalPayable();\n      } else {\n        annualtotalPayable = this.getTotalPayableCol('consolidated', this.incomeTaxInsurArrayConsol);\n      }\n      return annualtotalPayable !== apprAmt;\n    } else return false;\n  }\n  exportToCSV(dataTable) {\n    console.log(\"export to csv\");\n    const columns = [{\n      field: 'rowHeader',\n      header: \" \",\n      index: 0,\n      customExportHeader: \" \"\n    }, {\n      field: 'mthAccount',\n      header: String(this.aveInsurForm.get('eligibleMthCount').value).concat('-mth Account'),\n      index: 1\n    }, {\n      field: 'aveMthAccount',\n      header: 'Ave Monthly',\n      index: 2\n    }];\n    const subsetYrmth = this.getYrmthList().slice(this.maxMths - this.aveInsurForm?.get('eligibleMthCount').value);\n    for (let i = 0; i < subsetYrmth.length; i++) {\n      columns.push({\n        field: String(subsetYrmth[i]),\n        header: String(subsetYrmth[i]),\n        index: i\n      });\n    }\n    const dtoList = [{\n      rowHeader: 'First Year Commission'\n    }, {\n      rowHeader: 'Single Premium'\n    }, {\n      rowHeader: 'Production Commission'\n    }, {\n      rowHeader: \"General Insurance\"\n    }, {\n      rowHeader: \"Other Commission\"\n    }, {\n      rowHeader: \"Production Bonus\"\n    }, {\n      rowHeader: \"Total Payable Commission\"\n    }, {\n      rowHeader: \"Renewal Commission\"\n    }, {\n      rowHeader: \"Overriding Commission\"\n    }, {\n      rowHeader: \"Other Non-Payable Commission\"\n    }, {\n      rowHeader: \"Total Non-Payable Components\"\n    }, {\n      rowHeader: \"Total Commission\"\n    }];\n    const dataList = [];\n    let yrmthFG;\n    let subWD;\n    if (this.aveInsurForm?.get('captionGroup.radioOption').value === 'CON') {\n      this.exportAddConsol(yrmthFG, dataList, subWD, dtoList);\n    } else {\n      this.exportAddMthly(yrmthFG, dataList, subWD, subsetYrmth, dtoList);\n    }\n    this.exportUtilsService.exportCSV(dataTable, dtoList, 10, columns, \"insurance_average_\".concat((0, common_1.formatDate)(new Date(), \"dd-MM-YYYY\", this.localeId)));\n  }\n  exportAddConsol(yrmthFG, dataList, subWD, dtoList) {\n    if (this.aveInsurForm.get('consolidated').value) {\n      yrmthFG = this.aveInsurForm.get('incomeTaxInsurArrayConsol').get('consolidated');\n      subWD = {\n        firstYrCommission: yrmthFG.get(\"firstYrCommission\").value,\n        singlePremium: yrmthFG.get(\"singlePremium\").value,\n        prdCommission: yrmthFG.get(\"prdCommission\").value,\n        generalInsurance: yrmthFG.get(\"generalInsurance\").value,\n        otherCommission: yrmthFG.get(\"otherCommission\").value,\n        prdBonus: yrmthFG.get(\"prdBonus\").value,\n        renewalCommission: yrmthFG.get(\"renewalCommission\").value,\n        overridingCommission: yrmthFG.get(\"overridingCommission\").value,\n        otherNonPayable: yrmthFG.get(\"otherNonPayable\").value\n      };\n      dataList.push(subWD);\n      dataList.forEach(x => {\n        //add consol\n        dtoList[0]['mthAccount'] = x.firstYrCommission;\n        dtoList[1]['mthAccount'] = x.singlePremium;\n        dtoList[2]['mthAccount'] = x.prdCommission;\n        dtoList[3]['mthAccount'] = x.generalInsurance;\n        dtoList[4]['mthAccount'] = x.otherCommission;\n        dtoList[5]['mthAccount'] = x.prdBonus;\n        dtoList[6]['mthAccount'] = x.firstYrCommission + x.singlePremium + x.prdCommission + x.generalInsurance + x.otherCommission + x.prdBonus; //total payable commission\n        dtoList[7]['mthAccount'] = x.renewalCommission;\n        dtoList[8]['mthAccount'] = x.overridingCommission;\n        dtoList[9]['mthAccount'] = x.otherNonPayable;\n        dtoList[10]['mthAccount'] = x.renewalCommission + x.overridingCommission + x.otherNonPayable;\n        dtoList[11]['mthAccount'] = +dtoList[6]['mthAccount'] + +dtoList[10]['mthAccount'];\n        dtoList[0]['aveMthAccount'] = dtoList[0]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n        dtoList[1]['aveMthAccount'] = dtoList[1]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n        dtoList[2]['aveMthAccount'] = dtoList[2]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n        dtoList[3]['aveMthAccount'] = dtoList[3]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n        dtoList[4]['aveMthAccount'] = dtoList[4]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n        dtoList[5]['aveMthAccount'] = dtoList[5]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n        dtoList[6]['aveMthAccount'] = dtoList[6]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n        dtoList[7]['aveMthAccount'] = dtoList[7]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n        dtoList[8]['aveMthAccount'] = dtoList[8]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n        dtoList[9]['aveMthAccount'] = dtoList[9]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n        dtoList[10]['aveMthAccount'] = dtoList[10]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n        dtoList[11]['aveMthAccount'] = dtoList[11]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n      });\n    }\n  }\n  exportAddMthly(yrmthFG, dataList, subWD, subsetYrmth, dtoList) {\n    //mthly\n    subsetYrmth.forEach(key => {\n      yrmthFG = this.aveInsurForm.get('incomeTaxInsurArrayMthly').get(key);\n      subWD = {\n        yrmth: yrmthFG.get(\"yrmthReCon\").value,\n        firstYrCommission: yrmthFG.get(\"firstYrCommission\").value,\n        singlePremium: yrmthFG.get(\"singlePremium\").value,\n        prdCommission: yrmthFG.get(\"prdCommission\").value,\n        generalInsurance: yrmthFG.get(\"generalInsurance\").value,\n        otherCommission: yrmthFG.get(\"otherCommission\").value,\n        prdBonus: yrmthFG.get(\"prdBonus\").value,\n        renewalCommission: yrmthFG.get(\"renewalCommission\").value,\n        overridingCommission: yrmthFG.get(\"overridingCommission\").value,\n        otherNonPayable: yrmthFG.get(\"otherNonPayable\").value\n      };\n      dataList.push(subWD);\n    });\n    dataList.forEach(x => {\n      dtoList[0][x.yrmth] = x.firstYrCommission;\n      dtoList[1][x.yrmth] = x.singlePremium;\n      dtoList[2][x.yrmth] = x.prdCommission;\n      dtoList[3][x.yrmth] = x.generalInsurance;\n      dtoList[4][x.yrmth] = x.otherCommission;\n      dtoList[5][x.yrmth] = x.prdBonus;\n      dtoList[6][x.yrmth] = x.firstYrCommission + x.singlePremium + x.prdCommission + x.generalInsurance + x.otherCommission + x.prdBonus;\n      dtoList[7][x.yrmth] = x.renewalCommission;\n      dtoList[8][x.yrmth] = x.overridingCommission;\n      dtoList[9][x.yrmth] = x.otherNonPayable;\n      dtoList[10][x.yrmth] = x.renewalCommission + x.overridingCommission + x.otherNonPayable;\n      dtoList[11][x.yrmth] = +dtoList[6][x.yrmth] + +dtoList[10][x.yrmth];\n    });\n    dtoList[0]['mthAccount'] = this.getSumByField(dataList.map(x => {\n      return x.firstYrCommission;\n    }));\n    dtoList[1]['mthAccount'] = this.getSumByField(dataList.map(x => {\n      return x.singlePremium;\n    }));\n    dtoList[2]['mthAccount'] = this.getSumByField(dataList.map(x => {\n      return x.prdCommission;\n    }));\n    dtoList[3]['mthAccount'] = this.getSumByField(dataList.map(x => {\n      return x.generalInsurance;\n    }));\n    dtoList[4]['mthAccount'] = this.getSumByField(dataList.map(x => {\n      return x.otherCommission;\n    }));\n    dtoList[5]['mthAccount'] = this.getSumByField(dataList.map(x => {\n      return x.prdBonus;\n    }));\n    dtoList[6]['mthAccount'] = +dtoList[0]['mthAccount'] + +dtoList[1]['mthAccount'] + +dtoList[2]['mthAccount'] + +dtoList[3]['mthAccount'] + +dtoList[4]['mthAccount'] + +dtoList[5]['mthAccount']; //total payable commission\n    dtoList[7]['mthAccount'] = this.getSumByField(dataList.map(x => {\n      return x.renewalCommission;\n    }));\n    dtoList[8]['mthAccount'] = this.getSumByField(dataList.map(x => {\n      return x.overridingCommission;\n    }));\n    dtoList[9]['mthAccount'] = this.getSumByField(dataList.map(x => {\n      return x.otherNonPayable;\n    }));\n    dtoList[10]['mthAccount'] = +dtoList[7]['mthAccount'] + +dtoList[8]['mthAccount'] + +dtoList[9]['mthAccount'];\n    dtoList[11]['mthAccount'] = +dtoList[6]['mthAccount'] + +dtoList[10]['mthAccount'];\n    dtoList[0]['aveMthAccount'] = dtoList[0]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n    dtoList[1]['aveMthAccount'] = dtoList[1]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n    dtoList[2]['aveMthAccount'] = dtoList[2]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n    dtoList[3]['aveMthAccount'] = dtoList[3]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n    dtoList[4]['aveMthAccount'] = dtoList[4]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n    dtoList[5]['aveMthAccount'] = dtoList[5]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n    dtoList[6]['aveMthAccount'] = dtoList[6]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n    dtoList[7]['aveMthAccount'] = dtoList[7]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n    dtoList[8]['aveMthAccount'] = dtoList[8]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n    dtoList[9]['aveMthAccount'] = dtoList[9]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n    dtoList[10]['aveMthAccount'] = dtoList[10]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n    dtoList[11]['aveMthAccount'] = dtoList[11]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\n  }\n  getSumByField(fieldArray) {\n    const initValue = 0;\n    const sum = fieldArray.reduce((accumulator, currentValue) => accumulator + currentValue, initValue);\n    return sum;\n  }\n  //allows input on need basis\n  hasValidAuthorityAndStation() {\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_VERIFIER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_VERIFICATION) {\n      return true;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_CERTIFICATION) {\n      return false;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_APPROVAL) {\n      return false;\n    }\n    return false;\n  }\n}\nexports.InsuranceAvgIncomeComponent = InsuranceAvgIncomeComponent;\nInsuranceAvgIncomeComponent.ɵfac = function InsuranceAvgIncomeComponent_Factory(t) {\n  return new (t || InsuranceAvgIncomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DateUtilsService), i0.ɵɵdirectiveInject(i3.NspConfirmationService), i0.ɵɵdirectiveInject(i4.SEClaimService), i0.ɵɵdirectiveInject(i5.CustomToastService), i0.ɵɵdirectiveInject(i6.ConfirmationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i7.ExportUtilsService), i0.ɵɵdirectiveInject(i8.AccountService), i0.ɵɵdirectiveInject(core_1.LOCALE_ID));\n};\nInsuranceAvgIncomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InsuranceAvgIncomeComponent,\n  selectors: [[\"n2-insurance-avg-income\"]],\n  viewQuery: function InsuranceAvgIncomeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mthlyTable = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.consolTable = _t.first);\n    }\n  },\n  inputs: {\n    seHardCopyDetails: \"seHardCopyDetails\",\n    selectedWDOption: \"selectedWDOption\",\n    itemDetailsSection: \"itemDetailsSection\",\n    workingDataWithChanges: \"workingDataWithChanges\",\n    newUnsavedWorkingData: \"newUnsavedWorkingData\",\n    saveSEClaimRequest: \"saveSEClaimRequest\",\n    trgStartDte: \"trgStartDte\",\n    irasDetails: \"irasDetails\",\n    readOnly: \"readOnly\",\n    station: \"station\"\n  },\n  outputs: {\n    totalAmtPayEvent: \"totalAmtPayEvent\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 40,\n  vars: 22,\n  consts: [[\"severity\", \"warn\", 4, \"ngIf\"], [3, \"formGroup\"], [1, \"grid\", 2, \"margin-top\", \"1em\", \"margin-left\", \"220px\"], [1, \"col-12\", \"justify-content-start\", \"gap-4\", \"flex\", \"align-items-center\"], [\"formControlName\", \"eligibleMthCount\", 3, \"min\", \"max\", \"inputStyle\", \"disabled\"], [\"class\", \"p-error\", \"icTranslate\", \"nspay2App.claim.validation.CLM-V002\", 3, \"translateValues\", 4, \"ngIf\"], [\"formControlName\", \"prdnBonusDivisor\", 3, \"min\", \"max\", \"inputStyle\", \"disabled\"], [4, \"ngIf\"], [1, \"flex\", \"col-6\", 3, \"annualIncomeFormArray\", \"seHardCopyDetails\", \"isActive\", \"readOnly\", \"station\"], [\"severity\", \"warn\"], [\"key\", \"CLM-W016\", \"pTemplate\", \"\"], [1, \"ml-2\"], [\"key\", \"CLM-W015\", \"pTemplate\", \"\"], [\"key\", \"CLM-W026\", \"pTemplate\", \"\"], [\"icTranslate\", \"nspay2App.claim.validation.CLM-V002\", 1, \"p-error\", 3, \"translateValues\"], [\"styleClass\", \"p-datatable-gridlines p-datatable-striped\", \"responsiveLayout\", \"scroll\", 3, \"value\", \"filterDelay\", \"loading\", 4, \"ngIf\", \"ngIfElse\"], [\"consolOption\", \"\"], [\"formControlName\", \"claimNip\", \"suffix\", \"%\", 3, \"maxlength\", \"inputStyle\", 4, \"ngIf\", \"ngIfElse\"], [\"labelClaimNip\", \"\"], [\"class\", \"col\", 4, \"ngIf\"], [\"styleClass\", \"p-datatable-gridlines p-datatable-striped\", \"responsiveLayout\", \"scroll\", 3, \"value\", \"filterDelay\", \"loading\"], [\"mthlyTable\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"scope\", \"col\"], [1, \"grid\"], [1, \"col-6\", \"nsp-align-left\"], [\"icon\", \"pi pi-file-o\", 3, \"click\"], [3, \"style\", 4, \"ngIf\", \"ngIfElse\"], [\"disabledRadio\", \"\"], [\"key\", \"confirmWarning\", \"header\", \"Confirmation\", \"icon\", \"fa fa-question-circle\", \"width\", \"425\"], [1, \"col-6\", \"nsp-align-right\"], [\"id\", \"refreshOtherClaim\", \"pButton\", \"\", \"label\", \"Refresh from Other Claim\", 3, \"style\", \"disabled\", \"click\", 4, \"ngIf\"], [\"scope\", \"col\", 3, \"style\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"custom-radio\", \"type\", \"radio\", \"value\", \"MTH\", \"formControlName\", \"radioOption\", 1, \"p-radiobutton\", 3, \"click\"], [1, \"custom-control-label\"], [\"id\", \"con-custom-radio\", \"type\", \"radio\", \"value\", \"CON\", \"formControlName\", \"radioOption\", 1, \"p-radiobutton\", 3, \"click\"], [\"disabled\", \"\"], [\"id\", \"refreshOtherClaim\", \"pButton\", \"\", \"label\", \"Refresh from Other Claim\", 3, \"disabled\", \"click\"], [2, \"text-align\", \"right\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [3, \"formGroupName\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"firstYrCommission\", \"id\", \"firstYrCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\", 4, \"ngIf\", \"ngIfElse\"], [\"labelFirstYrCommission\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"firstYrCommission\", \"id\", \"firstYrCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"singlePremium\", \"id\", \"singlePremium\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\", 4, \"ngIf\", \"ngIfElse\"], [\"labelSinglePremium\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"singlePremium\", \"id\", \"singlePremium\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"prdCommission\", \"id\", \"prdCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\", 4, \"ngIf\", \"ngIfElse\"], [\"labelPrdCommission\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"prdCommission\", \"id\", \"prdCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"generalInsurance\", \"id\", \"generalInsurance\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\", 4, \"ngIf\", \"ngIfElse\"], [\"labelGeneralInsurance\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"generalInsurance\", \"id\", \"generalInsurance\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"otherCommission\", \"id\", \"otherCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\", 4, \"ngIf\", \"ngIfElse\"], [\"labelOtherCommission\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"otherCommission\", \"id\", \"otherCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"prdBonus\", \"id\", \"prdBonus\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\", 4, \"ngIf\", \"ngIfElse\"], [\"labelPrdBonus\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"prdBonus\", \"id\", \"prdBonus\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\"], [3, \"style\", \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"renewalCommission\", \"id\", \"renewalCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\", 4, \"ngIf\", \"ngIfElse\"], [\"labelRenewalCommission\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"renewalCommission\", \"id\", \"renewalCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"overridingCommission\", \"id\", \"overridingCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\", 4, \"ngIf\", \"ngIfElse\"], [\"labelOverridingCommission\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"overridingCommission\", \"id\", \"overridingCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"otherNonPayable\", \"id\", \"otherNonPayable\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\", 4, \"ngIf\", \"ngIfElse\"], [\"labelOtherNonPayable\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"otherNonPayable\", \"id\", \"otherNonPayable\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\"], [\"consolTable\", \"\"], [\"id\", \"refreshOtherClaim\", \"pButton\", \"\", \"label\", \"Refresh from Other Claim\", 3, \"disabled\", \"style\", \"click\", 4, \"ngIf\"], [\"formGroupName\", \"consolidated\"], [\"labelConsolFirstYrCommission\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"labelConsolSinglePremium\", \"\"], [\"labelConsolPrdCommission\", \"\"], [\"labelConsolGeneralInsurance\", \"\"], [\"labelConsolOtherCommission\", \"\"], [\"labelConsolPrdBonus\", \"\"], [\"labelConsolRenewalCommission\", \"\"], [\"labelConsolOverridingCommission\", \"\"], [\"labelConsolOtherNonPayable\", \"\"], [\"formControlName\", \"claimNip\", \"suffix\", \"%\", 3, \"maxlength\", \"inputStyle\"], [1, \"col\"], [\"label\", \"Copy to Item\", 3, \"disabled\", \"click\"]],\n  template: function InsuranceAvgIncomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, InsuranceAvgIncomeComponent_p_messages_0_Template, 4, 0, \"p-messages\", 0);\n      i0.ɵɵtext(1, \"\\n\");\n      i0.ɵɵtemplate(2, InsuranceAvgIncomeComponent_p_messages_2_Template, 4, 0, \"p-messages\", 0);\n      i0.ɵɵtext(3, \"\\n\");\n      i0.ɵɵtemplate(4, InsuranceAvgIncomeComponent_p_messages_4_Template, 4, 0, \"p-messages\", 0);\n      i0.ɵɵtext(5, \"\\n\\n\\n\\n\");\n      i0.ɵɵelementStart(6, \"p-card\");\n      i0.ɵɵtext(7, \"\\n    \");\n      i0.ɵɵelementStart(8, \"form\", 1);\n      i0.ɵɵtext(9, \"\\n        \");\n      i0.ɵɵelementStart(10, \"div\", 2);\n      i0.ɵɵtext(11, \"\\n            \");\n      i0.ɵɵelementStart(12, \"div\", 3);\n      i0.ɵɵtext(13, \"\\n                \");\n      i0.ɵɵelementStart(14, \"div\");\n      i0.ɵɵtext(15, \"Eligible Months:\\u00A0\\u00A0\");\n      i0.ɵɵelement(16, \"p-inputNumber\", 4);\n      i0.ɵɵtext(17, \"\\n                    \");\n      i0.ɵɵtemplate(18, InsuranceAvgIncomeComponent_small_18_Template, 2, 2, \"small\", 5);\n      i0.ɵɵtext(19, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n\\n                \");\n      i0.ɵɵelementStart(21, \"div\");\n      i0.ɵɵtext(22, \"Production Bonus Divisor:\\u00A0\\u00A0\");\n      i0.ɵɵelement(23, \"p-inputNumber\", 6);\n      i0.ɵɵtext(24, \"\\n                    \");\n      i0.ɵɵtemplate(25, InsuranceAvgIncomeComponent_small_25_Template, 2, 2, \"small\", 5);\n      i0.ɵɵtext(26, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(27, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(28, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(29, \"\\n        \");\n      i0.ɵɵtext(30, \"\\n\\n        \");\n      i0.ɵɵtemplate(31, InsuranceAvgIncomeComponent_div_31_Template, 47, 16, \"div\", 7);\n      i0.ɵɵtext(32, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(33, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \"\\n\");\n      i0.ɵɵelement(35, \"br\");\n      i0.ɵɵtext(36, \"\\n\");\n      i0.ɵɵelementStart(37, \"n2-annual-income\", 8);\n      i0.ɵɵtext(38, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(39, \"\\n\\n\\n\\n\\n\\n\\n\");\n    }\n    if (rf & 2) {\n      let tmp_8_0;\n      let tmp_13_0;\n      i0.ɵɵproperty(\"ngIf\", ctx.aveInsurForm.get(\"eligibleMthCount\").value < 6);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isTradeIncomeMorethanTotalCommision());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isWorkingDataTotalPayableNotEqualItemApprAmt());\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.aveInsurForm);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"min\", 1)(\"max\", 6)(\"inputStyle\", i0.ɵɵpureFunction0(20, _c12))(\"disabled\", !ctx.isActive() || ctx.readOnly || !ctx.hasValidAuthorityAndStation());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_8_0 = ctx.aveInsurForm.get(\"eligibleMthCount\")) == null ? null : tmp_8_0.touched) && !ctx.isValidNumber((tmp_8_0 = ctx.aveInsurForm.get(\"eligibleMthCount\")) == null ? null : tmp_8_0.value));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"min\", 1)(\"max\", 12)(\"inputStyle\", i0.ɵɵpureFunction0(21, _c12))(\"disabled\", !ctx.isActive() || ctx.readOnly || !ctx.hasValidAuthorityAndStation());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_13_0 = ctx.aveInsurForm.get(\"prdnBonusDivisor\")) == null ? null : tmp_13_0.touched) && !ctx.isValidNumber((tmp_13_0 = ctx.aveInsurForm.get(\"prdnBonusDivisor\")) == null ? null : tmp_13_0.value));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.currSelectedOption !== undefined);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"annualIncomeFormArray\", ctx.annualIncomeList)(\"seHardCopyDetails\", ctx.seHardCopyDetails)(\"isActive\", ctx.isActive())(\"readOnly\", ctx.readOnly)(\"station\", ctx.station);\n    }\n  },\n  dependencies: [i9.NgForOf, i9.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormControlDirective, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i10.Card, i6.PrimeTemplate, i11.ButtonDirective, i11.Button, i12.Table, i13.ConfirmPopup, i14.Messages, i15.InputNumber, i16.TranslateDirective, i17.AnnualIncomeComponent, i9.SlicePipe, i9.DecimalPipe],\n  styles: [\"[_nghost-%COMP%]     .p-datatable.p-datatable-striped .p-datatable-tbody > tr > :nth-child(1) {\\n  min-width: 220px;\\n  background: none;\\n  border: none;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable.p-datatable-striped .p-datatable-thead > tr > :nth-child(1) {\\n  min-width: 220px;\\n  background: none;\\n  border: none;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable.p-datatable-striped .p-datatable-tbody > tr > :nth-child(2) {\\n  min-width: 220px;\\n  width: 220px;\\n}\\n\\n[_nghost-%COMP%]     .grid-top-bold .td {\\n  border-bottom: 1px solid black;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable .p-datatable-tfoot > tr > td {\\n  text-align: left;\\n  padding: 1rem 1rem;\\n  border: none;\\n  border-width: none;\\n  font-weight: 600; \\n  color: #343a40;\\n  background: transparent;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable .p-datatable-thead > tr > th {\\n  position: sticky;\\n  top: 0px;\\n}\\n\\n[_nghost-%COMP%]     .transparent-input .p-inputtext {\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n  font-size: 1rem;\\n  color: #495057;\\n  background: #ffffff;\\n  padding: 0.75rem 0.75rem;\\n  border: none;\\n  -webkit-appearance: none;\\n          appearance: none;\\n}\\n\\n[_nghost-%COMP%]     .transparent-input .p-inputtext:enabled:focus {\\n  outline: 0 none;\\n  border-color: transparent;\\n}\\n\\n[_nghost-%COMP%]     .transparent-input .p-inputtext.ng-dirty.ng-invalid {\\n  border-color: transparent;\\n}\\n\\n[_nghost-%COMP%]     .transparent-input .p-inputtext:enabled:hover {\\n  border-color: transparent;\\n}\\n\\n[_nghost-%COMP%]     .p-card .p-card-content {\\n  padding: 0 0;\\n}\\n\\ninput[type=radio][_ngcontent-%COMP%] {\\n  width: 22px;\\n  height: 22px;\\n}\\n\\n.p-radiobutton[_ngcontent-%COMP%] {\\n  appearance: none;\\n  \\n  -webkit-appearance: none;\\n  border: 2px solid #ced4da;\\n  background-color: var(--bg-color);\\n  border-radius: 50%;\\n}\\n\\n.p-radiobutton[_ngcontent-%COMP%]:focus-visible {\\n  outline-offset: 0;\\n}\\n\\n#custom-radio[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:hover {\\n  outline-color: #14B8A6;\\n}\\n\\n#custom-radio[_ngcontent-%COMP%]:checked {\\n  outline-color: #14B8A6;\\n  background-color: #ffffff;\\n  border: 6px solid #14B8A6;\\n}\\n\\n#con-custom-radio[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:hover {\\n  outline-color: #14B8A6;\\n}\\n\\n#con-custom-radio[_ngcontent-%COMP%]:checked {\\n  outline-color: #14B8A6;\\n  background-color: #ffffff;\\n  border: 6px solid #14B8A6;\\n}\\n\\n@keyframes _ngcontent-%COMP%_outline-checked {\\n  0% {\\n    outline-offset: 0;\\n  }\\n  100% {\\n    outline-offset: -0.2rem;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":"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","names":["i0","InsuranceAvgIncomeComponent","captionGroup","aveInsurForm","get","constructor","formBuilder","dateUtilsService","nspConfirmService","seClaimService","toastService","confirmationService","ref","exportUtilsService","accountService","localeId","name","key","core_1","dataList","group","id","forms_1","workingDataId","consolidated","eligibleMthCount","prdnBonusDivisor","incomeTaxInsurArrayMthly","incomeTaxInsurArrayConsol","radioOption","radioOptions","footerGroup","claimNip","annualIncomeList","yrmthList","startYrmth","endYrmth","rxjs_1","claimJson","claim_json_1","createNewAveInsurFormGroup","console","log","aveInsurFormGroup","annualIncomeFormGroup","source","assessment","acctgPeriodStrt","acctgPeriodEnd","occupationNature","revenue","adjProfit","push","claimStartYrMth","convertStrToDate","value","claimEndYrMth","claimStartDt","Date","getFullYear","getMonth","claimEndDt","colStartDt","clone","subtract","colEndDt","colMthRange","mth","isSameOrBefore","add","format","map","x","setValue","forEach","addControl","yrmth","yrmthReCon","firstYrCommission","singlePremium","prdCommission","generalInsurance","otherCommission","prdBonus","renewalCommission","overridingCommission","otherNonPayable","totalPayableCommission","staticAddRow","dataEntry","formObj","undefined","mapInsurAveFormGroupToWD","fg","obj","annualIncomeDtoList","insurAveWD","year","archiveDt","workingDataTypeCode","subYrMthList","slice","yrmthFG","subWD","annualIncomeListFA","controls","control","annualIncomeDto","seq","length","isValid","convertDateToStr","acctgStartDate","acctgEndDate","mapInsurAveWDToFormGroup","insurAveFormGroup","staticGenerateYrMth","dataRecon","newDataList","staticConstructConsolidatedHeaderData","staticConstructForm","annualIncomeWD","annual_income_component_1","mapAnnualIncomeWDToFormGroup","dataSet","yrmthListCtrl","startYrmthCtrl","endYrmthCtrl","dateFormat","cloneYrmthList","JSON","parse","stringify","concat","arrformGroup","empty","newForm","sanitizedDataList","sortedData","colIndex","i","findIndex","index","sort","a","b","ngOnInit","cols","ngOnChanges","changes","irasDetails","currentValue","currIrasDetails","trgStartDte","generateYrMth","seHardCopyDetails","currHardCopyDetails","constructSourceYearOptions","retrieveReferenceClaimNip","selectedWDOption","currSelectedOption","retrieveInsurWD","tester","getInnerFormControl","controlName","innerControlName","trgEndDte","sourceYrOptions","convertMomentToStr","convertStrToMoment","adjustFormArray","existingYrMthControls","Object","keys","diffColHeaders","filter","includes","constructForm","addRow","enableCopytoItem","claimItemList","itemDetailsSection","itemForm","itxItem","PEND_VERIFY_STATUS","PEND_ACTION_STATUS","copyToItem","event","totalAmtPayEvent","emit","getTotalAmtPayable","confirmFile","onConfirmPopupMsg","confirmSwitch","e","type","target","preventDefault","confirm","showConfirm","clearForm","Promise","resolve","message","header","icon","acceptLabel","rejectLabel","accept","radioKey","isActive","getFiltered","unfilteredFA","item","newWD","params","http_1","append","subscribe","resp","status","body","data","populateAveInsurForm","valueChangeSubscribe","error","String","error_desc","workingDataWithChanges","formGroup","setRadioOption","loading","toString","newUnsavedWorkingData","constructConsolidatedHeaderData","constructAnnualIncomeForm","valueChanges","saveSEClaimRequest","workingDataSectionInd","has","set","refreshOtherClaim","headerDto","nsManNric","getYrmthList","caseId","retrieveRefreshOtherInsurClaims","refreshedArr","y","ctrl","refreshOtherClaimSetValue","unrefreshed","unrefreshMths","dataR","enableRefreshOClaim","getForm","getSumOfCurrRow","formCtrlName","sum","fieldCtrl","maxMths","getTotalPayableCol","yrmthCtrlName","formArr","Number","getTotalNonPayableCol","getSumOfTotalPayable","getSumOfTotalNonPayable","roundVal","Math","round","getOverridingCommPerc","rslt","computeConsolidatedAvgTotalPayable","ctrlName","avgSum","computeConsolidatedAvgTotalNonPayable","claimId","setProposedNip","refNip","proposedNIP","amtPayable","getTotalAmtPayableDesc","amtPayableDesc","roundVal2Dec","num","EPSILON","isValidNumber","isNaN","isTradeIncomeMorethanTotalCommision","irasRecord","basis","tradeIncome","isWorkingDataTotalPayableNotEqualItemApprAmt","annualtotalPayable","find","apprAmt","exportToCSV","dataTable","columns","field","customExportHeader","subsetYrmth","dtoList","rowHeader","exportAddConsol","exportAddMthly","exportCSV","getSumByField","fieldArray","initValue","reduce","accumulator","hasValidAuthorityAndStation","hasAnyAuthority","nspay2_constants_1","CLAIMS_VERIFIER","station","STATION_VERIFICATION","CLAIMS_APPROVER","STATION_CERTIFICATION","STATION_APPROVAL","exports","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\working-data-section\\insurance-avg-income\\insurance-avg-income.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\working-data-section\\insurance-avg-income\\insurance-avg-income.component.html"],"sourcesContent":["import { formatDate } from '@angular/common';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, EventEmitter, Input, LOCALE_ID, NgZone, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { AnnualIncomeWD } from 'app/claim/se-claim/model/annual-income-model';\r\nimport { InsurAveWD } from 'app/claim/se-claim/model/insur-ave.model';\r\nimport { InsurITXSubWD } from 'app/claim/se-claim/model/insur-income-tax-sub-data.model';\r\nimport { SaveSEClaimRequest } from 'app/claim/se-claim/model/save-se-claim-request.model';\r\nimport { SEClaimService } from 'app/claim/se-claim/service/se-claim.service';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\nimport { NspConfirmationService } from 'app/shared/confirm/nsp-confirm.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { data } from 'jquery';\r\nimport moment from 'moment';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { Table } from 'primeng/table';\r\nimport { Subscription } from 'rxjs';\r\nimport claim from '../../../../../../i18n/en/claim.json';\r\nimport { AnnualIncomeComponent } from '../annual-income/annual-income.component';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { NSPAY2_ROLES, NSPAY2_STATION } from 'app/nspay2.constants';\r\n\r\n@Component({\r\n  selector: 'n2-insurance-avg-income',\r\n  templateUrl: './insurance-avg-income.component.html',\r\n  styleUrls: ['./insurance-avg-income.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class InsuranceAvgIncomeComponent implements OnInit {\r\n\r\n\r\n  radioOptions: any[] = [{name: 'Monthly', key: 'MTH'}, {name: 'Consolidated', key: 'CON'}];\r\n  sourceYrOptions: any[] = [];\r\n  // captionGroup: FormGroup;\r\n  loading = true;\r\n  // insuranceIncomeTaxForm: FormGroup;\r\n  // insuranceIncomeTaxFormData: any[] = [];\r\n  cols: any[];\r\n  currHardCopyDetails: any = {};\r\n  currSelectedOption: any= {};\r\n  currIrasDetails : any = {};\r\n  @Input() seHardCopyDetails:any = {};\r\n  @Input() selectedWDOption:any = {};\r\n  @Input() itemDetailsSection: any = {};\r\n  @Output()  totalAmtPayEvent: EventEmitter<any> = new EventEmitter<any>();\r\n  @Input() workingDataWithChanges: Map<string, any>;\r\n  @Input() newUnsavedWorkingData: Map<string, any>;\r\n  @Input() saveSEClaimRequest: SaveSEClaimRequest;\r\n  @Input() trgStartDte: string;\r\n  @Input() irasDetails: any = {};\r\n  //meant for routing from enquiry\r\n  @Input() readOnly: boolean;\r\n  @Input() station: string;\r\n\r\n  claimJson: any;\r\n\r\n  dateFormat = \"DD-MM-YYYY\";\r\n\r\n  readonly PEND_VERIFY_STATUS = \"PVE\";\r\n  readonly PEND_ACTION_STATUS = \"PAC\";\r\n  // colStartDt: any;\r\n  // colEndDt: any;\r\n  colMthRange:any[] = [];\r\n  maxMths = 6;\r\n\r\n  dataSet: any = {\r\n    dataList: []\r\n  }\r\n  yrmthList: string[] = [];\r\n  subSetList:  string[] = [];\r\n\r\n  referenceClaimNip = 0;\r\n  claimNIP= 0;\r\n  proposedNIP=0;\r\n  actualNIP=0;\r\n  overridingCommission=0;\r\n  totalAmtPay=0;\r\n  aveInsurForm: FormGroup  = this.formBuilder.group({\r\n    id: new FormControl(null, null),\r\n    workingDataId: new FormControl('',null),\r\n    consolidated: new FormControl(false, null),\r\n    eligibleMthCount: new FormControl(6, null),\r\n    prdnBonusDivisor: new FormControl(12, null),\r\n    incomeTaxInsurArrayMthly: this.formBuilder.group({}),\r\n    incomeTaxInsurArrayConsol: this.formBuilder.group({}),\r\n    captionGroup: this.formBuilder.group({\r\n      radioOption: new FormControl(this.radioOptions[0].key, null)\r\n    }),\r\n    footerGroup:this.formBuilder.group({\r\n      claimNip: new FormControl(0, null)\r\n    }),\r\n    annualIncomeList: new FormArray([]),\r\n    yrmthList:new FormControl([], null),\r\n    startYrmth: new FormControl('', null),\r\n    endYrmth: new FormControl('', null),\r\n\r\n  });\r\n\r\n\r\n  get captionGroup(): FormGroup {\r\n    return this.aveInsurForm?.get('captionGroup') as FormGroup\r\n  }\r\n\r\n  @ViewChild('mthlyTable', {static: false})\r\n  private mthlyTable!: Table;\r\n  @ViewChild('consolTable', {static: false})\r\n  private consolTable!: Table;\r\n  private subscription:Subscription = new Subscription();\r\n\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    public dateUtilsService: DateUtilsService,\r\n    private nspConfirmService: NspConfirmationService,\r\n    private seClaimService: SEClaimService,\r\n    private toastService: CustomToastService,\r\n    private confirmationService: ConfirmationService,\r\n    private ref: ChangeDetectorRef,\r\n    private exportUtilsService: ExportUtilsService,\r\n    public accountService: AccountService,\r\n    @Inject(LOCALE_ID) protected localeId: string\r\n  ) { \r\n    this.claimJson = claim;\r\n  }\r\n\r\n  static createNewAveInsurFormGroup(startYrmth: string, endYrmth: string, formBuilder: FormBuilder, dateUtilsService: DateUtilsService): FormGroup{\r\n \r\n    console.log(\"mila\")\r\n    const aveInsurFormGroup: FormGroup = formBuilder.group({\r\n      id: new FormControl(null, null),\r\n      workingDataId: new FormControl('',null),\r\n      consolidated: false,\r\n      startYrmth: new FormControl(startYrmth, null),\r\n      endYrmth: new FormControl(endYrmth, null),\r\n      yrmthList:new FormControl([], null),\r\n      eligibleMthCount: new FormControl(6, null),\r\n      prdnBonusDivisor: new FormControl(12, null),\r\n      incomeTaxInsurArrayMthly: formBuilder.group({}),\r\n      incomeTaxInsurArrayConsol: formBuilder.group({}),\r\n      annualIncomeList: new FormArray([]),\r\n      footerGroup: formBuilder.group({\r\n        claimNip: new FormControl(0, null)\r\n      }),\r\n      captionGroup: formBuilder.group({\r\n        radioOption: new FormControl(\"MTH\", null)\r\n      })\r\n    });\r\n    // aveInsurFormGroup.get('captionGroup.radioOption').setValue(\"MTH\");\r\n    const annualIncomeFormGroup: FormGroup = formBuilder.group({\r\n      source: new FormControl(null, null),\r\n      assessment: new FormControl(null, null),\r\n      acctgPeriodStrt: new FormControl(null, null),\r\n      acctgPeriodEnd: new FormControl(null, null),\r\n      occupationNature: new FormControl(null, null),\r\n      revenue: new FormControl(null, null),\r\n      adjProfit: new FormControl(null, null),\r\n    });\r\n    (aveInsurFormGroup.get('annualIncomeList') as FormArray).push(annualIncomeFormGroup);\r\n\r\n    const claimStartYrMth:Date =  dateUtilsService.convertStrToDate(aveInsurFormGroup.get('startYrmth').value, \"DD-MM-YYYY\");\r\n    const claimEndYrMth:Date =  dateUtilsService.convertStrToDate(aveInsurFormGroup.get('endYrmth').value, \"DD-MM-YYYY\");\r\n    const claimStartDt = moment(new Date(claimStartYrMth.getFullYear(), claimStartYrMth.getMonth(),1));\r\n    const claimEndDt = moment(new Date(claimEndYrMth.getFullYear(), +claimEndYrMth.getMonth()+ 1, 0));\r\n    const colStartDt = claimEndDt.clone().subtract(+aveInsurFormGroup?.get('eligibleMthCount').value - 1, 'months');\r\n    const colEndDt = claimEndDt.clone();\r\n\r\n    const colMthRange = [];\r\n    for(let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')){\r\n      colMthRange.push(mth.format(\"DD-MM-YYYY\"));\r\n    }\r\n    const yrmthList = colMthRange.map(x=>  moment(dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\r\n    aveInsurFormGroup.get('yrmthList').setValue(yrmthList); \r\n\r\n    //create empty dataFormArray\r\n    yrmthList.forEach(x=>{\r\n      (aveInsurFormGroup.get('incomeTaxInsurArrayMthly') as FormGroup)\r\n      .addControl(x,formBuilder.group({\r\n        yrmth: new FormControl(x, null),\r\n        yrmthReCon: new FormControl(x, null),\r\n        firstYrCommission: new FormControl(null, null),\r\n        singlePremium: new FormControl(null, null),\r\n        prdCommission: new FormControl(null, null),\r\n        generalInsurance: new FormControl(null, null),\r\n        otherCommission: new FormControl(null, null),\r\n        prdBonus: new FormControl(null, null),\r\n        renewalCommission:new FormControl(null, null),\r\n        overridingCommission: new FormControl(null, null),\r\n        otherNonPayable: new FormControl(null, null),\r\n        totalPayableCommission: new FormControl(null, null)\r\n      }))\r\n    });\r\n    //create empty consolDataFormArray\r\n    (aveInsurFormGroup.get('incomeTaxInsurArrayConsol') as FormGroup)\r\n    .addControl('consolidated',formBuilder.group({\r\n      yrmth: new FormControl(null, null),\r\n      yrmthReCon: new FormControl(null, null),\r\n      firstYrCommission: new FormControl(null, null),\r\n      singlePremium: new FormControl(null, null),\r\n      prdCommission: new FormControl(null, null),\r\n      generalInsurance: new FormControl(null, null),\r\n      otherCommission: new FormControl(null, null),\r\n      prdBonus: new FormControl(null, null),\r\n      renewalCommission:new FormControl(null, null),\r\n      overridingCommission: new FormControl(null, null),\r\n      otherNonPayable: new FormControl(null, null),\r\n      totalPayableCommission: new FormControl(null, null)\r\n    }));\r\n    return aveInsurFormGroup;\r\n  }\r\n\r\n  static staticAddRow(dataEntry: any, formBuilder: FormBuilder): FormGroup{\r\n      //does validation to makesure the yrmth tallies to yrmthRecon other wise default to 0\r\n      let formObj;\r\n      if(dataEntry?.yrmthReCon!==undefined && dataEntry?.yrmth!==dataEntry?.yrmthReCon){\r\n        formObj = {\r\n          yrmth: dataEntry?.yrmth,\r\n          yrmthReCon: new FormControl(dataEntry?.yrmthReCon, null),\r\n          firstYrCommission: new FormControl(null, null),\r\n          singlePremium: new FormControl(null, null),\r\n          prdCommission: new FormControl(null, null),\r\n          generalInsurance: new FormControl(null, null),\r\n          otherCommission: new FormControl(null, null),\r\n          prdBonus: new FormControl(null, null),\r\n          renewalCommission:new FormControl(null, null),\r\n          overridingCommission: new FormControl(null, null),\r\n          otherNonPayable: new FormControl(null, null),\r\n          totalPayableCommission: new FormControl(null, null)\r\n        }\r\n      }else{\r\n        //if it tallies, use result from db\r\n        formObj = {\r\n          yrmth: dataEntry?.yrmth,\r\n          yrmthReCon: new FormControl(dataEntry?.yrmthReCon, null),\r\n          firstYrCommission: new FormControl(dataEntry?.firstYrCommission, null),\r\n          singlePremium: new FormControl(dataEntry?.singlePremium, null),\r\n          prdCommission: new FormControl(dataEntry?.prdCommission, null),\r\n          generalInsurance: new FormControl(dataEntry?.generalInsurance, null),\r\n          otherCommission: new FormControl(dataEntry?.otherCommission, null),\r\n          prdBonus: new FormControl(dataEntry?.prdBonus, null),\r\n          renewalCommission: new FormControl(dataEntry?.renewalCommission, null),\r\n          overridingCommission: new FormControl(dataEntry?.overridingCommission, null),\r\n          otherNonPayable: new FormControl(dataEntry?.otherNonPayable, null),\r\n          totalPayableCommission: new FormControl(0, null)\r\n        }\r\n      }\r\n      return formBuilder.group(formObj);\r\n\r\n  }\r\n\r\n \r\n\r\n\r\n  static mapInsurAveFormGroupToWD(fg: FormGroup, obj: any,  dateUtilsService: DateUtilsService): InsurAveWD {\r\n    const dataList: InsurITXSubWD[] = [];\r\n    const annualIncomeDtoList: AnnualIncomeWD[] = [];\r\n    const insurAveWD: InsurAveWD = {\r\n      id: fg.get('id')?.value,\r\n      workingDataId: obj.workingDataId,\r\n      year: fg?.get('year')?.value || obj.year,\r\n      consolidated: fg?.get('consolidated')?.value,\r\n      claimNip: fg?.get('footerGroup.claimNip')?.value,\r\n      archiveDt: obj.archiveDt,\r\n      dataList,\r\n      eligibleMthCount: fg.get('eligibleMthCount').value,\r\n      prdnBonusDivisor: fg.get('prdnBonusDivisor').value,\r\n      workingDataTypeCode: obj.workingDataTypeCode,\r\n      startYrmth: fg.get('startYrmth').value,\r\n      endYrmth: fg.get('endYrmth').value,\r\n      annualIncomeList: annualIncomeDtoList\r\n    };\r\n    console.log(\"the fgra\", fg);\r\n    const yrmthList =  fg.get('yrmthList').value as Array<string>;\r\n    const subYrMthList = yrmthList.slice(6- fg.get('eligibleMthCount').value);\r\n    console.log('sub yr mmth',subYrMthList);\r\n    if(fg!==undefined && fg!==null){\r\n      let yrmthFG;\r\n      if(fg.get('consolidated').value) {\r\n        yrmthFG = ((fg.get('incomeTaxInsurArrayConsol') as FormGroup)).get('consolidated');\r\n        const subWD: InsurITXSubWD = {\r\n          firstYrCommission: yrmthFG.get(\"firstYrCommission\").value,\r\n          singlePremium: yrmthFG.get(\"singlePremium\").value,\r\n          prdCommission:yrmthFG.get(\"prdCommission\").value,\r\n          generalInsurance: yrmthFG.get(\"generalInsurance\").value,\r\n          otherCommission: yrmthFG.get(\"otherCommission\").value,\r\n          prdBonus: yrmthFG.get(\"prdBonus\").value,\r\n          renewalCommission: yrmthFG.get(\"renewalCommission\").value,\r\n          overridingCommission: yrmthFG.get(\"overridingCommission\").value,\r\n          otherNonPayable: yrmthFG.get(\"otherNonPayable\").value,\r\n        }\r\n        dataList.push(subWD);\r\n      }else {\r\n\r\n        subYrMthList.forEach(key=>{\r\n          yrmthFG = fg.get('incomeTaxInsurArrayMthly').get(key);\r\n          const subWD: InsurITXSubWD = {\r\n            yrmth: yrmthFG.get(\"yrmthReCon\").value,\r\n            firstYrCommission: yrmthFG.get(\"firstYrCommission\").value,\r\n            singlePremium: yrmthFG.get(\"singlePremium\").value,\r\n            prdCommission:yrmthFG.get(\"prdCommission\").value,\r\n            generalInsurance: yrmthFG.get(\"generalInsurance\").value,\r\n            otherCommission: yrmthFG.get(\"otherCommission\").value,\r\n            prdBonus: yrmthFG.get(\"prdBonus\").value,\r\n            renewalCommission: yrmthFG.get(\"renewalCommission\").value,\r\n            overridingCommission: yrmthFG.get(\"overridingCommission\").value,\r\n            otherNonPayable: yrmthFG.get(\"otherNonPayable\").value,\r\n          }\r\n          dataList.push(subWD);\r\n          }\r\n        );\r\n      }\r\n      const annualIncomeListFA = (fg.get('annualIncomeList') as FormArray);\r\n      annualIncomeListFA.controls.forEach((control: AbstractControl)=>{\r\n        const annualIncomeDto: AnnualIncomeWD = {\r\n          workingDataId: obj.workingDataId,\r\n          seq: annualIncomeDtoList.length + 1,\r\n          source: control.get('source').value,\r\n          assessment: dateUtilsService.isValid(control.get('assessment').value)? dateUtilsService.convertDateToStr(control.get('assessment').value, \"DD-MM-YYYY\"): null,\r\n          acctgStartDate: dateUtilsService.isValid(control.get('acctgPeriodStrt').value)? dateUtilsService.convertDateToStr(control.get('acctgPeriodStrt').value, \"DD-MM-YYYY\"): null,\r\n          acctgEndDate: dateUtilsService.isValid(control.get('acctgPeriodEnd').value)? dateUtilsService.convertDateToStr(control.get('acctgPeriodEnd').value, \"DD-MM-YYYY\"): null,\r\n          occupationNature: control.get('occupationNature').value,\r\n          revenue: control.get('revenue').value,\r\n          adjProfit: control.get('adjProfit').value,\r\n        }\r\n        annualIncomeDtoList.push(annualIncomeDto);\r\n      })\r\n    }\r\n\r\n\r\n    console.log(\"whole saved is\", insurAveWD)\r\n    return insurAveWD;\r\n  }\r\n\r\n  static mapInsurAveWDToFormGroup(insurAveWD: InsurAveWD, formBuilder: FormBuilder, dateUtilsService: DateUtilsService): FormGroup{\r\n    const insurAveFormGroup: FormGroup = formBuilder.group({\r\n      workingDataId: new FormControl(insurAveWD.workingDataId),\r\n      id: new FormControl(insurAveWD.id, null),\r\n      consolidated: new FormControl(insurAveWD.consolidated, null),\r\n      eligibleMthCount: new FormControl(insurAveWD.eligibleMthCount, null),\r\n      prdnBonusDivisor: new FormControl(insurAveWD.prdnBonusDivisor, null),\r\n      incomeTaxInsurArrayMthly: formBuilder.group({}),\r\n      incomeTaxInsurArrayConsol: formBuilder.group({}),\r\n      captionGroup: formBuilder.group({\r\n        radioOption: new FormControl(insurAveWD.consolidated? \"CON\": \"MTH\", null)\r\n      }),\r\n      footerGroup:formBuilder.group({\r\n        claimNip: new FormControl(insurAveWD.claimNip, null)\r\n      }),\r\n      annualIncomeList: new FormArray([]),\r\n      yrmthList: new FormControl(null, null),\r\n      startYrmth: new FormControl('', null),\r\n      endYrmth: new FormControl('', null),\r\n    });\r\n    InsuranceAvgIncomeComponent.staticGenerateYrMth(insurAveWD, dateUtilsService, \r\n      insurAveFormGroup.get('yrmthList'), \r\n    insurAveFormGroup.get('startYrmth'), insurAveFormGroup.get('endYrmth'));\r\n    let dataRecon:any[] = [];\r\n    const newDataList:any[] = [];\r\n\r\n    if(insurAveWD.consolidated === true){\r\n      //expect 1\r\n      if(insurAveWD.dataList){\r\n        insurAveFormGroup.get('captionGroup.radioOption').setValue('CON');\r\n\r\n        // construct populated for consolidated view\r\n        dataRecon = InsuranceAvgIncomeComponent.staticConstructConsolidatedHeaderData(insurAveWD.dataList, true, false, false, insurAveFormGroup.get('yrmthList').value);\r\n        InsuranceAvgIncomeComponent.staticConstructForm(dataRecon, insurAveFormGroup.get('incomeTaxInsurArrayConsol') as FormGroup, formBuilder, insurAveFormGroup);\r\n\r\n        // construct empty for mthly view\r\n        dataRecon = InsuranceAvgIncomeComponent.staticConstructConsolidatedHeaderData(newDataList, false, true, false,insurAveFormGroup.get('yrmthList').value);\r\n        InsuranceAvgIncomeComponent.staticConstructForm(newDataList, insurAveFormGroup.get('incomeTaxInsurArrayMthly') as FormGroup, formBuilder, insurAveFormGroup);\r\n      }\r\n    }else{\r\n      //list of mthly records\r\n      if(insurAveWD.dataList){\r\n        insurAveFormGroup.get('captionGroup.radioOption').setValue('MTH');\r\n\r\n        // construct populated for mthly view\r\n        dataRecon = InsuranceAvgIncomeComponent.staticConstructConsolidatedHeaderData(insurAveWD.dataList, false, false, false, insurAveFormGroup.get('yrmthList').value);\r\n        InsuranceAvgIncomeComponent.staticConstructForm(dataRecon, insurAveFormGroup.get('incomeTaxInsurArrayMthly') as FormGroup, formBuilder, insurAveFormGroup);\r\n\r\n        //construct empty for consolidated view\r\n        dataRecon = InsuranceAvgIncomeComponent.staticConstructConsolidatedHeaderData(newDataList, true, true, false, insurAveFormGroup.get('yrmthList').value);\r\n        InsuranceAvgIncomeComponent.staticConstructForm(newDataList, insurAveFormGroup.get('incomeTaxInsurArrayConsol') as FormGroup, formBuilder, insurAveFormGroup);\r\n      }\r\n    }\r\n    insurAveFormGroup.get('footerGroup.claimNip').setValue(insurAveWD?.claimNip);\r\n\r\n    //set eligible mth divisor and prdn bonus divisor\r\n    insurAveFormGroup.get('eligibleMthCount').setValue(insurAveWD?.eligibleMthCount);\r\n    insurAveFormGroup.get('prdnBonusDivisor').setValue(insurAveWD?.prdnBonusDivisor);\r\n    insurAveFormGroup.get('consolidated').setValue(insurAveWD?.consolidated);\r\n\r\n    insurAveWD.annualIncomeList.forEach((annualIncomeWD: AnnualIncomeWD) => {\r\n      const annualIncomeFormGroup: FormGroup = AnnualIncomeComponent.mapAnnualIncomeWDToFormGroup(annualIncomeWD, formBuilder, dateUtilsService);\r\n      (insurAveFormGroup.get('annualIncomeList') as FormArray).push(annualIncomeFormGroup);\r\n    });\r\n    return insurAveFormGroup;\r\n  }\r\n\r\n  static staticGenerateYrMth(dataSet: any, dateUtilsService: DateUtilsService, yrmthListCtrl: AbstractControl, startYrmthCtrl:AbstractControl, endYrmthCtrl: AbstractControl): void{\r\n    let claimStartDt;\r\n    let  claimEndDt;\r\n    const colMthRange = [];\r\n    let yrmthList:string[] = [];\r\n    if(dataSet){\r\n      const dateFormat = \"DD-MM-YYYY\";\r\n      const claimStartYrMth:Date =  dateUtilsService.convertStrToDate(dataSet?.startYrmth,dateFormat);\r\n      const claimEndYrMth:Date =  dateUtilsService.convertStrToDate(dataSet.endYrmth, dateFormat);\r\n      claimStartDt = moment(new Date(claimStartYrMth.getFullYear(), claimStartYrMth.getMonth(),1));\r\n      claimEndDt = moment(new Date(claimEndYrMth.getFullYear(), +claimEndYrMth.getMonth()+ 1, 0));\r\n      const colStartDt = claimEndDt.clone().subtract(5, 'months');\r\n      const colEndDt = claimEndDt.clone();\r\n      for(let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')){\r\n        colMthRange.push(mth.format(\"DD-MM-YYYY\"));\r\n      }\r\n      yrmthList = colMthRange.map(x=>  moment(dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\r\n    }\r\n    const cloneYrmthList = JSON.parse(JSON.stringify(yrmthList))\r\n\r\n    yrmthListCtrl.setValue(yrmthList);\r\n    startYrmthCtrl.setValue(\"01-\".concat(cloneYrmthList[0]));\r\n    endYrmthCtrl.setValue(\"01-\".concat(cloneYrmthList[cloneYrmthList.length -1]));\r\n  }\r\n\r\n  static staticConstructForm(dataList: any[], arrformGroup: FormGroup,formBuilder: FormBuilder, aveInsurForm: FormGroup): void {\r\n    //heck solution to add row records/row headers\r\n    console.log(\"the real formgroup is\", arrformGroup)\r\n    if(arrformGroup === aveInsurForm.get('incomeTaxInsurArrayConsol')){\r\n      arrformGroup.addControl('consolidated',InsuranceAvgIncomeComponent.staticAddRow(dataList[0],formBuilder ));\r\n    }else{\r\n      dataList.forEach(x=>{\r\n        // formGroup.push(this.addRow(x));\r\n        arrformGroup.addControl(x?.yrmthReCon,InsuranceAvgIncomeComponent.staticAddRow(x,formBuilder));\r\n      })\r\n    }\r\n  }\r\n\r\n  static staticConstructConsolidatedHeaderData(dataList: any[], consolidated: boolean, empty: boolean, newForm:boolean, yrmthList: any[]): any[]{\r\n\r\n     const sanitizedDataList:any[] =[];\r\n     let sortedData;\r\n     if(empty || newForm || consolidated){\r\n       yrmthList.forEach((yrmth:any, colIndex:number)=>{\r\n         dataList.push({yrmthReCon: yrmth});\r\n       });\r\n       sortedData = dataList;\r\n     }else{\r\n       yrmthList.forEach(yrmth =>{\r\n         for(let i=0; i< dataList.length; i++){\r\n           if(dataList[i].yrmth===yrmth && sanitizedDataList.findIndex(x=>x.yrmth === yrmth)<0){\r\n             sanitizedDataList.push(dataList[i]);\r\n           }\r\n         }\r\n       });\r\n       yrmthList.forEach(yrmth =>{\r\n         const index = sanitizedDataList.findIndex(x=> x.yrmth ===  yrmth);\r\n         if(index<0){\r\n           sanitizedDataList.push({yrmthReCon: yrmth});\r\n         }else{\r\n           sanitizedDataList[index].yrmthReCon = yrmth;\r\n         }\r\n       })\r\n       sortedData = sanitizedDataList.sort((a:any, b:any)=>moment(a.yrmthReCon,\"MM-YYYY\") < moment(b.yrmthReCon,\"MM-YYYY\") ? -1 : 1);\r\n     }\r\n     return sortedData;\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    // this.captionGroup = this.formBuilder.group({\r\n    //   radioOption: new FormControl(this.radioOptions[0].key, null)\r\n    // });\r\n\r\n    this.cols = [\r\n      \"First Year Commission\",\r\n      \"Single Premium\",\r\n      \"Production Commission\",\r\n      \"General Insurance\",\r\n      \"Other Commission\",\r\n      \"Production Bonus\",\r\n      \"Total Payable Commission\",\r\n      \"Renewal Commission\",\r\n      \"Overriding Commission\",\r\n      \"Other Non-Payable Commission\",\r\n      \"Total Non-Payable Components\",\r\n      \"Total Commission\",\r\n    ];\r\n\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void{\r\n\r\n    if(changes.irasDetails?.currentValue){\r\n      console.log(\"the iras\", changes.irasDetails.currentValue)\r\n      this.currIrasDetails = changes.irasDetails?.currentValue;\r\n    }\r\n\r\n    if(changes.trgStartDte){\r\n      console.log(\"current range is\", this.incomeTaxInsurArrayMthly.controls)\r\n      this.generateYrMth(null);\r\n    }\r\n\r\n    if(changes.seHardCopyDetails?.currentValue){\r\n      this.currHardCopyDetails=changes.seHardCopyDetails.currentValue;\r\n      // this.constructDynamicMthRange();\r\n\r\n      this.constructSourceYearOptions();\r\n      this.retrieveReferenceClaimNip();\r\n    }\r\n    if(changes.selectedWDOption?.currentValue){\r\n      this.currSelectedOption = changes.selectedWDOption?.currentValue;\r\n      console.log(\"changed selection\",this.currSelectedOption);\r\n      //on selection, yr mth list has to be remapped\r\n      this.yrmthList = [];\r\n      this.retrieveInsurWD();\r\n    }\r\n\r\n  }\r\n\r\n  tester():void{\r\n    console.log(\"pika\", this.aveInsurForm);\r\n  }\r\n\r\n  getInnerFormControl(fg: FormGroup, controlName: string, innerControlName: string): FormControl{\r\n    return fg?.get(controlName)?.get(innerControlName) as FormControl;\r\n  }\r\n\r\n  constructSourceYearOptions():void{\r\n    const claimEndDt = this.dateUtilsService.convertStrToDate(this.currHardCopyDetails.trgEndDte, \"DD-MM-YYYY\");\r\n    this.sourceYrOptions = [\r\n      {name:  'NA ' + this.dateUtilsService.convertMomentToStr(moment(claimEndDt).subtract(1,'years'), \"YY\"), key: this.dateUtilsService.convertMomentToStr(moment(claimEndDt).subtract(1,'years'), \"YY\")},\r\n      {name:  'NA ' + this.dateUtilsService.convertMomentToStr(moment(claimEndDt), \"YY\"), key: this.dateUtilsService.convertMomentToStr(moment(claimEndDt), \"YY\")},\r\n      {name:  'NA ' + this.dateUtilsService.convertMomentToStr(moment(claimEndDt).add(1,'years'), \"YY\"), key:  this.dateUtilsService.convertMomentToStr(moment(claimEndDt).add(1,'years'), \"YY\")},\r\n    ]\r\n    console.log('the year options', this.sourceYrOptions);\r\n  }\r\n\r\n  generateYrMth(dataSet: any): void{\r\n    //base range is 6 mths from backend, other wise is 6 mths from claim start mth - 6 to claim start mth -1\r\n    let claimStartDt;\r\n    let  claimEndDt;\r\n    if(dataSet){\r\n      console.log(\"dataSet\", dataSet)\r\n      const claimStartYrMth:Date =  this.dateUtilsService.convertStrToDate(dataSet?.startYrmth, this.dateFormat);\r\n      const claimEndYrMth:Date =  this.dateUtilsService.convertStrToDate(dataSet.endYrmth, this.dateFormat);\r\n      claimStartDt = moment(new Date(claimStartYrMth.getFullYear(), claimStartYrMth.getMonth(),1));\r\n      claimEndDt = moment(new Date(claimEndYrMth.getFullYear(), +claimEndYrMth.getMonth()+ 1, 0));\r\n      const colStartDt = claimEndDt.clone().subtract(+this.aveInsurForm?.get('eligibleMthCount').value - 1, 'months');\r\n      const colEndDt = claimEndDt.clone();\r\n\r\n      this.colMthRange = [];\r\n      for(let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')){\r\n        this.colMthRange.push(mth.format(\"DD-MM-YYYY\"));\r\n      }\r\n      this.yrmthList = this.colMthRange.map(x=>  moment(this.dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\r\n      console.log(\"yr mth list\", this.yrmthList)\r\n    }\r\n\r\n    //adds more form control if needed\r\n    if(this.trgStartDte!==undefined && this.trgStartDte !== null){\r\n      console.log(\"incomign trg date\", this.trgStartDte)\r\n      claimStartDt = this.dateUtilsService.convertStrToMoment(this.trgStartDte, this.dateFormat).subtract(6, 'months');\r\n      claimEndDt =     this.dateUtilsService.convertStrToMoment(this.trgStartDte, this.dateFormat).subtract(1, 'months');\r\n      // const colStartDt = claimEndDt.clone().subtract(+this.aveInsurForm?.get('eligibleMthCount').value - 1, 'months');\r\n      // const colEndDt = claimEndDt.clone();\r\n      const colStartDt = claimStartDt.clone();\r\n      const colEndDt = claimEndDt.clone();\r\n\r\n      this.colMthRange = [];\r\n      for(let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')){\r\n        this.colMthRange.push(mth.format(\"DD-MM-YYYY\"));\r\n      }\r\n      this.yrmthList = this.colMthRange.map(x=>  moment(this.dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\r\n      console.log(\"yr mth list\", this.yrmthList)\r\n\r\n      this.adjustFormArray();\r\n\r\n\r\n    }\r\n    const cloneYrmthList = JSON.parse(JSON.stringify(this.yrmthList))\r\n    console.log(\"clone is\", cloneYrmthList)\r\n    this.aveInsurForm.get('yrmthList').setValue(cloneYrmthList);\r\n    this.aveInsurForm.get('startYrmth').setValue(\"01-\".concat(cloneYrmthList[0]));\r\n    this.aveInsurForm.get('endYrmth').setValue(\"01-\".concat(cloneYrmthList[cloneYrmthList.length -1]));\r\n\r\n  }\r\n\r\n  adjustFormArray():void{\r\n    const existingYrMthControls =  Object.keys(this.incomeTaxInsurArrayMthly.controls);\r\n    const diffColHeaders: string[] = this.yrmthList.filter( x => !existingYrMthControls.includes(x));\r\n    console.log(\"added new\", diffColHeaders);\r\n\r\n    if(this.incomeTaxInsurArrayMthly.controls){\r\n\r\n      let formObj;\r\n      diffColHeaders.forEach(yrmth=>{\r\n        formObj = {\r\n          yrmth,\r\n          yrmthReCon: new FormControl(yrmth, null),\r\n          firstYrCommission: new FormControl(null, null),\r\n          singlePremium: new FormControl(null, null),\r\n          prdCommission: new FormControl(null, null),\r\n          generalInsurance: new FormControl(null, null),\r\n          otherCommission: new FormControl(null, null),\r\n          prdBonus: new FormControl(null, null),\r\n          renewalCommission:new FormControl(null, null),\r\n          overridingCommission: new FormControl(null, null),\r\n          otherNonPayable: new FormControl(null, null),\r\n          totalPayableCommission: new FormControl(null, null)\r\n        }\r\n        this.incomeTaxInsurArrayMthly.addControl(yrmth, this.formBuilder.group(formObj));\r\n      });\r\n      console.log(\"new range is filtered\", this.incomeTaxInsurArrayMthly.controls)\r\n    }\r\n  }\r\n\r\n  get incomeTaxInsurArrayMthly(): FormGroup {\r\n    return this.aveInsurForm?.get('incomeTaxInsurArrayMthly') as FormGroup\r\n  }\r\n\r\n  get incomeTaxInsurArrayConsol(): FormGroup {\r\n    return this.aveInsurForm?.get('incomeTaxInsurArrayConsol') as FormGroup\r\n  }\r\n\r\n  get annualIncomeList(): FormArray {\r\n    return this.aveInsurForm.get('annualIncomeList') as FormArray;\r\n  }\r\n\r\n  get footerGroup(): FormGroup {\r\n    return this.aveInsurForm.get('footerGroup') as FormGroup;\r\n  }\r\n  constructForm(dataList: any[], arrformGroup: FormGroup): void {\r\n    //heck solution to add row records/row headers\r\n    if(arrformGroup === this.incomeTaxInsurArrayConsol){\r\n      arrformGroup.addControl('consolidated',this.addRow(dataList[0]));\r\n    }else{\r\n      dataList.forEach(x=>{\r\n        // formGroup.push(this.addRow(x));\r\n        arrformGroup.addControl(x?.yrmthReCon,this.addRow(x));\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  addRow(dataEntry: any) : FormGroup{\r\n       //does validation to makesure the yrmth tallies to yrmthRecon other wise default to 0\r\n       let formObj;\r\n       if(dataEntry?.yrmthReCon!==undefined && dataEntry?.yrmth!==dataEntry?.yrmthReCon){\r\n        formObj = {\r\n          yrmth: dataEntry?.yrmth,\r\n          yrmthReCon: new FormControl(dataEntry?.yrmthReCon, null),\r\n          firstYrCommission: new FormControl(null, null),\r\n          singlePremium: new FormControl(null, null),\r\n          prdCommission: new FormControl(null, null),\r\n          generalInsurance: new FormControl(null, null),\r\n          otherCommission: new FormControl(null, null),\r\n          prdBonus: new FormControl(null, null),\r\n          renewalCommission:new FormControl(null, null),\r\n          overridingCommission: new FormControl(null, null),\r\n          otherNonPayable: new FormControl(null, null),\r\n          totalPayableCommission: new FormControl(null, null)\r\n        }\r\n       }else{\r\n        //if it tallies, use result from db\r\n        formObj = {\r\n          yrmth: dataEntry?.yrmth,\r\n          yrmthReCon: new FormControl(dataEntry?.yrmthReCon, null),\r\n          firstYrCommission: new FormControl(dataEntry?.firstYrCommission, null),\r\n          singlePremium: new FormControl(dataEntry?.singlePremium, null),\r\n          prdCommission: new FormControl(dataEntry?.prdCommission, null),\r\n          generalInsurance: new FormControl(dataEntry?.generalInsurance, null),\r\n          otherCommission: new FormControl(dataEntry?.otherCommission, null),\r\n          prdBonus: new FormControl(dataEntry?.prdBonus, null),\r\n          renewalCommission: new FormControl(dataEntry?.renewalCommission, null),\r\n          overridingCommission: new FormControl(dataEntry?.overridingCommission, null),\r\n          otherNonPayable: new FormControl(dataEntry?.otherNonPayable, null),\r\n          totalPayableCommission: new FormControl(0, null)\r\n        }\r\n       }\r\n       return this.formBuilder.group(formObj);\r\n  }\r\n\r\n  enableCopytoItem(): boolean{\r\n    const claimItemList = this.itemDetailsSection.itemForm?.get('otherSEItemArr') as FormArray;\r\n    let itxItem = null;\r\n    if(claimItemList.length>0){\r\n      itxItem = claimItemList?.controls.filter(x=> x.get('itemType').value === 'AVE')[0];\r\n      return itxItem?.get('latestStatus').value === this.PEND_VERIFY_STATUS || itxItem?.get('latestStatus').value === this.PEND_ACTION_STATUS;\r\n    }else return false;\r\n  }\r\n\r\n  copyToItem(event: any):void{\r\n    this.totalAmtPayEvent.emit(this.getTotalAmtPayable());\r\n  }\r\n\r\n  confirmFile(event: any, key: string){\r\n    console.log(\"clicing option\");\r\n    this.nspConfirmService.onConfirmPopupMsg(event, \"All Working Data fields will be cleared\",key, null,  ()=>{\r\n      console.log(\"confirm change option\");\r\n    });\r\n  }\r\n\r\n  async confirmSwitch(e: Event,  type: string) {\r\n    const value = (e.target as HTMLInputElement).value;\r\n    console.log(\"incoming value\",value)\r\n    if (value !== this.aveInsurForm.get('captionGroup.radioOption').value) {\r\n      e.preventDefault();\r\n      const confirm = await this.showConfirm(e,type);\r\n      if (!confirm) {\r\n        return;\r\n      }else{\r\n        this.aveInsurForm.get('captionGroup.radioOption').setValue(value);\r\n        this.aveInsurForm.get('consolidated').setValue(value === 'CON')\r\n        this.clearForm(value);\r\n      }\r\n    }\r\n  }\r\n\r\n  showConfirm(e: Event, type: string) {\r\n    return new Promise((resolve) => {\r\n      this.confirmationService.confirm({\r\n        target: e.target,\r\n        message: 'All Working Data fields will be cleared',\r\n        header: 'Confirmation',\r\n        key: type,\r\n        icon: 'pi pi-exclamation-triangle',\r\n        acceptLabel: 'Proceed',\r\n        rejectLabel: 'Cancel',\r\n        accept() {\r\n          return resolve(true)\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n  clearForm(radioKey: string): void{\r\n    let yrmthFG:AbstractControl;\r\n    if(radioKey === \"MTH\"){\r\n      Object.keys(this.incomeTaxInsurArrayConsol.controls).forEach(key=>{\r\n        yrmthFG = this.incomeTaxInsurArrayConsol.get(key);\r\n        yrmthFG.get('firstYrCommission').setValue(0);\r\n        yrmthFG.get('singlePremium').setValue(0);\r\n        yrmthFG.get('prdCommission').setValue(0);\r\n        yrmthFG.get('generalInsurance').setValue(0);\r\n        yrmthFG.get('otherCommission').setValue(0);\r\n        yrmthFG.get('prdBonus').setValue(0);\r\n        yrmthFG.get('renewalCommission').setValue(0);\r\n        yrmthFG.get('overridingCommission').setValue(0);\r\n        yrmthFG.get('otherNonPayable').setValue(0);\r\n      })\r\n\r\n    }else{\r\n      Object.keys(this.incomeTaxInsurArrayMthly.controls).forEach(key=>{\r\n        console.log(\"key is\", key)\r\n        yrmthFG = this.incomeTaxInsurArrayMthly.get(key);\r\n        console.log(\"yrt mth\", yrmthFG)\r\n        yrmthFG.get('firstYrCommission').setValue(0);\r\n        yrmthFG.get('singlePremium').setValue(0);\r\n        yrmthFG.get('prdCommission').setValue(0);\r\n        yrmthFG.get('generalInsurance').setValue(0);\r\n        yrmthFG.get('otherCommission').setValue(0);\r\n        yrmthFG.get('prdBonus').setValue(0);\r\n        yrmthFG.get('renewalCommission').setValue(0);\r\n        yrmthFG.get('overridingCommission').setValue(0);\r\n        yrmthFG.get('otherNonPayable').setValue(0);\r\n      })\r\n    }\r\n  }\r\n\r\n  isActive(): boolean{\r\n    return this.currSelectedOption?.obj?.archiveDt===0;\r\n  }\r\n\r\n  getFiltered(unfilteredFA: AbstractControl<any, any>[] ): AbstractControl<any, any>[]{\r\n    return unfilteredFA.filter(x=> x.value.yrmthReCon!==null).filter(item=> this.yrmthList.includes(item.value.yrmthReCon));\r\n  }\r\n\r\n  retrieveInsurWD():void{\r\n    if((!this.currSelectedOption.changes && !this.currSelectedOption.newWD)) {\r\n\r\n      let params = new HttpParams();\r\n      params = params.append(\"workingDataId\", this.currSelectedOption?.obj.workingDataId);\r\n      this.aveInsurForm =  this.formBuilder.group({\r\n        id: new FormControl(null, null),\r\n        workingDataId: new FormControl('',null),\r\n        consolidated: new FormControl(false, null),\r\n        eligibleMthCount: new FormControl(6, null),\r\n        prdnBonusDivisor: new FormControl(12, null),\r\n        incomeTaxInsurArrayMthly: this.formBuilder.group({}),\r\n        incomeTaxInsurArrayConsol: this.formBuilder.group({}),\r\n        captionGroup: this.formBuilder.group({\r\n          radioOption: new FormControl(this.radioOptions[0].key, null)\r\n        }),\r\n        footerGroup:this.formBuilder.group({\r\n          claimNip: new FormControl(0, null)\r\n        }),\r\n        annualIncomeList: new FormArray([]),\r\n        yrmthList:new FormControl([], null),\r\n        startYrmth: new FormControl('', null),\r\n        endYrmth: new FormControl('', null),\r\n      });\r\n      this.seClaimService.retrieveInsurWD({params}).subscribe((resp:any) => {\r\n        if(resp){\r\n            if(resp.status === 200 && resp.body.data){\r\n\r\n              this.generateYrMth(resp.body.data);\r\n              this.populateAveInsurForm(resp.body.data, false);\r\n              this.valueChangeSubscribe();\r\n            }\r\n          }\r\n        },\r\n        (error: any) => {\r\n          console.log(\"error is\" + String(error?.error?.error_desc));\r\n          this.toastService.error(String(error?.error?.error_desc));\r\n        });\r\n\r\n\r\n    }else if(this.currSelectedOption.changes && !this.currSelectedOption.newWD) {\r\n      console.log(\"calling from exist\")\r\n      this.aveInsurForm = this.workingDataWithChanges.get(this.currSelectedOption?.obj?.workingDataId).formGroup as FormGroup;\r\n      this.yrmthList = this.aveInsurForm.get('yrmthList').value;\r\n\r\n      // this.generateYrMth(null);\r\n      this.setRadioOption(this.aveInsurForm.get('consolidated').value);\r\n      console.log(\"get from changes WD Map\", this.aveInsurForm)\r\n      this.loading = false;\r\n\r\n\r\n    }else if(this.currSelectedOption.newWD) {\r\n      console.log(\"get from new WD Map\");\r\n      console.log(\"selected key\",this.currSelectedOption?.key.toString())\r\n      this.aveInsurForm = this.newUnsavedWorkingData.get(this.currSelectedOption?.key.toString()).formGroup as FormGroup;\r\n      if(this.aveInsurForm.get('consolidated')){\r\n        this.setRadioOption(this.aveInsurForm.get('consolidated').value);\r\n        //defaulted to monthly\r\n      }else this.setRadioOption(false);\r\n      this.loading = false;\r\n\r\n    }\r\n  }\r\n\r\n\r\n  setRadioOption(consolidated: boolean): void{\r\n    if(consolidated){\r\n      this.aveInsurForm.get('captionGroup.radioOption').setValue('CON');\r\n    }else this.aveInsurForm.get('captionGroup.radioOption').setValue('MTH');\r\n  }\r\n\r\n  populateAveInsurForm(dataSet: any, newForm: boolean): FormGroup{\r\n    this.dataSet = dataSet;\r\n    const newDataList: any[] = [];\r\n    let dataRecon:any[] = [];\r\n    if(this.dataSet.consolidated === true){\r\n      //expect 1\r\n      if(this.dataSet.dataList){\r\n        this.aveInsurForm.get('captionGroup.radioOption').setValue('CON');\r\n\r\n        // construct populated for consolidated view\r\n        dataRecon = this.constructConsolidatedHeaderData(this.dataSet.dataList, true, false, newForm);\r\n        this.constructForm(dataRecon, this.incomeTaxInsurArrayConsol);\r\n\r\n        // construct empty for mthly view\r\n        this.constructConsolidatedHeaderData(newDataList, false, true, newForm);\r\n        this.constructForm(newDataList, this.incomeTaxInsurArrayMthly);\r\n      }else{\r\n        console.log(\"empty\")\r\n      }\r\n    }else{\r\n      //list of mthly records\r\n      if(this.dataSet.dataList){\r\n        this.aveInsurForm.get('captionGroup.radioOption').setValue('MTH');\r\n\r\n        // construct populated for mthly view\r\n        dataRecon = this.constructConsolidatedHeaderData(this.dataSet.dataList, false, false, newForm);\r\n        this.constructForm(dataRecon, this.incomeTaxInsurArrayMthly);\r\n\r\n        //construct empty for consolidated view\r\n        this.constructConsolidatedHeaderData(newDataList, true, true, newForm);\r\n        this.constructForm(newDataList, this.incomeTaxInsurArrayConsol);\r\n      }\r\n    }\r\n    this.aveInsurForm.get('footerGroup.claimNip').setValue(dataSet?.claimNip);\r\n    this.constructAnnualIncomeForm(dataSet.annualIncomeList);\r\n\r\n    //set eligible mth divisor and prdn bonus divisor\r\n    this.aveInsurForm.get('eligibleMthCount').setValue(dataSet.eligibleMthCount);\r\n    this.aveInsurForm.get('prdnBonusDivisor').setValue(dataSet.prdnBonusDivisor);\r\n    this.aveInsurForm.get('consolidated').setValue(this.dataSet.consolidated);\r\n\r\n    this.loading = false;\r\n    return this.aveInsurForm;\r\n  }\r\n\r\n  valueChangeSubscribe():void{\r\n    // this.subscription = this.captionGroup.get('radioOption').valueChanges.subscribe(x=>{\r\n    //   this.aveInsurForm.get(\"consolidated\").setValue(this.captionGroup.get('radioOption').value===\"CON\")\r\n    // })\r\n   this.aveInsurForm.valueChanges.subscribe(changes => {\r\n\r\n    console.log(\"has changes\", changes)\r\n      this.currSelectedOption.changes = true;\r\n      this.saveSEClaimRequest.workingDataSectionInd = true;\r\n      if(!this.workingDataWithChanges.has(this.currSelectedOption?.obj?.workingDataId)){\r\n      console.log(\"puting to id\",this.currSelectedOption?.obj?.workingDataId);\r\n      console.log(\"during subscribe\", this.aveInsurForm.controls)\r\n        this.workingDataWithChanges.set(this.currSelectedOption?.obj?.workingDataId,\r\n          {\r\n            obj: this.currSelectedOption.obj,\r\n            formGroup: this.aveInsurForm,\r\n          });\r\n        // this.currSelectedOption.newArchived = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  constructAnnualIncomeForm(annualIncomeList: any[]):void{\r\n    if(annualIncomeList.length>0){\r\n      annualIncomeList.forEach((annualIncomeWD: AnnualIncomeWD) => {\r\n        const annualIncomeFormGroup: FormGroup = AnnualIncomeComponent.mapAnnualIncomeWDToFormGroup(annualIncomeWD, this.formBuilder, this.dateUtilsService);\r\n\r\n        // const annualIncomeFormGroup: FormGroup = this.formBuilder.group({\r\n        //   seq: new FormControl(annualIncomeWD.seq, null),\r\n        //   source: new FormControl(annualIncomeWD.source, null),\r\n        //   assessment: new FormControl(annualIncomeWD.assessment === null? null :this.dateUtilsService.convertStrToDate(annualIncomeWD.assessment, \"DD-MM-YYYY\"), null),\r\n        //   acctgPeriodStrt: new FormControl(annualIncomeWD.acctgStartDate === null? null :this.dateUtilsService.convertStrToDate(annualIncomeWD.acctgStartDate, \"DD-MM-YYYY\"), null),\r\n        //   acctgPeriodEnd: new FormControl(annualIncomeWD.acctgEndDate === null? null :this.dateUtilsService.convertStrToDate(annualIncomeWD.acctgEndDate, \"DD-MM-YYYY\"), null),\r\n        //   occupationNature: new FormControl(annualIncomeWD.occupationNature, null),\r\n        //   revenue: new FormControl(annualIncomeWD.revenue, null),\r\n        //   adjProfit: new FormControl(annualIncomeWD.adjProfit, null),\r\n        // });\r\n        (this.aveInsurForm.get('annualIncomeList') as FormArray).push(annualIncomeFormGroup);\r\n      });\r\n    }\r\n  }\r\n\r\n  refreshOtherClaim(): void{\r\n    let params = new HttpParams();\r\n    params = params.append(\"nric\", this.currHardCopyDetails?.headerDto.nsManNric);\r\n    params = params.append(\"yrmthList\", JSON.stringify(this.getYrmthList()));\r\n    params = params.append(\"caseId\", this.currHardCopyDetails?.headerDto.caseId);\r\n\r\n    this.seClaimService.retrieveRefreshOtherInsurClaims({params}).subscribe((resp:any) => {\r\n      if(resp){\r\n        if(resp.status === 200 && resp.body.data){\r\n          const refreshedArr:string[] = [];\r\n          resp.body.data.forEach((y:any)=> {\r\n            const ctrl = this.incomeTaxInsurArrayMthly.get(y.yrmth);\r\n            this.refreshOtherClaimSetValue(ctrl, y);\r\n            refreshedArr.push(y.yrmth);\r\n          });\r\n \r\n\r\n          const existingYrMthControls =  Object.keys(this.incomeTaxInsurArrayMthly.controls);\r\n          const unrefreshed: string[] = refreshedArr.filter( x => !existingYrMthControls.includes(x));\r\n          unrefreshed.forEach(unrefreshMths=> {\r\n            this.refreshOtherClaimSetValue(this.incomeTaxInsurArrayConsol.get(unrefreshMths), null);\r\n          })\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  refreshOtherClaimSetValue(ctrl: AbstractControl, dataR: any): void{\r\n    if(ctrl){\r\n      ctrl.get('firstYrCommission').setValue(dataR.firstYrCommission || null);\r\n      ctrl.get('generalInsurance').setValue(dataR.generalInsurance || null);\r\n      ctrl.get('otherCommission').setValue(dataR.otherCommission || null);\r\n      ctrl.get('otherNonPayable').setValue(dataR.otherNonPayable || null);\r\n      ctrl.get('overridingCommission').setValue(dataR.overridingCommission || null);\r\n      ctrl.get('prdBonus').setValue(dataR.prdBonus || null);\r\n      ctrl.get('prdCommission').setValue(dataR.prdCommission || null);\r\n      ctrl.get('renewalCommission').setValue(dataR.renewalCommission || null);\r\n      ctrl.get('singlePremium').setValue(dataR.singlePremium || null);\r\n    }\r\n  }\r\n\r\n  enableRefreshOClaim():boolean{\r\n    return this.aveInsurForm.get('captionGroup.radioOption').value==='MTH'\r\n  }\r\n\r\n  constructConsolidatedHeaderData(dataList: any[], consolidated: boolean, empty: boolean, newForm:boolean): any[]{\r\n   //logic\r\n   console.log(\"before data\", dataList)\r\n   //12 columns of 12 mths from claimstartdate/trgStartDte - 13 mths to trgStartDte - 1 mths\r\n    const sanitizedDataList:any[] =[];\r\n    let sortedData;\r\n    if(empty || newForm || consolidated){\r\n      console.log(\"before yrmthlist\", this.yrmthList)\r\n      this.colMthRange.forEach((mth:any, colIndex:number)=>{\r\n        dataList.push({yrmthReCon: moment(this.dateUtilsService.convertStrToDate(mth, \"DD-MM-YYYY\")).format(\"MM-YYYY\")});\r\n      });\r\n      sortedData = dataList;\r\n    }else{\r\n      this.yrmthList.forEach(yrmth =>{\r\n        for(let i=0; i< dataList.length; i++){\r\n          if(dataList[i].yrmth===yrmth && sanitizedDataList.findIndex(x=>x.yrmth === yrmth)<0){\r\n            sanitizedDataList.push(dataList[i]);\r\n          }\r\n        }\r\n      });\r\n      this.yrmthList.forEach(yrmth =>{\r\n        const index = sanitizedDataList.findIndex(x=> x.yrmth ===  yrmth);\r\n        if(index<0){\r\n          sanitizedDataList.push({yrmthReCon: yrmth});\r\n        }else{\r\n          sanitizedDataList[index].yrmthReCon = yrmth;\r\n        }\r\n      })\r\n      console.log(\"after data\", sanitizedDataList)\r\n      sortedData = sanitizedDataList.sort((a:any, b:any)=>moment(a.yrmthReCon,\"MM-YYYY\") < moment(b.yrmthReCon,\"MM-YYYY\") ? -1 : 1);\r\n    }\r\n    console.log(\"sorted data is\", sortedData)\r\n\r\n    return sortedData;\r\n  }\r\n\r\n  getForm(){\r\n    console.log(\"rikza\", this.incomeTaxInsurArrayMthly.controls);\r\n  }\r\n\r\n  getYrmthList(): string[]\r\n  {\r\n    return this.aveInsurForm.get('yrmthList').value as string[];\r\n  }  \r\n\r\n  // original datalist backcount, if datalist length = 6, colmthrange = 4, backcount with starting index =2 slice through datalist.length\r\n  //dependent on eligible mths\r\n  getSumOfCurrRow(formCtrlName: string): number\r\n  {\r\n    let sum = 0;\r\n    let fieldCtrl;\r\n    this.getYrmthList().slice(this.maxMths - this.aveInsurForm?.get('eligibleMthCount').value, this.maxMths).forEach(yrmth => {//for each mth\r\n      fieldCtrl = this.incomeTaxInsurArrayMthly?.get(yrmth)?.get(formCtrlName).value || 0; \r\n      // fieldCtrl is field level, i.e. firstYrCommission\r\n      sum+=fieldCtrl;\r\n    });\r\n    return sum;\r\n  }\r\n\r\n  getTotalPayableCol(yrmthCtrlName: string, formArr: FormGroup):number{\r\n    let sum = 0;\r\n    sum =\r\n    Number(formArr.get(yrmthCtrlName).get('firstYrCommission').value || 0 )\r\n    +  Number(formArr.get(yrmthCtrlName).get('singlePremium').value || 0 )\r\n    +  Number(formArr.get(yrmthCtrlName).get('prdCommission').value || 0 )\r\n    +  Number(formArr.get(yrmthCtrlName).get('generalInsurance').value || 0 )\r\n    +  Number(formArr.get(yrmthCtrlName).get('otherCommission').value || 0 )\r\n    +  Number(formArr.get(yrmthCtrlName).get('prdBonus').value || 0 );\r\n    return sum;\r\n\r\n  }\r\n\r\n  getTotalNonPayableCol(yrmthCtrlName: string, formArr: FormGroup):number{\r\n    let sum = 0;\r\n    sum =\r\n    Number(formArr.get(yrmthCtrlName).get('renewalCommission').value)\r\n    +  Number(formArr.get(yrmthCtrlName).get('overridingCommission').value)\r\n    +  Number(formArr.get(yrmthCtrlName).get('otherNonPayable').value)\r\n      return sum;\r\n  }\r\n\r\n  getSumOfTotalPayable(): number\r\n  {\r\n    let sum = 0;\r\n    sum =\r\n    Number(this.getSumOfCurrRow('firstYrCommission'))\r\n    + Number(this.getSumOfCurrRow('singlePremium'))\r\n    + Number(this.getSumOfCurrRow('prdCommission'))\r\n    + Number(this.getSumOfCurrRow('generalInsurance'))\r\n    + Number(this.getSumOfCurrRow('otherCommission'))\r\n    + Number(this.getSumOfCurrRow('prdBonus'))\r\n\r\n    return sum;\r\n  }\r\n  getSumOfTotalNonPayable(): number\r\n  {\r\n    let sum = 0;\r\n    sum =\r\n    Number(this.getSumOfCurrRow('renewalCommission'))\r\n    + Number(this.getSumOfCurrRow('overridingCommission'))\r\n    + Number(this.getSumOfCurrRow('otherNonPayable'))\r\n\r\n    return sum;\r\n  }\r\n\r\n  roundVal (value: number) {\r\n    return Math.round(value);\r\n  }\r\n\r\n  getOverridingCommPerc(): number{\r\n    let rslt = 0;\r\n    if(this.captionGroup.get('radioOption').value==='MTH'){\r\n      rslt = this.getSumOfCurrRow('overridingCommission')/(this.getSumOfTotalNonPayable() + this.getSumOfTotalPayable())* 100 || 0;\r\n    }else {\r\n      rslt = this.incomeTaxInsurArrayConsol.get('consolidated').get('overridingCommission').value/(\r\n        this.getTotalNonPayableCol('consolidated', this.incomeTaxInsurArrayConsol) + this.getTotalPayableCol('consolidated', this.incomeTaxInsurArrayConsol))* 100 || 0;\r\n      \r\n    }\r\n    return rslt;\r\n\r\n    // return this.roundVal(this.captionGroup.get('radioOption').value==='MTH'? (this.getSumOfCurrRow('overridingCommission')/this.aveInsurForm?.get('eligibleMthCount').value)/\r\n    // ((this.getSumOfTotalNonPayable() + this.getSumOfTotalPayable())/this.aveInsurForm?.get('eligibleMthCount').value) * 100:\r\n    // (this.incomeTaxInsurArrayConsol.get('consolidated').get('overridingCommission').value/this.aveInsurForm?.get('eligibleMthCount').value)/\r\n    // (this.computeConsolidatedAvgTotalPayable('consolidated',this.incomeTaxInsurArrayConsol) + this.computeConsolidatedAvgTotalNonPayable('consolidated',this.incomeTaxInsurArrayConsol)) * 100);\r\n  }\r\n\r\n  computeConsolidatedAvgTotalPayable(ctrlName: string, formArr: FormGroup): number\r\n  {\r\n    let avgSum = 0;\r\n    avgSum=\r\n    Number(formArr.get(ctrlName).get('firstYrCommission').value /this.aveInsurForm?.get('eligibleMthCount').value)\r\n    +  Number(formArr.get(ctrlName).get('singlePremium').value/this.aveInsurForm?.get('eligibleMthCount').value)\r\n    +  Number(formArr.get(ctrlName).get('prdCommission').value/this.aveInsurForm?.get('eligibleMthCount').value)\r\n    +  Number(formArr.get(ctrlName).get('generalInsurance').value/this.aveInsurForm?.get('eligibleMthCount').value)\r\n    +  Number(formArr.get(ctrlName).get('otherCommission').value/this.aveInsurForm?.get('eligibleMthCount').value)\r\n    +  Number(formArr.get(ctrlName).get('prdBonus').value/this.aveInsurForm?.get('prdnBonusDivisor').value)\r\n\r\n    return avgSum;\r\n  }\r\n\r\n  computeConsolidatedAvgTotalNonPayable(ctrlName: string, formArr: FormGroup): number\r\n  {\r\n    let avgSum = 0;\r\n    avgSum=\r\n    Number(formArr.get(ctrlName).get('renewalCommission').value /this.colMthRange.length)\r\n    +  Number(formArr.get(ctrlName).get('overridingCommission').value/this.colMthRange.length)\r\n    +  Number(formArr.get(ctrlName).get('otherNonPayable').value/this.colMthRange.length);\r\n\r\n    return avgSum;\r\n  }\r\n\r\n  retrieveReferenceClaimNip(): void{\r\n\r\n    console.log(\"retrieving reference\")\r\n\r\n    let params = new HttpParams();\r\n    params = params.append(\"claimId\", this.currHardCopyDetails?.claimId);\r\n    params = params.append(\"trgEndYear\", this.dateUtilsService.convertDateToStr(\r\n      this.dateUtilsService.convertStrToDate(this.currHardCopyDetails.trgEndDte, \"DD-MM-YYYY\"), 'YYYY'));\r\n    this.seClaimService.retrieveReferenceClaimNip({params}).subscribe((resp:any) => {\r\n      if(resp){\r\n        if(resp.status === 200){\r\n          this.setProposedNip(resp.body.data);\r\n\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n  setProposedNip(refNip: any): void{\r\n    if(refNip === undefined || refNip === null){\r\n      if(this.getOverridingCommPerc() < 20){\r\n        this.proposedNIP = 75;\r\n      }else {\r\n        this.proposedNIP =  80;\r\n      }\r\n    }else {\r\n      this.proposedNIP =refNip >=80?80:refNip;\r\n    }\r\n    console.log(\"proposed NIP is \", this.proposedNIP)\r\n  }\r\n\r\n  getTotalAmtPayable(): number{\r\n    let amtPayable = 0;\r\n    if(this.captionGroup.get('radioOption').value==='MTH'){\r\n      amtPayable = this.aveInsurForm.get('footerGroup.claimNip').value /100 *\r\n      this.getSumOfTotalPayable()/this.aveInsurForm?.get('eligibleMthCount').value + 0.42 * this.getSumOfCurrRow('firstYrCommission')/this.aveInsurForm?.get('eligibleMthCount').value;\r\n\r\n    }else {\r\n      amtPayable = this.aveInsurForm.get('footerGroup.claimNip').value /100 * this.computeConsolidatedAvgTotalPayable('consolidated',this.incomeTaxInsurArrayConsol) + 0.42 *\r\n      this.incomeTaxInsurArrayConsol.get('consolidated').get('firstYrCommission').value /this.aveInsurForm?.get('eligibleMthCount').value\r\n    }\r\n    return this.roundVal(amtPayable);\r\n  }\r\n\r\n  getTotalAmtPayableDesc(): string{\r\n    let amtPayableDesc = \"\";\r\n\r\n    if(this.captionGroup.get('radioOption').value==='MTH'){\r\n      amtPayableDesc = `${String(this.aveInsurForm.get('footerGroup.claimNip').value)} % * TPC(${String(this.roundVal2Dec(this.getSumOfTotalPayable()/this.aveInsurForm?.get('eligibleMthCount').value))})\r\n      + 42% * FYC (${this.roundVal2Dec(this.getSumOfCurrRow('firstYrCommission')/this.aveInsurForm?.get('eligibleMthCount').value)}  `;\r\n    }else{\r\n      amtPayableDesc = `${String(this.aveInsurForm.get('footerGroup.claimNip').value)} % * TPC(${String(this.roundVal2Dec(this.computeConsolidatedAvgTotalPayable('consolidated',this.incomeTaxInsurArrayConsol)))}) \r\n      + 42% * FYC ( ${String(this.roundVal2Dec(this.incomeTaxInsurArrayConsol.get('consolidated').get('firstYrCommission').value /this.aveInsurForm?.get('eligibleMthCount').value))}) `;\r\n\r\n    }\r\n    return amtPayableDesc;\r\n\r\n  }\r\n\r\n  roundVal2Dec(num:number): number{\r\n    return Math.round((num + Number.EPSILON) * 100) / 100;\r\n  }\r\n\r\n  isValidNumber(obj: any): boolean{\r\n    return !isNaN(obj);\r\n  }\r\n\r\n  isTradeIncomeMorethanTotalCommision(): boolean{\r\n    let irasRecord;\r\n    //if actual\r\n    if(this.irasDetails?.filter((x:any)=> x.basis === \"2\").length>0){\r\n      irasRecord = this.irasDetails?.filter((x:any)=> x.basis === \"2\")[0];\r\n    //if provisional\r\n    }else if(this.irasDetails?.filter((x:any)=> x.basis === \"1\").length>0){\r\n      irasRecord = this.irasDetails?.filter((x:any)=> x.basis === \"1\")[0];\r\n    }\r\n    if(this.aveInsurForm.get('captionGroup.radioOption').value==='MTH'){\r\n      return irasRecord?.tradeIncome> (this.getSumOfTotalNonPayable() + this.getSumOfTotalPayable());\r\n    }else{\r\n      return irasRecord?.tradeIncome > (this.getTotalNonPayableCol('consolidated', this.incomeTaxInsurArrayConsol) + this.getTotalPayableCol('consolidated', this.incomeTaxInsurArrayConsol));\r\n    }\r\n  }\r\n\r\n  isWorkingDataTotalPayableNotEqualItemApprAmt(): boolean{\r\n    const claimItemList = this.itemDetailsSection.itemForm?.get('otherSEItemArr') as FormArray;\r\n    let itxItem = null;\r\n    let annualtotalPayable = 0;\r\n    if(claimItemList.length>0){\r\n      itxItem = claimItemList?.controls.find(x=> x.get('itemType').value === 'AVE');\r\n      const apprAmt = itxItem?.get('apprAmt')?.value;\r\n      console.log(\"appr amt in ave is \", apprAmt);\r\n      if(this.aveInsurForm.get('captionGroup.radioOption').value==='MTH'){\r\n        annualtotalPayable = this. getSumOfTotalPayable();\r\n      }else {\r\n        annualtotalPayable = this.getTotalPayableCol('consolidated', this.incomeTaxInsurArrayConsol);\r\n      }\r\n      return annualtotalPayable !== apprAmt;\r\n\r\n    }else return false;\r\n  }\r\n\r\n  exportToCSV(dataTable: Table): void{\r\n    console.log(\"export to csv\");\r\n    const columns =\r\n    [{field: 'rowHeader', header: \" \", index: 0, customExportHeader: \" \"},\r\n      {field: 'mthAccount', header: String(this.aveInsurForm.get('eligibleMthCount').value).concat('-mth Account'), index: 1},\r\n      {field: 'aveMthAccount', header: 'Ave Monthly', index: 2}]\r\n      const subsetYrmth = this.getYrmthList().slice( (this.maxMths - this.aveInsurForm?.get('eligibleMthCount').value));\r\n      for(let i = 0; i< subsetYrmth.length; i++ ){\r\n        columns.push({field: String(subsetYrmth[i]), header:String(subsetYrmth[i]), index: i})\r\n      }\r\n      const dtoList:any[] = [\r\n        {rowHeader: 'First Year Commission'},\r\n        {rowHeader: 'Single Premium'},\r\n        {rowHeader: 'Production Commission'},\r\n        {rowHeader: \"General Insurance\"},\r\n        {rowHeader: \"Other Commission\"},\r\n        {rowHeader: \"Production Bonus\"},\r\n        {rowHeader: \"Total Payable Commission\"},\r\n        {rowHeader: \"Renewal Commission\"},\r\n        {rowHeader: \"Overriding Commission\"},\r\n        {rowHeader: \"Other Non-Payable Commission\"},\r\n        {rowHeader: \"Total Non-Payable Components\"},\r\n        {rowHeader: \"Total Commission\"},\r\n\r\n      ];\r\n      const dataList: InsurITXSubWD[] = [];\r\n      let yrmthFG;\r\n      let subWD: InsurITXSubWD;\r\n\r\n      if(this.aveInsurForm?.get('captionGroup.radioOption').value==='CON'){\r\n        this.exportAddConsol(yrmthFG, dataList, subWD, dtoList);\r\n      }else{\r\n        this.exportAddMthly(yrmthFG, dataList, subWD, subsetYrmth, dtoList);\r\n      }\r\n      this.exportUtilsService.exportCSV(dataTable, dtoList,10, columns,\r\n        \"insurance_average_\".concat(formatDate(new Date(),\"dd-MM-YYYY\", this.localeId)));\r\n  }\r\n\r\n  exportAddConsol(yrmthFG: any, dataList: InsurITXSubWD[], subWD: InsurITXSubWD, dtoList: any[]){\r\n    if(this.aveInsurForm.get('consolidated').value) {\r\n      yrmthFG = ((this.aveInsurForm.get('incomeTaxInsurArrayConsol') as FormGroup)).get('consolidated');\r\n      subWD = {\r\n        firstYrCommission: yrmthFG.get(\"firstYrCommission\").value,\r\n        singlePremium: yrmthFG.get(\"singlePremium\").value,\r\n        prdCommission:yrmthFG.get(\"prdCommission\").value,\r\n        generalInsurance: yrmthFG.get(\"generalInsurance\").value,\r\n        otherCommission: yrmthFG.get(\"otherCommission\").value,\r\n        prdBonus: yrmthFG.get(\"prdBonus\").value,\r\n        renewalCommission: yrmthFG.get(\"renewalCommission\").value,\r\n        overridingCommission: yrmthFG.get(\"overridingCommission\").value,\r\n        otherNonPayable: yrmthFG.get(\"otherNonPayable\").value,\r\n      }\r\n      dataList.push(subWD);\r\n\r\n      dataList.forEach(x=>{\r\n\r\n        //add consol\r\n        dtoList[0]['mthAccount'] = x.firstYrCommission;\r\n        dtoList[1]['mthAccount'] = x.singlePremium;\r\n        dtoList[2]['mthAccount'] = x.prdCommission;\r\n        dtoList[3]['mthAccount'] = x.generalInsurance;\r\n        dtoList[4]['mthAccount'] = x.otherCommission;\r\n        dtoList[5]['mthAccount'] = x.prdBonus;\r\n        dtoList[6]['mthAccount'] = x.firstYrCommission + x.singlePremium + x.prdCommission + x.generalInsurance + x.otherCommission + x.prdBonus;//total payable commission\r\n        dtoList[7]['mthAccount'] = x.renewalCommission;\r\n        dtoList[8]['mthAccount'] = x.overridingCommission;\r\n        dtoList[9]['mthAccount'] = x.otherNonPayable;\r\n        dtoList[10]['mthAccount'] = x.renewalCommission + x.overridingCommission + x.otherNonPayable;\r\n        dtoList[11]['mthAccount'] = +dtoList[6]['mthAccount'] + +dtoList[10]['mthAccount']\r\n\r\n      \r\n        dtoList[0]['aveMthAccount'] = dtoList[0]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n        dtoList[1]['aveMthAccount'] = dtoList[1]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n        dtoList[2]['aveMthAccount'] = dtoList[2]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n        dtoList[3]['aveMthAccount'] = dtoList[3]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n        dtoList[4]['aveMthAccount'] = dtoList[4]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n        dtoList[5]['aveMthAccount'] = dtoList[5]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n        dtoList[6]['aveMthAccount'] = dtoList[6]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n        dtoList[7]['aveMthAccount'] = dtoList[7]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n        dtoList[8]['aveMthAccount'] = dtoList[8]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n        dtoList[9]['aveMthAccount'] = dtoList[9]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n        dtoList[10]['aveMthAccount'] = dtoList[10]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n        dtoList[11]['aveMthAccount'] = dtoList[11]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  exportAddMthly(yrmthFG: any, dataList: InsurITXSubWD[], subWD: InsurITXSubWD, subsetYrmth: any[], dtoList: any[]){\r\n    //mthly\r\n    subsetYrmth.forEach(key=>{\r\n      yrmthFG = this.aveInsurForm.get('incomeTaxInsurArrayMthly').get(key);\r\n      subWD = {\r\n        yrmth: yrmthFG.get(\"yrmthReCon\").value,\r\n        firstYrCommission: yrmthFG.get(\"firstYrCommission\").value,\r\n        singlePremium: yrmthFG.get(\"singlePremium\").value,\r\n        prdCommission:yrmthFG.get(\"prdCommission\").value,\r\n        generalInsurance: yrmthFG.get(\"generalInsurance\").value,\r\n        otherCommission: yrmthFG.get(\"otherCommission\").value,\r\n        prdBonus: yrmthFG.get(\"prdBonus\").value,\r\n        renewalCommission: yrmthFG.get(\"renewalCommission\").value,\r\n        overridingCommission: yrmthFG.get(\"overridingCommission\").value,\r\n        otherNonPayable: yrmthFG.get(\"otherNonPayable\").value,\r\n      }\r\n      dataList.push(subWD);\r\n      }\r\n    );\r\n\r\n     dataList.forEach(x=>{\r\n        dtoList[0][x.yrmth] = x.firstYrCommission;\r\n        dtoList[1][x.yrmth] = x.singlePremium;\r\n        dtoList[2][x.yrmth] = x.prdCommission;\r\n        dtoList[3][x.yrmth] = x.generalInsurance;\r\n        dtoList[4][x.yrmth] = x.otherCommission;\r\n        dtoList[5][x.yrmth] = x.prdBonus;\r\n        dtoList[6][x.yrmth] = x.firstYrCommission + x.singlePremium + x.prdCommission + x.generalInsurance + x.otherCommission + x.prdBonus;\r\n        dtoList[7][x.yrmth] = x.renewalCommission;\r\n        dtoList[8][x.yrmth] = x.overridingCommission;\r\n        dtoList[9][x.yrmth] = x.otherNonPayable;\r\n        dtoList[10][x.yrmth] = x.renewalCommission + x.overridingCommission + x.otherNonPayable;\r\n        dtoList[11][x.yrmth] = +dtoList[6][x.yrmth] + +dtoList[10][x.yrmth]\r\n\r\n\r\n \r\n    });\r\n    dtoList[0]['mthAccount'] = this.getSumByField(dataList.map(x=> {return x.firstYrCommission}));\r\n    dtoList[1]['mthAccount'] = this.getSumByField(dataList.map(x=> {return x.singlePremium}));\r\n    dtoList[2]['mthAccount'] = this.getSumByField(dataList.map(x=> {return x.prdCommission}));\r\n    dtoList[3]['mthAccount'] = this.getSumByField(dataList.map(x=> {return x.generalInsurance}));\r\n    dtoList[4]['mthAccount'] = this.getSumByField(dataList.map(x=> {return x.otherCommission}));\r\n    dtoList[5]['mthAccount'] = this.getSumByField(dataList.map(x=> {return x.prdBonus}));\r\n    dtoList[6]['mthAccount'] =  +dtoList[0]['mthAccount'] + +dtoList[1]['mthAccount'] + +dtoList[2]['mthAccount'] + +dtoList[3]['mthAccount'] + +dtoList[4]['mthAccount'] + +dtoList[5]['mthAccount'];//total payable commission\r\n    dtoList[7]['mthAccount'] = this.getSumByField(dataList.map(x=> {return x.renewalCommission}));\r\n    dtoList[8]['mthAccount'] = this.getSumByField(dataList.map(x=> {return x.overridingCommission}));\r\n    dtoList[9]['mthAccount'] = this.getSumByField(dataList.map(x=> {return x.otherNonPayable}));\r\n    dtoList[10]['mthAccount'] = +dtoList[7]['mthAccount'] + +dtoList[8]['mthAccount'] + +dtoList[9]['mthAccount'];\r\n    dtoList[11]['mthAccount'] = +dtoList[6]['mthAccount'] + +dtoList[10]['mthAccount'];\r\n\r\n\r\n    dtoList[0]['aveMthAccount'] = dtoList[0]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n    dtoList[1]['aveMthAccount'] = dtoList[1]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n    dtoList[2]['aveMthAccount'] = dtoList[2]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n    dtoList[3]['aveMthAccount'] = dtoList[3]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n    dtoList[4]['aveMthAccount'] = dtoList[4]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n    dtoList[5]['aveMthAccount'] = dtoList[5]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n    dtoList[6]['aveMthAccount'] = dtoList[6]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n    dtoList[7]['aveMthAccount'] = dtoList[7]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n    dtoList[8]['aveMthAccount'] = dtoList[8]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n    dtoList[9]['aveMthAccount'] = dtoList[9]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n    dtoList[10]['aveMthAccount'] = dtoList[10]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n    dtoList[11]['aveMthAccount'] = dtoList[11]['mthAccount'] / this.aveInsurForm?.get('eligibleMthCount').value;\r\n\r\n  }\r\n\r\n  getSumByField(fieldArray: number[]): number{\r\n    const initValue = 0;\r\n    const sum = fieldArray.reduce((accumulator, currentValue) => accumulator + currentValue, initValue);\r\n    return sum;\r\n  }\r\n\r\n    //allows input on need basis\r\n    hasValidAuthorityAndStation(): boolean{\r\n      if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_VERIFIER) && \r\n        this.station === NSPAY2_STATION.STATION_VERIFICATION){\r\n          return true;\r\n        }\r\n      if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) && \r\n      this.station === NSPAY2_STATION.STATION_CERTIFICATION) {\r\n        return false;\r\n      }\r\n      if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) && \r\n      this.station === NSPAY2_STATION.STATION_APPROVAL) {\r\n        return false;\r\n      }\r\n      return false;\r\n    }\r\n}\r\n","<p-messages severity=\"warn\" *ngIf = \"aveInsurForm.get('eligibleMthCount').value<6\">\r\n    <ng-template key=\"CLM-W016\" pTemplate >\r\n        <div class=\"ml-2\">{{ claimJson.nspay2App.claim.warning['CLM-W016'] }}</div>\r\n    </ng-template>\r\n</p-messages>\r\n<p-messages severity=\"warn\" *ngIf = \"isTradeIncomeMorethanTotalCommision()\">\r\n    <ng-template key=\"CLM-W015\" pTemplate >\r\n        <div class=\"ml-2\">{{ claimJson.nspay2App.claim.warning['CLM-W015'] }}</div>\r\n    </ng-template>\r\n</p-messages>\r\n<p-messages severity=\"warn\" *ngIf = \"isWorkingDataTotalPayableNotEqualItemApprAmt()\">\r\n    <ng-template key=\"CLM-W026\" pTemplate >\r\n        <div class=\"ml-2\">{{ claimJson.nspay2App.claim.warning['CLM-W026'] }}</div>\r\n    </ng-template>\r\n</p-messages>\r\n\r\n\r\n\r\n<p-card>\r\n    <form [formGroup] = \"aveInsurForm\">\r\n        <div class=\"grid\" style=\"margin-top:1em; margin-left: 220px\">\r\n            <div class = \"col-12 justify-content-start gap-4 flex align-items-center\" >\r\n                <div>Eligible Months:&nbsp;&nbsp;<p-inputNumber\r\n                    [min]=\"1\" [max]=\"6\" [inputStyle]=\"{'width': '5em', 'text-align':'right'}\"\r\n                    formControlName = \"eligibleMthCount\" [disabled] = \"!isActive() || readOnly || !hasValidAuthorityAndStation()\"></p-inputNumber>\r\n                    <small *ngIf=\"aveInsurForm.get('eligibleMthCount')?.touched && !isValidNumber(aveInsurForm.get('eligibleMthCount')?.value)\"\r\n                    class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V002\"\r\n                    [translateValues]=\"{ field: 'Eligible Months' }\">\r\n                    </small>\r\n                </div>\r\n\r\n                <div>Production Bonus Divisor:&nbsp;&nbsp;<p-inputNumber\r\n                    [min]=\"1\" [max]=\"12\" [inputStyle]=\"{'width': '5em', 'text-align':'right'}\"\r\n                    formControlName = \"prdnBonusDivisor\" [disabled] = \"!isActive() || readOnly || !hasValidAuthorityAndStation()\"></p-inputNumber>\r\n                    <small *ngIf=\"aveInsurForm.get('prdnBonusDivisor')?.touched && !isValidNumber(aveInsurForm.get('prdnBonusDivisor')?.value)\"\r\n                    class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V002\"\r\n                    [translateValues]=\"{ field: 'Production Bonus Divisor' }\">\r\n                    </small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- [value]=\"yrmthList\" -->\r\n\r\n        <div *ngIf = \"currSelectedOption!==undefined\">\r\n            <div [formGroup]=\"incomeTaxInsurArrayMthly\">\r\n                <p-table *ngIf = \"aveInsurForm.controls['captionGroup'].get('radioOption').value==='MTH'; else consolOption\"\r\n                [value]=\"getYrmthList()\"\r\n\r\n                [filterDelay]=\"0\"\r\n                [loading] = \"loading\"\r\n                styleClass=\"p-datatable-gridlines p-datatable-striped\"\r\n                responsiveLayout=\"scroll\"\r\n                #mthlyTable\r\n                >\r\n                    <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                            <th scope=\"col\" [style]=\"{'width':'200px'}\"></th>\r\n                            <th scope=\"col\" [attr.colspan]=\"aveInsurForm.controls['yrmthList'].value.length + 2\">\r\n                                <form [formGroup] = \"captionGroup\">\r\n                                    <div class=\"grid\">\r\n                                        <div class = \"col-6 nsp-align-left\">\r\n                                            <p-button icon=\"pi pi-file-o\" (click) = \"exportToCSV(mthlyTable)\" [style]=\"{'margin-left': '.5em', 'margin-right': '.5em'}\"\r\n                                            ></p-button>\r\n                                            <!--fieldset is needed to group the radio buyttons together for custom radio input buttons-->\r\n                                            <fieldset *ngIf=\"isActive() && !readOnly && hasValidAuthorityAndStation(); else disabledRadio\" [style]=\"{'display':'inline'}\">\r\n                                                <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                    <input\r\n                                                    id=\"custom-radio\"\r\n                                                    class = \"p-radiobutton\"\r\n                                                    type=\"radio\"\r\n                                                    (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                    value=\"MTH\"\r\n                                                    formControlName=\"radioOption\"\r\n                                                    />\r\n                                                    <label class=\"custom-control-label\">Monthly</label>\r\n                                                </div>\r\n                                                <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                    <input\r\n                                                    id=\"con-custom-radio\"\r\n                                                    class = \"p-radiobutton\"\r\n                                                    type=\"radio\"\r\n                                                    (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                    value=\"CON\"\r\n                                                    formControlName=\"radioOption\"\r\n                                                    />\r\n                                                    <label class=\"custom-control-label\">Consolidated</label>\r\n                                                </div>\r\n                                            </fieldset>\r\n                                            <ng-template #disabledRadio>\r\n                                                <fieldset disabled [style]=\"{'display':'inline'}\">\r\n                                                    <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                        <input\r\n                                                        id=\"custom-radio\"\r\n                                                        class = \"p-radiobutton\"\r\n                                                        type=\"radio\"\r\n                                                        (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                        value=\"MTH\"\r\n                                                        formControlName=\"radioOption\"\r\n                                                        />\r\n                                                        <label class=\"custom-control-label\">Monthly</label>\r\n\r\n                                                    </div>\r\n                                                    <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                        <input\r\n                                                        id=\"con-custom-radio\"\r\n                                                        class = \"p-radiobutton\"\r\n                                                        type=\"radio\"\r\n                                                        (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                        value=\"CON\"\r\n                                                        formControlName=\"radioOption\"\r\n                                                        />\r\n                                                        <label class=\"custom-control-label\">Consolidated</label>\r\n                                                    </div>\r\n                                                </fieldset>\r\n                                            </ng-template>\r\n                                        </div>\r\n                                        <p-confirmPopup key = \"confirmWarning\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n\r\n                                        <div class = \"col-6 nsp-align-right\">\r\n                                            <button  *ngIf=\"isActive() && !readOnly && hasValidAuthorityAndStation()\"  id = \"refreshOtherClaim\" (click)=\"refreshOtherClaim()\" pButton label=\"Refresh from Other Claim\" [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\"\r\n                                            [disabled] = \"!enableRefreshOClaim()\">\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </th>\r\n                        </tr>\r\n                        <tr >\r\n                            <th scope=\"col\" [style]=\"{'width': '10em'}\">Month/Year</th>\r\n                            <th scope=\"col\" [style]=\"{'text-align': 'center'}\">{{ aveInsurForm.get('eligibleMthCount').value }}-mth Account</th>\r\n                            <th scope=\"col\" [style]=\"{'text-align': 'center'}\">Ave Monthly</th>\r\n                            <!-- original datalist backcount, if datalist length = 6, colmthrange = 4, backcount with starting index =2 slice through datalist.length -->\r\n                            <!-- <th [style]=\"{'text-align': 'center'}\" *ngFor=\"let class of incomeTaxInsurArrayMthly.controls | slice: ( maxMths - colMthRange.length): maxMths\">\r\n                                {{class.value.yrmthReCon}}\r\n                            </th> -->\r\n                            <th scope=\"col\" [style]=\"{'text-align': 'center'}\" *ngFor=\"let yrmth of getYrmthList() | slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths\">\r\n                                {{yrmth}}\r\n                            </th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <!-- use matrix otherwise it will not work honestly i have no idea how this even worked-magic -->\r\n                    <ng-template pTemplate=\"body\" let-columns = \"cols\" let-rowIndex = \"rowIndex\">\r\n                        <tr  *ngIf=\"rowIndex== 0\"  >\r\n                            <td>{{ cols[0] }}</td>\r\n                            <td> <div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('firstYrCommission') | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td> <div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('firstYrCommission')/aveInsurForm.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths; let i = index\" [formGroupName] = \"yrmth\">\r\n                                <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"firstYrCommission\"\r\n                                id=\"firstYrCommission\" mode=\"decimal\" [minFractionDigits]=\"2\" *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelFirstYrCommission\"\r\n                                [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'firstYrCommission')\"></p-inputNumber>\r\n                                <ng-template #labelFirstYrCommission>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'firstYrCommission').value | number : '1.2-2'}}\r\n                                    </div>\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        <tr  *ngIf=\"rowIndex== 1\" >\r\n                            <td>{{ cols[1] }}</td>\r\n                            <td><div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('singlePremium') | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td> <div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('singlePremium')/aveInsurForm.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths; let i = index\" [formGroupName] = \"yrmth\">\r\n                                <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"singlePremium\"\r\n                                id=\"singlePremium\" mode=\"decimal\" [minFractionDigits]=\"2\"   *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelSinglePremium\"\r\n                                [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'singlePremium')\"></p-inputNumber>\r\n                                <ng-template #labelSinglePremium>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'singlePremium').value | number : '1.2-2'}}\r\n                                    </div>\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        <tr  *ngIf=\"rowIndex== 2\" >\r\n                            <td>{{ cols[2] }}</td>\r\n                            <td><div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('prdCommission') | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td> <div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('prdCommission')/aveInsurForm.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths; let i = index\" [formGroupName] = \"yrmth\">\r\n                                <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"prdCommission\"\r\n                                id=\"prdCommission\" mode=\"decimal\" [minFractionDigits]=\"2\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelPrdCommission\"\r\n                                [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'prdCommission')\"></p-inputNumber>\r\n                                <ng-template #labelPrdCommission>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'prdCommission').value | number : '1.2-2'}}\r\n                                    </div>\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        <tr  *ngIf=\"rowIndex== 3\" >\r\n                            <td>{{ cols[3] }}</td>\r\n                            <td><div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('generalInsurance') | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td> <div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('generalInsurance')/aveInsurForm.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths; let i = index\" [formGroupName] = \"yrmth\">\r\n                                <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"generalInsurance\"\r\n                                id=\"generalInsurance\" mode=\"decimal\" [minFractionDigits]=\"2\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelGeneralInsurance\"\r\n                                [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'generalInsurance')\"></p-inputNumber>\r\n                                <ng-template #labelGeneralInsurance>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'generalInsurance').value | number : '1.2-2'}}\r\n                                    </div>\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        <tr  *ngIf=\"rowIndex== 4\" >\r\n                            <td>{{ cols[4] }}</td>\r\n                            <td><div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('otherCommission') | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td> <div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('otherCommission')/aveInsurForm.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths; let i = index\" [formGroupName] = \"yrmth\">\r\n                                <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"otherCommission\"\r\n                                id=\"otherCommission\" mode=\"decimal\" [minFractionDigits]=\"2\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelOtherCommission\"\r\n                                [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'otherCommission')\"></p-inputNumber>\r\n                                <ng-template #labelOtherCommission>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'otherCommission').value | number : '1.2-2'}}\r\n                                    </div>\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        <tr  *ngIf=\"rowIndex== 5\" >\r\n                            <td>{{ cols[5] }}</td>\r\n                            <td><div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('prdBonus') | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td> <div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('prdBonus')/ aveInsurForm?.get('prdnBonusDivisor').value | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths; let i = index\" [formGroupName] = \"yrmth\">\r\n                                <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"prdBonus\"\r\n                                id=\"prdBonus\" mode=\"decimal\" [minFractionDigits]=\"2\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelPrdBonus\"\r\n                                [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'prdBonus')\"></p-inputNumber>\r\n                                <ng-template #labelPrdBonus>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'prdBonus').value | number : '1.2-2'}}\r\n                                    </div>\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        <tr  *ngIf=\"rowIndex== 5\" >\r\n                            <td>{{ cols[6] }} </td>\r\n                            <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\"><div style=\"text-align:right\">\r\n                                {{ getSumOfTotalPayable() | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\"> <div style=\"text-align:right\">\r\n                                {{ getSumOfTotalPayable()/aveInsurForm.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\"\r\n                            *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths; let i = index\" [formGroupName] = \"yrmth\">\r\n                                <div style=\"text-align:right\">\r\n                                    {{ getTotalPayableCol(yrmth, incomeTaxInsurArrayMthly) | number : '1.2-2'}}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr *ngIf=\"rowIndex== 5\"  >\r\n                            <td>{{ cols[7] }}</td>\r\n                            <td><div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('renewalCommission') | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td> <div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('renewalCommission')/aveInsurForm.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths; let i = index\" [formGroupName] = \"yrmth\">\r\n                                <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"renewalCommission\"\r\n                                id=\"renewalCommission\" mode=\"decimal\" [minFractionDigits]=\"2\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelRenewalCommission\"\r\n                                [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'renewalCommission')\"></p-inputNumber>\r\n                                <ng-template #labelRenewalCommission>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'renewalCommission').value | number : '1.2-2'}}\r\n                                    </div>\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        <tr *ngIf=\"rowIndex== 5\"  >\r\n                            <td>{{ cols[8] }}</td>\r\n                            <td><div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('overridingCommission') | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td> <div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('overridingCommission')/aveInsurForm.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths; let i = index\" [formGroupName] = \"yrmth\">\r\n                                <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"overridingCommission\"\r\n                                id=\"overridingCommission\" mode=\"decimal\" [minFractionDigits]=\"2\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelOverridingCommission\"\r\n                                [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'overridingCommission')\"></p-inputNumber>\r\n                                <ng-template #labelOverridingCommission>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'overridingCommission').value | number : '1.2-2'}}\r\n                                    </div>\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        <tr *ngIf=\"rowIndex== 5\"  >\r\n                            <td>{{ cols[9] }}</td>\r\n                            <td><div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('otherNonPayable') | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td> <div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('otherNonPayable')/aveInsurForm.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths; let i = index\" [formGroupName] = \"yrmth\">\r\n                                <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"otherNonPayable\"\r\n                                id=\"otherNonPayable\" mode=\"decimal\" [minFractionDigits]=\"2\"   *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelOtherNonPayable\"\r\n                                [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'otherNonPayable')\"></p-inputNumber>\r\n                                <ng-template #labelOtherNonPayable>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ getInnerFormControl(this.incomeTaxInsurArrayMthly, yrmth, 'otherNonPayable').value | number : '1.2-2'}}\r\n                                    </div>\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        <tr  *ngIf=\"rowIndex== 5\" >\r\n                            <td>{{ cols[10] }} </td>\r\n                            <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\"><div style=\"text-align:right\">\r\n                                {{ getSumOfTotalNonPayable() | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\"> <div style=\"text-align:right\">\r\n                                {{ getSumOfTotalNonPayable()/aveInsurForm.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\"\r\n                            *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths; let i = index\" [formGroupName] = \"yrmth\">\r\n                                <div style=\"text-align:right\">\r\n                                    {{ getTotalNonPayableCol(yrmth, incomeTaxInsurArrayMthly) | number : '1.2-2'}}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr  *ngIf=\"rowIndex== 5\" >\r\n                            <td>{{ cols[11] }} </td>\r\n                            <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\"><div style=\"text-align:right\">\r\n                                {{ getSumOfTotalNonPayable()  + getSumOfTotalPayable() | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\"> <div style=\"text-align:right\">\r\n                                {{ getSumOfTotalNonPayable()/aveInsurForm.get('eligibleMthCount').value + getSumOfTotalPayable()/aveInsurForm.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                            </div></td>\r\n                            <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\"\r\n                            *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths; let i = index\" [formGroupName] = \"yrmth\">\r\n                                <div style=\"text-align:right\">\r\n                                    {{ getTotalPayableCol(yrmth, incomeTaxInsurArrayMthly) + getTotalNonPayableCol(yrmth, incomeTaxInsurArrayMthly) | number : '1.2-2'}}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n\r\n            </div>\r\n            <div [formGroup]=\"incomeTaxInsurArrayConsol\">\r\n                <ng-template #consolOption>\r\n                    <p-table\r\n                    [value]=\"getYrmthList()\"\r\n                    [filterDelay]=\"0\"\r\n                    [loading] = \"loading\"\r\n                    styleClass=\"p-datatable-gridlines p-datatable-striped\"\r\n                    responsiveLayout=\"scroll\"\r\n                    #consolTable\r\n                    >\r\n                        <ng-template pTemplate=\"header\">\r\n                            <tr>\r\n                                <th scope=\"col\"  [style]=\"{'width':'200px'}\"></th>\r\n                                <th scope=\"col\" [attr.colspan]=\"aveInsurForm.controls['yrmthList'].value.length  + 2\">\r\n                                    <form [formGroup] = \"captionGroup\">\r\n                                        <div class=\"grid\">\r\n                                            <div class = \"col-6 nsp-align-left\">\r\n                                                <p-button icon=\"pi pi-file-o\" (click) = \"exportToCSV(consolTable)\" [style]=\"{'margin-left': '.5em', 'margin-right': '.5em'}\"\r\n                                                ></p-button>\r\n                                                <fieldset *ngIf=\"isActive() && !readOnly && hasValidAuthorityAndStation(); else disabledRadio\" [style]=\"{'display':'inline'}\">\r\n                                                    <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                        <input\r\n                                                        id=\"custom-radio\"\r\n                                                        class = \"p-radiobutton\"\r\n                                                        type=\"radio\"\r\n                                                        (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                        value=\"MTH\"\r\n                                                        formControlName=\"radioOption\"\r\n                                                        />\r\n                                                        <label class=\"custom-control-label\">Monthly</label>\r\n\r\n                                                    </div>\r\n                                                    <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                        <input\r\n                                                        id=\"con-custom-radio\"\r\n                                                        class = \"p-radiobutton\"\r\n                                                        type=\"radio\"\r\n                                                        (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                        value=\"CON\"\r\n                                                        formControlName=\"radioOption\"\r\n                                                        />\r\n                                                        <label class=\"custom-control-label\">Consolidated</label>\r\n                                                    </div>\r\n                                                </fieldset>\r\n                                                <ng-template #disabledRadio>\r\n                                                    <fieldset disabled [style]=\"{'display':'inline'}\">\r\n                                                        <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                            <input\r\n                                                            id=\"custom-radio\"\r\n                                                            class = \"p-radiobutton\"\r\n                                                            type=\"radio\"\r\n                                                            (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                            value=\"MTH\"\r\n                                                            formControlName=\"radioOption\"\r\n                                                            />\r\n                                                            <label class=\"custom-control-label\">Monthly</label>\r\n\r\n                                                        </div>\r\n                                                        <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                            <input\r\n                                                            id=\"con-custom-radio\"\r\n                                                            class = \"p-radiobutton\"\r\n                                                            type=\"radio\"\r\n                                                            (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                            value=\"CON\"\r\n                                                            formControlName=\"radioOption\"\r\n                                                            />\r\n                                                            <label class=\"custom-control-label\">Consolidated</label>\r\n                                                        </div>\r\n                                                    </fieldset>\r\n                                                </ng-template>\r\n                                            </div>\r\n                                            <p-confirmPopup key = \"confirmWarning\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n\r\n                                            <div class = \"col-6 nsp-align-right\">\r\n                                                <button *ngIf=\"isActive() && !readOnly && hasValidAuthorityAndStation()\" id = \"refreshOtherClaim\" (click)=\"refreshOtherClaim()\" pButton label=\"Refresh from Other Claim\"\r\n                                                [disabled] = \"!enableRefreshOClaim()\" [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\"\r\n                                                >\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </th>\r\n                            </tr>\r\n                            <tr >\r\n                                <th scope=\"col\">Month/Year</th>\r\n                                <th scope=\"col\" [style]=\"{'text-align': 'center'}\">{{ aveInsurForm.get('eligibleMthCount').value }}-mth Account</th>\r\n                                <th scope=\"col\" [style]=\"{'text-align': 'center'}\">Ave Monthly</th>\r\n                                <th scope=\"col\" [style]=\"{'text-align': 'center'}\" *ngFor=\"let yrmth of getYrmthList() | slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths\">\r\n                                    {{yrmth}}\r\n                                </th>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <!-- use matrix otherwise it will not work honestly i have no idea how this even worked-magic -->\r\n                        <ng-template pTemplate=\"body\" let-columns = \"cols\" let-rowIndex = \"rowIndex\">\r\n                            <tr  *ngIf=\"rowIndex== 0\"  >\r\n                                <td>{{ cols[0] }}</td>\r\n                                <td  formGroupName = \"consolidated\">\r\n                                    <div style=\"text-align:right\">\r\n                                        <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"firstYrCommission\"\r\n                                        id=\"firstYrCommission\" mode=\"decimal\" [minFractionDigits]=\"2\" *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelConsolFirstYrCommission\"\r\n                                        [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'firstYrCommission')\"></p-inputNumber>\r\n                                        <ng-template #labelConsolFirstYrCommission>\r\n                                            <div style=\"text-align:right\">\r\n                                                {{ getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'firstYrCommission').value | number : '1.2-2'}}\r\n                                            </div>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ incomeTaxInsurArrayConsol.get('consolidated').get('firstYrCommission').value/this.aveInsurForm?.get('eligibleMthCount').value| number : '1.2-2'}} &nbsp;pa\r\n                                    </div>\r\n                                </td>\r\n                                <td *ngFor = \"let col of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths\">\r\n                                    <div style=\"text-align:right\">\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 1\"  >\r\n                                <td>{{ cols[1] }}</td>\r\n                                <td  formGroupName = \"consolidated\">\r\n                                    <div style=\"text-align:right\">\r\n                                        <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"singlePremium\"\r\n                                        id=\"singlePremium\" mode=\"decimal\" [minFractionDigits]=\"2\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelConsolSinglePremium\"\r\n                                        [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'singlePremium')\"></p-inputNumber>\r\n                                        <ng-template #labelConsolSinglePremium>\r\n                                            <div style=\"text-align:right\">\r\n                                                {{ getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'singlePremium').value | number : '1.2-2'}}\r\n                                            </div>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ incomeTaxInsurArrayConsol.get('consolidated').get('singlePremium').value/this.aveInsurForm?.get('eligibleMthCount').value| number : '1.2-2'}} &nbsp;pa\r\n                                    </div>\r\n                                </td>\r\n                                <td *ngFor = \"let col of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths\">\r\n                                    <div style=\"text-align:right\">\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 0\"  >\r\n                                <td>{{ cols[2] }}</td>\r\n                                <td  formGroupName = \"consolidated\">\r\n                                    <div style=\"text-align:right\">\r\n                                        <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"prdCommission\"\r\n                                        id=\"prdCommission\" mode=\"decimal\" [minFractionDigits]=\"2\"   *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelConsolPrdCommission\"\r\n                                        [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'prdCommission')\"></p-inputNumber>\r\n                                        <ng-template #labelConsolPrdCommission>\r\n                                            <div style=\"text-align:right\">\r\n                                                {{ getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'prdCommission').value | number : '1.2-2'}}\r\n                                            </div>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ incomeTaxInsurArrayConsol.get('consolidated').get('prdCommission').value/this.aveInsurForm?.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                                    </div>\r\n                                </td>\r\n                                <td *ngFor = \"let col of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths\">\r\n                                    <div style=\"text-align:right\">\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 3\"  >\r\n                                <td>{{ cols[3] }}</td>\r\n                                <td  formGroupName = \"consolidated\">\r\n                                    <div style=\"text-align:right\">\r\n                                        <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"generalInsurance\"\r\n                                        id=\"generalInsurance\" mode=\"decimal\" [minFractionDigits]=\"2\"   *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelConsolGeneralInsurance\"\r\n                                        [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'generalInsurance')\"></p-inputNumber>\r\n                                        <ng-template #labelConsolGeneralInsurance>\r\n                                            <div style=\"text-align:right\">\r\n                                                {{ getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'generalInsurance').value | number : '1.2-2'}}\r\n                                            </div>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ incomeTaxInsurArrayConsol.get('consolidated').get('generalInsurance').value/this.aveInsurForm?.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                                    </div>\r\n                                </td>\r\n                                <td *ngFor = \"let col of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths\">\r\n                                    <div style=\"text-align:right\">\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 4\"  >\r\n                                <td>{{ cols[4] }}</td>\r\n                                <td  formGroupName = \"consolidated\">\r\n                                    <div style=\"text-align:right\">\r\n                                        <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"otherCommission\"\r\n                                        id=\"otherCommission\" mode=\"decimal\" [minFractionDigits]=\"2\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelConsolOtherCommission\"\r\n                                        [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'otherCommission')\"></p-inputNumber>\r\n                                        <ng-template #labelConsolOtherCommission>\r\n                                            <div style=\"text-align:right\">\r\n                                                {{ getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'otherCommission').value | number : '1.2-2'}}\r\n                                            </div>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ incomeTaxInsurArrayConsol.get('consolidated').get('otherCommission').value/this.aveInsurForm?.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                                    </div>\r\n                                </td>\r\n                                <td *ngFor = \"let col of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths\">\r\n                                    <div style=\"text-align:right\">\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 5\"  >\r\n                                <td>{{ cols[5] }}</td>\r\n                                <td  formGroupName = \"consolidated\">\r\n                                    <div style=\"text-align:right\">\r\n                                        <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"prdBonus\"\r\n                                        id=\"prdBonus\" mode=\"decimal\" [minFractionDigits]=\"2\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelConsolPrdBonus\"\r\n                                        [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'prdBonus')\"></p-inputNumber>\r\n                                        <ng-template #labelConsolPrdBonus>\r\n                                            <div style=\"text-align:right\">\r\n                                                {{ getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'prdBonus').value | number : '1.2-2'}}\r\n                                            </div>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ incomeTaxInsurArrayConsol.get('consolidated').get('prdBonus').value/this.aveInsurForm?.get('prdnBonusDivisor').value | number : '1.2-2'}} &nbsp;pa\r\n                                    </div>\r\n                                </td>\r\n                                <td *ngFor = \"let col of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths\">\r\n                                    <div style=\"text-align:right\">\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 5\"  >\r\n                                <td>{{ cols[6] }}</td>\r\n                                <td>\r\n                                    <div style=\"text-align:right\">\r\n                                    {{ getTotalPayableCol('consolidated',incomeTaxInsurArrayConsol) | number : '1.2-2'}} &nbsp;pa\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ computeConsolidatedAvgTotalPayable('consolidated',incomeTaxInsurArrayConsol) | number : '1.2-2'}} &nbsp;pa\r\n                                    </div>\r\n                                </td>\r\n                                <td *ngFor = \"let col of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths\">\r\n                                    <div style=\"text-align:right\">\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 5\"  >\r\n                                <td>{{ cols[7] }}</td>\r\n                                <td  formGroupName = \"consolidated\">\r\n                                    <div style=\"text-align:right\">\r\n                                        <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"renewalCommission\"\r\n                                        id=\"renewalCommission\" mode=\"decimal\" [minFractionDigits]=\"2\" *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelConsolRenewalCommission\"\r\n                                        [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'renewalCommission')\"></p-inputNumber>\r\n                                        <ng-template #labelConsolRenewalCommission>\r\n                                            <div style=\"text-align:right\">\r\n                                                {{ getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'renewalCommission').value | number : '1.2-2'}}\r\n                                            </div>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ incomeTaxInsurArrayConsol.get('consolidated').get('renewalCommission').value/this.aveInsurForm?.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                                    </div>\r\n                                </td>\r\n                                <td *ngFor = \"let col of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths\">\r\n                                    <div style=\"text-align:right\">\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 5\"  >\r\n                                <td>{{ cols[8] }}</td>\r\n                                <td  formGroupName = \"consolidated\">\r\n                                    <div style=\"text-align:right\">\r\n                                        <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"overridingCommission\"\r\n                                        id=\"overridingCommission\" mode=\"decimal\" [minFractionDigits]=\"2\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelConsolOverridingCommission\"\r\n                                        [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'overridingCommission')\"></p-inputNumber>\r\n                                        <ng-template #labelConsolOverridingCommission>\r\n                                            <div style=\"text-align:right\">\r\n                                                {{ getInnerFormControl(this.incomeTaxInsurArrayConsol,  'consolidated', 'overridingCommission').value | number : '1.2-2'}}\r\n                                            </div>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ incomeTaxInsurArrayConsol.get('consolidated').get('overridingCommission').value/this.aveInsurForm?.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                                    </div>\r\n                                </td>\r\n                                <td *ngFor = \"let col of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths\">\r\n                                    <div style=\"text-align:right\">\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 5\"  >\r\n                                <td>{{ cols[9] }}</td>\r\n                                <td  formGroupName = \"consolidated\">\r\n                                    <div style=\"text-align:right\">\r\n                                        <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"otherNonPayable\"\r\n                                        id=\"otherNonPayable\" mode=\"decimal\" [minFractionDigits]=\"2\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelConsolOtherNonPayable\"\r\n                                        [formControl]=\"getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'otherNonPayable')\"></p-inputNumber>\r\n                                        <ng-template #labelConsolOtherNonPayable>\r\n                                            <div style=\"text-align:right\">\r\n                                                {{ getInnerFormControl(this.incomeTaxInsurArrayConsol, 'consolidated', 'otherNonPayable').value | number : '1.2-2'}}\r\n                                            </div>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ incomeTaxInsurArrayConsol.get('consolidated').get('otherNonPayable').value/this.aveInsurForm?.get('eligibleMthCount').value | number : '1.2-2'}} &nbsp;pa\r\n                                    </div>\r\n                                </td>\r\n                                <td *ngFor = \"let col of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths\">\r\n                                    <div style=\"text-align:right\">\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 5\"  >\r\n                                <td>{{ cols[10] }}</td>\r\n                                <td  >\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ getTotalNonPayableCol('consolidated',incomeTaxInsurArrayConsol) | number : '1.2-2'}} &nbsp;pa\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ computeConsolidatedAvgTotalNonPayable('consolidated',incomeTaxInsurArrayConsol) | number : '1.2-2'}} &nbsp;pa                                    </div>\r\n                                </td>\r\n                                <td *ngFor = \"let col of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths\">\r\n                                    <div style=\"text-align:right\">\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 5\"  >\r\n                                <td>{{ cols[11] }}</td>\r\n                                <td  >\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ getTotalPayableCol('consolidated',incomeTaxInsurArrayConsol) + getTotalNonPayableCol('consolidated',incomeTaxInsurArrayConsol) | number : '1.2-2'}} &nbsp;pa\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ computeConsolidatedAvgTotalPayable('consolidated',incomeTaxInsurArrayConsol) + computeConsolidatedAvgTotalNonPayable('consolidated',incomeTaxInsurArrayConsol) | number : '1.2-2'}} &nbsp;pa                                    </div>\r\n                                </td>\r\n                                <td *ngFor = \"let col of getYrmthList()| slice: ( maxMths - this.aveInsurForm?.get('eligibleMthCount').value): maxMths\">\r\n                                    <div style=\"text-align:right\">\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </ng-template>\r\n                    </p-table>\r\n                </ng-template>\r\n            </div>\r\n            <div class=\"grid\" style=\"margin-top:1em; margin-left: 220px\">\r\n                <form [formGroup] = \"footerGroup\">\r\n                    <div class = \"col-12 justify-content-start gap-4 flex align-items-center\" >\r\n                        <div >Claim NIP:\r\n                            <p-inputNumber  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation();else labelClaimNip\"\r\n                            [maxlength]=3 [inputStyle]=\"{'width': '5em', 'text-align':'right'}\" formControlName = \"claimNip\"\r\n                            suffix=\"%\">\r\n                            </p-inputNumber>\r\n                            <small *ngIf=\"aveInsurForm.controls['footerGroup'].get('claimNip')?.touched && !isValidNumber(aveInsurForm.controls['footerGroup'].get('claimNip')?.value)\"\r\n                            class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V002\"\r\n                            [translateValues]=\"{ field: 'Claim NIP' }\">\r\n                            </small>\r\n                        </div>\r\n                        <ng-template #labelClaimNip>\r\n                            {{  footerGroup.get('claimNip').value }}%\r\n                        </ng-template>\r\n\r\n                        <div>Proposed NIP: {{ proposedNIP }} %</div>\r\n                        <div>Overriding Commission: {{\r\n                            getOverridingCommPerc()  | number : '1.2-2'\r\n                            }} %</div>\r\n                    </div>\r\n                    <div class = \"col-12 justify-content-start gap-4 flex align-items-center\" >\r\n                        <div>Total Amount Payable: {{ getTotalAmtPayable()}} ({{ getTotalAmtPayableDesc()}})</div>\r\n                    </div>\r\n                    <div class = \"col\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation()\" >\r\n                        <!-- (click)=\"copyToItem($event)\"[disabled] = \"!enableCopytoItem()\" -->\r\n                        <p-button label=\"Copy to Item\"  (click)=\"copyToItem($event)\"[disabled] = \"!enableCopytoItem()\"\r\n                        ></p-button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</p-card>\r\n<br>\r\n<n2-annual-income class = \"flex col-6\"\r\n    [annualIncomeFormArray]=\"this.annualIncomeList\"\r\n    [seHardCopyDetails] = \"seHardCopyDetails\"\r\n    [isActive] = \"isActive()\"\r\n    [readOnly] = \"readOnly\"\r\n    [station] = \"station\">\r\n</n2-annual-income>\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}