{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateNRIC = void 0;\nfunction validateNRIC(str) {\n  if (str.length !== 9) {\n    return false;\n  }\n  str = str.toUpperCase();\n  let i;\n  const icArray = [];\n  for (i = 0; i < 9; i++) {\n    icArray[i] = str.charAt(i);\n  }\n  icArray[1] = parseInt(icArray[1], 10) * 2;\n  icArray[2] = parseInt(icArray[2], 10) * 7;\n  icArray[3] = parseInt(icArray[3], 10) * 6;\n  icArray[4] = parseInt(icArray[4], 10) * 5;\n  icArray[5] = parseInt(icArray[5], 10) * 4;\n  icArray[6] = parseInt(icArray[6], 10) * 3;\n  icArray[7] = parseInt(icArray[7], 10) * 2;\n  let weight = 0;\n  for (i = 1; i < 8; i++) {\n    weight += icArray[i];\n  }\n  const offset = icArray[0] === 'T' || icArray[0] === 'G' ? 4 : 0;\n  const temp = (offset + weight) % 11;\n  const st = ['J', 'Z', 'I', 'H', 'G', 'F', 'E', 'D', 'C', 'B', 'A'];\n  const fg = ['X', 'W', 'U', 'T', 'R', 'Q', 'P', 'N', 'M', 'L', 'K'];\n  let theAlpha;\n  if (icArray[0] === 'S' || icArray[0] === 'T') {\n    theAlpha = st[temp];\n  } else if (icArray[0] === 'F' || icArray[0] === 'G') {\n    theAlpha = fg[temp];\n  }\n  return icArray[8] === theAlpha;\n}\nexports.validateNRIC = validateNRIC;","map":{"version":3,"mappings":";;;;;;AAAA,SAAgBA,YAAY,CAACC,GAAW;EACtC,IAAIA,GAAG,CAACC,MAAM,KAAK,CAAC,EAAE;IACpB,OAAO,KAAK;;EAGdD,GAAG,GAAGA,GAAG,CAACE,WAAW,EAAE;EACvB,IAAIC,CAAC;EACL,MAAMC,OAAO,GAAG,EAAE;EAClB,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACtBC,OAAO,CAACD,CAAC,CAAC,GAAGH,GAAG,CAACK,MAAM,CAACF,CAAC,CAAQ;;EAGnCC,OAAO,CAAC,CAAC,CAAC,GAAGE,QAAQ,CAACF,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;EACzCA,OAAO,CAAC,CAAC,CAAC,GAAGE,QAAQ,CAACF,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;EACzCA,OAAO,CAAC,CAAC,CAAC,GAAGE,QAAQ,CAACF,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;EACzCA,OAAO,CAAC,CAAC,CAAC,GAAGE,QAAQ,CAACF,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;EACzCA,OAAO,CAAC,CAAC,CAAC,GAAGE,QAAQ,CAACF,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;EACzCA,OAAO,CAAC,CAAC,CAAC,GAAGE,QAAQ,CAACF,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;EACzCA,OAAO,CAAC,CAAC,CAAC,GAAGE,QAAQ,CAACF,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;EAEzC,IAAIG,MAAM,GAAG,CAAC;EACd,KAAKJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACtBI,MAAM,IAAIH,OAAO,CAACD,CAAC,CAAC;;EAGtB,MAAMK,MAAM,GAAGJ,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC;EAC/D,MAAMK,IAAI,GAAG,CAACD,MAAM,GAAGD,MAAM,IAAI,EAAE;EACnC,MAAMG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAClE,MAAMC,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAElE,IAAIC,QAAQ;EACZ,IAAIR,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAC5CQ,QAAQ,GAAGF,EAAE,CAACD,IAAI,CAAC;GACpB,MAAM,IAAIL,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACnDQ,QAAQ,GAAGD,EAAE,CAACF,IAAI,CAAC;;EAGrB,OAAOL,OAAO,CAAC,CAAC,CAAC,KAAKQ,QAAQ;AAChC;AAtCAC","names":["validateNRIC","str","length","toUpperCase","i","icArray","charAt","parseInt","weight","offset","temp","st","fg","theAlpha","exports"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\ng-connect\\nric\\nric-validate.ts"],"sourcesContent":["export function validateNRIC(str: string): any {\r\n  if (str.length !== 9) {\r\n    return false;\r\n  }\r\n\r\n  str = str.toUpperCase();\r\n  let i;\r\n  const icArray = [];\r\n  for (i = 0; i < 9; i++) {\r\n    icArray[i] = str.charAt(i) as any;\r\n  }\r\n\r\n  icArray[1] = parseInt(icArray[1], 10) * 2;\r\n  icArray[2] = parseInt(icArray[2], 10) * 7;\r\n  icArray[3] = parseInt(icArray[3], 10) * 6;\r\n  icArray[4] = parseInt(icArray[4], 10) * 5;\r\n  icArray[5] = parseInt(icArray[5], 10) * 4;\r\n  icArray[6] = parseInt(icArray[6], 10) * 3;\r\n  icArray[7] = parseInt(icArray[7], 10) * 2;\r\n\r\n  let weight = 0;\r\n  for (i = 1; i < 8; i++) {\r\n    weight += icArray[i];\r\n  }\r\n\r\n  const offset = icArray[0] === 'T' || icArray[0] === 'G' ? 4 : 0;\r\n  const temp = (offset + weight) % 11;\r\n  const st = ['J', 'Z', 'I', 'H', 'G', 'F', 'E', 'D', 'C', 'B', 'A'];\r\n  const fg = ['X', 'W', 'U', 'T', 'R', 'Q', 'P', 'N', 'M', 'L', 'K'];\r\n\r\n  let theAlpha;\r\n  if (icArray[0] === 'S' || icArray[0] === 'T') {\r\n    theAlpha = st[temp];\r\n  } else if (icArray[0] === 'F' || icArray[0] === 'G') {\r\n    theAlpha = fg[temp];\r\n  }\r\n\r\n  return icArray[8] === theAlpha;\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}