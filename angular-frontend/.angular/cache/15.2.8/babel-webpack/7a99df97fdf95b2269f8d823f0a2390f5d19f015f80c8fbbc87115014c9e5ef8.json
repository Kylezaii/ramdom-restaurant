{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ViewCpfComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/claim/ec-claim/service/ec-claim.service\"));\nconst i4 = tslib_1.__importStar(require(\"@angular/common\"));\nconst _c0 = function (a0) {\n  return {\n    \"background\": a0\n  };\n};\nfunction ViewCpfComponent_div_43_table_2_div_8_th_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrMth_r11 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c0, ctx_r8.isClaimStartMth(yrMth_r11) ? \"yellow\" : \"#f8f9fa\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n            \", ctx_r8.dateUtilsService.convertDateToStr(yrMth_r11, \"MM-YYYY\"), \"\\n          \");\n  }\n}\nfunction ViewCpfComponent_div_43_table_2_div_8_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrMth_r12 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    const i_r5 = ctx_r13.index;\n    const cpfSnapshot_r4 = ctx_r13.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(5, _c0, ctx_r9.isClaimStartMth(yrMth_r12) ? \"yellow\" : \"#ffffff\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n            \", ctx_r9.cpfSnapshotMapArray[i_r5].has(ctx_r9.dateUtilsService.convertDateToStr(yrMth_r12, \"MM-YYYY\")) ? i0.ɵɵpipeBind2(2, 2, ctx_r9.cpfSnapshotMapArray[i_r5].get(ctx_r9.dateUtilsService.convertDateToStr(yrMth_r12, \"MM-YYYY\")).owAmount, \"1.2\") : ctx_r9.isWithinRange(yrMth_r12, cpfSnapshot_r4) ? \"NA\" : \"\", \"\\n          \");\n  }\n}\nfunction ViewCpfComponent_div_43_table_2_div_8_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrMth_r14 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    const i_r5 = ctx_r15.index;\n    const cpfSnapshot_r4 = ctx_r15.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(5, _c0, ctx_r10.isClaimStartMth(yrMth_r14) ? \"yellow\" : \"#ffffff\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n            \", ctx_r10.cpfSnapshotMapArray[i_r5].has(ctx_r10.dateUtilsService.convertDateToStr(yrMth_r14, \"MM-YYYY\")) ? i0.ɵɵpipeBind2(2, 2, ctx_r10.cpfSnapshotMapArray[i_r5].get(ctx_r10.dateUtilsService.convertDateToStr(yrMth_r14, \"MM-YYYY\")).awAmount, \"1.2\") : ctx_r10.isWithinRange(yrMth_r14, cpfSnapshot_r4) ? \"NA\" : \"\", \"\\n          \");\n  }\n}\nfunction ViewCpfComponent_div_43_table_2_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"tr\");\n    i0.ɵɵtext(3, \"\\n          \");\n    i0.ɵɵelementStart(4, \"th\", 8);\n    i0.ɵɵtext(5, \"Month\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n          \");\n    i0.ɵɵtemplate(7, ViewCpfComponent_div_43_table_2_div_8_th_7_Template, 2, 4, \"th\", 9);\n    i0.ɵɵtext(8, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n        \");\n    i0.ɵɵelementStart(10, \"tr\");\n    i0.ɵɵtext(11, \"\\n          \");\n    i0.ɵɵelementStart(12, \"th\", 8);\n    i0.ɵɵtext(13, \"OW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n          \");\n    i0.ɵɵtemplate(15, ViewCpfComponent_div_43_table_2_div_8_td_15_Template, 3, 7, \"td\", 10);\n    i0.ɵɵtext(16, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n        \");\n    i0.ɵɵelementStart(18, \"tr\");\n    i0.ɵɵtext(19, \"\\n          \");\n    i0.ɵɵelementStart(20, \"th\", 8);\n    i0.ɵɵtext(21, \"AW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n          \");\n    i0.ɵɵtemplate(23, ViewCpfComponent_div_43_table_2_div_8_td_23_Template, 3, 7, \"td\", 10);\n    i0.ɵɵtext(24, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const year_r7 = ctx.$implicit;\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", year_r7);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", year_r7);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", year_r7);\n  }\n}\nfunction ViewCpfComponent_div_43_table_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 5);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"tr\");\n    i0.ɵɵtext(3, \"\\n        \");\n    i0.ɵɵelementStart(4, \"th\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n      \");\n    i0.ɵɵtemplate(8, ViewCpfComponent_div_43_table_2_div_8_Template, 26, 3, \"div\", 7);\n    i0.ɵɵtext(9, \"\\n  \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cpfSnapshot_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate6(\"CPF \", ctx_r3.dateUtilsService.convertDateToStr(cpfSnapshot_r4.startYearMonth, \"MM-YYYY\"), \" to \", ctx_r3.dateUtilsService.convertDateToStr(cpfSnapshot_r4.endYearMonth, \"MM-YYYY\"), \" (\", cpfSnapshot_r4.createdByInit, \") (Retrieved : \", cpfSnapshot_r4.cpfSnapDate ? ctx_r3.dateUtilsService.convertDateToStr(cpfSnapshot_r4.cpfSnapDate, \"DD-MM-YYYY\") : \"NA\", \") (Latest Contribution Date: \", cpfSnapshot_r4.latestContributionYearMonth ? ctx_r3.dateUtilsService.convertDateToStr(cpfSnapshot_r4.latestContributionYearMonth, \"DD-MM-YYYY\") : \"NA\", \") \", ctx_r3.getClaimSource(cpfSnapshot_r4.prepopulatedInd), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.yrMthCols);\n  }\n}\nfunction ViewCpfComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n  \");\n    i0.ɵɵtemplate(2, ViewCpfComponent_div_43_table_2_Template, 10, 7, \"table\", 4);\n    i0.ɵɵtext(3, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.cpfSnapshotArray);\n  }\n}\nfunction ViewCpfComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n  No Snapshots found\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ViewCpfComponent_div_54_div_10_th_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrMth_r21 = ctx.$implicit;\n    const ctx_r18 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c0, ctx_r18.isClaimStartMth(yrMth_r21) ? \"yellow\" : \"#f8f9fa\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n            \", ctx_r18.dateUtilsService.convertDateToStr(yrMth_r21, \"MM-YYYY\"), \"\\n          \");\n  }\n}\nfunction ViewCpfComponent_div_54_div_10_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrMth_r22 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(5, _c0, ctx_r19.isClaimStartMth(yrMth_r22) ? \"yellow\" : \"#ffffff\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n          \", ctx_r19.cpfRealtimeMap.has(ctx_r19.dateUtilsService.convertDateToStr(yrMth_r22, \"MM-YYYY\")) ? i0.ɵɵpipeBind2(2, 2, ctx_r19.cpfRealtimeMap.get(ctx_r19.dateUtilsService.convertDateToStr(yrMth_r22, \"MM-YYYY\")).owAmount, \"1.2\") : ctx_r19.isWithinRange(yrMth_r22, ctx_r19.cpfRealtime) ? \"NA\" : \"\", \"\\n        \");\n  }\n}\nfunction ViewCpfComponent_div_54_div_10_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrMth_r23 = ctx.$implicit;\n    const ctx_r20 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(5, _c0, ctx_r20.isClaimStartMth(yrMth_r23) ? \"yellow\" : \"#ffffff\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n          \", ctx_r20.cpfRealtimeMap.has(ctx_r20.dateUtilsService.convertDateToStr(yrMth_r23, \"MM-YYYY\")) ? i0.ɵɵpipeBind2(2, 2, ctx_r20.cpfRealtimeMap.get(ctx_r20.dateUtilsService.convertDateToStr(yrMth_r23, \"MM-YYYY\")).awAmount, \"1.2\") : ctx_r20.isWithinRange(yrMth_r23, ctx_r20.cpfRealtime) ? \"NA\" : \"\", \"\\n        \");\n  }\n}\nfunction ViewCpfComponent_div_54_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n      \");\n    i0.ɵɵelementStart(2, \"tr\");\n    i0.ɵɵtext(3, \"\\n        \");\n    i0.ɵɵelementStart(4, \"th\", 8);\n    i0.ɵɵtext(5, \"Month\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n          \");\n    i0.ɵɵtemplate(7, ViewCpfComponent_div_54_div_10_th_7_Template, 2, 4, \"th\", 9);\n    i0.ɵɵtext(8, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n      \");\n    i0.ɵɵelementStart(10, \"tr\");\n    i0.ɵɵtext(11, \"\\n        \");\n    i0.ɵɵelementStart(12, \"th\", 8);\n    i0.ɵɵtext(13, \"OW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n        \");\n    i0.ɵɵtemplate(15, ViewCpfComponent_div_54_div_10_td_15_Template, 3, 7, \"td\", 10);\n    i0.ɵɵtext(16, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n      \");\n    i0.ɵɵelementStart(18, \"tr\");\n    i0.ɵɵtext(19, \"\\n        \");\n    i0.ɵɵelementStart(20, \"th\", 8);\n    i0.ɵɵtext(21, \"AW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n        \");\n    i0.ɵɵtemplate(23, ViewCpfComponent_div_54_div_10_td_23_Template, 3, 7, \"td\", 10);\n    i0.ɵɵtext(24, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const year_r17 = ctx.$implicit;\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", year_r17);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", year_r17);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", year_r17);\n  }\n}\nfunction ViewCpfComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n  \");\n    i0.ɵɵelementStart(2, \"table\", 5);\n    i0.ɵɵtext(3, \"\\n      \");\n    i0.ɵɵelementStart(4, \"tr\");\n    i0.ɵɵtext(5, \"\\n        \");\n    i0.ɵɵelementStart(6, \"th\", 6);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n    \");\n    i0.ɵɵtemplate(10, ViewCpfComponent_div_54_div_10_Template, 26, 3, \"div\", 7);\n    i0.ɵɵtext(11, \"\\n      \");\n    i0.ɵɵelement(12, \"br\");\n    i0.ɵɵtext(13, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate3(\"CPF \", ctx_r2.dateUtilsService.convertDateToStr(ctx_r2.cpfRealtime.startYearMonth, \"MM-YYYY\"), \" to \", ctx_r2.dateUtilsService.convertDateToStr(ctx_r2.cpfRealtime.endYearMonth, \"MM-YYYY\"), \" (Latest Contribution Date: \", ctx_r2.cpfRealtime.latestContributionYearMonth ? ctx_r2.dateUtilsService.convertDateToStr(ctx_r2.cpfRealtime.latestContributionYearMonth, \"DD-MM-YYYY\") : \"NA\", \") \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.yrMthCols);\n  }\n}\nclass ViewCpfComponent {\n  constructor(router, route, dateUtilsService, ecClaimService) {\n    this.router = router;\n    this.route = route;\n    this.dateUtilsService = dateUtilsService;\n    this.ecClaimService = ecClaimService;\n    this.cpfSnapshotArray = [];\n    this.cpfSnapshotMapArray = [];\n    this.cpfRealtimeMap = new Map();\n    this.yrMthCols = [];\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.params = params;\n      this.claimStartDate = this.dateUtilsService.convertStrToDate(this.params['claimStartDate'], \"YYYY-MM-DD\");\n      this.populateYrMthCols(this.claimStartDate);\n      console.log(params);\n      this.ecClaimService.getCPFSnapshotsAndRealtimeForClaimPopUp(this.params['caseId']).subscribe(res => {\n        if (res.data) {\n          //realtime data and Map\n          this.cpfRealtime = res.data.pop();\n          this.cpfRealtime.cpfSnapshotInfoDtoList.forEach(cpfSnapshotInfo => {\n            this.cpfRealtimeMap.set(this.dateUtilsService.convertDateToStr(cpfSnapshotInfo.relevantContributionYearMonth, 'MM-YYYY'), cpfSnapshotInfo);\n          });\n          console.log(this.cpfRealtimeMap);\n          //Snapshot Data and Map\n          this.cpfSnapshotArray = res.data;\n          this.cpfSnapshotArray.forEach(cpfSnapshot => {\n            const cpfSnapshotMap = new Map();\n            cpfSnapshot.cpfSnapshotInfoDtoList.forEach(cpfSnapshotInfo => {\n              cpfSnapshotMap.set(this.dateUtilsService.convertDateToStr(cpfSnapshotInfo.relevantContributionYearMonth, 'MM-YYYY'), cpfSnapshotInfo);\n            });\n            this.cpfSnapshotMapArray.push(cpfSnapshotMap);\n          });\n        }\n      });\n    });\n  }\n  populateYrMthCols(startDate) {\n    console.log(startDate);\n    const date = new Date(this.claimStartDate);\n    date.setMonth(this.claimStartDate.getMonth() - 15);\n    const startYr = date.getFullYear();\n    const endYr = startDate.getFullYear();\n    console.log(startYr);\n    for (let year = startYr; year <= endYr; year++) {\n      const arr = [];\n      for (let month = 0; month < 12; month++) {\n        const yrMth = this.dateUtilsService.convertStrToDate(\"1-\" + (month + 1).toString() + \"-\" + year.toString(), \"DD-MM-YYYY\");\n        arr.push(yrMth);\n      }\n      this.yrMthCols.push(arr);\n    }\n  }\n  isClaimStartMth(yrMth) {\n    return this.dateUtilsService.isEquals(yrMth, this.claimStartDate);\n  }\n  isWithinRange(date, cpfSnapshot) {\n    return this.dateUtilsService.isWithinRange(date, cpfSnapshot.startYearMonth, cpfSnapshot.endYearMonth);\n  }\n  getClaimSource(indicator) {\n    switch (indicator) {\n      case \"Y\":\n        return \"(Prepopulated)\";\n      case \"S\":\n        return \"(Self-Initiated)\";\n      default:\n        return \"\";\n    }\n  }\n}\nexports.ViewCpfComponent = ViewCpfComponent;\nViewCpfComponent.ɵfac = function ViewCpfComponent_Factory(t) {\n  return new (t || ViewCpfComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.DateUtilsService), i0.ɵɵdirectiveInject(i3.ECClaimService));\n};\nViewCpfComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ViewCpfComponent,\n  selectors: [[\"n2-view-cpf\"]],\n  decls: 56,\n  vars: 10,\n  consts: [[1, \"field\", \"grid\"], [1, \"col-1\"], [1, \"col-2\"], [4, \"ngIf\"], [\"class\", \"cpf-table\", 4, \"ngFor\", \"ngForOf\"], [1, \"cpf-table\"], [\"scope\", \"colgroup\", \"colspan\", \"13\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"col\"], [\"scope\", \"col\", 3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [\"scope\", \"col\", 3, \"ngStyle\"], [3, \"ngStyle\"]],\n  template: function ViewCpfComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵtext(3, \"\\n    NRIC:\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \"\\n  \");\n      i0.ɵɵelementStart(5, \"div\", 2);\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \"\\n  \");\n      i0.ɵɵelementStart(8, \"div\", 1);\n      i0.ɵɵtext(9, \"\\n    Name:\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(10, \"\\n  \");\n      i0.ɵɵelementStart(11, \"div\", 2);\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\n  \");\n      i0.ɵɵelementStart(14, \"div\", 1);\n      i0.ɵɵtext(15, \"\\n    Case ID:\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \"\\n  \");\n      i0.ɵɵelementStart(17, \"div\", 2);\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n\");\n      i0.ɵɵelementStart(21, \"div\", 0);\n      i0.ɵɵtext(22, \"\\n  \");\n      i0.ɵɵelementStart(23, \"div\", 1);\n      i0.ɵɵtext(24, \"\\n    CSN:\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \"\\n  \");\n      i0.ɵɵelementStart(26, \"div\", 2);\n      i0.ɵɵtext(27);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(28, \"\\n  \");\n      i0.ɵɵelementStart(29, \"div\", 1);\n      i0.ɵɵtext(30, \"\\n    COY Name:\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(31, \"\\n  \");\n      i0.ɵɵelementStart(32, \"div\", 2);\n      i0.ɵɵtext(33);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(35, \"\\n\");\n      i0.ɵɵelement(36, \"br\");\n      i0.ɵɵtext(37, \"\\n\");\n      i0.ɵɵelementStart(38, \"h6\");\n      i0.ɵɵtext(39, \"Snapshot CPF\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(40, \"\\n\");\n      i0.ɵɵelement(41, \"hr\");\n      i0.ɵɵtext(42, \"\\n\");\n      i0.ɵɵtemplate(43, ViewCpfComponent_div_43_Template, 4, 1, \"div\", 3);\n      i0.ɵɵtext(44, \"\\n\");\n      i0.ɵɵtemplate(45, ViewCpfComponent_div_45_Template, 2, 0, \"div\", 3);\n      i0.ɵɵtext(46, \"\\n\");\n      i0.ɵɵelement(47, \"br\");\n      i0.ɵɵtext(48, \"\\n\");\n      i0.ɵɵelementStart(49, \"h6\");\n      i0.ɵɵtext(50, \"Claim CPF (Realtime)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(51, \"\\n\");\n      i0.ɵɵelement(52, \"hr\");\n      i0.ɵɵtext(53, \"\\n\");\n      i0.ɵɵtemplate(54, ViewCpfComponent_div_54_Template, 15, 4, \"div\", 3);\n      i0.ɵɵtext(55, \"\\n\\n\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\"\\n    \", ctx.params.nric, \"\\n  \");\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\"\\n    \", ctx.params.name, \"\\n  \");\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\"\\n    \", ctx.params.caseId, \"\\n  \");\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate3(\"\\n    \", ctx.params.csn.substring(0, 10), \"-\", ctx.params.csn.substring(10, 13), \"-\", ctx.params.csn.substring(13, 15), \"\\n  \");\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\"\\n    \", ctx.params.coyName, \"\\n  \");\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.cpfSnapshotArray !== null && ctx.cpfSnapshotArray !== undefined && ctx.cpfSnapshotArray.length !== 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.cpfSnapshotArray === null || ctx.cpfSnapshotArray === undefined || ctx.cpfSnapshotArray.length === 0);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.cpfRealtime !== undefined && ctx.cpfRealtime !== null);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i4.NgStyle, i4.DecimalPipe],\n  styles: [\".cpf-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .cpf-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], .cpf-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%] {\\n  text-align: left;\\n  padding: 1rem 1rem;\\n  border: 1px solid #dee2e6;\\n  border-width: 1px 1px 1px 1px;\\n  transition: box-shadow 0.2s;\\n}\\n\\n.cpf-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  min-width: 125px;\\n  max-width: 125px;\\n}\\n\\n.cpf-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n  color: #343a4F;\\n  background: #f8f9fa;\\n  font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpZXctY3BmLmNvbXBvbmVudC5zY3NzIiwiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHByb2plY3RzJTIwMlxcbnNwYXlpaWFwcFxcc3JjXFxtYWluXFx3ZWJhcHBcXGFwcFxcY2xhaW1cXGVjLWNsYWltXFxwb3AtdXBcXHZpZXctY3BmXFx2aWV3LWNwZi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0VBR0UsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLHlCQUFBO0VBQ0EsNkJBQUE7RUFDQSwyQkFBQTtBQ0NGOztBRENBO0VBQ0UsZ0JBQUE7RUFDQSxnQkFBQTtBQ0VGOztBRENBO0VBQ0UsY0FBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUNFRiIsImZpbGUiOiJ2aWV3LWNwZi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jcGYtdGFibGUgdGgsXHJcbi5jcGYtdGFibGUgdGQsXHJcbi5jcGYtdGFibGUgdHJ7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBwYWRkaW5nOiAxcmVtIDFyZW07XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RlZTJlNjtcclxuICBib3JkZXItd2lkdGg6IDFweCAxcHggMXB4IDFweDtcclxuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuMnM7XHJcbn1cclxuLmNwZi10YWJsZSB0ZHtcclxuICBtaW4td2lkdGg6IDEyNXB4O1xyXG4gIG1heC13aWR0aDogMTI1cHg7XHJcbn1cclxuXHJcbi5jcGYtdGFibGUgdGh7XHJcbiAgY29sb3I6ICMzNDNhNEY7XHJcbiAgYmFja2dyb3VuZDogI2Y4ZjlmYTtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcbiIsIi5jcGYtdGFibGUgdGgsXG4uY3BmLXRhYmxlIHRkLFxuLmNwZi10YWJsZSB0ciB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHBhZGRpbmc6IDFyZW0gMXJlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RlZTJlNjtcbiAgYm9yZGVyLXdpZHRoOiAxcHggMXB4IDFweCAxcHg7XG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC4ycztcbn1cblxuLmNwZi10YWJsZSB0ZCB7XG4gIG1pbi13aWR0aDogMTI1cHg7XG4gIG1heC13aWR0aDogMTI1cHg7XG59XG5cbi5jcGYtdGFibGUgdGgge1xuICBjb2xvcjogIzM0M2E0RjtcbiAgYmFja2dyb3VuZDogI2Y4ZjlmYTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn0iXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvY2xhaW0vZWMtY2xhaW0vcG9wLXVwL3ZpZXctY3BmL3ZpZXctY3BmLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vcHJvamVjdHMlMjAyL25zcGF5aWlhcHAvc3JjL21haW4vd2ViYXBwL2FwcC9jbGFpbS9lYy1jbGFpbS9wb3AtdXAvdmlldy1jcGYvdmlldy1jcGYuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztFQUdFLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSx5QkFBQTtFQUNBLDZCQUFBO0VBQ0EsMkJBQUE7QUNDRjs7QURDQTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7QUNFRjs7QURDQTtFQUNFLGNBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0FDRUY7QURDQSx3aURBQXdpRCIsInNvdXJjZXNDb250ZW50IjpbIi5jcGYtdGFibGUgdGgsXHJcbi5jcGYtdGFibGUgdGQsXHJcbi5jcGYtdGFibGUgdHJ7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBwYWRkaW5nOiAxcmVtIDFyZW07XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RlZTJlNjtcclxuICBib3JkZXItd2lkdGg6IDFweCAxcHggMXB4IDFweDtcclxuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuMnM7XHJcbn1cclxuLmNwZi10YWJsZSB0ZHtcclxuICBtaW4td2lkdGg6IDEyNXB4O1xyXG4gIG1heC13aWR0aDogMTI1cHg7XHJcbn1cclxuXHJcbi5jcGYtdGFibGUgdGh7XHJcbiAgY29sb3I6ICMzNDNhNEY7XHJcbiAgYmFja2dyb3VuZDogI2Y4ZjlmYTtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcbiIsIi5jcGYtdGFibGUgdGgsXG4uY3BmLXRhYmxlIHRkLFxuLmNwZi10YWJsZSB0ciB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHBhZGRpbmc6IDFyZW0gMXJlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RlZTJlNjtcbiAgYm9yZGVyLXdpZHRoOiAxcHggMXB4IDFweCAxcHg7XG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC4ycztcbn1cblxuLmNwZi10YWJsZSB0ZCB7XG4gIG1pbi13aWR0aDogMTI1cHg7XG4gIG1heC13aWR0aDogMTI1cHg7XG59XG5cbi5jcGYtdGFibGUgdGgge1xuICBjb2xvcjogIzM0M2E0RjtcbiAgYmFja2dyb3VuZDogI2Y4ZjlmYTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ViewCpfComponent","constructor","router","route","dateUtilsService","ecClaimService","Map","ngOnInit","queryParams","subscribe","params","claimStartDate","convertStrToDate","populateYrMthCols","console","log","getCPFSnapshotsAndRealtimeForClaimPopUp","res","data","cpfRealtime","pop","cpfSnapshotInfoDtoList","forEach","cpfSnapshotInfo","cpfRealtimeMap","set","convertDateToStr","relevantContributionYearMonth","cpfSnapshotArray","cpfSnapshot","cpfSnapshotMap","cpfSnapshotMapArray","push","startDate","date","Date","setMonth","getMonth","startYr","getFullYear","endYr","year","arr","month","yrMth","toString","yrMthCols","isClaimStartMth","isEquals","isWithinRange","startYearMonth","endYearMonth","getClaimSource","indicator","exports","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\ec-claim\\pop-up\\view-cpf\\view-cpf.component.html","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\ec-claim\\pop-up\\view-cpf\\view-cpf.component.ts"],"sourcesContent":["<div class = \"field grid\">\r\n  <div class=\"col-1\">\r\n    NRIC:\r\n  </div>\r\n  <div class=\"col-2\">\r\n    {{this.params.nric}}\r\n  </div>\r\n  <div class=\"col-1\">\r\n    Name:\r\n  </div>\r\n  <div class=\"col-2\">\r\n    {{this.params.name}}\r\n  </div>\r\n  <div class=\"col-1\">\r\n    Case ID:\r\n  </div>\r\n  <div class=\"col-2\">\r\n    {{this.params.caseId}}\r\n  </div>\r\n</div>\r\n<div class = \"field grid\">\r\n  <div class=\"col-1\">\r\n    CSN:\r\n  </div>\r\n  <div class=\"col-2\">\r\n    {{this.params.csn.substring(0,10)}}-{{this.params.csn.substring(10,13)}}-{{this.params.csn.substring(13,15)}}\r\n  </div>\r\n  <div class=\"col-1\">\r\n    COY Name:\r\n  </div>\r\n  <div class=\"col-2\">\r\n    {{this.params.coyName}}\r\n  </div>\r\n</div>\r\n<br>\r\n<h6>Snapshot CPF</h6>\r\n<hr>\r\n<div *ngIf = \"cpfSnapshotArray !== null && cpfSnapshotArray !== undefined && cpfSnapshotArray.length !== 0\">\r\n  <table class = \"cpf-table\" *ngFor = \"let cpfSnapshot of cpfSnapshotArray; let i = index\" >\r\n    <tr>\r\n        <th scope=\"colgroup\" colspan = \"13\">CPF {{this.dateUtilsService.convertDateToStr(cpfSnapshot.startYearMonth,\"MM-YYYY\")}} to {{this.dateUtilsService.convertDateToStr(cpfSnapshot.endYearMonth,\"MM-YYYY\")}} ({{cpfSnapshot.createdByInit}}) (Retrieved : {{cpfSnapshot.cpfSnapDate? this.dateUtilsService.convertDateToStr(cpfSnapshot.cpfSnapDate, \"DD-MM-YYYY\") : \"NA\"}}) (Latest Contribution Date: {{cpfSnapshot.latestContributionYearMonth? this.dateUtilsService.convertDateToStr(cpfSnapshot.latestContributionYearMonth,\"DD-MM-YYYY\") : \"NA\"}}) {{getClaimSource(cpfSnapshot.prepopulatedInd)}} </th>\r\n      </tr>\r\n      <div *ngFor = \"let year of yrMthCols\">\r\n        <tr>\r\n          <th scope=\"col\">Month</th>\r\n          <th scope=\"col\" *ngFor=\"let yrMth of year\" [ngStyle]= \"{'background': isClaimStartMth(yrMth) ? 'yellow' :'#f8f9fa'}\">\r\n            {{this.dateUtilsService.convertDateToStr(yrMth,\"MM-YYYY\")}}\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"col\">OW</th>\r\n          <td *ngFor=\"let yrMth of year\" [ngStyle]= \"{'background': isClaimStartMth(yrMth) ? 'yellow' :'#ffffff'}\">\r\n            {{cpfSnapshotMapArray[i].has(this.dateUtilsService.convertDateToStr(yrMth,\"MM-YYYY\"))? (cpfSnapshotMapArray[i].get(this.dateUtilsService.convertDateToStr(yrMth,\"MM-YYYY\")).owAmount | number : '1.2') : isWithinRange(yrMth, cpfSnapshot)? \"NA\" :\"\"}}\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"col\">AW</th>\r\n          <td *ngFor=\"let yrMth of year\" [ngStyle]= \"{'background': isClaimStartMth(yrMth) ? 'yellow' :'#ffffff'}\">\r\n            {{cpfSnapshotMapArray[i].has(this.dateUtilsService.convertDateToStr(yrMth,\"MM-YYYY\"))? (cpfSnapshotMapArray[i].get(this.dateUtilsService.convertDateToStr(yrMth,\"MM-YYYY\")).awAmount | number : '1.2') : isWithinRange(yrMth, cpfSnapshot)? \"NA\" :\"\"}}\r\n          </td>\r\n        </tr>\r\n      </div>\r\n  </table>\r\n</div>\r\n<div *ngIf = \"cpfSnapshotArray === null || cpfSnapshotArray === undefined || cpfSnapshotArray.length === 0\">\r\n  No Snapshots found\r\n</div>\r\n<br>\r\n<h6>Claim CPF (Realtime)</h6>\r\n<hr>\r\n<div *ngIf =\"cpfRealtime !== undefined && cpfRealtime !== null\">\r\n  <table class = \"cpf-table\">\r\n      <tr>\r\n        <th scope=\"colgroup\" colspan = \"13\">CPF {{this.dateUtilsService.convertDateToStr(cpfRealtime.startYearMonth,\"MM-YYYY\")}} to {{this.dateUtilsService.convertDateToStr(cpfRealtime.endYearMonth,\"MM-YYYY\")}} (Latest Contribution Date: {{cpfRealtime.latestContributionYearMonth ? this.dateUtilsService.convertDateToStr(cpfRealtime.latestContributionYearMonth,\"DD-MM-YYYY\") : \"NA\"}}) </th>\r\n      </tr>\r\n    <div *ngFor = \"let year of yrMthCols\">\r\n      <tr>\r\n        <th scope=\"col\">Month</th>\r\n          <th scope=\"col\" *ngFor=\"let yrMth of year\" [ngStyle]= \"{'background': isClaimStartMth(yrMth) ? 'yellow' :'#f8f9fa'}\">\r\n            {{this.dateUtilsService.convertDateToStr(yrMth,\"MM-YYYY\")}}\r\n          </th>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"col\">OW</th>\r\n        <td *ngFor=\"let yrMth of year\" [ngStyle]= \"{'background': isClaimStartMth(yrMth) ? 'yellow' :'#ffffff'}\">\r\n          {{cpfRealtimeMap.has(this.dateUtilsService.convertDateToStr(yrMth,\"MM-YYYY\"))? (cpfRealtimeMap.get(this.dateUtilsService.convertDateToStr(yrMth,\"MM-YYYY\")).owAmount | number : '1.2') : isWithinRange(yrMth, cpfRealtime)? \"NA\" :\"\"}}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"col\">AW</th>\r\n        <td *ngFor=\"let yrMth of year\" [ngStyle]= \"{'background': isClaimStartMth(yrMth) ? 'yellow' :'#ffffff'}\">\r\n          {{cpfRealtimeMap.has(this.dateUtilsService.convertDateToStr(yrMth,\"MM-YYYY\"))? (cpfRealtimeMap.get(this.dateUtilsService.convertDateToStr(yrMth,\"MM-YYYY\")).awAmount | number : '1.2') : isWithinRange(yrMth, cpfRealtime)? \"NA\" :\"\"}}\r\n        </td>\r\n      </tr>\r\n    </div>\r\n      <br>\r\n  </table>\r\n</div>\r\n\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {ICpfSnapshotInfo} from \"app/claim/ec-claim/model/cpf-snapshot-info.model\";\r\nimport {ICpfSnapshot} from \"app/claim/ec-claim/model/cpf-snapshot.model\";\r\nimport {DateUtilsService} from \"app/core/util/date-utils.service\";\r\nimport {ECClaimService} from \"app/claim/ec-claim/service/ec-claim.service\";\r\n\r\n@Component({\r\n  selector: 'n2-view-cpf',\r\n  templateUrl: './view-cpf.component.html',\r\n  styleUrls: ['./view-cpf.component.scss'],\r\n})\r\nexport class ViewCpfComponent implements OnInit {\r\n\r\n  params: any;\r\n  cpfSnapshotArray: ICpfSnapshot[] = [];\r\n  cpfSnapshotMapArray: Map<string, ICpfSnapshotInfo>[] = [];\r\n  cpfRealtime: ICpfSnapshot ;\r\n  cpfRealtimeMap: Map<string, ICpfSnapshotInfo> = new Map<string, ICpfSnapshotInfo>();\r\n  claimStartDate: Date;\r\n  yrMthCols: Date[][] = [];\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public dateUtilsService: DateUtilsService,\r\n    private ecClaimService: ECClaimService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.route.queryParams.subscribe((params) => {\r\n      this.params = params;\r\n      this.claimStartDate = this.dateUtilsService.convertStrToDate(this.params['claimStartDate'],\"YYYY-MM-DD\");\r\n      this.populateYrMthCols(this.claimStartDate);\r\n      console.log(params);\r\n      this.ecClaimService.getCPFSnapshotsAndRealtimeForClaimPopUp(this.params['caseId']).subscribe((res) => {\r\n        if(res.data){\r\n          //realtime data and Map\r\n          this.cpfRealtime = res.data.pop();\r\n          this.cpfRealtime.cpfSnapshotInfoDtoList.forEach((cpfSnapshotInfo: ICpfSnapshotInfo) => {\r\n              this.cpfRealtimeMap.set(this.dateUtilsService.convertDateToStr(cpfSnapshotInfo.relevantContributionYearMonth, 'MM-YYYY'), cpfSnapshotInfo);\r\n          });\r\n\r\n          console.log(this.cpfRealtimeMap);\r\n\r\n          //Snapshot Data and Map\r\n          this.cpfSnapshotArray = res.data;\r\n          this.cpfSnapshotArray.forEach((cpfSnapshot: ICpfSnapshot) => {\r\n            const cpfSnapshotMap: Map<string, ICpfSnapshotInfo> = new Map<string, ICpfSnapshotInfo>();\r\n            cpfSnapshot.cpfSnapshotInfoDtoList.forEach((cpfSnapshotInfo: ICpfSnapshotInfo) => {\r\n                cpfSnapshotMap.set(this.dateUtilsService.convertDateToStr(cpfSnapshotInfo.relevantContributionYearMonth, 'MM-YYYY'), cpfSnapshotInfo);\r\n            });\r\n            this.cpfSnapshotMapArray.push(cpfSnapshotMap);\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  populateYrMthCols(startDate: Date): void{\r\n\r\n    console.log(startDate);\r\n    const date:Date = new Date(this.claimStartDate);\r\n    date.setMonth(this.claimStartDate.getMonth() - 15);\r\n\r\n    const startYr: number = date.getFullYear();\r\n    const endYr: number = startDate.getFullYear();\r\n    console.log(startYr);\r\n    for (let year = startYr; year <= endYr; year++){\r\n      const arr: Date[] = []\r\n      for(let month = 0; month < 12; month++){\r\n        const yrMth: Date = this.dateUtilsService.convertStrToDate(\"1-\"+(month+1).toString()+\"-\"+ year.toString(),\"DD-MM-YYYY\")\r\n        arr.push(yrMth);\r\n      }\r\n      this.yrMthCols.push(arr);\r\n    }\r\n  }\r\n\r\n  isClaimStartMth(yrMth: Date):boolean {\r\n    return this.dateUtilsService.isEquals(yrMth, this.claimStartDate);\r\n  }\r\n\r\n  isWithinRange(date: Date, cpfSnapshot:ICpfSnapshot): boolean{\r\n    return this.dateUtilsService.isWithinRange(date,cpfSnapshot.startYearMonth,cpfSnapshot.endYearMonth);\r\n  }\r\n\r\n  getClaimSource(indicator: string): string{\r\n    switch(indicator){\r\n      case \"Y\":\r\n        return \"(Prepopulated)\";\r\n      case \"S\":\r\n        return \"(Self-Initiated)\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}