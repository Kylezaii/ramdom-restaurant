{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CurrentAccessService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nclass CurrentAccessService {\n  constructor(applicationConfigService, ns2HttpService) {\n    this.applicationConfigService = applicationConfigService;\n    this.ns2HttpService = ns2HttpService;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('api/acl');\n  }\n  getCurrentAccessList(options) {\n    const url = this.resourceUrl + '/current_access';\n    return this.ns2HttpService.get(url, options);\n  }\n  getCurrentAccessListExport(options) {\n    const url = this.resourceUrl + '/current_access/export';\n    return this.ns2HttpService.get(url, options);\n  }\n  enableAccess(id) {\n    const url = this.resourceUrl + '/enable_access/' + id;\n    return this.ns2HttpService.post(url);\n  }\n  getUserMainRole(subjectId) {\n    const url = `${this.resourceUrl}/main_role/${subjectId}`;\n    return this.ns2HttpService.get(url);\n  }\n}\nexports.CurrentAccessService = CurrentAccessService;\nCurrentAccessService.ɵfac = function CurrentAccessService_Factory(t) {\n  return new (t || CurrentAccessService)(i0.ɵɵinject(i1.ApplicationConfigService), i0.ɵɵinject(i2.Ns2HttpService));\n};\nCurrentAccessService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CurrentAccessService,\n  factory: CurrentAccessService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;;;;AAUA,MACaA,oBAAoB;EAI7BC,YACYC,wBAAkD,EAClDC,cAA8B;IAD9B,6BAAwB,GAAxBD,wBAAwB;IACxB,mBAAc,GAAdC,cAAc;IAJnB,gBAAW,GAAG,IAAI,CAACD,wBAAwB,CAACE,cAAc,CAAC,SAAS,CAAC;EAIhC;EAErCC,oBAAoB,CAACC,OAAa;IACrC,MAAMC,GAAG,GAAG,IAAI,CAACC,WAAW,GAAE,iBAAiB;IAC/C,OAAO,IAAI,CAACL,cAAc,CAACM,GAAG,CAACF,GAAG,EAACD,OAAO,CAAC;EAC/C;EAEOI,0BAA0B,CAACJ,OAAa;IAC3C,MAAMC,GAAG,GAAG,IAAI,CAACC,WAAW,GAAE,wBAAwB;IACtD,OAAO,IAAI,CAACL,cAAc,CAACM,GAAG,CAACF,GAAG,EAACD,OAAO,CAAC;EAC/C;EAEOK,YAAY,CAACC,EAAS;IACzB,MAAML,GAAG,GAAG,IAAI,CAACC,WAAW,GAAE,iBAAiB,GAACI,EAAE;IAClD,OAAO,IAAI,CAACT,cAAc,CAACU,IAAI,CAACN,GAAG,CAAC;EACxC;EAEOO,eAAe,CAACC,SAAgB;IACnC,MAAMR,GAAG,GAAG,GAAG,IAAI,CAACC,WAAW,cAAcO,SAAS,EAAE;IACxD,OAAO,IAAI,CAACZ,cAAc,CAACM,GAAG,CAACF,GAAG,CAAC;EACvC;;AA3BJS;;mBACahB,oBAAoB;AAAA;;SAApBA,oBAAoB;EAAAiB,SAApBjB,oBAAoB;EAAAkB,YADP;AAAM","names":["CurrentAccessService","constructor","applicationConfigService","ns2HttpService","getEndpointFor","getCurrentAccessList","options","url","resourceUrl","get","getCurrentAccessListExport","enableAccess","id","post","getUserMainRole","subjectId","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\access-control\\overview\\service\\current-access.service.ts"],"sourcesContent":["import { HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { ICurrentAccess } from '../model/current-access.model';\r\n\r\nexport type EntityResponseType = HttpResponse<ICurrentAccess >;\r\nexport type EntityArrayResponseType = HttpResponse<ICurrentAccess[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CurrentAccessService {\r\n    \r\n    public resourceUrl = this.applicationConfigService.getEndpointFor('api/acl');\r\n\r\n    constructor(\r\n        private applicationConfigService: ApplicationConfigService,\r\n        private ns2HttpService: Ns2HttpService){}\r\n\r\n    public getCurrentAccessList(options?: any): Observable<any>{\r\n        const url = this.resourceUrl +'/current_access';\r\n        return this.ns2HttpService.get(url,options);\r\n    }\r\n\r\n    public getCurrentAccessListExport(options?: any): Observable<any>{\r\n        const url = this.resourceUrl +'/current_access/export';\r\n        return this.ns2HttpService.get(url,options);\r\n    }\r\n    \r\n    public enableAccess(id:string): Observable<any>{\r\n        const url = this.resourceUrl +'/enable_access/'+id;\r\n        return this.ns2HttpService.post(url);\r\n    }\r\n\r\n    public getUserMainRole(subjectId:string):Observable<any>{\r\n        const url = `${this.resourceUrl}/main_role/${subjectId}`;\r\n        return this.ns2HttpService.get(url)\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}