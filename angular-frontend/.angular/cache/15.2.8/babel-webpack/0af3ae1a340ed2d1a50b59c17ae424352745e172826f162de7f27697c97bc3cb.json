{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileUpload2Component = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@angular/core\");\nconst nspapp_constants_1 = require(\"app/shared/constants/nspapp.constants\");\nconst api_1 = require(\"primeng/api\");\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst forms_1 = require(\"@angular/forms\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i2 = tslib_1.__importStar(require(\"app/shared/service/file-upload.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i4 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i5 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i6 = tslib_1.__importStar(require(\"primeng/fileupload\"));\nconst i7 = tslib_1.__importStar(require(\"primeng/progressbar\"));\nconst i8 = tslib_1.__importStar(require(\"primeng/messages\"));\nconst _c0 = [\"pfileUpload\"];\nconst _c1 = function () {\n  return {\n    \"height\": \"6px\"\n  };\n};\nfunction FileUpload2Component_ng_template_3_p_progressBar_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-progressBar\", 6);\n  }\n  if (rf & 2) {\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(2, _c1));\n  }\n}\nconst _c2 = function () {\n  return {\n    \"background-color\": \"white\"\n  };\n};\nfunction FileUpload2Component_ng_template_3_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"p-messages\", 8);\n    i0.ɵɵlistener(\"valueChange\", function FileUpload2Component_ng_template_3_span_10_Template_p_messages_valueChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.errMsg = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(5, _c2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", ctx_r4.errMsg)(\"showTransitionOptions\", \"0ms\")(\"hideTransitionOptions\", \"0ms\")(\"closable\", false);\n  }\n}\nfunction FileUpload2Component_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n      \");\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2, \"\\n        \");\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵtext(6);\n    i0.ɵɵtemplate(7, FileUpload2Component_ng_template_3_p_progressBar_7_Template, 1, 3, \"p-progressBar\", 4);\n    i0.ɵɵtext(8, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n      \");\n    i0.ɵɵtemplate(10, FileUpload2Component_ng_template_3_span_10_Template, 4, 6, \"span\", 5);\n    i0.ɵɵtext(11, \"\\n    \");\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" Files selected:  \", ctx_r1.selectedFiles.length, \"\\n        \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Files uploaded:  \", ctx_r1.verifiedFiles.length, \"\\n        \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loading);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.getFormValidationErrors());\n  }\n}\nfunction FileUpload2Component_ng_template_5_ul_1_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const file_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", file_r9.meta_data.fileName, \"\\n        - \", i0.ɵɵpipeBind2(2, 2, file_r9.meta_data.fileSize / 1024, \"1.2-2\"), \" KB\\n      \");\n  }\n}\nfunction FileUpload2Component_ng_template_5_ul_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtext(1, \"\\n      \");\n    i0.ɵɵtemplate(2, FileUpload2Component_ng_template_5_ul_1_li_2_Template, 3, 5, \"li\", 10);\n    i0.ɵɵtext(3, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.verifiedFiles);\n  }\n}\nfunction FileUpload2Component_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n    \");\n    i0.ɵɵtemplate(1, FileUpload2Component_ng_template_5_ul_1_Template, 4, 1, \"ul\", 9);\n    i0.ɵɵtext(2, \"\\n  \");\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.verifiedFiles.length);\n  }\n}\nclass FileUpload2Component {\n  constructor(messageService, fileUploadService, toastService, formBuilder) {\n    this.messageService = messageService;\n    this.fileUploadService = fileUploadService;\n    this.toastService = toastService;\n    this.formBuilder = formBuilder;\n    this.verifiedFiles = [];\n    this.selectedFiles = [];\n    this.fileFormat = nspapp_constants_1.NSPAppConstants.FILE_FORMAT;\n    this.isMultiple = true;\n    this.loading = false;\n    this.submitInd = this.verifiedFiles.length !== 0;\n    // massUploadForm: FormGroup;\n    this.fileUploadForm = this.formBuilder.group({\n      fileControl: new forms_1.FormControl([], null)\n    });\n    this.errMsg = [{\n      severity: 'error',\n      summary: 'Error',\n      detail: 'Message Content'\n    }];\n    this.hasErrors = false;\n    this.txnIdListEvent = new core_1.EventEmitter();\n    this.closeEvent = new core_1.EventEmitter();\n    this.fileEventEvent = new core_1.EventEmitter();\n    this.validationErrEvent = new core_1.EventEmitter();\n    // Control Value Accessor related methods\n    this.onChange = () => {\n      console.log(\"onChange\");\n    };\n    this.onTouch = () => {\n      console.log(\"onTouch\");\n    };\n    this.subscription = new rxjs_1.Subscription();\n  }\n  // will detect any changes to @Input params and update to latest using .currentValue\n  ngOnChanges(changes) {\n    if (this.control) {\n      if (changes.control) {\n        console.log(\"changed control\", changes.control.currentValue);\n        console.log('parent control avail');\n        this.fileUploadForm = this.toFormGroup(changes.control.currentValue);\n      } else {\n        console.log('parent control not avail, defaulting....');\n        // this.fileLimit= NSPAppConstants.MAXIMUM_FILES; // Override this in implemented components if value differs\n        // this.maxFileSize = NSPAppConstants.MAXIMUM_FILE_SIZE; //in bytes\n      }\n    }\n  }\n\n  ngOnInit() {\n    if (this.specificFormat) {\n      this.fileFormat = this.specificFormat;\n      console.log(\"real format is \", this.fileFormat);\n    }\n  }\n  getFormValidationErrors() {\n    if (this.fileUploadForm.controls['fileControl'].errors) {\n      this.errMsg = Object.values(this.fileUploadForm.controls['fileControl'].errors).map(msg => ({\n        severity: 'error',\n        summary: 'error',\n        detail: msg\n      }));\n      this.validationErrEvent.emit(this.fileUploadForm.controls['fileControl'].errors);\n    }\n    return this.fileUploadForm.controls['fileControl'].errors != null;\n  }\n  preloadFiles(fileArr) {\n    // Clear underlying files\n    this.pFileUpload.clear();\n    fileArr.forEach(element => {\n      this.pFileUpload.files.push(element);\n    });\n    this.selectedFiles = this.pFileUpload.files;\n    this.onChange(this.pFileUpload.files);\n  }\n  onSelect(event) {\n    console.log('onSelect() of NSPAY2.0 file-upload component', event.currentFiles);\n    this.selectedFiles = event.currentFiles;\n    this.fileEventEvent.emit(this.selectedFiles);\n    this.onChange(event.currentFiles);\n  }\n  onProgress(event) {\n    this.pFileUpload.progress = event;\n  }\n  onRemove(event) {\n    console.log('removed files', event);\n    let filesToEmit = this.pFileUpload.files;\n    // Filters away the just-removed file and emit out the file list\n    filesToEmit = filesToEmit.filter(item => item !== event.file);\n    this.onChange(filesToEmit);\n  }\n  onRemoveAll() {\n    console.log('removing all files', this.selectedFiles);\n    this.pFileUpload.clear();\n    this.selectedFiles = [];\n    this.onChange(this.pFileUpload.files);\n  }\n  onClose() {\n    console.log('before', this.selectedFiles);\n    const closure = this.selectedFiles;\n    this.closeEvent.emit(closure);\n  }\n  ngOnDestroy() {\n    console.log('destroyed');\n  }\n  clearCustomFileArrays() {\n    this.selectedFiles = [];\n    this.onChange(this.pFileUpload.files);\n  }\n  writeValue(obj) {\n    this.pFileUpload.clear();\n    this.selectedFiles = [];\n    this.verifiedFiles = [];\n  }\n  // Upon UI element value changes, this method gets triggered\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  seeChange(event) {\n    console.log(\"whats the change\", this.selectedFiles);\n    console.log(\"whats the change\", event);\n  }\n  // Upon touching the element, this method gets triggered\n  registerOnTouched(fn) {\n    // console.log('Function called: registerOnTouched');\n    this.onTouch = fn;\n  }\n  setDisabledState(isDisabled) {\n    console.log(\"disabledState\", isDisabled);\n  }\n  /**\r\n   *\r\n   * @param event Uses business function submit button\r\n   */\n  fileUploadHandler(module, useCase) {\n    const eventFiles = this.selectedFiles;\n    console.log('uploading files:', this.selectedFiles);\n    this.loading = true;\n    this.subscription.add();\n    this.fileUploadService.generateProcInst(null).pipe((0, operators_1.concatMap)(procIdResp => {\n      if (procIdResp && procIdResp.status === 200) {\n        if (!this.isMultiple) {\n          return this.fileUploadService.uploadSingle(eventFiles[0], procIdResp.body.data, module, useCase);\n        } else {\n          return this.fileUploadService.uploadMultiple(eventFiles, procIdResp.body.data, module, useCase);\n        }\n      } else {\n        throw new Error('Failed to generate Process Instance');\n      }\n    })).subscribe(resp => {\n      if (resp) {\n        if (!this.isMultiple) {\n          if (resp.status === 200) {\n            const txnIdList = [];\n            if (!resp.body.data.err_id) {\n              this.verifiedFiles.push(resp.body.data.meta_data);\n              this.toastService.success(resp.body.success_message);\n              txnIdList.push(resp.body.data.meta_data.id);\n              this.txnIdListEvent.emit(txnIdList);\n            } else {\n              this.toastService.error(String(resp.body.data.err_id) + ': ' + String(resp.body.data.err_msg));\n            }\n            this.loading = false;\n          }\n        } else {\n          if (resp.status === 200) {\n            // for(let file of resp.body.data.file_upload_resp_list) {\n            //   this.verifiedFiles.push(file.meta_data);\n            // }\n            this.verifiedFiles = resp.body.data.file_upload_resp_list.filter(x => x.err_id == null);\n            const txnIdList = this.verifiedFiles.map(x => String(x.meta_data.id));\n            console.log('verified list', this.verifiedFiles);\n            this.txnIdListEvent.emit(txnIdList);\n            if (!resp.body.data.error_map || resp.body.data.error_map && Object.keys(resp.body.data.error_map).length === 0) {\n              this.toastService.success(resp.body.success_message);\n            } else {\n              const errList = Object.entries(resp.body.data.error_map).map(([key, value]) => ({\n                errId: key,\n                value\n              }));\n              console.log('erroList is ', errList);\n              let errorMsg = '';\n              errList.forEach(x => {\n                errorMsg = errorMsg.concat(x.errId).concat(': ').concat(x.value).concat('</br>');\n              });\n              console.log('errMsg is ' + errorMsg);\n              this.toastService.error(errorMsg);\n            }\n            // txnIdList = resp.body.data.file_upload_resp_list.map(x=>{return x.meta_data.id});\n            this.loading = false;\n          }\n        }\n      }\n    }, error => {\n      console.log(\"error is \" + String(error));\n      this.loading = false;\n    });\n    this.onRemoveAll();\n  }\n  toFormGroup(data) {\n    return this.formBuilder.group({\n      fileControl: data\n    });\n  }\n}\nexports.FileUpload2Component = FileUpload2Component;\nFileUpload2Component.ɵfac = function FileUpload2Component_Factory(t) {\n  return new (t || FileUpload2Component)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.FileUploadService), i0.ɵɵdirectiveInject(i3.CustomToastService), i0.ɵɵdirectiveInject(i4.FormBuilder));\n};\nFileUpload2Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FileUpload2Component,\n  selectors: [[\"ic-file-upload\"]],\n  viewQuery: function FileUpload2Component_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pFileUpload = _t.first);\n    }\n  },\n  inputs: {\n    specificFormat: \"specificFormat\",\n    control: \"control\"\n  },\n  outputs: {\n    txnIdListEvent: \"txnIdListEvent\",\n    closeEvent: \"closeEvent\",\n    fileEventEvent: \"fileEventEvent\",\n    validationErrEvent: \"validationErrEvent\"\n  },\n  features: [i0.ɵɵProvidersFeature([api_1.MessageService\n  // ,\n  // {\n  //   provide: NG_VALUE_ACCESSOR,\n  //   useExisting: forwardRef(() =>FileUpload2Component),\n  //   multi: true\n  // }\n  ]), i0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 3,\n  consts: [[\"name\", \"fileupload[]\", \"cancelLabel\", \"Remove All\", \"uploadLabel\", \"Verify File\", 3, \"multiple\", \"showUploadButton\", \"customUpload\", \"onSelect\", \"onRemove\", \"onProgress\", \"onClear\"], [\"pfileUpload\", \"\"], [\"pTemplate\", \"toolbar\"], [\"pTemplate\", \"content\"], [\"mode\", \"indeterminate\", 3, \"style\", 4, \"ngIf\"], [3, \"ngStyle\", 4, \"ngIf\"], [\"mode\", \"indeterminate\"], [3, \"ngStyle\"], [3, \"value\", \"showTransitionOptions\", \"hideTransitionOptions\", \"closable\", \"valueChange\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function FileUpload2Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-fileUpload\", 0, 1);\n      i0.ɵɵlistener(\"onSelect\", function FileUpload2Component_Template_p_fileUpload_onSelect_0_listener($event) {\n        return ctx.onSelect($event);\n      })(\"onRemove\", function FileUpload2Component_Template_p_fileUpload_onRemove_0_listener($event) {\n        return ctx.onRemove($event);\n      })(\"onProgress\", function FileUpload2Component_Template_p_fileUpload_onProgress_0_listener($event) {\n        return ctx.onProgress($event);\n      })(\"onClear\", function FileUpload2Component_Template_p_fileUpload_onClear_0_listener() {\n        return ctx.clearCustomFileArrays();\n      });\n      i0.ɵɵtext(2, \"\\n    \");\n      i0.ɵɵtemplate(3, FileUpload2Component_ng_template_3_Template, 12, 4, \"ng-template\", 2);\n      i0.ɵɵtext(4, \"\\n\\n  \\n\\n  \");\n      i0.ɵɵtemplate(5, FileUpload2Component_ng_template_5_Template, 3, 1, \"ng-template\", 3);\n      i0.ɵɵtext(6, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"multiple\", ctx.isMultiple)(\"showUploadButton\", false)(\"customUpload\", true);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i5.NgStyle, i1.PrimeTemplate, i6.FileUpload, i7.ProgressBar, i8.Messages, i5.DecimalPipe],\n  styles: [\".custom-fileupload-remove-button.p-button.p-button-rounded {\\n  width: 1.5rem;\\n}\\n\\n  .custom-fileupload-remove-button.p-button.p-button-icon-only.p-button-rounded {\\n  height: 1.5rem;\\n}\\n\\n  .p-button.p-button-sm .p-button-icon {\\n  border: 3px;\\n}\\n\\n  .p-button.p-button-sm .p-button-danger {\\n  font-size: 0.6rem;\\n}\\n\\n  .p-fileupload-files {\\n  display: none !important;\\n}\\n\\n  .p-fileupload-content .p-progressbar {\\n  display: none !important;\\n}\\n\\n.n2-file-upload-content[_ngcontent-%COMP%] {\\n  overflow: auto;\\n  height: 400px;\\n  max-width: 100%;\\n  overflow-x: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGUtdXBsb2FkLmNvbXBvbmVudC5zY3NzIiwiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxccHJvamVjdHMlMjAyXFxuc3BheWlpYXBwXFxzcmNcXG1haW5cXHdlYmFwcFxcYXBwXFxzaGFyZWRcXGNvbXBvbmVudFxcZmlsZS11cGxvYWRcXGZpbGUtdXBsb2FkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBRUksYUFBQTtBQ0ZKOztBREtBO0VBQ0ksY0FBQTtBQ0ZKOztBREtBO0VBQ0ksV0FBQTtBQ0ZKOztBREtBO0VBQ0ksaUJBQUE7QUNGSjs7QURLQTtFQUNJLHdCQUFBO0FDRko7O0FES0E7RUFDSSx3QkFBQTtBQ0ZKOztBRFNBO0VBQ0ksY0FBQTtFQUNBLGFBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7QUNOSiIsImZpbGUiOiJmaWxlLXVwbG9hZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuOjpuZy1kZWVwIC5jdXN0b20tZmlsZXVwbG9hZC1yZW1vdmUtYnV0dG9uLnAtYnV0dG9uLnAtYnV0dG9uLXJvdW5kZWQge1xyXG5cclxuICAgIHdpZHRoOiAxLjVyZW07XHJcbn1cclxuXHJcbjo6bmctZGVlcCAuY3VzdG9tLWZpbGV1cGxvYWQtcmVtb3ZlLWJ1dHRvbi5wLWJ1dHRvbi5wLWJ1dHRvbi1pY29uLW9ubHkucC1idXR0b24tcm91bmRlZHtcclxuICAgIGhlaWdodDogMS41cmVtO1xyXG59XHJcblxyXG46Om5nLWRlZXAgLnAtYnV0dG9uLnAtYnV0dG9uLXNtIC5wLWJ1dHRvbi1pY29uIHtcclxuICAgIGJvcmRlcjogM3B4O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLnAtYnV0dG9uLnAtYnV0dG9uLXNtIC5wLWJ1dHRvbi1kYW5nZXIge1xyXG4gICAgZm9udC1zaXplOiAwLjZyZW07XHJcbn1cclxuXHJcbjo6bmctZGVlcCAucC1maWxldXBsb2FkLWZpbGVze1xyXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLnAtZmlsZXVwbG9hZC1jb250ZW50IC5wLXByb2dyZXNzYmFye1xyXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4vLyA6Om5nLWRlZXAgLnAtZmlsZXVwbG9hZC1jaG9vc2V7XHJcbi8vICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbi8vIH1cclxuXHJcbi5uMi1maWxlLXVwbG9hZC1jb250ZW50IHtcclxuICAgIG92ZXJmbG93OiBhdXRvOyBcclxuICAgIGhlaWdodDogNDAwcHg7IFxyXG4gICAgbWF4LXdpZHRoOiAxMDAlOyBcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlblxyXG59IiwiOjpuZy1kZWVwIC5jdXN0b20tZmlsZXVwbG9hZC1yZW1vdmUtYnV0dG9uLnAtYnV0dG9uLnAtYnV0dG9uLXJvdW5kZWQge1xuICB3aWR0aDogMS41cmVtO1xufVxuXG46Om5nLWRlZXAgLmN1c3RvbS1maWxldXBsb2FkLXJlbW92ZS1idXR0b24ucC1idXR0b24ucC1idXR0b24taWNvbi1vbmx5LnAtYnV0dG9uLXJvdW5kZWQge1xuICBoZWlnaHQ6IDEuNXJlbTtcbn1cblxuOjpuZy1kZWVwIC5wLWJ1dHRvbi5wLWJ1dHRvbi1zbSAucC1idXR0b24taWNvbiB7XG4gIGJvcmRlcjogM3B4O1xufVxuXG46Om5nLWRlZXAgLnAtYnV0dG9uLnAtYnV0dG9uLXNtIC5wLWJ1dHRvbi1kYW5nZXIge1xuICBmb250LXNpemU6IDAuNnJlbTtcbn1cblxuOjpuZy1kZWVwIC5wLWZpbGV1cGxvYWQtZmlsZXMge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbjo6bmctZGVlcCAucC1maWxldXBsb2FkLWNvbnRlbnQgLnAtcHJvZ3Jlc3NiYXIge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi5uMi1maWxlLXVwbG9hZC1jb250ZW50IHtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIGhlaWdodDogNDAwcHg7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufSJdfQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvc2hhcmVkL2NvbXBvbmVudC9maWxlLXVwbG9hZC9maWxlLXVwbG9hZC5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uL3Byb2plY3RzJTIwMi9uc3BheWlpYXBwL3NyYy9tYWluL3dlYmFwcC9hcHAvc2hhcmVkL2NvbXBvbmVudC9maWxlLXVwbG9hZC9maWxlLXVwbG9hZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUVJLGFBQUE7QUNGSjs7QURLQTtFQUNJLGNBQUE7QUNGSjs7QURLQTtFQUNJLFdBQUE7QUNGSjs7QURLQTtFQUNJLGlCQUFBO0FDRko7O0FES0E7RUFDSSx3QkFBQTtBQ0ZKOztBREtBO0VBQ0ksd0JBQUE7QUNGSjs7QURTQTtFQUNJLGNBQUE7RUFDQSxhQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0FDTko7QURDQSxnZ0ZBQWdnRiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuOjpuZy1kZWVwIC5jdXN0b20tZmlsZXVwbG9hZC1yZW1vdmUtYnV0dG9uLnAtYnV0dG9uLnAtYnV0dG9uLXJvdW5kZWQge1xyXG5cclxuICAgIHdpZHRoOiAxLjVyZW07XHJcbn1cclxuXHJcbjo6bmctZGVlcCAuY3VzdG9tLWZpbGV1cGxvYWQtcmVtb3ZlLWJ1dHRvbi5wLWJ1dHRvbi5wLWJ1dHRvbi1pY29uLW9ubHkucC1idXR0b24tcm91bmRlZHtcclxuICAgIGhlaWdodDogMS41cmVtO1xyXG59XHJcblxyXG46Om5nLWRlZXAgLnAtYnV0dG9uLnAtYnV0dG9uLXNtIC5wLWJ1dHRvbi1pY29uIHtcclxuICAgIGJvcmRlcjogM3B4O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLnAtYnV0dG9uLnAtYnV0dG9uLXNtIC5wLWJ1dHRvbi1kYW5nZXIge1xyXG4gICAgZm9udC1zaXplOiAwLjZyZW07XHJcbn1cclxuXHJcbjo6bmctZGVlcCAucC1maWxldXBsb2FkLWZpbGVze1xyXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLnAtZmlsZXVwbG9hZC1jb250ZW50IC5wLXByb2dyZXNzYmFye1xyXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4vLyA6Om5nLWRlZXAgLnAtZmlsZXVwbG9hZC1jaG9vc2V7XHJcbi8vICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbi8vIH1cclxuXHJcbi5uMi1maWxlLXVwbG9hZC1jb250ZW50IHtcclxuICAgIG92ZXJmbG93OiBhdXRvOyBcclxuICAgIGhlaWdodDogNDAwcHg7IFxyXG4gICAgbWF4LXdpZHRoOiAxMDAlOyBcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlblxyXG59IiwiOjpuZy1kZWVwIC5jdXN0b20tZmlsZXVwbG9hZC1yZW1vdmUtYnV0dG9uLnAtYnV0dG9uLnAtYnV0dG9uLXJvdW5kZWQge1xuICB3aWR0aDogMS41cmVtO1xufVxuXG46Om5nLWRlZXAgLmN1c3RvbS1maWxldXBsb2FkLXJlbW92ZS1idXR0b24ucC1idXR0b24ucC1idXR0b24taWNvbi1vbmx5LnAtYnV0dG9uLXJvdW5kZWQge1xuICBoZWlnaHQ6IDEuNXJlbTtcbn1cblxuOjpuZy1kZWVwIC5wLWJ1dHRvbi5wLWJ1dHRvbi1zbSAucC1idXR0b24taWNvbiB7XG4gIGJvcmRlcjogM3B4O1xufVxuXG46Om5nLWRlZXAgLnAtYnV0dG9uLnAtYnV0dG9uLXNtIC5wLWJ1dHRvbi1kYW5nZXIge1xuICBmb250LXNpemU6IDAuNnJlbTtcbn1cblxuOjpuZy1kZWVwIC5wLWZpbGV1cGxvYWQtZmlsZXMge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbjo6bmctZGVlcCAucC1maWxldXBsb2FkLWNvbnRlbnQgLnAtcHJvZ3Jlc3NiYXIge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi5uMi1maWxlLXVwbG9hZC1jb250ZW50IHtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIGhlaWdodDogNDAwcHg7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;AAAA;AAYA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;ICDQA,mCAAgG;;;IAA5CA,yCAA2B;;;;;;;;;;;IAEjFA,+BAAuF;IACrFA;IAAAA,qCAGqB;IAHTA;MAAAA;MAAA;MAAA;IAAA,EAAkB;IAGTA,iBAAa;IACpCA;IAAAA,iBAAO;;;;IALsCA,oDAAyC;IACxEA,eAAkB;IAAlBA,qCAAkB;;;;;IANhCA;IAAAA,2BAAK;IACHA;IAAAA,qBAAM;IAACA,YACP;IAAAA,qBAAM;IAACA,YACP;IAAAA,uGAAgG;IAClGA;IAAAA,iBAAM;IACNA;IAAAA,uFAKO;IACTA;;;;IAVWA,eACP;IADOA,sFACP;IAAOA,eACP;IADOA,sFACP;IAAgBA,eAAa;IAAbA,qCAAa;IAExBA,eAAoC;IAApCA,uDAAoC;;;;;IAa3CA,0BAAuC;IAAAA,YAEvC;;IAAAA,iBAAK;;;;IAFkCA,eAEvC;IAFuCA,sJAEvC;;;;;IAHFA,0BAAkC;IAChCA;IAAAA,uFAEK;IACPA;IAAAA,iBAAK;;;;IAHkBA,eAAgB;IAAhBA,8CAAgB;;;;;IADvCA;IAAAA,iFAIK;IACPA;;;;IALOA,eAA0B;IAA1BA,kDAA0B;;;ADVnC,MAcaC,oBAAoB;EAwC/BC,YACUC,cAA8B,EAC9BC,iBAAoC,EACpCC,YAAgC,EAChCC,WAAwB;IAHxB,mBAAc,GAAdH,cAAc;IACd,sBAAiB,GAAjBC,iBAAiB;IACjB,iBAAY,GAAZC,YAAY;IACZ,gBAAW,GAAXC,WAAW;IA1CrB,kBAAa,GAAU,EAAE;IACzB,kBAAa,GAAU,EAAE;IAOzB,eAAU,GAAWC,kCAAe,CAACC,WAAW;IAChD,eAAU,GAAG,IAAI;IACjB,YAAO,GAAG,KAAK;IACf,cAAS,GAAG,IAAI,CAACC,aAAa,CAACC,MAAM,KAAK,CAAC;IAG3C;IACA,mBAAc,GAAc,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACjDC,WAAW,EAAE,IAAIC,mBAAW,CAAC,EAAE,EAAE,IAAI;KACtC,CAAC;IAQF,WAAM,GAAc,CAAC;MAACC,QAAQ,EAAE,OAAO;MAAEC,OAAO,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAiB,CAAC,CAAC;IACtF,cAAS,GAAG,KAAK;IAEP,mBAAc,GAAG,IAAIC,mBAAY,EAAO;IAExC,eAAU,GAAG,IAAIA,mBAAY,EAAO;IAEpC,mBAAc,GAAG,IAAIA,mBAAY,EAAO;IAExC,uBAAkB,GAAG,IAAIA,mBAAY,EAAO;IAmGtD;IACA,aAAQ,GAAQ,MAAK;MACnBC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACzB,CAAC;IACD,YAAO,GAAQ,MAAK;MAClBD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC;IA/FC,IAAI,CAACC,YAAY,GAAG,IAAIC,mBAAY,EAAE;EAExC;EAEA;EACAC,WAAW,CAACC,OAAsB;IAChC,IAAI,IAAI,CAACC,OAAO,EAAE;MAChB,IAAID,OAAO,CAACC,OAAO,EAAE;QACnBN,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEI,OAAO,CAACC,OAAO,CAACC,YAAY,CAAC;QAC5DP,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;QACnC,IAAI,CAACO,cAAc,GAAG,IAAI,CAACC,WAAW,CAACJ,OAAO,CAACC,OAAO,CAACC,YAAY,CAAC;OAErE,MAAM;QACLP,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;QACvD;QACA;;;EAGN;;EAEAS,QAAQ;IACN,IAAI,IAAI,CAACC,cAAc,EAAE;MACvB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACD,cAAc;MACrCX,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACW,UAAU,CAAC;;EAGnD;EAEAC,uBAAuB;IACrB,IAAI,IAAI,CAACL,cAAc,CAACM,QAAQ,CAAC,aAAa,CAAC,CAACC,MAAM,EAAE;MACtD,IAAI,CAACC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACV,cAAc,CAACM,QAAQ,CAAC,aAAa,CAAC,CAACC,MAAM,CAAC,CAC5EI,GAAG,CAACC,GAAG,KAAK;QAACxB,QAAQ,EAAE,OAAO;QAAEC,OAAO,EAAE,OAAO;QAAEC,MAAM,EAAEsB;MAAG,CAAC,CAAC,CAAC;MACnE,IAAI,CAACC,kBAAkB,CAACC,IAAI,CAAC,IAAI,CAACd,cAAc,CAACM,QAAQ,CAAC,aAAa,CAAC,CAACC,MAAM,CAAC;;IAElF,OAAO,IAAI,CAACP,cAAc,CAACM,QAAQ,CAAC,aAAa,CAAC,CAACC,MAAM,IAAI,IAAI;EACnE;EAEAQ,YAAY,CAACC,OAAe;IAC1B;IACA,IAAI,CAACC,WAAW,CAACC,KAAK,EAAE;IACxBF,OAAO,CAACG,OAAO,CAACC,OAAO,IAAG;MACxB,IAAI,CAACH,WAAW,CAACI,KAAK,CAACC,IAAI,CAACF,OAAO,CAAC;IACtC,CAAC,CAAC;IACF,IAAI,CAACG,aAAa,GAAG,IAAI,CAACN,WAAW,CAACI,KAAK;IAC3C,IAAI,CAACG,QAAQ,CAAC,IAAI,CAACP,WAAW,CAACI,KAAK,CAAC;EACvC;EAGAI,QAAQ,CAACC,KAAU;IACjBlC,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAEiC,KAAK,CAACC,YAAY,CAAC;IAC/E,IAAI,CAACJ,aAAa,GAAGG,KAAK,CAACC,YAAY;IACvC,IAAI,CAACC,cAAc,CAACd,IAAI,CAAC,IAAI,CAACS,aAAa,CAAC;IAC5C,IAAI,CAACC,QAAQ,CAACE,KAAK,CAACC,YAAY,CAAC;EACnC;EAEAE,UAAU,CAACH,KAAU;IACnB,IAAI,CAACT,WAAW,CAACa,QAAQ,GAAGJ,KAAK;EACnC;EAEAK,QAAQ,CAACL,KAAU;IACjBlC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEiC,KAAK,CAAC;IACnC,IAAIM,WAAW,GAAW,IAAI,CAACf,WAAW,CAACI,KAAK;IAChD;IACAW,WAAW,GAAGA,WAAW,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKR,KAAK,CAACS,IAAI,CAAC;IAC7D,IAAI,CAACX,QAAQ,CAACQ,WAAW,CAAC;EAC5B;EAEAI,WAAW;IACT5C,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAAC8B,aAAa,CAAC;IACrD,IAAI,CAACN,WAAW,CAACC,KAAK,EAAE;IACxB,IAAI,CAACK,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACP,WAAW,CAACI,KAAK,CAAC;EACvC;EAEAgB,OAAO;IACL7C,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC8B,aAAa,CAAC;IACzC,MAAMe,OAAO,GAAG,IAAI,CAACf,aAAa;IAClC,IAAI,CAACgB,UAAU,CAACzB,IAAI,CAACwB,OAAO,CAAC;EAC/B;EAEAE,WAAW;IACThD,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAC1B;EAEAgD,qBAAqB;IACnB,IAAI,CAAClB,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACP,WAAW,CAACI,KAAK,CAAC;EACvC;EAUAqB,UAAU,CAACC,GAAQ;IACjB,IAAI,CAAC1B,WAAW,CAACC,KAAK,EAAE;IACxB,IAAI,CAACK,aAAa,GAAG,EAAE;IACvB,IAAI,CAACxC,aAAa,GAAG,EAAE;EACzB;EAEA;EACA6D,gBAAgB,CAACC,EAAO;IACtB,IAAI,CAACrB,QAAQ,GAAGqB,EAAE;EACpB;EAEAC,SAAS,CAACpB,KAAY;IACpBlC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC8B,aAAa,CAAC;IACnD/B,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEiC,KAAK,CAAC;EACxC;EAEA;EACAqB,iBAAiB,CAACF,EAAO;IACvB;IACA,IAAI,CAACG,OAAO,GAAGH,EAAE;EACnB;EAEAI,gBAAgB,CAACC,UAAmB;IAClC1D,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEyD,UAAU,CAAC;EAC1C;EAGA;;;;EAIAC,iBAAiB,CAACC,MAAc,EAAEC,OAAe;IAC/C,MAAMC,UAAU,GAAG,IAAI,CAAC/B,aAAa;IACrC/B,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC8B,aAAa,CAAC;IACnD,IAAI,CAACgC,OAAO,GAAG,IAAI;IACnB,IAAI,CAAC7D,YAAY,CAAC8D,GAAG,EAAE;IAEvB,IAAI,CAAC9E,iBAAiB,CAAC+E,gBAAgB,CAAC,IAAI,CAAC,CAACC,IAAI,CAAC,yBAAS,EAACC,UAAU,IAAG;MACtE,IAAIA,UAAU,IAAIA,UAAU,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3C,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE;UACpB,OAAO,IAAI,CAACnF,iBAAiB,CAACoF,YAAY,CAACR,UAAU,CAAC,CAAC,CAAC,EAAEK,UAAU,CAACI,IAAI,CAACC,IAAI,EAAEZ,MAAM,EAAEC,OAAO,CAAC;SACjG,MAAM;UACL,OAAO,IAAI,CAAC3E,iBAAiB,CAACuF,cAAc,CAACX,UAAU,EAAEK,UAAU,CAACI,IAAI,CAACC,IAAI,EAAEZ,MAAM,EAAEC,OAAO,CAAC;;OAElG,MAAM;QACL,MAAM,IAAIa,KAAK,CAAC,qCAAqC,CAAC;;IAE1D,CAAC,CACF,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MAChB,IAAIA,IAAI,EAAE;QACR,IAAI,CAAC,IAAI,CAACP,UAAU,EAAE;UACpB,IAAIO,IAAI,CAACR,MAAM,KAAK,GAAG,EAAE;YACvB,MAAMS,SAAS,GAAG,EAAE;YACpB,IAAI,CAACD,IAAI,CAACL,IAAI,CAACC,IAAI,CAACM,MAAM,EAAE;cAC1B,IAAI,CAACvF,aAAa,CAACuC,IAAI,CAAC8C,IAAI,CAACL,IAAI,CAACC,IAAI,CAACO,SAAS,CAAC;cACjD,IAAI,CAAC5F,YAAY,CAAC6F,OAAO,CAACJ,IAAI,CAACL,IAAI,CAACU,eAAe,CAAC;cACpDJ,SAAS,CAAC/C,IAAI,CAAC8C,IAAI,CAACL,IAAI,CAACC,IAAI,CAACO,SAAS,CAACG,EAAE,CAAC;cAC3C,IAAI,CAACC,cAAc,CAAC7D,IAAI,CAACuD,SAAS,CAAC;aACpC,MAAM;cACL,IAAI,CAAC1F,YAAY,CAACiG,KAAK,CAACC,MAAM,CAACT,IAAI,CAACL,IAAI,CAACC,IAAI,CAACM,MAAM,CAAC,GAAG,IAAI,GAAGO,MAAM,CAACT,IAAI,CAACL,IAAI,CAACC,IAAI,CAACc,OAAO,CAAC,CAAC;;YAGhG,IAAI,CAACvB,OAAO,GAAG,KAAK;;SAEvB,MAAM;UACL,IAAIa,IAAI,CAACR,MAAM,KAAK,GAAG,EAAE;YACvB;YACA;YACA;YACA,IAAI,CAAC7E,aAAa,GAAGqF,IAAI,CAACL,IAAI,CAACC,IAAI,CAACe,qBAAqB,CAAC9C,MAAM,CAAE+C,CAAM,IAAKA,CAAC,CAACV,MAAM,IAAI,IAAI,CAAC;YAC9F,MAAMD,SAAS,GAAG,IAAI,CAACtF,aAAa,CAAC4B,GAAG,CAAEqE,CAAM,IAAKH,MAAM,CAACG,CAAC,CAACT,SAAS,CAACG,EAAE,CAAC,CAAC;YAC5ElF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACV,aAAa,CAAC;YAChD,IAAI,CAAC4F,cAAc,CAAC7D,IAAI,CAACuD,SAAS,CAAC;YAEnC,IAAI,CAACD,IAAI,CAACL,IAAI,CAACC,IAAI,CAACiB,SAAS,IAAKb,IAAI,CAACL,IAAI,CAACC,IAAI,CAACiB,SAAS,IAAIxE,MAAM,CAACyE,IAAI,CAACd,IAAI,CAACL,IAAI,CAACC,IAAI,CAACiB,SAAS,CAAC,CAACjG,MAAM,KAAK,CAAE,EAAE;cACjH,IAAI,CAACL,YAAY,CAAC6F,OAAO,CAACJ,IAAI,CAACL,IAAI,CAACU,eAAe,CAAC;aACrD,MAAM;cACL,MAAMU,OAAO,GAAQ1E,MAAM,CAAC2E,OAAO,CAAChB,IAAI,CAACL,IAAI,CAACC,IAAI,CAACiB,SAAS,CAAC,CAACtE,GAAG,CAAC,CAAC,CAAC0E,GAAG,EAAEC,KAAK,CAAC,MAAM;gBACnFC,KAAK,EAAEF,GAAG;gBACVC;eACD,CAAC,CAAC;cACH9F,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE0F,OAAO,CAAC;cACpC,IAAIK,QAAQ,GAAG,EAAE;cACjBL,OAAO,CAAChE,OAAO,CAAE6D,CAAM,IAAI;gBACzBQ,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACT,CAAC,CAACO,KAAK,CAAC,CAACE,MAAM,CAAC,IAAI,CAAC,CAACA,MAAM,CAACT,CAAC,CAACM,KAAK,CAAC,CAACG,MAAM,CAAC,OAAO,CAAC;cAClF,CAAC,CAAC;cACFjG,OAAO,CAACC,GAAG,CAAC,YAAY,GAAG+F,QAAQ,CAAC;cACpC,IAAI,CAAC7G,YAAY,CAACiG,KAAK,CAACY,QAAQ,CAAC;;YAKnC;YACA,IAAI,CAACjC,OAAO,GAAG,KAAK;;;;IAK5B,CAAC,EACAqB,KAAU,IAAI;MACbpF,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGoF,MAAM,CAACD,KAAK,CAAC,CAAC;MACxC,IAAI,CAACrB,OAAO,GAAG,KAAK;IAEtB,CAAC,CAAC;IAEJ,IAAI,CAACnB,WAAW,EAAE;EACpB;EAGQnC,WAAW,CAAC+D,IAAqB;IACvC,OAAO,IAAI,CAACpF,WAAW,CAACK,KAAK,CAAC;MAC5BC,WAAW,EAAE8E;KACd,CAAC;EACJ;;AA9QF0B;;mBAcanH,oBAAoB;AAAA;;QAApBA,oBAAoB;EAAAoH;EAAAC;IAAA;;;;;;;;;;;;;;;;;;mCAVpB,CACTC;EACA;EACA;EACA;EACA;EACA;EACA;EAAA,CACD;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCjCH3H,0CAYa;MARCA;QAAA,OAAY4H,oBAAgB;MAAA,EAAC;QAAA,OACjBA,oBAAgB;MAAA,EADC;QAAA,OAEfA,sBAAkB;MAAA,EAFH;QAAA,OAMlBA,2BAAuB;MAAA,EANL;MASvC5H;MAAAA,sFAYc;MAIhBA;MAAAA,qFAOc;MAChBA;MAAAA,iBAAe;MACfA;;;MArCcA,yCAAuB","names":["i0","FileUpload2Component","constructor","messageService","fileUploadService","toastService","formBuilder","nspapp_constants_1","FILE_FORMAT","verifiedFiles","length","group","fileControl","forms_1","severity","summary","detail","core_1","console","log","subscription","rxjs_1","ngOnChanges","changes","control","currentValue","fileUploadForm","toFormGroup","ngOnInit","specificFormat","fileFormat","getFormValidationErrors","controls","errors","errMsg","Object","values","map","msg","validationErrEvent","emit","preloadFiles","fileArr","pFileUpload","clear","forEach","element","files","push","selectedFiles","onChange","onSelect","event","currentFiles","fileEventEvent","onProgress","progress","onRemove","filesToEmit","filter","item","file","onRemoveAll","onClose","closure","closeEvent","ngOnDestroy","clearCustomFileArrays","writeValue","obj","registerOnChange","fn","seeChange","registerOnTouched","onTouch","setDisabledState","isDisabled","fileUploadHandler","module","useCase","eventFiles","loading","add","generateProcInst","pipe","procIdResp","status","isMultiple","uploadSingle","body","data","uploadMultiple","Error","subscribe","resp","txnIdList","err_id","meta_data","success","success_message","id","txnIdListEvent","error","String","err_msg","file_upload_resp_list","x","error_map","keys","errList","entries","key","value","errId","errorMsg","concat","exports","selectors","viewQuery","api_1","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\shared\\component\\file-upload\\file-upload2.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\shared\\component\\file-upload\\file-upload2.component.html"],"sourcesContent":["import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport {CustomToastService} from 'app/layouts/service/customtoast.service';\r\nimport {NSPAppConstants} from 'app/shared/constants/nspapp.constants';\r\nimport {FileUploadService} from 'app/shared/service/file-upload.service';\r\nimport {Message, MessageService} from 'primeng/api';\r\nimport {FileUpload} from 'primeng/fileupload';\r\nimport {Subscription} from 'rxjs';\r\nimport {concatMap} from 'rxjs/operators';\r\nimport {AbstractControl, ControlValueAccessor, FormBuilder, FormControl, FormGroup, ValidatorFn} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'ic-file-upload',\r\n  templateUrl: './file-upload2.component.html',\r\n  styleUrls: ['./file-upload.component.scss'],\r\n  providers: [\r\n    MessageService\r\n    // ,\r\n    // {\r\n    //   provide: NG_VALUE_ACCESSOR,\r\n    //   useExisting: forwardRef(() =>FileUpload2Component),\r\n    //   multi: true\r\n    // }\r\n  ]\r\n})\r\nexport class FileUpload2Component implements ControlValueAccessor, OnInit, OnChanges, OnDestroy {\r\n\r\n  verifiedFiles: any[] = [];\r\n  selectedFiles: any[] = [];\r\n  // fileLimit: number = NSPAppConstants.MAXIMUM_FILES; // Override this in implemented components if value differs\r\n  // maxFileSize: number = NSPAppConstants.MAXIMUM_FILE_SIZE; //in bytes\r\n\r\n  fileLimit: number;\r\n  maxFileSize: number;\r\n\r\n  fileFormat: string = NSPAppConstants.FILE_FORMAT;\r\n  isMultiple = true;\r\n  loading = false;\r\n  submitInd = this.verifiedFiles.length !== 0;\r\n  // Validator\r\n  validatorFnList: ValidatorFn[];\r\n  // massUploadForm: FormGroup;\r\n  fileUploadForm: FormGroup = this.formBuilder.group({\r\n    fileControl: new FormControl([], null)\r\n  })\r\n  @Input() specificFormat: string;\r\n\r\n  @Input() control: AbstractControl;\r\n\r\n  @ViewChild('pfileUpload', {static: true})\r\n  public pFileUpload!: FileUpload;\r\n\r\n  errMsg: Message[] = [{severity: 'error', summary: 'Error', detail: 'Message Content'}];\r\n  hasErrors = false;\r\n\r\n  @Output() txnIdListEvent = new EventEmitter<any>();\r\n\r\n  @Output() closeEvent = new EventEmitter<any>();\r\n\r\n  @Output() fileEventEvent = new EventEmitter<any>();\r\n\r\n  @Output() validationErrEvent = new EventEmitter<any>();\r\n\r\n  private subscription: Subscription;\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private fileUploadService: FileUploadService,\r\n    private toastService: CustomToastService,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.subscription = new Subscription();\r\n\r\n  }\r\n\r\n  // will detect any changes to @Input params and update to latest using .currentValue\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.control) {\r\n      if (changes.control) {\r\n        console.log(\"changed control\", changes.control.currentValue)\r\n        console.log('parent control avail');\r\n        this.fileUploadForm = this.toFormGroup(changes.control.currentValue);\r\n\r\n      } else {\r\n        console.log('parent control not avail, defaulting....');\r\n        // this.fileLimit= NSPAppConstants.MAXIMUM_FILES; // Override this in implemented components if value differs\r\n        // this.maxFileSize = NSPAppConstants.MAXIMUM_FILE_SIZE; //in bytes\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.specificFormat) {\r\n      this.fileFormat = this.specificFormat;\r\n      console.log(\"real format is \", this.fileFormat);\r\n\r\n    }\r\n  }\r\n\r\n  getFormValidationErrors(): boolean {\r\n    if (this.fileUploadForm.controls['fileControl'].errors) {\r\n      this.errMsg = Object.values(this.fileUploadForm.controls['fileControl'].errors)\r\n        .map(msg => ({severity: 'error', summary: 'error', detail: msg}));\r\n      this.validationErrEvent.emit(this.fileUploadForm.controls['fileControl'].errors);\r\n    }\r\n    return this.fileUploadForm.controls['fileControl'].errors != null;\r\n  }\r\n\r\n  preloadFiles(fileArr: File[]): void {\r\n    // Clear underlying files\r\n    this.pFileUpload.clear();\r\n    fileArr.forEach(element => {\r\n      this.pFileUpload.files.push(element);\r\n    });\r\n    this.selectedFiles = this.pFileUpload.files;\r\n    this.onChange(this.pFileUpload.files);\r\n  }\r\n\r\n\r\n  onSelect(event: any): void {\r\n    console.log('onSelect() of NSPAY2.0 file-upload component', event.currentFiles);\r\n    this.selectedFiles = event.currentFiles;\r\n    this.fileEventEvent.emit(this.selectedFiles);\r\n    this.onChange(event.currentFiles);\r\n  }\r\n\r\n  onProgress(event: any): void {\r\n    this.pFileUpload.progress = event;\r\n  }\r\n\r\n  onRemove(event: any): void {\r\n    console.log('removed files', event);\r\n    let filesToEmit: File[] = this.pFileUpload.files;\r\n    // Filters away the just-removed file and emit out the file list\r\n    filesToEmit = filesToEmit.filter(item => item !== event.file);\r\n    this.onChange(filesToEmit);\r\n  }\r\n\r\n  onRemoveAll(): void {\r\n    console.log('removing all files', this.selectedFiles);\r\n    this.pFileUpload.clear();\r\n    this.selectedFiles = [];\r\n    this.onChange(this.pFileUpload.files);\r\n  }\r\n\r\n  onClose(): void {\r\n    console.log('before', this.selectedFiles);\r\n    const closure = this.selectedFiles;\r\n    this.closeEvent.emit(closure);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    console.log('destroyed');\r\n  }\r\n\r\n  clearCustomFileArrays(): void {\r\n    this.selectedFiles = [];\r\n    this.onChange(this.pFileUpload.files);\r\n  }\r\n\r\n  // Control Value Accessor related methods\r\n  onChange: any = () => {\r\n    console.log(\"onChange\");\r\n  };\r\n  onTouch: any = () => {\r\n    console.log(\"onTouch\");\r\n  };\r\n\r\n  writeValue(obj: any): void {\r\n    this.pFileUpload.clear();\r\n    this.selectedFiles = [];\r\n    this.verifiedFiles = [];\r\n  }\r\n\r\n  // Upon UI element value changes, this method gets triggered\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  seeChange(event: Event): void {\r\n    console.log(\"whats the change\", this.selectedFiles);\r\n    console.log(\"whats the change\", event);\r\n  }\r\n\r\n  // Upon touching the element, this method gets triggered\r\n  registerOnTouched(fn: any): void {\r\n    // console.log('Function called: registerOnTouched');\r\n    this.onTouch = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    console.log(\"disabledState\", isDisabled)\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param event Uses business function submit button\r\n   */\r\n  fileUploadHandler(module: string, useCase: string): void {\r\n    const eventFiles = this.selectedFiles;\r\n    console.log('uploading files:', this.selectedFiles);\r\n    this.loading = true;\r\n    this.subscription.add();\r\n\r\n    this.fileUploadService.generateProcInst(null).pipe(concatMap(procIdResp => {\r\n        if (procIdResp && procIdResp.status === 200) {\r\n          if (!this.isMultiple) {\r\n            return this.fileUploadService.uploadSingle(eventFiles[0], procIdResp.body.data, module, useCase);\r\n          } else {\r\n            return this.fileUploadService.uploadMultiple(eventFiles, procIdResp.body.data, module, useCase);\r\n          }\r\n        } else {\r\n          throw new Error('Failed to generate Process Instance');\r\n        }\r\n      }\r\n    )).subscribe(resp => {\r\n        if (resp) {\r\n          if (!this.isMultiple) {\r\n            if (resp.status === 200) {\r\n              const txnIdList = [];\r\n              if (!resp.body.data.err_id) {\r\n                this.verifiedFiles.push(resp.body.data.meta_data);\r\n                this.toastService.success(resp.body.success_message);\r\n                txnIdList.push(resp.body.data.meta_data.id);\r\n                this.txnIdListEvent.emit(txnIdList);\r\n              } else {\r\n                this.toastService.error(String(resp.body.data.err_id) + ': ' + String(resp.body.data.err_msg));\r\n              }\r\n\r\n              this.loading = false;\r\n            }\r\n          } else {\r\n            if (resp.status === 200) {\r\n              // for(let file of resp.body.data.file_upload_resp_list) {\r\n              //   this.verifiedFiles.push(file.meta_data);\r\n              // }\r\n              this.verifiedFiles = resp.body.data.file_upload_resp_list.filter((x: any) => x.err_id == null);\r\n              const txnIdList = this.verifiedFiles.map((x: any) => String(x.meta_data.id));\r\n              console.log('verified list', this.verifiedFiles);\r\n              this.txnIdListEvent.emit(txnIdList);\r\n\r\n              if (!resp.body.data.error_map || (resp.body.data.error_map && Object.keys(resp.body.data.error_map).length === 0)) {\r\n                this.toastService.success(resp.body.success_message);\r\n              } else {\r\n                const errList: any = Object.entries(resp.body.data.error_map).map(([key, value]) => ({\r\n                  errId: key,\r\n                  value\r\n                }));\r\n                console.log('erroList is ', errList);\r\n                let errorMsg = '';\r\n                errList.forEach((x: any) => {\r\n                  errorMsg = errorMsg.concat(x.errId).concat(': ').concat(x.value).concat('</br>');\r\n                });\r\n                console.log('errMsg is ' + errorMsg);\r\n                this.toastService.error(errorMsg);\r\n\r\n\r\n              }\r\n\r\n              // txnIdList = resp.body.data.file_upload_resp_list.map(x=>{return x.meta_data.id});\r\n              this.loading = false;\r\n\r\n            }\r\n          }\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(\"error is \" + String(error));\r\n        this.loading = false;\r\n\r\n      });\r\n\r\n    this.onRemoveAll();\r\n  }\r\n\r\n\r\n  private toFormGroup(data: AbstractControl): FormGroup {\r\n    return this.formBuilder.group({\r\n      fileControl: data\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<p-fileUpload name='fileupload[]'\r\n              [multiple]='isMultiple'\r\n              cancelLabel='Remove All'\r\n              uploadLabel='Verify File'\r\n              (onSelect)='onSelect($event)'\r\n              (onRemove)='onRemove($event)'\r\n              (onProgress)='onProgress($event)'\r\n              [showUploadButton]='false'\r\n              [customUpload]='true'\r\n              #pfileUpload  \r\n              (onClear)='clearCustomFileArrays()'\r\n            \r\n            >\r\n    <ng-template pTemplate='toolbar'>\r\n      <div>\r\n        <br /> Files selected:  {{ selectedFiles.length }}\r\n        <br /> Files uploaded:  {{ verifiedFiles.length }}\r\n        <p-progressBar *ngIf='loading' mode='indeterminate' [style]=\"{'height': '6px'}\"></p-progressBar>\r\n      </div>\r\n      <span *ngIf=\"this.getFormValidationErrors()\" [ngStyle]=\"{'background-color': 'white'}\">\r\n        <p-messages [(value)]=\"errMsg\" \r\n          [showTransitionOptions]=\"'0ms'\" \r\n          [hideTransitionOptions]=\"'0ms'\"\r\n          [closable]=\"false\"></p-messages>\r\n      </span>\r\n    </ng-template>\r\n\r\n  \r\n\r\n  <ng-template pTemplate='content' \r\n  >\r\n    <ul *ngIf='verifiedFiles.length' >\r\n      <li *ngFor='let file of verifiedFiles'>{{file.meta_data.fileName}}\r\n        - {{file.meta_data.fileSize / 1024 | number : '1.2-2' }} KB\r\n      </li>\r\n    </ul>\r\n  </ng-template>\r\n</p-fileUpload>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}