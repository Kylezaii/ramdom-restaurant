{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MetricsModalThreadsComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst metrics_model_1 = require(\"app/admin/metrics/metrics.model\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@ng-bootstrap/ng-bootstrap\"));\nconst i2 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i3 = tslib_1.__importStar(require(\"@fortawesome/angular-fontawesome\"));\nconst i4 = tslib_1.__importStar(require(\"../../../../shared/language/translate.directive\"));\nfunction MetricsModalThreadsComponent_fa_icon_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"fa-icon\", 15);\n  }\n}\nfunction MetricsModalThreadsComponent_fa_icon_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"fa-icon\", 15);\n  }\n}\nfunction MetricsModalThreadsComponent_fa_icon_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"fa-icon\", 15);\n  }\n}\nfunction MetricsModalThreadsComponent_fa_icon_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"fa-icon\", 15);\n  }\n}\nfunction MetricsModalThreadsComponent_fa_icon_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"fa-icon\", 15);\n  }\n}\nfunction MetricsModalThreadsComponent_div_54_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \"\\n          \");\n    i0.ɵɵelementStart(2, \"samp\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"code\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \")\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n          \");\n    i0.ɵɵelement(8, \"span\", 32);\n    i0.ɵɵtext(9, \"\\n        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const st_r8 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", st_r8.className, \".\", st_r8.methodName, \"(\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", st_r8.fileName, \":\", st_r8.lineNumber, \"\");\n  }\n}\nfunction MetricsModalThreadsComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"h6\");\n    i0.ɵɵtext(3, \"\\n      \");\n    i0.ɵɵelementStart(4, \"span\", 17);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementStart(7, \"a\", 18);\n    i0.ɵɵlistener(\"click\", function MetricsModalThreadsComponent_div_54_Template_a_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const thread_r6 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(thread_r6.showThreadDump = !thread_r6.showThreadDump);\n    });\n    i0.ɵɵtext(8, \"\\n        \");\n    i0.ɵɵelementStart(9, \"span\", 19);\n    i0.ɵɵtext(10, \"Show StackTrace\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n        \");\n    i0.ɵɵelementStart(12, \"span\", 20);\n    i0.ɵɵtext(13, \"Hide StackTrace\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n\\n    \");\n    i0.ɵɵelementStart(17, \"div\", 21);\n    i0.ɵɵtext(18, \"\\n      \");\n    i0.ɵɵelementStart(19, \"div\", 22);\n    i0.ɵɵtext(20, \"\\n        \");\n    i0.ɵɵtemplate(21, MetricsModalThreadsComponent_div_54_div_21_Template, 10, 4, \"div\", 23);\n    i0.ɵɵtext(22, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \"\\n    \");\n    i0.ɵɵelementStart(25, \"table\", 24);\n    i0.ɵɵtext(26, \"\\n      \");\n    i0.ɵɵelementStart(27, \"caption\");\n    i0.ɵɵtext(28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n      \");\n    i0.ɵɵelementStart(30, \"thead\");\n    i0.ɵɵtext(31, \"\\n        \");\n    i0.ɵɵelementStart(32, \"tr\");\n    i0.ɵɵtext(33, \"\\n          \");\n    i0.ɵɵelementStart(34, \"th\", 25);\n    i0.ɵɵtext(35, \"Blocked Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(36, \"\\n          \");\n    i0.ɵɵelementStart(37, \"th\", 26);\n    i0.ɵɵtext(38, \"Blocked Count\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(39, \"\\n          \");\n    i0.ɵɵelementStart(40, \"th\", 27);\n    i0.ɵɵtext(41, \"Waited Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n          \");\n    i0.ɵɵelementStart(43, \"th\", 28);\n    i0.ɵɵtext(44, \"Waited Count\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(45, \"\\n          \");\n    i0.ɵɵelementStart(46, \"th\", 29);\n    i0.ɵɵtext(47, \"Lock Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(48, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(49, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(50, \"\\n      \");\n    i0.ɵɵelementStart(51, \"tbody\");\n    i0.ɵɵtext(52, \"\\n        \");\n    i0.ɵɵelementStart(53, \"tr\");\n    i0.ɵɵtext(54, \"\\n          \");\n    i0.ɵɵelementStart(55, \"td\");\n    i0.ɵɵtext(56);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(57, \"\\n          \");\n    i0.ɵɵelementStart(58, \"td\");\n    i0.ɵɵtext(59);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(60, \"\\n          \");\n    i0.ɵɵelementStart(61, \"td\");\n    i0.ɵɵtext(62);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(63, \"\\n          \");\n    i0.ɵɵelementStart(64, \"td\");\n    i0.ɵɵtext(65);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(66, \"\\n          \");\n    i0.ɵɵelementStart(67, \"td\", 30);\n    i0.ɵɵtext(68, \"\\n            \");\n    i0.ɵɵelementStart(69, \"code\");\n    i0.ɵɵtext(70);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(71, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(72, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(73, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(74, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(75, \"\\n  \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thread_r6 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", ctx_r5.getBadgeClass(thread_r6.threadState));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(thread_r6.threadState);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\\n\\n      \\u00A0\", thread_r6.threadName, \" (ID \", thread_r6.threadId, \")\\n\\n      \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"hidden\", thread_r6.showThreadDump);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"hidden\", !thread_r6.showThreadDump);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"hidden\", !thread_r6.showThreadDump);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", thread_r6.stackTrace);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\\n        Threads dump:\\n        \", thread_r6.threadName, \"\\n      \");\n    i0.ɵɵadvance(28);\n    i0.ɵɵtextInterpolate(thread_r6.blockedTime);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(thread_r6.blockedCount);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(thread_r6.waitedTime);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(thread_r6.waitedCount);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"title\", thread_r6.lockName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(thread_r6.lockName);\n  }\n}\nclass MetricsModalThreadsComponent {\n  constructor(activeModal) {\n    this.activeModal = activeModal;\n    this.ThreadState = metrics_model_1.ThreadState;\n    this.threadDumpAll = 0;\n    this.threadDumpBlocked = 0;\n    this.threadDumpRunnable = 0;\n    this.threadDumpTimedWaiting = 0;\n    this.threadDumpWaiting = 0;\n  }\n  ngOnInit() {\n    this.threads?.forEach(thread => {\n      if (thread.threadState === 'RUNNABLE') {\n        this.threadDumpRunnable += 1;\n      } else if (thread.threadState === 'WAITING') {\n        this.threadDumpWaiting += 1;\n      } else if (thread.threadState === 'TIMED_WAITING') {\n        this.threadDumpTimedWaiting += 1;\n      } else if (thread.threadState === 'BLOCKED') {\n        this.threadDumpBlocked += 1;\n      }\n    });\n    this.threadDumpAll = this.threadDumpRunnable + this.threadDumpWaiting + this.threadDumpTimedWaiting + this.threadDumpBlocked;\n  }\n  getBadgeClass(threadState) {\n    if (threadState === 'RUNNABLE') {\n      return 'badge-success';\n    } else if (threadState === 'WAITING') {\n      return 'badge-info';\n    } else if (threadState === 'TIMED_WAITING') {\n      return 'badge-warning';\n    } else if (threadState === 'BLOCKED') {\n      return 'badge-danger';\n    }\n    return '';\n  }\n  getThreads() {\n    return this.threads?.filter(thread => !this.threadStateFilter || thread.threadState === this.threadStateFilter) ?? [];\n  }\n}\nexports.MetricsModalThreadsComponent = MetricsModalThreadsComponent;\nMetricsModalThreadsComponent.ɵfac = function MetricsModalThreadsComponent_Factory(t) {\n  return new (t || MetricsModalThreadsComponent)(i0.ɵɵdirectiveInject(i1.NgbActiveModal));\n};\nMetricsModalThreadsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MetricsModalThreadsComponent,\n  selectors: [[\"ic-thread-modal\"]],\n  decls: 63,\n  vars: 11,\n  consts: [[1, \"modal-header\"], [\"icTranslate\", \"metrics.jvm.threads.dump.title\", 1, \"modal-title\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"modal-body\"], [1, \"mb-3\"], [1, \"badge\", \"bg-primary\", \"hand\", 3, \"click\"], [\"icon\", \"check\", 4, \"ngIf\"], [1, \"badge\", \"rounded-pill\", \"badge-default\"], [1, \"badge\", \"badge-success\", \"hand\", 3, \"click\"], [1, \"badge\", \"badge-info\", \"hand\", 3, \"click\"], [1, \"badge\", \"badge-warning\", \"hand\", 3, \"click\"], [1, \"badge\", \"badge-danger\", \"hand\", 3, \"click\"], [\"class\", \"pad\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", \"float-start\", 3, \"click\"], [\"icon\", \"check\"], [1, \"pad\"], [1, \"badge\", 3, \"ngClass\"], [\"href\", \"javascript:void(0);\", 3, \"click\"], [\"icTranslate\", \"metrics.jvm.threads.dump.show\", 3, \"hidden\"], [\"icTranslate\", \"metrics.jvm.threads.dump.hide\", 3, \"hidden\"], [1, \"card\", 3, \"hidden\"], [1, \"card-body\"], [\"class\", \"break\", 4, \"ngFor\", \"ngForOf\"], [1, \"table\", \"table-sm\", \"table-responsive\"], [\"scope\", \"col\", \"icTranslate\", \"metrics.jvm.threads.dump.blockedtime\"], [\"scope\", \"col\", \"icTranslate\", \"metrics.jvm.threads.dump.blockedcount\"], [\"scope\", \"col\", \"icTranslate\", \"metrics.jvm.threads.dump.waitedtime\"], [\"scope\", \"col\", \"icTranslate\", \"metrics.jvm.threads.dump.waitedcount\"], [\"scope\", \"col\", \"icTranslate\", \"metrics.jvm.threads.dump.lockname\"], [1, \"thread-dump-modal-lock\", 3, \"title\"], [1, \"break\"], [1, \"mt-1\"]],\n  template: function MetricsModalThreadsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"h4\", 1);\n      i0.ɵɵtext(3, \"Threads dump\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \"\\n\\n  \");\n      i0.ɵɵelementStart(5, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function MetricsModalThreadsComponent_Template_button_click_5_listener() {\n        return ctx.activeModal.dismiss();\n      });\n      i0.ɵɵtext(6, \"\\u00D7\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \"\\n\\n\");\n      i0.ɵɵelementStart(9, \"div\", 3);\n      i0.ɵɵtext(10, \"\\n  \");\n      i0.ɵɵelementStart(11, \"div\", 4);\n      i0.ɵɵtext(12, \"\\n    \");\n      i0.ɵɵelementStart(13, \"span\", 5);\n      i0.ɵɵlistener(\"click\", function MetricsModalThreadsComponent_Template_span_click_13_listener() {\n        return ctx.threadStateFilter = undefined;\n      });\n      i0.ɵɵtext(14, \"\\n      \");\n      i0.ɵɵtemplate(15, MetricsModalThreadsComponent_fa_icon_15_Template, 1, 0, \"fa-icon\", 6);\n      i0.ɵɵtext(16, \"\\n      All\\u00A0\");\n      i0.ɵɵelementStart(17, \"span\", 7);\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n\\n    \");\n      i0.ɵɵelementStart(21, \"span\", 8);\n      i0.ɵɵlistener(\"click\", function MetricsModalThreadsComponent_Template_span_click_21_listener() {\n        return ctx.threadStateFilter = ctx.ThreadState.Runnable;\n      });\n      i0.ɵɵtext(22, \"\\n      \");\n      i0.ɵɵtemplate(23, MetricsModalThreadsComponent_fa_icon_23_Template, 1, 0, \"fa-icon\", 6);\n      i0.ɵɵtext(24, \"\\n      Runnable\\u00A0\");\n      i0.ɵɵelementStart(25, \"span\", 7);\n      i0.ɵɵtext(26);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(27, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(28, \"\\n\\n    \");\n      i0.ɵɵelementStart(29, \"span\", 9);\n      i0.ɵɵlistener(\"click\", function MetricsModalThreadsComponent_Template_span_click_29_listener() {\n        return ctx.threadStateFilter = ctx.ThreadState.Waiting;\n      });\n      i0.ɵɵtext(30, \"\\n      \");\n      i0.ɵɵtemplate(31, MetricsModalThreadsComponent_fa_icon_31_Template, 1, 0, \"fa-icon\", 6);\n      i0.ɵɵtext(32, \"\\n      Waiting\\u00A0\");\n      i0.ɵɵelementStart(33, \"span\", 7);\n      i0.ɵɵtext(34);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(35, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(36, \"\\n\\n    \");\n      i0.ɵɵelementStart(37, \"span\", 10);\n      i0.ɵɵlistener(\"click\", function MetricsModalThreadsComponent_Template_span_click_37_listener() {\n        return ctx.threadStateFilter = ctx.ThreadState.TimedWaiting;\n      });\n      i0.ɵɵtext(38, \"\\n      \");\n      i0.ɵɵtemplate(39, MetricsModalThreadsComponent_fa_icon_39_Template, 1, 0, \"fa-icon\", 6);\n      i0.ɵɵtext(40, \"\\n      Timed Waiting\\u00A0\");\n      i0.ɵɵelementStart(41, \"span\", 7);\n      i0.ɵɵtext(42);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(43, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(44, \"\\n\\n    \");\n      i0.ɵɵelementStart(45, \"span\", 11);\n      i0.ɵɵlistener(\"click\", function MetricsModalThreadsComponent_Template_span_click_45_listener() {\n        return ctx.threadStateFilter = ctx.ThreadState.Blocked;\n      });\n      i0.ɵɵtext(46, \"\\n      \");\n      i0.ɵɵtemplate(47, MetricsModalThreadsComponent_fa_icon_47_Template, 1, 0, \"fa-icon\", 6);\n      i0.ɵɵtext(48, \"\\n      Blocked\\u00A0\");\n      i0.ɵɵelementStart(49, \"span\", 7);\n      i0.ɵɵtext(50);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(51, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(52, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(53, \"\\n\\n  \");\n      i0.ɵɵtemplate(54, MetricsModalThreadsComponent_div_54_Template, 76, 15, \"div\", 12);\n      i0.ɵɵtext(55, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(56, \"\\n\");\n      i0.ɵɵelementStart(57, \"div\", 13);\n      i0.ɵɵtext(58, \"\\n  \");\n      i0.ɵɵelementStart(59, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function MetricsModalThreadsComponent_Template_button_click_59_listener() {\n        return ctx.activeModal.dismiss();\n      });\n      i0.ɵɵtext(60, \"Done\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(61, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(62, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngIf\", ctx.threadStateFilter === undefined);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.threadDumpAll);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.threadStateFilter === ctx.ThreadState.Runnable);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.threadDumpRunnable);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.threadStateFilter === ctx.ThreadState.Waiting);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.threadDumpWaiting);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.threadStateFilter === ctx.ThreadState.TimedWaiting);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.threadDumpTimedWaiting);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.threadStateFilter === ctx.ThreadState.Blocked);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.threadDumpBlocked);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.getThreads());\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.FaIconComponent, i4.TranslateDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});","map":{"version":3,"mappings":"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","names":["i0","MetricsModalThreadsComponent","constructor","activeModal","metrics_model_1","ngOnInit","threads","forEach","thread","threadState","threadDumpRunnable","threadDumpWaiting","threadDumpTimedWaiting","threadDumpBlocked","threadDumpAll","getBadgeClass","getThreads","filter","threadStateFilter","exports","selectors","decls","vars","consts","template","ctx","undefined"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\metrics\\blocks\\metrics-modal-threads\\metrics-modal-threads.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\metrics\\blocks\\metrics-modal-threads\\metrics-modal-threads.component.html"],"sourcesContent":["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { Thread, ThreadState } from 'app/admin/metrics/metrics.model';\r\n\r\n@Component({\r\n  selector: 'ic-thread-modal',\r\n  templateUrl: './metrics-modal-threads.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MetricsModalThreadsComponent implements OnInit {\r\n  ThreadState = ThreadState;\r\n  threadStateFilter?: ThreadState;\r\n  threads?: Thread[];\r\n  threadDumpAll = 0;\r\n  threadDumpBlocked = 0;\r\n  threadDumpRunnable = 0;\r\n  threadDumpTimedWaiting = 0;\r\n  threadDumpWaiting = 0;\r\n\r\n  constructor(public activeModal: NgbActiveModal) {}\r\n\r\n  ngOnInit(): void {\r\n    this.threads?.forEach(thread => {\r\n      if (thread.threadState === 'RUNNABLE') {\r\n        this.threadDumpRunnable += 1;\r\n      } else if (thread.threadState === 'WAITING') {\r\n        this.threadDumpWaiting += 1;\r\n      } else if (thread.threadState === 'TIMED_WAITING') {\r\n        this.threadDumpTimedWaiting += 1;\r\n      } else if (thread.threadState === 'BLOCKED') {\r\n        this.threadDumpBlocked += 1;\r\n      }\r\n    });\r\n\r\n    this.threadDumpAll = this.threadDumpRunnable + this.threadDumpWaiting + this.threadDumpTimedWaiting + this.threadDumpBlocked;\r\n  }\r\n\r\n  getBadgeClass(threadState: ThreadState): string {\r\n    if (threadState === 'RUNNABLE') {\r\n      return 'badge-success';\r\n    } else if (threadState === 'WAITING') {\r\n      return 'badge-info';\r\n    } else if (threadState === 'TIMED_WAITING') {\r\n      return 'badge-warning';\r\n    } else if (threadState === 'BLOCKED') {\r\n      return 'badge-danger';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getThreads(): Thread[] {\r\n    return this.threads?.filter(thread => !this.threadStateFilter || thread.threadState === this.threadStateFilter) ?? [];\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\" icTranslate=\"metrics.jvm.threads.dump.title\">Threads dump</h4>\r\n\r\n  <button type=\"button\" class=\"close\" (click)=\"activeModal.dismiss()\">&times;</button>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n  <div class=\"mb-3\">\r\n    <span class=\"badge bg-primary hand\" (click)=\"threadStateFilter = undefined\">\r\n      <fa-icon *ngIf=\"threadStateFilter === undefined\" icon=\"check\"></fa-icon>\r\n      All&nbsp;<span class=\"badge rounded-pill badge-default\">{{ threadDumpAll }}</span>\r\n    </span>\r\n\r\n    <span class=\"badge badge-success hand\" (click)=\"threadStateFilter = ThreadState.Runnable\">\r\n      <fa-icon *ngIf=\"threadStateFilter === ThreadState.Runnable\" icon=\"check\"></fa-icon>\r\n      Runnable&nbsp;<span class=\"badge rounded-pill badge-default\">{{ threadDumpRunnable }}</span>\r\n    </span>\r\n\r\n    <span class=\"badge badge-info hand\" (click)=\"threadStateFilter = ThreadState.Waiting\">\r\n      <fa-icon *ngIf=\"threadStateFilter === ThreadState.Waiting\" icon=\"check\"></fa-icon>\r\n      Waiting&nbsp;<span class=\"badge rounded-pill badge-default\">{{ threadDumpWaiting }}</span>\r\n    </span>\r\n\r\n    <span class=\"badge badge-warning hand\" (click)=\"threadStateFilter = ThreadState.TimedWaiting\">\r\n      <fa-icon *ngIf=\"threadStateFilter === ThreadState.TimedWaiting\" icon=\"check\"></fa-icon>\r\n      Timed Waiting&nbsp;<span class=\"badge rounded-pill badge-default\">{{ threadDumpTimedWaiting }}</span>\r\n    </span>\r\n\r\n    <span class=\"badge badge-danger hand\" (click)=\"threadStateFilter = ThreadState.Blocked\">\r\n      <fa-icon *ngIf=\"threadStateFilter === ThreadState.Blocked\" icon=\"check\"></fa-icon>\r\n      Blocked&nbsp;<span class=\"badge rounded-pill badge-default\">{{ threadDumpBlocked }}</span>\r\n    </span>\r\n  </div>\r\n\r\n  <div class=\"pad\" *ngFor=\"let thread of getThreads()\">\r\n    <h6>\r\n      <span class=\"badge\" [ngClass]=\"getBadgeClass(thread.threadState)\">{{ thread.threadState }}</span>\r\n\r\n      &nbsp;{{ thread.threadName }} (ID {{ thread.threadId }})\r\n\r\n      <a (click)=\"thread.showThreadDump = !thread.showThreadDump\" href=\"javascript:void(0);\">\r\n        <span [hidden]=\"thread.showThreadDump\" icTranslate=\"metrics.jvm.threads.dump.show\">Show StackTrace</span>\r\n        <span [hidden]=\"!thread.showThreadDump\" icTranslate=\"metrics.jvm.threads.dump.hide\">Hide StackTrace</span>\r\n      </a>\r\n    </h6>\r\n\r\n    <div class=\"card\" [hidden]=\"!thread.showThreadDump\">\r\n      <div class=\"card-body\">\r\n        <div *ngFor=\"let st of thread.stackTrace\" class=\"break\">\r\n          <samp\r\n            >{{ st.className }}.{{ st.methodName }}(<code>{{ st.fileName }}:{{ st.lineNumber }}</code\r\n            >)</samp\r\n          >\r\n          <span class=\"mt-1\"></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <table class=\"table table-sm table-responsive\">\r\n      <caption>\r\n        Threads dump:\r\n        {{\r\n          thread.threadName\r\n        }}\r\n      </caption>\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\" icTranslate=\"metrics.jvm.threads.dump.blockedtime\">Blocked Time</th>\r\n          <th scope=\"col\" icTranslate=\"metrics.jvm.threads.dump.blockedcount\">Blocked Count</th>\r\n          <th scope=\"col\" icTranslate=\"metrics.jvm.threads.dump.waitedtime\">Waited Time</th>\r\n          <th scope=\"col\" icTranslate=\"metrics.jvm.threads.dump.waitedcount\">Waited Count</th>\r\n          <th scope=\"col\" icTranslate=\"metrics.jvm.threads.dump.lockname\">Lock Name</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ thread.blockedTime }}</td>\r\n          <td>{{ thread.blockedCount }}</td>\r\n          <td>{{ thread.waitedTime }}</td>\r\n          <td>{{ thread.waitedCount }}</td>\r\n          <td class=\"thread-dump-modal-lock\" title=\"{{ thread.lockName }}\">\r\n            <code>{{ thread.lockName }}</code>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-secondary float-start\" data-dismiss=\"modal\" (click)=\"activeModal.dismiss()\">Done</button>\r\n</div>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}