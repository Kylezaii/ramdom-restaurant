{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MetricsEndpointsRequestsComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/common\"));\nfunction MetricsEndpointsRequestsComponent_div_3_ng_container_24_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n          \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n          \");\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n          \");\n    i0.ɵɵelementStart(8, \"td\", 7);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n          \");\n    i0.ɵɵelementStart(11, \"td\", 7);\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const method_r4 = ctx.$implicit;\n    const entry_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(method_r4.key);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(entry_r2.key);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(method_r4.value.count);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(13, 4, method_r4.value.mean, \"1.0-3\"));\n  }\n}\nfunction MetricsEndpointsRequestsComponent_div_3_ng_container_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵtemplate(2, MetricsEndpointsRequestsComponent_div_3_ng_container_24_tr_2_Template, 15, 7, \"tr\", 6);\n    i0.ɵɵpipe(3, \"keyvalue\");\n    i0.ɵɵtext(4, \"\\n      \");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 1, entry_r2.value));\n  }\n}\nfunction MetricsEndpointsRequestsComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtext(1, \"\\n  \");\n    i0.ɵɵelementStart(2, \"table\", 3);\n    i0.ɵɵtext(3, \"\\n    \");\n    i0.ɵɵelementStart(4, \"thead\");\n    i0.ɵɵtext(5, \"\\n      \");\n    i0.ɵɵelementStart(6, \"tr\");\n    i0.ɵɵtext(7, \"\\n        \");\n    i0.ɵɵelementStart(8, \"th\", 4);\n    i0.ɵɵtext(9, \"Method\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n        \");\n    i0.ɵɵelementStart(11, \"th\", 4);\n    i0.ɵɵtext(12, \"Endpoint url\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n        \");\n    i0.ɵɵelementStart(14, \"th\", 5);\n    i0.ɵɵtext(15, \"Count\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n        \");\n    i0.ɵɵelementStart(17, \"th\", 5);\n    i0.ɵɵtext(18, \"Mean\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n    \");\n    i0.ɵɵelementStart(22, \"tbody\");\n    i0.ɵɵtext(23, \"\\n      \");\n    i0.ɵɵtemplate(24, MetricsEndpointsRequestsComponent_div_3_ng_container_24_Template, 5, 3, \"ng-container\", 6);\n    i0.ɵɵpipe(25, \"keyvalue\");\n    i0.ɵɵtext(26, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(24);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(25, 1, ctx_r0.endpointsRequestsMetrics));\n  }\n}\nclass MetricsEndpointsRequestsComponent {}\nexports.MetricsEndpointsRequestsComponent = MetricsEndpointsRequestsComponent;\nMetricsEndpointsRequestsComponent.ɵfac = function MetricsEndpointsRequestsComponent_Factory(t) {\n  return new (t || MetricsEndpointsRequestsComponent)();\n};\nMetricsEndpointsRequestsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MetricsEndpointsRequestsComponent,\n  selectors: [[\"ic-metrics-endpoints-requests\"]],\n  inputs: {\n    endpointsRequestsMetrics: \"endpointsRequestsMetrics\",\n    updating: \"updating\"\n  },\n  decls: 5,\n  vars: 1,\n  consts: [[\"id\", \"endpointsRequestsMetrics\"], [\"class\", \"table-responsive\", 4, \"ngIf\"], [1, \"table-responsive\"], [\"aria-describedby\", \"endpointsRequestsMetrics\", 1, \"table\", \"table-striped\"], [\"scope\", \"col\"], [\"scope\", \"col\", 1, \"text-end\"], [4, \"ngFor\", \"ngForOf\"], [1, \"text-end\"]],\n  template: function MetricsEndpointsRequestsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\", 0);\n      i0.ɵɵtext(1, \"Endpoints requests (time in millisecond)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(2, \"\\n\\n\");\n      i0.ɵɵtemplate(3, MetricsEndpointsRequestsComponent_div_3_Template, 29, 3, \"div\", 1);\n      i0.ɵɵtext(4, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.updating && ctx.endpointsRequestsMetrics);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i1.DecimalPipe, i1.KeyValuePipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;;;;;IAcQA,0BAAkD;IAChDA;IAAAA,0BAAI;IAAAA,YAAgB;IAAAA,iBAAK;IACzBA;IAAAA,0BAAI;IAAAA,YAAe;IAAAA,iBAAK;IACxBA;IAAAA,6BAAqB;IAAAA,YAAyB;IAAAA,iBAAK;IACnDA;IAAAA,8BAAqB;IAAAA,aAA0C;;IAAAA,iBAAK;IACtEA;IAAAA,iBAAK;;;;;IAJCA,eAAgB;IAAhBA,mCAAgB;IAChBA,eAAe;IAAfA,kCAAe;IACEA,eAAyB;IAAzBA,2CAAyB;IACzBA,eAA0C;IAA1CA,0EAA0C;;;;;IALnEA,6BAAwE;IACtEA;IAAAA,uGAKK;;IACPA;IAAAA,0BAAe;;;;IANUA,eAAyB;IAAzBA,8DAAyB;;;;;IAZxDA,8BAA4E;IAC1EA;IAAAA,gCAA+E;IAC7EA;IAAAA,6BAAO;IACLA;IAAAA,0BAAI;IACFA;IAAAA,6BAAgB;IAAAA,sBAAM;IAAAA,iBAAK;IAC3BA;IAAAA,8BAAgB;IAAAA,6BAAY;IAAAA,iBAAK;IACjCA;IAAAA,8BAAiC;IAAAA,sBAAK;IAAAA,iBAAK;IAC3CA;IAAAA,8BAAiC;IAAAA,qBAAI;IAAAA,iBAAK;IAC5CA;IAAAA,iBAAK;IACPA;IAAAA,iBAAQ;IACRA;IAAAA,8BAAO;IACLA;IAAAA,4GAOe;;IACjBA;IAAAA,iBAAQ;IACVA;IAAAA,iBAAQ;IACVA;IAAAA,iBAAM;;;;IAVgCA,gBAAsC;IAAtCA,gFAAsC;;;ACT5E,MAIaC,iCAAiC;AAJ9CC;;mBAIaD,iCAAiC;AAAA;;QAAjCA,iCAAiC;EAAAE;EAAAC;IAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR9CV,6BAAkC;MAAAA,wDAAwC;MAAAA,iBAAK;MAE/EA;MAAAA,mFAqBM;MACNA;;;MAtB+BA,eAA2C;MAA3CA,oEAA2C","names":["i0","MetricsEndpointsRequestsComponent","exports","selectors","inputs","endpointsRequestsMetrics","updating","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\metrics\\blocks\\metrics-endpoints-requests\\metrics-endpoints-requests.component.html","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\metrics\\blocks\\metrics-endpoints-requests\\metrics-endpoints-requests.component.ts"],"sourcesContent":["<h3 id=\"endpointsRequestsMetrics\">Endpoints requests (time in millisecond)</h3>\r\n\r\n<div class=\"table-responsive\" *ngIf=\"!updating && endpointsRequestsMetrics\">\r\n  <table class=\"table table-striped\" aria-describedby=\"endpointsRequestsMetrics\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">Method</th>\r\n        <th scope=\"col\">Endpoint url</th>\r\n        <th scope=\"col\" class=\"text-end\">Count</th>\r\n        <th scope=\"col\" class=\"text-end\">Mean</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <ng-container *ngFor=\"let entry of endpointsRequestsMetrics | keyvalue\">\r\n        <tr *ngFor=\"let method of entry.value | keyvalue\">\r\n          <td>{{ method.key }}</td>\r\n          <td>{{ entry.key }}</td>\r\n          <td class=\"text-end\">{{ method.value!.count }}</td>\r\n          <td class=\"text-end\">{{ method.value!.mean | number: '1.0-3' }}</td>\r\n        </tr>\r\n      </ng-container>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { Services } from 'app/admin/metrics/metrics.model';\r\n\r\n@Component({\r\n  selector: 'ic-metrics-endpoints-requests',\r\n  templateUrl: './metrics-endpoints-requests.component.html',\r\n})\r\nexport class MetricsEndpointsRequestsComponent {\r\n  /**\r\n   * object containing service related metrics\r\n   */\r\n  @Input() endpointsRequestsMetrics?: Services;\r\n\r\n  /**\r\n   * boolean field saying if the metrics are in the process of being updated\r\n   */\r\n  @Input() updating?: boolean;\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}