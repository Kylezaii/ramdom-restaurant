{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SearchOverpaymentService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/common/http\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nclass SearchOverpaymentService {\n  constructor(http, applicationConfigService) {\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('api/overpayment');\n  }\n  searchByNRIC(nric) {\n    const url = \"assets/mock/payment/search-overpayment-nric.json\";\n    return this.http.get(url, {\n      observe: 'response'\n    });\n  }\n  searchByCSN(csn) {\n    const url = \"assets/mock/payment/search-overpayment-csn.json\";\n    return this.http.get(url, {\n      observe: 'response'\n    });\n  }\n}\nexports.SearchOverpaymentService = SearchOverpaymentService;\nSearchOverpaymentService.ɵfac = function SearchOverpaymentService_Factory(t) {\n  return new (t || SearchOverpaymentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n};\nSearchOverpaymentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SearchOverpaymentService,\n  factory: SearchOverpaymentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;;;;AASA,MACaA,wBAAwB;EAGnCC,YAAsBC,IAAgB,EAAUC,wBAAkD;IAA5E,SAAI,GAAJD,IAAI;IAAsB,6BAAwB,GAAxBC,wBAAwB;IAFjE,gBAAW,GAAG,IAAI,CAACA,wBAAwB,CAACC,cAAc,CAAC,iBAAiB,CAAC;EAEiB;EAErGC,YAAY,CAACC,IAAY;IACvB,MAAMC,GAAG,GAAG,kDAAkD;IAC9D,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAcD,GAAG,EAAE;MAAEE,OAAO,EAAE;IAAU,CAAE,CAAC;EACjE;EAEAC,WAAW,CAACC,GAAW;IACrB,MAAMJ,GAAG,GAAG,iDAAiD;IAC7D,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAcD,GAAG,EAAE;MAAEE,OAAO,EAAE;IAAU,CAAE,CAAC;EACjE;;AAdFG;;mBACaZ,wBAAwB;AAAA;;SAAxBA,wBAAwB;EAAAa,SAAxBb,wBAAwB;EAAAc,YADX;AAAM","names":["SearchOverpaymentService","constructor","http","applicationConfigService","getEndpointFor","searchByNRIC","nric","url","get","observe","searchByCSN","csn","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payment\\overpayment\\service\\search-overpayment.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {ApplicationConfigService} from 'app/core/config/application-config.service';\r\nimport {ISearchOP} from '../search/search-overpayment.model';\r\n\r\nexport type EntityResponseType = HttpResponse<ISearchOP>;\r\nexport type EntityArrayResponseType = HttpResponse<ISearchOP[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SearchOverpaymentService {\r\n  public resourceUrl = this.applicationConfigService.getEndpointFor('api/overpayment');\r\n\r\n  constructor(protected http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\r\n\r\n  searchByNRIC(nric: string): Observable<EntityArrayResponseType> {\r\n    const url = \"assets/mock/payment/search-overpayment-nric.json\";\r\n    return this.http.get<ISearchOP[]>(url, { observe: 'response' });\r\n  }\r\n\r\n  searchByCSN(csn: string): Observable<EntityArrayResponseType> {\r\n    const url = \"assets/mock/payment/search-overpayment-csn.json\";\r\n    return this.http.get<ISearchOP[]>(url, { observe: 'response' });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}