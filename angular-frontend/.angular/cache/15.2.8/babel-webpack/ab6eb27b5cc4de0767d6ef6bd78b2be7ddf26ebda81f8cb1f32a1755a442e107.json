{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BankInstalmentFileService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nclass BankInstalmentFileService {\n  constructor(applicationConfigService, ns2Http) {\n    this.applicationConfigService = applicationConfigService;\n    this.ns2Http = ns2Http;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('api/payment/bank-instalment-file');\n  }\n  get(options) {\n    return this.ns2Http.get(this.resourceUrl, options);\n  }\n  generate(collectionDt) {\n    const url = `${this.resourceUrl}/generate`;\n    return this.ns2Http.post(url, {\n      collectionDt\n    });\n  }\n  download(id, options) {\n    const url = `${this.resourceUrl}/${id}/payment-file`;\n    return this.ns2Http.post(url, null, options);\n  }\n  upload(id, body) {\n    const url = `${this.resourceUrl}/${id}/return-file`;\n    return this.ns2Http.post(url, body);\n  }\n}\nexports.BankInstalmentFileService = BankInstalmentFileService;\nBankInstalmentFileService.ɵfac = function BankInstalmentFileService_Factory(t) {\n  return new (t || BankInstalmentFileService)(i0.ɵɵinject(i1.ApplicationConfigService), i0.ɵɵinject(i2.Ns2HttpService));\n};\nBankInstalmentFileService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BankInstalmentFileService,\n  factory: BankInstalmentFileService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;;;;AAKA,MAGaA,yBAAyB;EAGpCC,YACUC,wBAAkD,EAClDC,OAAuB;IADvB,6BAAwB,GAAxBD,wBAAwB;IACxB,YAAO,GAAPC,OAAO;IAJV,gBAAW,GAAG,IAAI,CAACD,wBAAwB,CAACE,cAAc,CAAC,kCAAkC,CAAC;EAKlG;EAEIC,GAAG,CAACC,OAAa;IACtB,OAAO,IAAI,CAACH,OAAO,CAACE,GAAG,CAAC,IAAI,CAACE,WAAW,EAAED,OAAO,CAAC;EACpD;EAEOE,QAAQ,CAACC,YAAoB;IAClC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACH,WAAW,WAAW;IAC1C,OAAO,IAAI,CAACJ,OAAO,CAACQ,IAAI,CAACD,GAAG,EAAE;MAACD;IAAY,CAAC,CAAC;EAC/C;EAEOG,QAAQ,CAACC,EAAU,EAAEP,OAAa;IACvC,MAAMI,GAAG,GAAG,GAAG,IAAI,CAACH,WAAW,IAAIM,EAAE,eAAe;IACpD,OAAO,IAAI,CAACV,OAAO,CAACQ,IAAI,CAACD,GAAG,EAAE,IAAI,EAAEJ,OAAO,CAAC;EAC9C;EAEOQ,MAAM,CAACD,EAAU,EAAEE,IAAS;IACjC,MAAML,GAAG,GAAG,GAAG,IAAI,CAACH,WAAW,IAAIM,EAAE,cAAc;IACnD,OAAO,IAAI,CAACV,OAAO,CAACQ,IAAI,CAACD,GAAG,EAAEK,IAAI,CAAC;EACrC;;AA5BFC;;mBAGahB,yBAAyB;AAAA;;SAAzBA,yBAAyB;EAAAiB,SAAzBjB,yBAAyB;EAAAkB,YAFxB;AAAM","names":["BankInstalmentFileService","constructor","applicationConfigService","ns2Http","getEndpointFor","get","options","resourceUrl","generate","collectionDt","url","post","download","id","upload","body","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payment\\bankfile-stop-payment\\instalment-bankfile\\service\\instalment-bankfile.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport {Observable} from \"rxjs\";\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BankInstalmentFileService {\r\n  public resourceUrl = this.applicationConfigService.getEndpointFor('api/payment/bank-instalment-file');\r\n  \r\n  constructor(\r\n    private applicationConfigService: ApplicationConfigService,\r\n    private ns2Http: Ns2HttpService\r\n  ) {}\r\n\r\n  public get(options?: any): Observable<any> {\r\n    return this.ns2Http.get(this.resourceUrl, options);\r\n  }\r\n\r\n  public generate(collectionDt: string): Observable<any> {\r\n    const url = `${this.resourceUrl}/generate`;\r\n    return this.ns2Http.post(url, {collectionDt});\r\n  }\r\n\r\n  public download(id: string, options?: any): Observable<any> {\r\n    const url = `${this.resourceUrl}/${id}/payment-file`;\r\n    return this.ns2Http.post(url, null, options);\r\n  }\r\n\r\n  public upload(id: string, body: any): Observable<any> {\r\n    const url = `${this.resourceUrl}/${id}/return-file`;\r\n    return this.ns2Http.post(url, body);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}