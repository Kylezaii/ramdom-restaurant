{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PayrollRejectionComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst http_1 = require(\"@angular/common/http\");\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst common_1 = require(\"@angular/common\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"../../service/workload-inbox.service\"));\nconst i2 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i3 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/shared/confirm/nsp-confirm.service\"));\nconst i5 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i6 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i7 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i8 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i9 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i10 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i11 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/dropdown\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/confirmpopup\"));\nconst _c0 = [\"dataTable\"];\nconst _c1 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-right\": \".5em\"\n  };\n};\nconst _c2 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nfunction PayrollRejectionComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"form\", 6);\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelementStart(3, \"div\", 7);\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"div\", 8);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementStart(7, \"p-button\", 9);\n    i0.ɵɵlistener(\"click\", function PayrollRejectionComponent_ng_template_4_Template_p_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(2);\n      return i0.ɵɵresetView(ctx_r5.exportCSV(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                            \");\n    i0.ɵɵelementStart(9, \"p-dropdown\", 10);\n    i0.ɵɵlistener(\"onChange\", function PayrollRejectionComponent_ng_template_4_Template_p_dropdown_onChange_9_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.applyFilter(\"claimantNRIC\", ctx_r7.captionGroup.get(\"selectedDupNric\").value));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n                        \");\n    i0.ɵɵelementStart(12, \"div\", 11);\n    i0.ɵɵtext(13, \"\\n                            \");\n    i0.ɵɵelement(14, \"p-confirmPopup\", 12);\n    i0.ɵɵtext(15, \"\\n                            \");\n    i0.ɵɵelementStart(16, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function PayrollRejectionComponent_ng_template_4_Template_button_click_16_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.openDialog($event, \"confirmRmNoAction\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n\\n            \");\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.captionGroup);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(9, _c1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"options\", ctx_r1.nricWithMoreThanOneClaimOptions)(\"placeholder\", ctx_r1.duplicateNricPlaceHolder)(\"showClear\", true);\n    i0.ɵɵadvance(7);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(10, _c2));\n    i0.ɵɵproperty(\"disabled\", ctx_r1.selectedRows.length <= 0);\n  }\n}\nfunction PayrollRejectionComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n            \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                \");\n    i0.ɵɵelementStart(3, \"th\", 14);\n    i0.ɵɵelement(4, \"p-tableHeaderCheckbox\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                \");\n    i0.ɵɵelementStart(6, \"th\", 15);\n    i0.ɵɵtext(7, \"SN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                \");\n    i0.ɵɵelementStart(9, \"th\", 16);\n    i0.ɵɵtext(10, \"Txn No.\");\n    i0.ɵɵelement(11, \"p-sortIcon\", 17);\n    i0.ɵɵtext(12, \"\\n                    \");\n    i0.ɵɵelement(13, \"p-columnFilter\", 18);\n    i0.ɵɵtext(14, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n                \");\n    i0.ɵɵelementStart(16, \"th\", 19);\n    i0.ɵɵtext(17, \"Type\");\n    i0.ɵɵelement(18, \"p-sortIcon\", 20);\n    i0.ɵɵtext(19, \"\\n                    \");\n    i0.ɵɵelement(20, \"p-columnFilter\", 21);\n    i0.ɵɵtext(21, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n                \");\n    i0.ɵɵelementStart(23, \"th\", 22);\n    i0.ɵɵtext(24, \"Name\");\n    i0.ɵɵelement(25, \"p-sortIcon\", 23);\n    i0.ɵɵtext(26, \"\\n                    \");\n    i0.ɵɵelement(27, \"p-columnFilter\", 24);\n    i0.ɵɵtext(28, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n                \");\n    i0.ɵɵelementStart(30, \"th\", 25);\n    i0.ɵɵtext(31, \"Submitted By\");\n    i0.ɵɵelement(32, \"p-sortIcon\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(33, \"\\n                \");\n    i0.ɵɵelementStart(34, \"th\", 27);\n    i0.ɵɵtext(35, \"Rejected By\");\n    i0.ɵɵelement(36, \"p-sortIcon\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(37, \"\\n                \");\n    i0.ɵɵelementStart(38, \"th\", 29);\n    i0.ɵɵtext(39, \"Rejected Reason\");\n    i0.ɵɵelement(40, \"p-sortIcon\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(41, \"\\n\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n        \");\n  }\n}\nfunction PayrollRejectionComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n\\n        \");\n    i0.ɵɵelementStart(1, \"tr\", 31);\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"p-tableCheckbox\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n            \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n            \");\n    i0.ɵɵelementStart(9, \"td\")(10, \"a\", 33);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(12, \"\\n            \");\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n            \");\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelement(18, \"br\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n            \");\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelement(23, \"br\");\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n\\n            \");\n    i0.ɵɵelementStart(26, \"td\");\n    i0.ɵɵtext(27);\n    i0.ɵɵelement(28, \"br\");\n    i0.ɵɵtext(29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n            \");\n    i0.ɵɵelementStart(31, \"td\");\n    i0.ɵɵtext(32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(33, \"\\n\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(34, \"\\n    \");\n  }\n  if (rf & 2) {\n    const payRollRejection_r10 = ctx.$implicit;\n    const rowIndex_r11 = ctx.rowIndex;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pSelectableRow\", payRollRejection_r10);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", payRollRejection_r10);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(rowIndex_r11 + 1);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(payRollRejection_r10.txnNo);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(payRollRejection_r10.type);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", payRollRejection_r10.claimantName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", payRollRejection_r10.claimantNRIC, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", payRollRejection_r10.submittedByInit, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.dateUtilsService.convertUnixToDateString(payRollRejection_r10.submittedDate, ctx_r3.dateFormat), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", payRollRejection_r10.rejectedByInit, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.dateUtilsService.convertUnixToDateString(payRollRejection_r10.rejectedDate, ctx_r3.dateFormat), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(payRollRejection_r10.rejectionReason);\n  }\n}\nfunction PayrollRejectionComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"td\", 34);\n    i0.ɵɵtext(4, \"No records found.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n    \");\n  }\n}\nconst _c3 = function () {\n  return [10, 15, 20];\n};\nclass PayrollRejectionComponent {\n  constructor(workloadService, primengConfig, account, nspConfirmService, ns2Http, dateUtilsService, toastService, formBuilder, exportUtilsService) {\n    this.workloadService = workloadService;\n    this.primengConfig = primengConfig;\n    this.account = account;\n    this.nspConfirmService = nspConfirmService;\n    this.ns2Http = ns2Http;\n    this.dateUtilsService = dateUtilsService;\n    this.toastService = toastService;\n    this.formBuilder = formBuilder;\n    this.exportUtilsService = exportUtilsService;\n    this.payrollRejectionList = [];\n    this.selectedRows = [];\n    this.selectedPayrollRej = new core_1.EventEmitter();\n    this.selectedRowsId = [];\n    this.optionsList = [];\n    this.selectedOption = [];\n    this.selectAll = false;\n    this.totalRecords = 0;\n    this.cols = [];\n    this.dateFormat = \"DD-MM-YYYY (HH:mm)\";\n    this.duplicateNricPlaceHolder = \"0 Duplicates\";\n    this.pageData = {\n      currentPage: 0\n    };\n    this.pageSize = 10;\n    this.enableChkBoxBtn = false;\n  }\n  ngOnInit() {\n    this.cols = [{\n      field: 'txnNo',\n      header: 'Txn No.',\n      index: 1\n    }, {\n      field: 'type',\n      header: 'Type',\n      index: 2\n    }, {\n      field: 'claimantName',\n      header: 'Name',\n      index: 3\n    }, {\n      field: 'submittedBy',\n      header: 'Submitted By',\n      index: 4\n    }, {\n      field: 'rejectedBy',\n      header: 'Rejected By',\n      index: 5\n    }, {\n      field: 'rejectedReason',\n      header: 'Rejected Reason',\n      index: 6\n    }];\n    this.captionGroup = this.formBuilder.group({\n      selectedDupNric: new forms_1.FormControl()\n    });\n    this.loading = true;\n    // ColumnFilter.prototype.hide = function () {\n    //   this.overlayVisible = false;\n    //   this.dt.cd.markForCheck();\n    // };\n  }\n\n  getPayRollRejectionData(event) {\n    this.lastTableLazyLoadEvent = event;\n    this.loading = true;\n    this.pageSize = event.rows;\n    setTimeout(() => {\n      const options = this.ns2Http.convertLazyEvent(event, this.pageData, this.pageSize);\n      this.workloadService.getPayRollRejectionData(options).subscribe(resp => {\n        if (resp.body.data) {\n          this.payrollRejectionList = resp.body.data.dtoList;\n          this.totalRecords = resp.body.data.total_no_of_elems;\n          if (resp.body.data.duplicateNrics) {\n            this.nricWithMoreThanOneClaimOptions = resp.body.data.duplicateNrics;\n          }\n          this.duplicateNricPlaceHolder = `${this.nricWithMoreThanOneClaimOptions.length} Duplicates`;\n        }\n        this.loading = false;\n      });\n    }, 0);\n    return this.payrollRejectionList;\n  }\n  onPage(event) {\n    console.log(\"pageevent\", event);\n    this.pageData.currentPage = event.first / event.rows;\n    this.selectAll = false;\n    this.selectedRows = [];\n  }\n  onSelectAllChange(event) {\n    const checked = event.checked;\n    if (checked) {\n      this.selectedRows = this.payrollRejectionList;\n      this.selectAll = true;\n    } else {\n      this.selectedRows = [];\n      this.selectAll = false;\n    }\n  }\n  selectCheckBox(event, selectedRows) {\n    console.log(\"event is\", selectedRows);\n    this.selectedPayrollRej.emit(selectedRows);\n  }\n  exportCSV(dataTable) {\n    this.workloadService.getPayRollRejectionData(null).subscribe(resp => {\n      if (resp.body.data) {\n        const columns = [{\n          field: 'txnNo',\n          header: 'Txn No.',\n          index: 1\n        }, {\n          field: 'type',\n          header: 'Type',\n          index: 2\n        }, {\n          field: 'claimantName',\n          header: 'Name',\n          index: 3\n        }, {\n          field: 'claimantNRIC',\n          header: 'NRIC',\n          index: 4\n        }, {\n          field: 'submittedBy',\n          header: 'Submitted By',\n          index: 5\n        }, {\n          field: 'submittedByDte',\n          header: 'Submitted By Date',\n          index: 6\n        }, {\n          field: 'rejectedBy',\n          header: 'Rejected By',\n          index: 7\n        }, {\n          field: 'rejectedByDte',\n          header: 'Rejected By Date',\n          index: 8\n        }, {\n          field: 'rejectionReason',\n          header: 'Rejection Reason',\n          index: 9\n        }];\n        const dtoList = [];\n        resp.body.data.dtoList.forEach(data => {\n          const dto = {\n            txnNo: data.txnNo,\n            type: data.type,\n            claimantName: data.claimantName,\n            claimantNRIC: data.claimantNRIC,\n            submittedBy: data.submittedByInit,\n            submittedByDte: this.dateUtilsService.convertUnixToDateString(data.submittedDate, this.dateFormat),\n            rejectedBy: data.rejectedByInit,\n            rejectedByDte: this.dateUtilsService.convertUnixToDateString(data.rejectedDate, this.dateFormat),\n            rejectionReason: data.rejectionReason\n          };\n          dtoList.push(dto);\n        });\n        this.exportUtilsService.exportCSV(dataTable, dtoList, resp.body.data.total_no_of_elems, columns, \"payroll_rejection\".concat((0, common_1.formatDate)(new Date(), \"dd-MM-YYYY\", 'en-US')));\n        this.loading = false;\n      }\n    });\n  }\n  onRemoveWithNoAction() {\n    console.log(\"remove with no action\");\n    if (this.selectedRows) {\n      const reqList = this.selectedRows.map(x => String(x.txnNo));\n      let params = new http_1.HttpParams();\n      params = params.append('action', false);\n      this.workloadService.removeWithNoActions(reqList, {\n        params\n      }).subscribe(resp => {\n        if (resp && resp.ok) {\n          if (resp.body.data) {\n            if (resp.body.data.success) {\n              this.toastService.success(resp.body.data.success);\n            }\n            if (resp.body.data.error) {\n              this.toastService.error(resp.body.data.error);\n            }\n            this.resetDataTable();\n          }\n        }\n      }, error => {\n        console.log(\"error is\" + String(error?.error?.error_desc));\n        this.toastService.error(String(error?.error?.error_desc));\n      });\n    }\n  }\n  openDialog(event, type) {\n    this.nspConfirmService.onConfirmPopup(event, type, null, () => {\n      this.onRemoveWithNoAction();\n    });\n  }\n  applyFilter(column, filterValue) {\n    this.table.filter(filterValue, column, 'equals');\n    this.pageData.currentPage = 0;\n    this.pageSize = 10;\n  }\n  resetDataTable() {\n    this.selectAll = false;\n    this.selectedRows = [];\n    this.table.filters = {};\n    this.pageData.currentPage = 0;\n    this.pageSize = 10;\n    this.table.reset();\n  }\n}\nexports.PayrollRejectionComponent = PayrollRejectionComponent;\nPayrollRejectionComponent.ɵfac = function PayrollRejectionComponent_Factory(t) {\n  return new (t || PayrollRejectionComponent)(i0.ɵɵdirectiveInject(i1.WorkloadInboxService), i0.ɵɵdirectiveInject(i2.PrimeNGConfig), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i4.NspConfirmationService), i0.ɵɵdirectiveInject(i5.Ns2HttpService), i0.ɵɵdirectiveInject(i6.DateUtilsService), i0.ɵɵdirectiveInject(i7.CustomToastService), i0.ɵɵdirectiveInject(i8.FormBuilder), i0.ɵɵdirectiveInject(i9.ExportUtilsService));\n};\nPayrollRejectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PayrollRejectionComponent,\n  selectors: [[\"n2-payroll-rejection\"]],\n  viewQuery: function PayrollRejectionComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n    }\n  },\n  outputs: {\n    selectedPayrollRej: \"selectedPayrollRej\"\n  },\n  features: [i0.ɵɵProvidersFeature([PayrollRejectionComponent])],\n  decls: 13,\n  vars: 13,\n  consts: [[\"styleClass\", \"p-datatable-gridlines p-datatable-striped\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"responsiveLayout\", \"scroll\", \"sortField\", \"txnNo\", 3, \"value\", \"paginator\", \"rows\", \"lazy\", \"showCurrentPageReport\", \"selectAll\", \"totalRecords\", \"selection\", \"filterDelay\", \"loading\", \"rowsPerPageOptions\", \"columns\", \"selectAllChange\", \"onLazyLoad\", \"selectionChange\", \"onRowSelect\", \"onPage\"], [\"dataTable\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [3, \"formGroup\"], [1, \"grid\"], [1, \"col-6\", \"nsp-align-left\"], [\"icon\", \"pi pi-file-o\", 3, \"click\"], [\"formControlName\", \"selectedDupNric\", 3, \"options\", \"placeholder\", \"showClear\", \"onChange\"], [1, \"col-6\", \"nsp-align-right\"], [\"key\", \"confirmRmNoAction\", \"header\", \"Confirmation\", \"icon\", \"fa fa-question-circle\", \"width\", \"425\"], [\"pButton\", \"\", \"label\", \"Remove with No Action\", 3, \"disabled\", \"click\"], [\"scope\", \"col\", 2, \"width\", \"3%\"], [\"scope\", \"col\"], [\"scope\", \"col\", \"pSortableColumn\", \"txnNo\"], [\"field\", \"txnNo\"], [\"type\", \"text\", \"field\", \"txnNo\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"type\"], [\"field\", \"type\"], [\"type\", \"text\", \"field\", \"type\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"claimantNRIC\"], [\"field\", \"claimantNRIC\"], [\"type\", \"text\", \"field\", \"claimantNRIC\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"submittedBy\"], [\"field\", \"submittedBy\"], [\"scope\", \"col\", \"pSortableColumn\", \"rejectedBy\"], [\"field\", \"rejectedBy\"], [\"scope\", \"col\", \"pSortableColumn\", \"rejectionReason\"], [\"field\", \"rejectionReason\"], [3, \"pSelectableRow\"], [3, \"value\"], [\"href\", \"#\"], [\"colspan\", \"8\"]],\n  template: function PayrollRejectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \"\\n\");\n      i0.ɵɵelementStart(1, \"p-table\", 0, 1);\n      i0.ɵɵlistener(\"selectAllChange\", function PayrollRejectionComponent_Template_p_table_selectAllChange_1_listener($event) {\n        return ctx.onSelectAllChange($event);\n      })(\"onLazyLoad\", function PayrollRejectionComponent_Template_p_table_onLazyLoad_1_listener($event) {\n        return ctx.getPayRollRejectionData($event);\n      })(\"selectionChange\", function PayrollRejectionComponent_Template_p_table_selectionChange_1_listener($event) {\n        return ctx.selectedRows = $event;\n      })(\"onRowSelect\", function PayrollRejectionComponent_Template_p_table_onRowSelect_1_listener($event) {\n        return ctx.selectCheckBox($event, ctx.selectedRows);\n      })(\"onPage\", function PayrollRejectionComponent_Template_p_table_onPage_1_listener($event) {\n        return ctx.onPage($event);\n      });\n      i0.ɵɵtext(3, \"\\n            \");\n      i0.ɵɵtemplate(4, PayrollRejectionComponent_ng_template_4_Template, 21, 11, \"ng-template\", 2);\n      i0.ɵɵtext(5, \"\\n\\n        \");\n      i0.ɵɵtemplate(6, PayrollRejectionComponent_ng_template_6_Template, 43, 0, \"ng-template\", 3);\n      i0.ɵɵtext(7, \"\\n    \");\n      i0.ɵɵtemplate(8, PayrollRejectionComponent_ng_template_8_Template, 35, 12, \"ng-template\", 4);\n      i0.ɵɵtext(9, \"\\n    \");\n      i0.ɵɵtemplate(10, PayrollRejectionComponent_ng_template_10_Template, 7, 0, \"ng-template\", 5);\n      i0.ɵɵtext(11, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", ctx.payrollRejectionList)(\"paginator\", true)(\"rows\", ctx.pageSize)(\"lazy\", true)(\"showCurrentPageReport\", true)(\"selectAll\", ctx.selectAll)(\"totalRecords\", ctx.totalRecords)(\"selection\", ctx.selectedRows)(\"filterDelay\", 0)(\"loading\", ctx.loading)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(12, _c3))(\"columns\", ctx.cols);\n    }\n  },\n  dependencies: [i8.ɵNgNoValidate, i8.NgControlStatus, i8.NgControlStatusGroup, i8.FormGroupDirective, i8.FormControlName, i2.PrimeTemplate, i10.ButtonDirective, i10.Button, i11.Table, i11.SortableColumn, i11.SelectableRow, i11.SortIcon, i11.TableCheckbox, i11.TableHeaderCheckbox, i11.ColumnFilter, i12.Dropdown, i13.ConfirmPopup],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXlyb2xsLXJlamVjdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvd29ya2xvYWQvcGF5cm9sbC12ZXJpZmllci9wYXlyb2xsLXJlamVjdGlvbi9wYXlyb2xsLXJlamVjdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsZ0xBQWdMIiwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;AAAA;AACA;AACA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICWgBA;IAAAA,+BAAmC;IAC/BA;IAAAA,8BAAkB;IACdA;IAAAA,8BAAoC;IAChCA;IAAAA,mCAAyH;IAAjCA;MAAAA;MAAA;MAAA;MAAA,OAAWA,oCAAoB;IAAA,EAAC;IAACA,iBAAW;IACpIA;IAAAA,sCAEC;IADDA;MAAAA;MAAA;MAAA,OAAYA,kCAAY,cAAc,EAAEC,wBAAiB,iBAAiB,CAAC,OAAO;IAAA,EAAC;IAClFD,iBAAa;IAElBA;IAAAA,iBAAM;IACNA;IAAAA,gCAAqC;IACjCA;IAAAA,sCAA0H;IAC1HA;IAAAA,mCAC2F;IAApDA;MAAAA;MAAA;MAAA,OAAWA,yCAAmB,mBAAmB,CAAC;IAAA,EAAC;IAACA,iBAAS;IACxGA;IAAAA,iBAAM;IACVA;IAAAA,iBAAM;IACVA;IAAAA,iBAAO;IAEXA;;;;IAjBUA,eAA4B;IAA5BA,+CAA4B;IAGQA,eAAyD;IAAzDA,yCAAyD;IAC3EA,eAA2C;IAA3CA,gEAA2C;IAOPA,eAA2D;IAA3DA,0CAA2D;IAC3GA,0DAAsC;;;;;IAQtDA;IAAAA,0BAAI;IACAA;IAAAA,8BAAiC;IAAAA,wCAA+C;IAAAA,iBAAK;IACrFA;IAAAA,8BAAgB;IAAAA,kBAAE;IAAAA,iBAAK;IACvBA;IAAAA,8BAA0C;IAAAA,wBAAO;IAAAA,kCAAuC;IACpFA;IAAAA,sCAA+F;IACnGA;IAAAA,iBAAK;IACLA;IAAAA,+BAAwC;IAAAA,qBAAI;IAAAA,kCAAsC;IAC9EA;IAAAA,sCAA8F;IAClGA;IAAAA,iBAAK;IACLA;IAAAA,+BAAgD;IAAAA,qBAAI;IAAAA,kCAA8C;IAC9FA;IAAAA,sCAAsG;IAC1GA;IAAAA,iBAAK;IACLA;IAAAA,+BAA+C;IAAAA,6BAAY;IAAAA,kCAA6C;IAAAA,iBAAK;IAC7GA;IAAAA,+BAA8C;IAAAA,4BAAW;IAAAA,kCAA4C;IAAAA,iBAAK;IAC1GA;IAAAA,+BAAmD;IAAAA,gCAAe;IAAAA,kCAAiD;IAAAA,iBAAK;IAE5HA;IAAAA,iBAAK;IACTA;;;;;IAGAA;IAAAA,8BAAwC;IACpCA;IAAAA,0BAAI;IAAAA,sCAA8D;IAAAA,iBAAK;IACvEA;IAAAA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAC1BA;IAAAA,0BAAI;IAAYA,aAA0B;IAAAA,iBAAI;IAC9CA;IAAAA,2BAAI;IAAAA,aAA0B;IAAAA,iBAAK;IACnCA;IAAAA,2BAAI;IAAAA,aAAmC;IAAAA,sBAAK;IAACA,aAAkC;IAAAA,iBAAK;IACpFA;IAAAA,2BAAI;IAAAA,aAAuC;IAAAA,sBAAK;IAACA,aAA0F;IAAAA,iBAAK;IAEhJA;IAAAA,2BAAI;IAAAA,aAAoC;IAAAA,sBAAK;IAACA,aAA0F;IAAAA,iBAAK;IAC7IA;IAAAA,2BAAI;IAAAA,aAAoC;IAAAA,iBAAK;IAEjDA;IAAAA,iBAAK;IACTA;;;;;;IAZQA,eAAmC;IAAnCA,qDAAmC;IACdA,eAA0B;IAA1BA,4CAA0B;IAC3CA,eAAiB;IAAjBA,sCAAiB;IACLA,eAA0B;IAA1BA,gDAA0B;IACtCA,eAA0B;IAA1BA,+CAA0B;IAC1BA,eAAmC;IAAnCA,iEAAmC;IAAMA,eAAkC;IAAlCA,iEAAkC;IAC3EA,eAAuC;IAAvCA,oEAAuC;IAAMA,eAA0F;IAA1FA,sIAA0F;IAEvIA,eAAoC;IAApCA,mEAAoC;IAAMA,eAA0F;IAA1FA,qIAA0F;IACpIA,eAAoC;IAApCA,0DAAoC;;;;;IAK5CA;IAAAA,0BAAI;IACAA;IAAAA,8BAAgB;IAAAA,iCAAiB;IAAAA,iBAAK;IAC1CA;IAAAA,iBAAK;IACTA;;;;;;ADlEJ,MAMaE,yBAAyB;EA2BpCC,YACUC,eAAqC,EACrCC,aAA4B,EAC5BC,OAAuB,EACvBC,iBAAyC,EACzCC,OAAuB,EACxBC,gBAAkC,EACjCC,YAAgC,EAChCC,WAAwB,EACxBC,kBAAsC;IARtC,oBAAe,GAAfR,eAAe;IACf,kBAAa,GAAbC,aAAa;IACb,YAAO,GAAPC,OAAO;IACP,sBAAiB,GAAjBC,iBAAiB;IACjB,YAAO,GAAPC,OAAO;IACR,qBAAgB,GAAhBC,gBAAgB;IACf,iBAAY,GAAZC,YAAY;IACZ,gBAAW,GAAXC,WAAW;IACX,uBAAkB,GAAlBC,kBAAkB;IAlCrB,yBAAoB,GAAU,EAAE;IAChC,iBAAY,GAAU,EAAE;IACrB,uBAAkB,GAAG,IAAIC,mBAAY,EAAY;IAC3D,mBAAc,GAAa,EAAE;IACtB,gBAAW,GAAU,EAAE;IACvB,mBAAc,GAAU,EAAE;IACjC,cAAS,GAAG,KAAK;IAEjB,iBAAY,GAAG,CAAC;IACT,SAAI,GAAW,EAAE;IAExB,eAAU,GAAG,oBAAoB;IACjC,6BAAwB,GAAG,cAAc;IACzC,aAAQ,GAA4B;MAClCC,WAAW,EAAE;KACd;IACD,aAAQ,GAAG,EAAE;IAIN,oBAAe,GAAG,KAAK;EAgB9B;EAEAC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,CACV;MAACC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAC,CAAC,EAC7C;MAACF,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAC,CAAC,EACzC;MAACF,KAAK,EAAE,cAAc;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAC,CAAC,EACjD;MAACF,KAAK,EAAE,aAAa;MAAEC,MAAM,EAAE,cAAc;MAAEC,KAAK,EAAE;IAAC,CAAC,EACxD;MAACF,KAAK,EAAE,YAAY;MAAEC,MAAM,EAAE,aAAa;MAAEC,KAAK,EAAE;IAAC,CAAC,EACtD;MAACF,KAAK,EAAE,gBAAgB;MAAEC,MAAM,EAAE,iBAAiB;MAAEC,KAAK,EAAE;IAAC,CAAC,CAC/D;IACD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACT,WAAW,CAACU,KAAK,CAAC;MACzCC,eAAe,EAAE,IAAIC,mBAAW;KACjC,CAAC;IACF,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB;IACA;IACA;IACA;EACF;;EAEAC,uBAAuB,CAACC,KAAU;IAChC,IAAI,CAACC,sBAAsB,GAAGD,KAAK;IACnC,IAAI,CAACF,OAAO,GAAG,IAAI;IACnB,IAAI,CAACI,QAAQ,GAAGF,KAAK,CAACG,IAAI;IAE1BC,UAAU,CAAC,MAAK;MACd,MAAMC,OAAO,GAAG,IAAI,CAACvB,OAAO,CAACwB,gBAAgB,CAACN,KAAK,EAAE,IAAI,CAACO,QAAQ,EAAE,IAAI,CAACL,QAAQ,CAAC;MAElF,IAAI,CAACxB,eAAe,CAACqB,uBAAuB,CAACM,OAAO,CAAC,CAACG,SAAS,CAAEC,IAAS,IAAI;QAC5E,IAAIA,IAAI,CAACC,IAAI,CAACC,IAAI,EAAE;UAClB,IAAI,CAACC,oBAAoB,GAAGH,IAAI,CAACC,IAAI,CAACC,IAAI,CAACE,OAAO;UAClD,IAAI,CAACC,YAAY,GAAGL,IAAI,CAACC,IAAI,CAACC,IAAI,CAACI,iBAAiB;UACpD,IAAIN,IAAI,CAACC,IAAI,CAACC,IAAI,CAACK,cAAc,EAAE;YACjC,IAAI,CAACC,+BAA+B,GAAGR,IAAI,CAACC,IAAI,CAACC,IAAI,CAACK,cAAc;;UAEtE,IAAI,CAACE,wBAAwB,GAAG,GAAG,IAAI,CAACD,+BAA+B,CAACE,MAAM,aAAa;;QAG7F,IAAI,CAACrB,OAAO,GAAG,KAAK;MACtB,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,CAAC;IAEL,OAAO,IAAI,CAACc,oBAAoB;EAElC;EAEAQ,MAAM,CAACpB,KAAU;IACfqB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEtB,KAAK,CAAC;IAC/B,IAAI,CAACO,QAAQ,CAACnB,WAAW,GAAGY,KAAK,CAACuB,KAAK,GAAGvB,KAAK,CAACG,IAAI;IACpD,IAAI,CAACqB,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,YAAY,GAAG,EAAE;EACxB;EAEAC,iBAAiB,CAAC1B,KAAU;IAC1B,MAAM2B,OAAO,GAAG3B,KAAK,CAAC2B,OAAO;IAC7B,IAAIA,OAAO,EAAE;MACX,IAAI,CAACF,YAAY,GAAG,IAAI,CAACb,oBAAoB;MAC7C,IAAI,CAACY,SAAS,GAAG,IAAI;KACtB,MAAM;MACL,IAAI,CAACC,YAAY,GAAG,EAAE;MACtB,IAAI,CAACD,SAAS,GAAG,KAAK;;EAE1B;EAEAI,cAAc,CAAC5B,KAAU,EAAEyB,YAAiB;IAC1CJ,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEG,YAAY,CAAC;IACrC,IAAI,CAACI,kBAAkB,CAACC,IAAI,CAACL,YAAY,CAAC;EAC5C;EAEAM,SAAS,CAACC,SAAgB;IACxB,IAAI,CAACtD,eAAe,CAACqB,uBAAuB,CAAC,IAAI,CAAC,CAACS,SAAS,CAAEC,IAAS,IAAI;MACzE,IAAIA,IAAI,CAACC,IAAI,CAACC,IAAI,EAAE;QAClB,MAAMsB,OAAO,GACX,CACE;UAAC1C,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE,SAAS;UAAEC,KAAK,EAAE;QAAC,CAAC,EAC7C;UAACF,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAC,CAAC,EACzC;UAACF,KAAK,EAAE,cAAc;UAAEC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAC,CAAC,EACjD;UAACF,KAAK,EAAE,cAAc;UAAEC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAC,CAAC,EACjD;UAACF,KAAK,EAAE,aAAa;UAAEC,MAAM,EAAE,cAAc;UAAEC,KAAK,EAAE;QAAC,CAAC,EACxD;UAACF,KAAK,EAAE,gBAAgB;UAAEC,MAAM,EAAE,mBAAmB;UAAEC,KAAK,EAAE;QAAC,CAAC,EAChE;UAACF,KAAK,EAAE,YAAY;UAAEC,MAAM,EAAE,aAAa;UAAEC,KAAK,EAAE;QAAC,CAAC,EACtD;UAACF,KAAK,EAAE,eAAe;UAAEC,MAAM,EAAE,kBAAkB;UAAEC,KAAK,EAAE;QAAC,CAAC,EAC9D;UAACF,KAAK,EAAE,iBAAiB;UAAEC,MAAM,EAAE,kBAAkB;UAAEC,KAAK,EAAE;QAAC,CAAC,CAEjE;QACH,MAAMoB,OAAO,GAAS,EAAE;QACxBJ,IAAI,CAACC,IAAI,CAACC,IAAI,CAACE,OAAO,CAACqB,OAAO,CAAEvB,IAAQ,IAAG;UACzC,MAAMwB,GAAG,GAAG;YACVC,KAAK,EAAEzB,IAAI,CAACyB,KAAK;YACjBC,IAAI,EAAE1B,IAAI,CAAC0B,IAAI;YACfC,YAAY,EAAE3B,IAAI,CAAC2B,YAAY;YAC/BC,YAAY,EAAE5B,IAAI,CAAC4B,YAAY;YAC/BC,WAAW,EAAE7B,IAAI,CAAC8B,eAAe;YACjCC,cAAc,EAAG,IAAI,CAAC3D,gBAAgB,CAAC4D,uBAAuB,CAAChC,IAAI,CAACiC,aAAa,EAAE,IAAI,CAACC,UAAU,CAAC;YACnGC,UAAU,EAAEnC,IAAI,CAACoC,cAAc;YAC/BC,aAAa,EAAE,IAAI,CAACjE,gBAAgB,CAAC4D,uBAAuB,CAAChC,IAAI,CAACsC,YAAY,EAAE,IAAI,CAACJ,UAAU,CAAC;YAChGK,eAAe,EAAEvC,IAAI,CAACuC;WAEvB;UACDrC,OAAO,CAACsC,IAAI,CAAChB,GAAG,CAAC;QAEnB,CAAC,CAAC;QACF,IAAI,CAACjD,kBAAkB,CAAC6C,SAAS,CAACC,SAAS,EAAEnB,OAAO,EAACJ,IAAI,CAACC,IAAI,CAACC,IAAI,CAACI,iBAAiB,EAAEkB,OAAO,EAC5F,mBAAmB,CAACmB,MAAM,CAAC,uBAAU,EAAC,IAAIC,IAAI,EAAE,EAAC,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC;QAC7E,IAAI,CAACvD,OAAO,GAAG,KAAK;;IACrB,CAAC,CAAC;EAEL;EAGAwD,oBAAoB;IAClBjC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,IAAI,IAAI,CAACG,YAAY,EAAE;MACrB,MAAM8B,OAAO,GAAG,IAAI,CAAC9B,YAAY,CAAC+B,GAAG,CAACC,CAAC,IAAEC,MAAM,CAACD,CAAC,CAACrB,KAAK,CAAC,CAAC;MACzD,IAAIuB,MAAM,GAAG,IAAIC,iBAAU,EAAE;MAC7BD,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAC,QAAQ,EAAC,KAAK,CAAC;MAEtC,IAAI,CAACnF,eAAe,CAACoF,mBAAmB,CAACP,OAAO,EAAE;QAACI;MAAM,CAAC,CAAC,CAACnD,SAAS,CAAEC,IAAS,IAAI;QAClF,IAAIA,IAAI,IAAIA,IAAI,CAACsD,EAAE,EAAE;UACnB,IAAItD,IAAI,CAACC,IAAI,CAACC,IAAI,EAAE;YAClB,IAAGF,IAAI,CAACC,IAAI,CAACC,IAAI,CAACqD,OAAO,EAAC;cACxB,IAAI,CAAChF,YAAY,CAACgF,OAAO,CAACvD,IAAI,CAACC,IAAI,CAACC,IAAI,CAACqD,OAAO,CAAC;;YAEnD,IAAGvD,IAAI,CAACC,IAAI,CAACC,IAAI,CAACsD,KAAK,EAAC;cACtB,IAAI,CAACjF,YAAY,CAACiF,KAAK,CAACxD,IAAI,CAACC,IAAI,CAACC,IAAI,CAACsD,KAAK,CAAC;;YAE/C,IAAI,CAACC,cAAc,EAAE;;;MAG3B,CAAC,EACAD,KAAU,IAAI;QACb5C,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGoC,MAAM,CAACO,KAAK,EAAEA,KAAK,EAAEE,UAAU,CAAC,CAAC;QAC1D,IAAI,CAACnF,YAAY,CAACiF,KAAK,CAACP,MAAM,CAACO,KAAK,EAAEA,KAAK,EAAEE,UAAU,CAAC,CAAC;MAC3D,CAAC,CACF;;EAEH;EAEAC,UAAU,CAACpE,KAAY,EAAEqC,IAAY;IACnC,IAAI,CAACxD,iBAAiB,CAACwF,cAAc,CAACrE,KAAK,EAAEqC,IAAI,EAAE,IAAI,EACrD,MAAK;MACH,IAAI,CAACiB,oBAAoB,EAAE;IAC7B,CAAC,CACF;EACH;EAEAgB,WAAW,CAACC,MAAc,EAAEC,WAAmB;IAC7C,IAAI,CAACC,KAAK,CAACC,MAAM,CAACF,WAAW,EAAED,MAAM,EAAE,QAAQ,CAAC;IAChD,IAAI,CAAChE,QAAQ,CAACnB,WAAW,GAAG,CAAC;IAC7B,IAAI,CAACc,QAAQ,GAAG,EAAE;EACpB;EAEAgE,cAAc;IACZ,IAAI,CAAC1C,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,YAAY,GAAG,EAAE;IACtB,IAAI,CAACgD,KAAK,CAACE,OAAO,GAAG,EAAE;IACvB,IAAI,CAACpE,QAAQ,CAACnB,WAAW,GAAG,CAAC;IAC7B,IAAI,CAACc,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACuE,KAAK,CAACG,KAAK,EAAE;EACpB;;AA5MFC;;mBAMarG,yBAAyB;AAAA;;QAAzBA,yBAAyB;EAAAsG;EAAAC;IAAA;;;;;;;;;;;mCAFzB,CAACvG,yBAAyB,CAAC;EAAAwG;EAAAC;EAAAC;EAAAC;IAAA;MClBxC7G;MAAAA,qCAqBa;MAfDA;QAAA,OAAmB8G,6BAAyB;MAAA,EAAC;QAAA,OAC/BA,mCAA+B;MAAA,EADA;QAAA;MAAA;QAAA,OAW5BA,4CAAmC;MAAA,EAXP;QAAA,OAajCA,kBAAc;MAAA,EAbmB;MAgB7C9G;MAAAA,4FAkBc;MAElBA;MAAAA,2FAkBc;MAClBA;MAAAA,4FAcc;MACdA;MAAAA,4FAIc;MAClBA;MAAAA,iBAAU;MACVA;;;MAlFSA,eAA8B;MAA9BA,gDAA8B","names":["i0","ctx_r7","PayrollRejectionComponent","constructor","workloadService","primengConfig","account","nspConfirmService","ns2Http","dateUtilsService","toastService","formBuilder","exportUtilsService","core_1","currentPage","ngOnInit","cols","field","header","index","captionGroup","group","selectedDupNric","forms_1","loading","getPayRollRejectionData","event","lastTableLazyLoadEvent","pageSize","rows","setTimeout","options","convertLazyEvent","pageData","subscribe","resp","body","data","payrollRejectionList","dtoList","totalRecords","total_no_of_elems","duplicateNrics","nricWithMoreThanOneClaimOptions","duplicateNricPlaceHolder","length","onPage","console","log","first","selectAll","selectedRows","onSelectAllChange","checked","selectCheckBox","selectedPayrollRej","emit","exportCSV","dataTable","columns","forEach","dto","txnNo","type","claimantName","claimantNRIC","submittedBy","submittedByInit","submittedByDte","convertUnixToDateString","submittedDate","dateFormat","rejectedBy","rejectedByInit","rejectedByDte","rejectedDate","rejectionReason","push","concat","Date","onRemoveWithNoAction","reqList","map","x","String","params","http_1","append","removeWithNoActions","ok","success","error","resetDataTable","error_desc","openDialog","onConfirmPopup","applyFilter","column","filterValue","table","filter","filters","reset","exports","selectors","viewQuery","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\workload\\payroll-verifier\\payroll-rejection\\payroll-rejection.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\workload\\payroll-verifier\\payroll-rejection\\payroll-rejection.component.html"],"sourcesContent":["import { HttpParams } from '@angular/common/http';\r\nimport {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport {AccountService} from 'app/core/auth/account.service';\r\nimport {DateUtilsService} from 'app/core/util/date-utils.service';\r\nimport { ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport {CustomToastService} from 'app/layouts/service/customtoast.service';\r\nimport {NspConfirmationService} from 'app/shared/confirm/nsp-confirm.service';\r\nimport {Ns2HttpService} from 'app/shared/service/ns2-http.service';\r\nimport moment from 'moment';\r\nimport {LazyLoadEvent, PrimeNGConfig} from 'primeng/api';\r\nimport {ColumnFilter, Table} from 'primeng/table';\r\nimport {WorkloadInboxService} from '../../service/workload-inbox.service';\r\nimport { formatDate } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: 'n2-payroll-rejection',\r\n  templateUrl: './payroll-rejection.component.html',\r\n  styleUrls: ['./payroll-rejection.component.scss'],\r\n  providers: [PayrollRejectionComponent]\r\n})\r\nexport class PayrollRejectionComponent implements OnInit {\r\n\r\n  public payrollRejectionList: any[] = [];\r\n  public selectedRows: any[] = [];\r\n  @Output() selectedPayrollRej = new EventEmitter<string[]>();\r\n  selectedRowsId: string[] = [];\r\n  public optionsList: any[] = [];\r\n  public selectedOption: any[] = [];\r\n  selectAll = false;\r\n  loading!: boolean;\r\n  totalRecords = 0;\r\n  public cols: any [] = [];\r\n  lastTableLazyLoadEvent: LazyLoadEvent;\r\n  dateFormat = \"DD-MM-YYYY (HH:mm)\";\r\n  duplicateNricPlaceHolder = \"0 Duplicates\";\r\n  pageData: { currentPage: number } = {\r\n    currentPage: 0\r\n  }\r\n  pageSize = 10;\r\n  captionGroup: FormGroup;\r\n\r\n  public nricWithMoreThanOneClaimOptions!: string[];\r\n  public enableChkBoxBtn = false;\r\n\r\n  @ViewChild('dataTable', {static: true})\r\n  private table!: Table;\r\n\r\n  constructor(\r\n    private workloadService: WorkloadInboxService,\r\n    private primengConfig: PrimeNGConfig,\r\n    private account: AccountService,\r\n    private nspConfirmService: NspConfirmationService,\r\n    private ns2Http: Ns2HttpService,\r\n    public dateUtilsService: DateUtilsService,\r\n    private toastService: CustomToastService,\r\n    private formBuilder: FormBuilder,\r\n    private exportUtilsService: ExportUtilsService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'txnNo', header: 'Txn No.', index: 1},\r\n      {field: 'type', header: 'Type', index: 2},\r\n      {field: 'claimantName', header: 'Name', index: 3},\r\n      {field: 'submittedBy', header: 'Submitted By', index: 4},\r\n      {field: 'rejectedBy', header: 'Rejected By', index: 5},\r\n      {field: 'rejectedReason', header: 'Rejected Reason', index: 6}\r\n    ];\r\n    this.captionGroup = this.formBuilder.group({\r\n      selectedDupNric: new FormControl()\r\n    })\r\n    this.loading = true;\r\n    // ColumnFilter.prototype.hide = function () {\r\n    //   this.overlayVisible = false;\r\n    //   this.dt.cd.markForCheck();\r\n    // };\r\n  }\r\n\r\n  getPayRollRejectionData(event: any): any[] {\r\n    this.lastTableLazyLoadEvent = event;\r\n    this.loading = true;\r\n    this.pageSize = event.rows;\r\n\r\n    setTimeout(() => {\r\n      const options = this.ns2Http.convertLazyEvent(event, this.pageData, this.pageSize);\r\n\r\n      this.workloadService.getPayRollRejectionData(options).subscribe((resp: any) => {\r\n        if (resp.body.data) {\r\n          this.payrollRejectionList = resp.body.data.dtoList;\r\n          this.totalRecords = resp.body.data.total_no_of_elems;\r\n          if (resp.body.data.duplicateNrics) {\r\n            this.nricWithMoreThanOneClaimOptions = resp.body.data.duplicateNrics;\r\n          }\r\n          this.duplicateNricPlaceHolder = `${this.nricWithMoreThanOneClaimOptions.length} Duplicates`\r\n\r\n        }\r\n        this.loading = false;\r\n      });\r\n    }, 0);\r\n\r\n    return this.payrollRejectionList;\r\n\r\n  }\r\n\r\n  onPage(event: any): void {\r\n    console.log(\"pageevent\", event);\r\n    this.pageData.currentPage = event.first / event.rows;\r\n    this.selectAll = false;\r\n    this.selectedRows = [];\r\n  }\r\n\r\n  onSelectAllChange(event: any): void {\r\n    const checked = event.checked;\r\n    if (checked) {\r\n      this.selectedRows = this.payrollRejectionList;\r\n      this.selectAll = true;\r\n    } else {\r\n      this.selectedRows = [];\r\n      this.selectAll = false;\r\n    }\r\n  }\r\n\r\n  selectCheckBox(event: any, selectedRows: any): void {\r\n    console.log(\"event is\", selectedRows);\r\n    this.selectedPayrollRej.emit(selectedRows);\r\n  }\r\n\r\n  exportCSV(dataTable: Table): void{\r\n    this.workloadService.getPayRollRejectionData(null).subscribe((resp: any) => {\r\n      if (resp.body.data) {\r\n        const columns = \r\n          [\r\n            {field: 'txnNo', header: 'Txn No.', index: 1},\r\n            {field: 'type', header: 'Type', index: 2},\r\n            {field: 'claimantName', header: 'Name', index: 3},\r\n            {field: 'claimantNRIC', header: 'NRIC', index: 4},\r\n            {field: 'submittedBy', header: 'Submitted By', index: 5},\r\n            {field: 'submittedByDte', header: 'Submitted By Date', index: 6},\r\n            {field: 'rejectedBy', header: 'Rejected By', index: 7},\r\n            {field: 'rejectedByDte', header: 'Rejected By Date', index: 8},\r\n            {field: 'rejectionReason', header: 'Rejection Reason', index: 9}\r\n\r\n          ];\r\n        const dtoList:any[] = [];\r\n        resp.body.data.dtoList.forEach((data:any)=>{\r\n          const dto = {\r\n            txnNo: data.txnNo,\r\n            type: data.type,\r\n            claimantName: data.claimantName,\r\n            claimantNRIC: data.claimantNRIC,\r\n            submittedBy: data.submittedByInit,\r\n            submittedByDte:  this.dateUtilsService.convertUnixToDateString(data.submittedDate, this.dateFormat),\r\n            rejectedBy: data.rejectedByInit,\r\n            rejectedByDte: this.dateUtilsService.convertUnixToDateString(data.rejectedDate, this.dateFormat),\r\n            rejectionReason: data.rejectionReason\r\n\r\n          }\r\n          dtoList.push(dto);\r\n          \r\n        })\r\n        this.exportUtilsService.exportCSV(dataTable, dtoList,resp.body.data.total_no_of_elems, columns, \r\n          \"payroll_rejection\".concat(formatDate(new Date(),\"dd-MM-YYYY\", 'en-US')));\r\n      this.loading = false;\r\n    }});\r\n    \r\n  }\r\n\r\n\r\n  onRemoveWithNoAction(): void {\r\n    console.log(\"remove with no action\");\r\n    if (this.selectedRows) {\r\n      const reqList = this.selectedRows.map(x=>String(x.txnNo))\r\n      let params = new HttpParams();\r\n      params = params.append('action',false);\r\n\r\n      this.workloadService.removeWithNoActions(reqList, {params}).subscribe((resp: any) => {\r\n        if (resp && resp.ok) {\r\n          if (resp.body.data) {\r\n            if(resp.body.data.success){\r\n              this.toastService.success(resp.body.data.success);\r\n            }\r\n            if(resp.body.data.error){\r\n              this.toastService.error(resp.body.data.error);\r\n            }\r\n            this.resetDataTable();\r\n          }\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(\"error is\" + String(error?.error?.error_desc));\r\n        this.toastService.error(String(error?.error?.error_desc));\r\n      }\r\n    );}\r\n    \r\n  }\r\n\r\n  openDialog(event: Event, type: string): void {\r\n    this.nspConfirmService.onConfirmPopup(event, type, null,\r\n      () => {\r\n        this.onRemoveWithNoAction();\r\n      }\r\n    );\r\n  }\r\n\r\n  applyFilter(column: string, filterValue: string): void {\r\n    this.table.filter(filterValue, column, 'equals');\r\n    this.pageData.currentPage = 0;\r\n    this.pageSize = 10;\r\n  }\r\n\r\n  resetDataTable(): void {\r\n    this.selectAll = false;\r\n    this.selectedRows = [];\r\n    this.table.filters = {};\r\n    this.pageData.currentPage = 0;\r\n    this.pageSize = 10;\r\n    this.table.reset();\r\n  }\r\n}\r\n","\r\n<p-table [value]=\"payrollRejectionList\"\r\n            [paginator]=\"true\"\r\n            [rows]=\"pageSize\"\r\n            [lazy] = \"true\"\r\n            [showCurrentPageReport]=\"true\"\r\n            [selectAll]=\"selectAll\"\r\n            (selectAllChange)=\"onSelectAllChange($event)\"\r\n            (onLazyLoad)=\"getPayRollRejectionData($event)\"\r\n            [totalRecords] = \"totalRecords\"\r\n            [(selection)] = \"selectedRows\"\r\n            [filterDelay]=\"0\"\r\n            [loading] = \"loading\"\r\n            styleClass=\"p-datatable-gridlines p-datatable-striped\"\r\n            [rowsPerPageOptions]=\"[10,15,20]\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            responsiveLayout=\"scroll\"\r\n            [columns] = \"cols\"\r\n            (onRowSelect) = \"selectCheckBox($event,selectedRows)\"\r\n            sortField=\"txnNo\"\r\n            (onPage) = \"onPage($event)\"\r\n            #dataTable\r\n            >\r\n            <ng-template pTemplate=\"caption\">\r\n                <form [formGroup] = \"captionGroup\">\r\n                    <div class=\"grid\">\r\n                        <div class = \"col-6 nsp-align-left\">\r\n                            <p-button icon=\"pi pi-file-o\" [style]=\"{'margin-left': '.5em', 'margin-right': '.5em'}\" (click) = \"exportCSV(dataTable)\"></p-button>\r\n                            <p-dropdown [options]=\"nricWithMoreThanOneClaimOptions\" formControlName=\"selectedDupNric\" [placeholder]=\"duplicateNricPlaceHolder\" [showClear]=\"true\"\r\n                            (onChange)=\"applyFilter('claimantNRIC', captionGroup.get('selectedDupNric').value)\"\r\n                            ></p-dropdown>\r\n\r\n                        </div>\r\n                        <div class = \"col-6 nsp-align-right\">\r\n                            <p-confirmPopup key = \"confirmRmNoAction\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n                            <button pButton  label=\"Remove with No Action\"  [style]=\"{'margin-left': '.5em' , 'margin-bottom': '.5em'}\"\r\n                            [disabled] = \"selectedRows.length <=0\" (click) = 'openDialog($event, \"confirmRmNoAction\")'></button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </ng-template>\r\n\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th scope=\"col\" style=\"width:3%\"><p-tableHeaderCheckbox></p-tableHeaderCheckbox></th>\r\n                <th scope=\"col\">SN</th>\r\n                <th scope=\"col\" pSortableColumn = \"txnNo\">Txn No.<p-sortIcon field=\"txnNo\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"txnNo\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" pSortableColumn =\"type\">Type<p-sortIcon field=\"type\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"type\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" pSortableColumn =\"claimantNRIC\">Name<p-sortIcon field=\"claimantNRIC\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"claimantNRIC\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" pSortableColumn =\"submittedBy\">Submitted By<p-sortIcon field=\"submittedBy\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"rejectedBy\">Rejected By<p-sortIcon field=\"rejectedBy\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"rejectionReason\">Rejected Reason<p-sortIcon field=\"rejectionReason\"></p-sortIcon></th>\r\n\r\n            </tr>\r\n        </ng-template>\r\n    <ng-template pTemplate=\"body\" let-payRollRejection let-rowIndex = \"rowIndex\" let-columns=\"columns\">\r\n\r\n        <tr [pSelectableRow]=\"payRollRejection\">\r\n            <td><p-tableCheckbox [value]=\"payRollRejection\"></p-tableCheckbox></td>\r\n            <td>{{ rowIndex + 1}}</td>\r\n            <td><a href=\"#\">{{payRollRejection.txnNo}}</a></td>\r\n            <td>{{payRollRejection.type }}</td>\r\n            <td>{{payRollRejection.claimantName }} <br/> {{ payRollRejection.claimantNRIC}}</td>\r\n            <td>{{ payRollRejection.submittedByInit }} <br/> {{ dateUtilsService.convertUnixToDateString(payRollRejection.submittedDate, dateFormat) }}</td>\r\n\r\n            <td>{{payRollRejection.rejectedByInit}} <br/> {{ dateUtilsService.convertUnixToDateString(payRollRejection.rejectedDate, dateFormat)  }}</td>\r\n            <td>{{payRollRejection.rejectionReason}}</td>\r\n\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n            <td colspan=\"8\">No records found.</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}