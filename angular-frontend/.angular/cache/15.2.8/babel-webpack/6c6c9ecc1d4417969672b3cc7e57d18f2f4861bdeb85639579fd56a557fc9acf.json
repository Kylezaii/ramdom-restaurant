{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NsmanClaimTabComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i5 = tslib_1.__importStar(require(\"app/enquiry/nsman/service/enquiry-nsman.service\"));\nconst i6 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i7 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i8 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i9 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i10 = tslib_1.__importStar(require(\"primeng/tooltip\"));\nconst i11 = tslib_1.__importStar(require(\"primeng/table\"));\nconst _c0 = [\"claimsTable\"];\nfunction NsmanClaimTabComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function NsmanClaimTabComponent_ng_template_3_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(1);\n      return i0.ɵɵresetView(ctx_r5.exportCSV(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n            \");\n    i0.ɵɵelementStart(5, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function NsmanClaimTabComponent_ng_template_3_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.filterByAll());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n            \");\n    i0.ɵɵelementStart(7, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function NsmanClaimTabComponent_ng_template_3_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.filterBySE());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n            \");\n    i0.ɵɵelementStart(9, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function NsmanClaimTabComponent_ng_template_3_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.filterByEC());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n    \");\n  }\n}\nfunction NsmanClaimTabComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"th\", 11);\n    i0.ɵɵtext(4, \"S/N\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n            \");\n    i0.ɵɵelementStart(6, \"th\", 12);\n    i0.ɵɵtext(7, \"\\n                Receipt Date\\n                \");\n    i0.ɵɵelement(8, \"p-sortIcon\", 13);\n    i0.ɵɵtext(9, \"\\n                \");\n    i0.ɵɵelement(10, \"p-columnFilter\", 14);\n    i0.ɵɵtext(11, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n            \");\n    i0.ɵɵelementStart(13, \"th\", 15);\n    i0.ɵɵtext(14, \"\\n                Case\\n                \");\n    i0.ɵɵelement(15, \"p-sortIcon\", 16);\n    i0.ɵɵtext(16, \"\\n                \");\n    i0.ɵɵelement(17, \"p-columnFilter\", 17);\n    i0.ɵɵtext(18, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n            \");\n    i0.ɵɵelementStart(20, \"th\", 18);\n    i0.ɵɵtext(21, \"\\n                Claim Period\\n                \");\n    i0.ɵɵelement(22, \"p-sortIcon\", 19);\n    i0.ɵɵtext(23, \"\\n                \");\n    i0.ɵɵelement(24, \"p-columnFilter\", 14);\n    i0.ɵɵtext(25, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n            \");\n    i0.ɵɵelementStart(27, \"th\", 20);\n    i0.ɵɵtext(28, \"\\n                Verifier\\n                \");\n    i0.ɵɵelement(29, \"p-sortIcon\", 21);\n    i0.ɵɵtext(30, \"\\n                \");\n    i0.ɵɵelement(31, \"p-columnFilter\", 22);\n    i0.ɵɵtext(32, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(33, \"\\n            \");\n    i0.ɵɵelementStart(34, \"th\", 23);\n    i0.ɵɵtext(35, \"\\n                Additional Information\\n                \");\n    i0.ɵɵelement(36, \"p-sortIcon\", 24);\n    i0.ɵɵtext(37, \"\\n                \");\n    i0.ɵɵelement(38, \"p-columnFilter\", 25);\n    i0.ɵɵtext(39, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(40, \"\\n            \");\n    i0.ɵɵelementStart(41, \"th\", 26);\n    i0.ɵɵtext(42, \"\\n                Status\\n                \");\n    i0.ɵɵelement(43, \"p-sortIcon\", 27);\n    i0.ɵɵtext(44, \"\\n                \");\n    i0.ɵɵelement(45, \"p-columnFilter\", 28);\n    i0.ɵɵtext(46, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(47, \"\\n            \");\n    i0.ɵɵelementStart(48, \"th\", 29);\n    i0.ɵɵtext(49, \"\\n                Matched Attendance\\n                \");\n    i0.ɵɵelement(50, \"p-sortIcon\", 30);\n    i0.ɵɵtext(51, \"\\n                \");\n    i0.ɵɵelement(52, \"p-columnFilter\", 31);\n    i0.ɵɵtext(53, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(54, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(55, \"\\n    \");\n  }\n}\nfunction NsmanClaimTabComponent_ng_template_7_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const record_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\\n                    \", record_r10.additionalInfo.split(\",\").at(0), \", \", record_r10.additionalInfo.split(\",\").at(1), \"\\n                    \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                    \", record_r10.additionalInfo.split(\",\").at(2), \"\\n                \");\n  }\n}\nfunction NsmanClaimTabComponent_ng_template_7_span_28_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const info_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                        \", info_r19, \"\\n                    \");\n  }\n}\nfunction NsmanClaimTabComponent_ng_template_7_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵtemplate(2, NsmanClaimTabComponent_ng_template_7_span_28_div_2_Template, 2, 1, \"div\", 36);\n    i0.ɵɵtext(3, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const record_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", record_r10.additionalInfo.split(\",\"));\n  }\n}\nfunction NsmanClaimTabComponent_ng_template_7_span_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\nfunction NsmanClaimTabComponent_ng_template_7_ng_template_38_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const record_r10 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\\n                        \", record_r10.attendancePeriod.split(\",\").at(0), \" and \", record_r10.attendancePeriod.split(\",\").length - 1, \" others\\n                    \");\n  }\n}\nfunction NsmanClaimTabComponent_ng_template_7_ng_template_38_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const record_r10 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵtextInterpolate1(\"\\n                        \", record_r10.attendancePeriod, \"\\n                    \");\n  }\n}\nfunction NsmanClaimTabComponent_ng_template_7_ng_template_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                    \");\n    i0.ɵɵtemplate(1, NsmanClaimTabComponent_ng_template_7_ng_template_38_span_1_Template, 2, 2, \"span\", 34);\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵtemplate(3, NsmanClaimTabComponent_ng_template_7_ng_template_38_ng_template_3_Template, 1, 1, \"ng-template\", null, 37, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(5, \"\\n                \");\n  }\n  if (rf & 2) {\n    const _r22 = i0.ɵɵreference(4);\n    const record_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", record_r10.attendancePeriod.split(\",\").length > 1)(\"ngIfElse\", _r22);\n  }\n}\nfunction NsmanClaimTabComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n            \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n            \");\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11, \"\\n                \");\n    i0.ɵɵelementStart(12, \"a\", 32);\n    i0.ɵɵlistener(\"click\", function NsmanClaimTabComponent_ng_template_7_Template_a_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r28);\n      const record_r10 = restoredCtx.$implicit;\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.navigateClaimEnquiryPage(record_r10));\n    });\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n            \");\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelement(18, \"br\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n            \");\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n            \");\n    i0.ɵɵelementStart(24, \"td\");\n    i0.ɵɵtext(25, \"\\n                \");\n    i0.ɵɵtemplate(26, NsmanClaimTabComponent_ng_template_7_span_26_Template, 4, 3, \"span\", 33);\n    i0.ɵɵtext(27, \"\\n                \");\n    i0.ɵɵtemplate(28, NsmanClaimTabComponent_ng_template_7_span_28_Template, 4, 1, \"span\", 33);\n    i0.ɵɵtext(29, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n            \");\n    i0.ɵɵelementStart(31, \"td\");\n    i0.ɵɵtext(32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(33, \"\\n            \");\n    i0.ɵɵelementStart(34, \"td\");\n    i0.ɵɵtext(35, \"\\n                \");\n    i0.ɵɵtemplate(36, NsmanClaimTabComponent_ng_template_7_span_36_Template, 1, 0, \"span\", 34);\n    i0.ɵɵtext(37, \"\\n                \");\n    i0.ɵɵtemplate(38, NsmanClaimTabComponent_ng_template_7_ng_template_38_Template, 6, 2, \"ng-template\", null, 35, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(40, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(41, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n    \");\n  }\n  if (rf & 2) {\n    const record_r10 = ctx.$implicit;\n    const i_r11 = ctx.rowIndex;\n    const _r15 = i0.ɵɵreference(39);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i_r11 + 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 12, record_r10.receiptDt, \"dd-MM-yyyy\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(record_r10.caseId);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\"\\n                \", record_r10.claimStartDate, \" to \", record_r10.claimEndDate, \"\\n                \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                \", record_r10.source, \"\\n            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(record_r10.lastVerifiedInitials);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", record_r10.claimType == \"S\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", record_r10.claimType == \"E\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(record_r10.claimStatus);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", record_r10.attendancePeriod == null)(\"ngIfElse\", _r15);\n  }\n}\nfunction NsmanClaimTabComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"td\", 38);\n    i0.ɵɵtext(4, \"No records found.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n    \");\n  }\n}\nconst _c1 = function () {\n  return [10, 25, 50];\n};\nclass NsmanClaimTabComponent {\n  constructor(ns2HttpService, toastService, dateUtilsService, exportUtilsService, enquiryNSmanService, router) {\n    this.ns2HttpService = ns2HttpService;\n    this.toastService = toastService;\n    this.dateUtilsService = dateUtilsService;\n    this.exportUtilsService = exportUtilsService;\n    this.enquiryNSmanService = enquiryNSmanService;\n    this.router = router;\n    this.CLAIM_TYPE_SELF_EMP = \"S\";\n    this.CLAIM_TYPE_EMP = \"E\";\n    this.pageData = {\n      currentPage: 0\n    };\n    this.pageSize = 10;\n    this.claimsList = [];\n  }\n  ngOnInit() {\n    //\n  }\n  load(event) {\n    setTimeout(() => {\n      this.loading = true;\n      this.lazyLoadEvent = event;\n      const options = this.ns2HttpService.convertLazyEvent(event, this.pageData, this.pageSize);\n      options.params = options.params.append(\"nric\", this.nsmanInfo.nric);\n      this.enquiryNSmanService.getClaimTab(options).subscribe(resp => {\n        if (resp.body?.data?.content) {\n          this.claimsList = resp.body.data.content;\n          this.totalRecords = resp.body.data.totalElements;\n        } else {\n          this.claimsList = [];\n          this.totalRecords = 0;\n        }\n        this.loading = false;\n      });\n    }, 0);\n  }\n  onPage(event) {\n    this.pageSize = event.rows;\n    this.pageData.currentPage = event.first / event.rows;\n  }\n  exportCSV(dataTable) {\n    const options = this.ns2HttpService.convertLazyEvent(this.lazyLoadEvent, 0, this.totalRecords);\n    options.params = options.params.append(\"nric\", this.nsmanInfo.nric);\n    this.enquiryNSmanService.getClaimTab(options).subscribe(resp => {\n      if (resp.body?.data?.content) {\n        const data = resp.body?.data?.content;\n        const columns = [{\n          field: 'sn',\n          header: 'SN',\n          index: 0\n        }, {\n          field: 'receiptDt',\n          header: 'Receipt Date',\n          index: 1\n        }, {\n          field: 'caseId',\n          header: 'Case',\n          index: 2\n        }, {\n          field: 'claimPeriod',\n          header: 'Claim Period',\n          index: 3\n        }, {\n          field: 'verifier',\n          header: 'Verifier',\n          index: 4\n        }, {\n          field: 'additionalInfo',\n          header: 'Additional Information',\n          index: 5\n        }, {\n          field: 'status',\n          header: 'Status',\n          index: 6\n        }, {\n          field: 'matchedAttd',\n          header: 'Matched Attendance',\n          index: 7\n        }];\n        const dtoList = [];\n        console.log(\"data\", data);\n        data.forEach((record, index) => {\n          const dto = {\n            sn: index + 1,\n            receiptDt: `${String(this.dateUtilsService.formatStrDate(record.receiptDt, \"DD-MM-YYYY\"))}`,\n            caseId: record.caseId,\n            claimPeriod: `${String(record.claimStartDate)} to ${String(record.claimEndDate)} ${String(record.source)}`,\n            verifier: record.lastVerifiedInitials,\n            additionalInfo: record.additionalInfo,\n            status: record.claimStatus,\n            matchedAttd: record.attendancePeriod\n          };\n          dtoList.push(dto);\n        });\n        this.exportUtilsService.exportCSV(dataTable, dtoList, resp.body.data.totalElements, columns, \"Enquiry Claims Tab\");\n      }\n    }, error => {\n      console.log(error.error?.error_desc);\n      this.loading = false;\n    });\n  }\n  filterByAll() {\n    this.claimsTable.clear();\n  }\n  filterBySE() {\n    this.claimsTable.clear();\n    this.claimsTable.filter(this.CLAIM_TYPE_SELF_EMP, 'claimType', 'equals');\n  }\n  filterByEC() {\n    this.claimsTable.clear();\n    this.claimsTable.filter(this.CLAIM_TYPE_EMP, 'claimType', 'equals');\n  }\n  navigateClaimEnquiryPage(dto) {\n    if (dto.claimType === this.CLAIM_TYPE_SELF_EMP) {\n      const queryParams = {\n        claimId: dto.id,\n        claimantNRIC: dto.nric,\n        readOnly: true\n      };\n      console.log(\"routing to se-claim-enquiry\");\n      this.router.navigate(['/claim/se-claim/claim-verification-se'], {\n        queryParams\n      });\n    } else if (dto.claimType === this.CLAIM_TYPE_EMP) {\n      //TODO\n      this.router.navigate(['/claim/ec-claim/claim-verification-ec', dto]);\n    }\n  }\n}\nexports.NsmanClaimTabComponent = NsmanClaimTabComponent;\nNsmanClaimTabComponent.ɵfac = function NsmanClaimTabComponent_Factory(t) {\n  return new (t || NsmanClaimTabComponent)(i0.ɵɵdirectiveInject(i1.Ns2HttpService), i0.ɵɵdirectiveInject(i2.CustomToastService), i0.ɵɵdirectiveInject(i3.DateUtilsService), i0.ɵɵdirectiveInject(i4.ExportUtilsService), i0.ɵɵdirectiveInject(i5.EnquiryNSmanService), i0.ɵɵdirectiveInject(i6.Router));\n};\nNsmanClaimTabComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NsmanClaimTabComponent,\n  selectors: [[\"n2-nsman-claim-tab\"]],\n  viewQuery: function NsmanClaimTabComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.claimsTable = _t.first);\n    }\n  },\n  inputs: {\n    nsmanInfo: \"nsmanInfo\"\n  },\n  decls: 11,\n  vars: 9,\n  consts: [[\"styleClass\", \"p-datatable-gridlines\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"value\", \"totalRecords\", \"loading\", \"lazy\", \"paginator\", \"rows\", \"rowsPerPageOptions\", \"showCurrentPageReport\", \"onLazyLoad\", \"onPage\"], [\"claimsTable\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"table-caption\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-file\", \"pTooltip\", \"Export as CSV\", \"tooltipPosition\", \"bottom\", 3, \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"label\", \"All\", 1, \"filter-button\", 3, \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"label\", \"Only SE\", 1, \"filter-button\", 3, \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"label\", \"Only EC\", 1, \"filter-button\", 3, \"click\"], [\"scope\", \"col\", 2, \"width\", \"5%\"], [\"scope\", \"col\", \"pSortableColumn\", \"receiptDt\"], [\"field\", \"receiptDt\"], [\"type\", \"text\", \"field\", \"xxx\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"caseId\"], [\"field\", \"caseId\"], [\"type\", \"text\", \"field\", \"caseId\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"claimStartDate\"], [\"field\", \"claimStartDate\"], [\"scope\", \"col\", \"pSortableColumn\", \"lastVerifiedInitials\"], [\"field\", \"lastVerifiedInitials\"], [\"type\", \"text\", \"field\", \"lastVerifiedInitials\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"claimOption\"], [\"field\", \"claimOption\"], [\"type\", \"text\", \"field\", \"claimOption\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"claimStatus\"], [\"field\", \"claimStatus\"], [\"type\", \"text\", \"field\", \"claimStatus\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"attendancePeriod\"], [\"field\", \"attendancePeriod\"], [\"type\", \"text\", \"field\", \"attendancePeriod\", \"display\", \"menu\", \"matchMode\", \"contains\"], [3, \"routerLink\", \"click\"], [4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"attdPeriodFound\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"noMultiPeriod\", \"\"], [\"colspan\", \"12\"]],\n  template: function NsmanClaimTabComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-table\", 0, 1);\n      i0.ɵɵlistener(\"onLazyLoad\", function NsmanClaimTabComponent_Template_p_table_onLazyLoad_0_listener($event) {\n        return ctx.load($event);\n      })(\"onPage\", function NsmanClaimTabComponent_Template_p_table_onPage_0_listener($event) {\n        return ctx.onPage($event);\n      });\n      i0.ɵɵtext(2, \"\\n    \");\n      i0.ɵɵtemplate(3, NsmanClaimTabComponent_ng_template_3_Template, 12, 0, \"ng-template\", 2);\n      i0.ɵɵtext(4, \"\\n    \");\n      i0.ɵɵtemplate(5, NsmanClaimTabComponent_ng_template_5_Template, 56, 0, \"ng-template\", 3);\n      i0.ɵɵtext(6, \"\\n    \");\n      i0.ɵɵtemplate(7, NsmanClaimTabComponent_ng_template_7_Template, 43, 15, \"ng-template\", 4);\n      i0.ɵɵtext(8, \"\\n    \");\n      i0.ɵɵtemplate(9, NsmanClaimTabComponent_ng_template_9_Template, 7, 0, \"ng-template\", 5);\n      i0.ɵɵtext(10, \"\\n\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"value\", ctx.claimsList)(\"totalRecords\", ctx.totalRecords)(\"loading\", ctx.loading)(\"lazy\", true)(\"paginator\", true)(\"rows\", 10)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(8, _c1))(\"showCurrentPageReport\", true);\n    }\n  },\n  dependencies: [i7.NgForOf, i7.NgIf, i8.PrimeTemplate, i9.ButtonDirective, i6.RouterLink, i10.Tooltip, i11.Table, i11.SortableColumn, i11.SortIcon, i11.ColumnFilter, i7.DatePipe],\n  styles: [\"[_nghost-%COMP%]     .table-caption {\\n  display: flex;\\n  align-items: center;\\n  gap: 1rem;\\n}\\n\\n[_nghost-%COMP%]     .filter-button {\\n  width: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5zbWFuLWNsYWltLXRhYi5jb21wb25lbnQuc2NzcyIsIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxccHJvamVjdHMlMjAyXFxuc3BheWlpYXBwXFxzcmNcXG1haW5cXHdlYmFwcFxcYXBwXFxlbnF1aXJ5XFxuc21hblxcc2VhcmNoXFxuc21hbi10YWJzXFxjbGFpbS10YWJcXG5zbWFuLWNsYWltLXRhYi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFNBQUE7QUNDSjs7QURFQTtFQUNJLFlBQUE7QUNDSiIsImZpbGUiOiJuc21hbi1jbGFpbS10YWIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCA6Om5nLWRlZXAgLnRhYmxlLWNhcHRpb24ge1xyXG4gICAgZGlzcGxheTogZmxleDsgXHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZ2FwOiAxcmVtO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLmZpbHRlci1idXR0b24ge1xyXG4gICAgd2lkdGg6IDEwMHB4O1xyXG59IiwiOmhvc3QgOjpuZy1kZWVwIC50YWJsZS1jYXB0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiAxcmVtO1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLmZpbHRlci1idXR0b24ge1xuICB3aWR0aDogMTAwcHg7XG59Il19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvZW5xdWlyeS9uc21hbi9zZWFyY2gvbnNtYW4tdGFicy9jbGFpbS10YWIvbnNtYW4tY2xhaW0tdGFiLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vcHJvamVjdHMlMjAyL25zcGF5aWlhcHAvc3JjL21haW4vd2ViYXBwL2FwcC9lbnF1aXJ5L25zbWFuL3NlYXJjaC9uc21hbi10YWJzL2NsYWltLXRhYi9uc21hbi1jbGFpbS10YWIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxTQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0FDQ0o7QURDQSw0OUJBQTQ5QiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IDo6bmctZGVlcCAudGFibGUtY2FwdGlvbiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBnYXA6IDFyZW07XHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAuZmlsdGVyLWJ1dHRvbiB7XHJcbiAgICB3aWR0aDogMTAwcHg7XHJcbn0iLCI6aG9zdCA6Om5nLWRlZXAgLnRhYmxlLWNhcHRpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBnYXA6IDFyZW07XG59XG5cbjpob3N0IDo6bmctZGVlcCAuZmlsdGVyLWJ1dHRvbiB7XG4gIHdpZHRoOiAxMDBweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","NsmanClaimTabComponent","constructor","ns2HttpService","toastService","dateUtilsService","exportUtilsService","enquiryNSmanService","router","currentPage","ngOnInit","load","event","setTimeout","loading","lazyLoadEvent","options","convertLazyEvent","pageData","pageSize","params","append","nsmanInfo","nric","getClaimTab","subscribe","resp","body","data","content","claimsList","totalRecords","totalElements","onPage","rows","first","exportCSV","dataTable","columns","field","header","index","dtoList","console","log","forEach","record","dto","sn","receiptDt","String","formatStrDate","caseId","claimPeriod","claimStartDate","claimEndDate","source","verifier","lastVerifiedInitials","additionalInfo","status","claimStatus","matchedAttd","attendancePeriod","push","error","error_desc","filterByAll","claimsTable","clear","filterBySE","filter","CLAIM_TYPE_SELF_EMP","filterByEC","CLAIM_TYPE_EMP","navigateClaimEnquiryPage","claimType","queryParams","claimId","id","claimantNRIC","readOnly","navigate","exports","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\enquiry\\nsman\\search\\nsman-tabs\\claim-tab\\nsman-claim-tab.component.html","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\enquiry\\nsman\\search\\nsman-tabs\\claim-tab\\nsman-claim-tab.component.ts"],"sourcesContent":["<p-table #claimsTable\r\n    [value]=\"claimsList\"\r\n    [totalRecords]=\"totalRecords\"\r\n    [loading]=\"loading\"\r\n    [lazy]=\"true\"\r\n    (onLazyLoad)=\"load($event)\"\r\n    (onPage)=\"onPage($event)\"\r\n    styleClass=\"p-datatable-gridlines\"\r\n    [paginator]=\"true\"\r\n    [rows]=\"10\"\r\n    [rowsPerPageOptions]=\"[10,25,50]\"\r\n    [showCurrentPageReport]=\"true\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\">\r\n    <ng-template pTemplate=\"caption\">\r\n        <div class=\"table-caption\">\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-file\" (click)=\"exportCSV(claimsTable)\" pTooltip=\"Export as CSV\" \r\n            tooltipPosition=\"bottom\"></button>\r\n            <button type=\"button\" pButton label=\"All\" (click)=\"filterByAll()\" class=\"filter-button\"></button>\r\n            <button type=\"button\" pButton label=\"Only SE\" (click)=\"filterBySE()\" class=\"filter-button\"></button>\r\n            <button type=\"button\" pButton label=\"Only EC\" (click)=\"filterByEC()\" class=\"filter-button\"></button>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th scope=\"col\" style=\"width: 5%\">S/N</th>\r\n            <th scope=\"col\" pSortableColumn=\"receiptDt\">\r\n                Receipt Date\r\n                <p-sortIcon field=\"receiptDt\"></p-sortIcon>\r\n                <p-columnFilter type=\"text\" field=\"xxx\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"caseId\">\r\n                Case\r\n                <p-sortIcon field=\"caseId\"></p-sortIcon>\r\n                <p-columnFilter type=\"text\" field=\"caseId\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"claimStartDate\">\r\n                Claim Period\r\n                <p-sortIcon field=\"claimStartDate\"></p-sortIcon>\r\n                <p-columnFilter type=\"text\" field=\"xxx\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"lastVerifiedInitials\">\r\n                Verifier\r\n                <p-sortIcon field=\"lastVerifiedInitials\"></p-sortIcon>\r\n                <p-columnFilter type=\"text\" field=\"lastVerifiedInitials\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"claimOption\">\r\n                Additional Information\r\n                <p-sortIcon field=\"claimOption\"></p-sortIcon>\r\n                <p-columnFilter type=\"text\" field=\"claimOption\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"claimStatus\">\r\n                Status\r\n                <p-sortIcon field=\"claimStatus\"></p-sortIcon>\r\n                <p-columnFilter type=\"text\" field=\"claimStatus\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"attendancePeriod\">\r\n                Matched Attendance\r\n                <p-sortIcon field=\"attendancePeriod\"></p-sortIcon>\r\n                <p-columnFilter type=\"text\" field=\"attendancePeriod\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n            </th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-record let-i=\"rowIndex\">\r\n        <tr>\r\n            <td>{{ i + 1 }}</td>\r\n            <td>{{ record.receiptDt | date:'dd-MM-yyyy' }}</td>\r\n            <td>\r\n                <a [routerLink]=\"\" (click)=\"navigateClaimEnquiryPage(record)\">{{ record.caseId }}</a>\r\n            </td>\r\n            <td>\r\n                {{ record.claimStartDate }} to {{ record.claimEndDate }}\r\n                <br>\r\n                {{ record.source }}\r\n            </td>\r\n            <td>{{ record.lastVerifiedInitials }}</td>\r\n            <td>\r\n                <span *ngIf=\"record.claimType == 'S'\">\r\n                    {{ record.additionalInfo.split(',').at(0) }}, {{ record.additionalInfo.split(',').at(1) }}\r\n                    <br>\r\n                    {{ record.additionalInfo.split(',').at(2) }}\r\n                </span>\r\n                <span *ngIf=\"record.claimType == 'E'\">\r\n                    <div *ngFor=\"let info of record.additionalInfo.split(',')\">\r\n                        {{ info }}\r\n                    </div>\r\n                </span>\r\n            </td>\r\n            <td>{{ record.claimStatus }}</td>\r\n            <td>\r\n                <span *ngIf=\"record.attendancePeriod == null; else attdPeriodFound\"></span>\r\n                <ng-template #attdPeriodFound>\r\n                    <span *ngIf=\"record.attendancePeriod.split(',').length > 1; else noMultiPeriod\">\r\n                        {{ record.attendancePeriod.split(',').at(0) }} and {{ record.attendancePeriod.split(',').length - 1 }} others\r\n                    </span>\r\n                    <ng-template #noMultiPeriod>\r\n                        {{ record.attendancePeriod }}\r\n                    </ng-template>\r\n                </ng-template>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n            <td colspan=\"12\">No records found.</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport { EnquiryNSmanService } from 'app/enquiry/nsman/service/enquiry-nsman.service';\r\nimport { Table } from 'primeng/table';\r\nimport { Router } from '@angular/router';\r\nimport { EnqClaimTab } from 'app/enquiry/nsman/model/nsman-tabs.model';\r\nimport { NSmanPersonalInfo } from 'app/enquiry/nsman/model/nsman.model';\r\n\r\n@Component({\r\n  selector: 'n2-nsman-claim-tab',\r\n  templateUrl: './nsman-claim-tab.component.html',\r\n  styleUrls: ['./nsman-claim-tab.component.scss']\r\n})\r\nexport class NsmanClaimTabComponent implements OnInit {\r\n\r\n  @Input() nsmanInfo: NSmanPersonalInfo;\r\n\r\n  readonly CLAIM_TYPE_SELF_EMP = \"S\";\r\n  readonly CLAIM_TYPE_EMP = \"E\";\r\n\r\n  // LazyLoad variables\r\n  totalRecords?: number;\r\n  loading?: boolean;\r\n  pageData: { currentPage: number } = {\r\n    currentPage: 0\r\n  }\r\n  pageSize = 10;\r\n  lazyLoadEvent: LazyLoadEvent;\r\n\r\n  claimsList: EnqClaimTab[] = [];\r\n\r\n  @ViewChild('claimsTable', { static: true })\r\n  private claimsTable!: Table;\r\n\r\n  constructor(\r\n    private ns2HttpService: Ns2HttpService,\r\n    private toastService: CustomToastService,\r\n    private dateUtilsService: DateUtilsService,\r\n    private exportUtilsService: ExportUtilsService,\r\n    private enquiryNSmanService: EnquiryNSmanService,\r\n    private router: Router\r\n\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    //\r\n  }\r\n\r\n  load(event: LazyLoadEvent): void {\r\n    setTimeout(() => {\r\n      this.loading = true;\r\n      this.lazyLoadEvent = event;\r\n\r\n      const options = this.ns2HttpService.convertLazyEvent(event, this.pageData, this.pageSize);\r\n      options.params = options.params.append(\"nric\", this.nsmanInfo.nric);\r\n\r\n      this.enquiryNSmanService.getClaimTab(options).subscribe(resp => {\r\n        if (resp.body?.data?.content) {\r\n          this.claimsList = resp.body.data.content;\r\n          this.totalRecords = resp.body.data.totalElements;\r\n        } else {\r\n          this.claimsList = [];\r\n          this.totalRecords = 0;\r\n        }\r\n        this.loading = false;\r\n      });\r\n    }, 0);\r\n  }\r\n\r\n  onPage(event: any): void {\r\n    this.pageSize = event.rows;\r\n    this.pageData.currentPage = event.first / event.rows;\r\n  }\r\n\r\n  exportCSV(dataTable: Table): void {\r\n    const options = this.ns2HttpService.convertLazyEvent(this.lazyLoadEvent, 0, this.totalRecords);\r\n    options.params = options.params.append(\"nric\", this.nsmanInfo.nric);\r\n\r\n    this.enquiryNSmanService.getClaimTab(options).subscribe(\r\n      resp => {\r\n        if (resp.body?.data?.content) {\r\n          const data = resp.body?.data?.content;\r\n          const columns = [\r\n            { field: 'sn', header: 'SN', index: 0 },\r\n            { field: 'receiptDt', header: 'Receipt Date', index: 1 },\r\n            { field: 'caseId', header: 'Case', index: 2 },\r\n            { field: 'claimPeriod', header: 'Claim Period', index: 3 },\r\n            { field: 'verifier', header: 'Verifier', index: 4 },\r\n            { field: 'additionalInfo', header: 'Additional Information', index: 5 },\r\n            { field: 'status', header: 'Status', index: 6 },\r\n            { field: 'matchedAttd', header: 'Matched Attendance', index: 7 },\r\n          ];\r\n\r\n          const dtoList: any[] = [];\r\n          console.log(\"data\", data);\r\n          data.forEach((record: EnqClaimTab, index: number) => {\r\n            const dto = {\r\n              sn: index + 1,\r\n              receiptDt: `${String(this.dateUtilsService.formatStrDate(record.receiptDt, \"DD-MM-YYYY\"))}`,\r\n              caseId: record.caseId,\r\n              claimPeriod: `${String(record.claimStartDate)} to ${String(record.claimEndDate)} ${String(record.source)}`,\r\n              verifier: record.lastVerifiedInitials,\r\n              additionalInfo: record.additionalInfo,\r\n              status: record.claimStatus,\r\n              matchedAttd: record.attendancePeriod\r\n            }\r\n            dtoList.push(dto);\r\n          });\r\n          this.exportUtilsService.exportCSV(dataTable, dtoList, resp.body.data.totalElements, columns, \"Enquiry Claims Tab\");\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error.error?.error_desc);\r\n        this.loading = false;\r\n      })\r\n  }\r\n\r\n  filterByAll(): void {\r\n    this.claimsTable.clear();\r\n  }\r\n\r\n  filterBySE(): void {\r\n    this.claimsTable.clear();\r\n    this.claimsTable.filter(this.CLAIM_TYPE_SELF_EMP, 'claimType', 'equals');\r\n  }\r\n\r\n  filterByEC(): void {\r\n    this.claimsTable.clear();\r\n    this.claimsTable.filter(this.CLAIM_TYPE_EMP, 'claimType', 'equals');\r\n  }\r\n\r\n  navigateClaimEnquiryPage(dto: any): void{\r\n    if(dto.claimType===this.CLAIM_TYPE_SELF_EMP){\r\n      const queryParams = {\r\n        claimId: dto.id, \r\n        claimantNRIC: dto.nric,\r\n        readOnly: true\r\n      }\r\n      console.log(\"routing to se-claim-enquiry\");\r\n      this.router.navigate(['/claim/se-claim/claim-verification-se'], {queryParams});\r\n    \r\n    }else if(dto.claimType===this.CLAIM_TYPE_EMP){\r\n      //TODO\r\n      this.router.navigate(['/claim/ec-claim/claim-verification-ec', dto]);\r\n    }\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}