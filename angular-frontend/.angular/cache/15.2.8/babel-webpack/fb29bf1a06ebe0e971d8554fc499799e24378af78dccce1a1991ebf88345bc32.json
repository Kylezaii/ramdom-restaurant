{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ThreadState = exports.HttpMethod = void 0;\nvar HttpMethod;\n(function (HttpMethod) {\n  HttpMethod[\"Post\"] = \"POST\";\n  HttpMethod[\"Get\"] = \"GET\";\n  HttpMethod[\"Put\"] = \"PUT\";\n  HttpMethod[\"Patch\"] = \"PATCH\";\n  HttpMethod[\"Delete\"] = \"DELETE\";\n})(HttpMethod = exports.HttpMethod || (exports.HttpMethod = {}));\nvar ThreadState;\n(function (ThreadState) {\n  ThreadState[\"Runnable\"] = \"RUNNABLE\";\n  ThreadState[\"TimedWaiting\"] = \"TIMED_WAITING\";\n  ThreadState[\"Waiting\"] = \"WAITING\";\n  ThreadState[\"Blocked\"] = \"BLOCKED\";\n  ThreadState[\"New\"] = \"NEW\";\n  ThreadState[\"Terminated\"] = \"TERMINATED\";\n})(ThreadState = exports.ThreadState || (exports.ThreadState = {}));","map":{"version":3,"mappings":";;;;;;AAoGA,IAAYA,UAMX;AAND,WAAYA,UAAU;EACpBA,2BAAa;EACbA,yBAAW;EACXA,yBAAW;EACXA,6BAAe;EACfA,+BAAiB;AACnB,CAAC,EANWA,UAAU,GAAVC,kBAAU,KAAVA,kBAAU;AAqEtB,IAAYC,WAOX;AAPD,WAAYA,WAAW;EACrBA,oCAAqB;EACrBA,6CAA8B;EAC9BA,kCAAmB;EACnBA,kCAAmB;EACnBA,0BAAW;EACXA,wCAAyB;AAC3B,CAAC,EAPWA,WAAW,GAAXD,mBAAW,KAAXA,mBAAW","names":["HttpMethod","exports","ThreadState"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\metrics\\metrics.model.ts"],"sourcesContent":["export interface Metrics {\r\n  jvm: { [key: string]: JvmMetrics };\r\n  databases: Databases;\r\n  'http.server.requests': HttpServerRequests;\r\n  cache: { [key: string]: CacheMetrics };\r\n  garbageCollector: GarbageCollector;\r\n  services: Services;\r\n  processMetrics: ProcessMetrics;\r\n}\r\n\r\nexport interface JvmMetrics {\r\n  committed: number;\r\n  max: number;\r\n  used: number;\r\n}\r\nexport interface EnvironmentInfo {\r\n   availableTag: Tag[];\r\n   baseUnit: string;\r\n   description: string;\r\n   name: string;\r\n   measurements: Stat[];\r\n}\r\n\r\nexport interface Tag {\r\n   tag: string;\r\n   values: string[];\r\n}\r\n\r\n\r\nexport interface  Stat {\r\n   statistic: string;\r\n   value: number;\r\n}\r\n\r\nexport interface Databases {\r\n  min: Value;\r\n  idle: Value;\r\n  max: Value;\r\n  usage: MetricsWithPercentile;\r\n  pending: Value;\r\n  active: Value;\r\n  acquire: MetricsWithPercentile;\r\n  creation: MetricsWithPercentile;\r\n  connections: Value;\r\n}\r\n\r\nexport interface Value {\r\n  value: number;\r\n}\r\n\r\nexport interface MetricsWithPercentile {\r\n  '0.0': number;\r\n  '1.0': number;\r\n  max: number;\r\n  totalTime: number;\r\n  mean: number;\r\n  '0.5': number;\r\n  count: number;\r\n  '0.99': number;\r\n  '0.75': number;\r\n  '0.95': number;\r\n}\r\n\r\nexport interface HttpServerRequests {\r\n  all: {\r\n    count: number;\r\n  };\r\n  percode: { [key: string]: MaxMeanCount };\r\n}\r\n\r\nexport interface MaxMeanCount {\r\n  max: number;\r\n  mean: number;\r\n  count: number;\r\n}\r\n\r\nexport interface CacheMetrics {\r\n  'cache.gets.miss': number;\r\n  'cache.puts': number;\r\n  'cache.gets.hit': number;\r\n  'cache.removals': number;\r\n  'cache.evictions': number;\r\n}\r\n\r\nexport interface GarbageCollector {\r\n  'jvm.gc.max.data.size': number;\r\n  'jvm.gc.pause': MetricsWithPercentile;\r\n  'jvm.gc.memory.promoted': number;\r\n  'jvm.gc.memory.allocated': number;\r\n  classesLoaded: number;\r\n  'jvm.gc.live.data.size': number;\r\n  classesUnloaded: number;\r\n}\r\n\r\nexport interface Services {\r\n  [key: string]: {\r\n    [key in HttpMethod]?: MaxMeanCount;\r\n  };\r\n}\r\n\r\nexport enum HttpMethod {\r\n  Post = 'POST',\r\n  Get = 'GET',\r\n  Put = 'PUT',\r\n  Patch = 'PATCH',\r\n  Delete = 'DELETE',\r\n}\r\n\r\nexport interface ProcessMetrics {\r\n  'system.cpu.usage': number;\r\n  'system.cpu.count': number;\r\n  'system.load.average.1m'?: number;\r\n  'process.cpu.usage': number;\r\n  'process.files.max'?: number;\r\n  'process.files.open'?: number;\r\n  'process.start.time': number;\r\n  'process.uptime': number;\r\n}\r\n\r\nexport interface ThreadDump {\r\n  threads: Thread[];\r\n}\r\n\r\nexport interface Thread {\r\n  threadName: string;\r\n  threadId: number;\r\n  blockedTime: number;\r\n  blockedCount: number;\r\n  waitedTime: number;\r\n  waitedCount: number;\r\n  lockName: string | null;\r\n  lockOwnerId: number;\r\n  lockOwnerName: string | null;\r\n  daemon: boolean;\r\n  inNative: boolean;\r\n  suspended: boolean;\r\n  threadState: ThreadState;\r\n  priority: number;\r\n  stackTrace: StackTrace[];\r\n  lockedMonitors: LockedMonitor[];\r\n  lockedSynchronizers: string[];\r\n  lockInfo: LockInfo | null;\r\n  // custom field for showing-hiding thread dump\r\n  showThreadDump?: boolean;\r\n}\r\n\r\nexport interface LockInfo {\r\n  className: string;\r\n  identityHashCode: number;\r\n}\r\n\r\nexport interface LockedMonitor {\r\n  className: string;\r\n  identityHashCode: number;\r\n  lockedStackDepth: number;\r\n  lockedStackFrame: StackTrace;\r\n}\r\n\r\nexport interface StackTrace {\r\n  classLoaderName: string | null;\r\n  moduleName: string | null;\r\n  moduleVersion: string | null;\r\n  methodName: string;\r\n  fileName: string;\r\n  lineNumber: number;\r\n  className: string;\r\n  nativeMethod: boolean;\r\n}\r\n\r\nexport enum ThreadState {\r\n  Runnable = 'RUNNABLE',\r\n  TimedWaiting = 'TIMED_WAITING',\r\n  Waiting = 'WAITING',\r\n  Blocked = 'BLOCKED',\r\n  New = 'NEW',\r\n  Terminated = 'TERMINATED',\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}