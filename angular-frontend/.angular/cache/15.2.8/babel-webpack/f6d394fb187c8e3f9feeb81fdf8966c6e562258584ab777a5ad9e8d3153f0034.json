{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataEntryComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst forms_1 = require(\"@angular/forms\");\nconst common_1 = require(\"@angular/common\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/workload/service/workload-inbox.service\"));\nconst i2 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i3 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/shared/confirm/nsp-confirm.service\"));\nconst i5 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i6 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i7 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i8 = tslib_1.__importStar(require(\"app/ng-connect\"));\nconst i9 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i10 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i11 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i12 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i15 = tslib_1.__importStar(require(\"primeng/dropdown\"));\nconst i16 = tslib_1.__importStar(require(\"primeng/dialog\"));\nconst i17 = tslib_1.__importStar(require(\"primeng/inputtextarea\"));\nconst i18 = tslib_1.__importStar(require(\"primeng/confirmpopup\"));\nconst i19 = tslib_1.__importStar(require(\"../../../shared/pipe/default-string.pipe\"));\nconst _c0 = [\"confirmBtn\"];\nconst _c1 = [\"dataTable\"];\nconst _c2 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-right\": \".5em\"\n  };\n};\nconst _c3 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nfunction DataEntryComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                    \");\n    i0.ɵɵelementStart(1, \"form\", 0);\n    i0.ɵɵtext(2, \"\\n                        \");\n    i0.ɵɵelementStart(3, \"div\", 15);\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"div\", 16);\n    i0.ɵɵtext(6, \"\\n                                \");\n    i0.ɵɵelementStart(7, \"p-button\", 17);\n    i0.ɵɵlistener(\"click\", function DataEntryComponent_ng_template_8_Template_p_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(6);\n      return i0.ɵɵresetView(ctx_r6.exportCSV(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n\\n                                \");\n    i0.ɵɵelementStart(9, \"p-dropdown\", 18);\n    i0.ɵɵlistener(\"onChange\", function DataEntryComponent_ng_template_8_Template_p_dropdown_onChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onSelectDupNric($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n                            \");\n    i0.ɵɵelementStart(12, \"div\", 19);\n    i0.ɵɵtext(13, \"\\n                                \");\n    i0.ɵɵelement(14, \"p-confirmPopup\", 20);\n    i0.ɵɵtext(15, \"\\n                                \");\n    i0.ɵɵelement(16, \"p-confirmPopup\", 21);\n    i0.ɵɵtext(17, \"\\n\\n                                \");\n    i0.ɵɵelementStart(18, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function DataEntryComponent_ng_template_8_Template_button_click_18_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.openDialog($event, \"confirmAuthIRAS\"));\n    });\n    i0.ɵɵtext(19, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n                                \");\n    i0.ɵɵelementStart(21, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function DataEntryComponent_ng_template_8_Template_button_click_21_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.openDialog($event, \"changeClaimOption\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n                                \");\n    i0.ɵɵelementStart(23, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function DataEntryComponent_ng_template_8_Template_button_click_23_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onClickTransferOwnership());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \"\\n\\n                \");\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.captionGroup);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(15, _c2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"options\", ctx_r1.nricWithMoreThanOneClaimOptions)(\"placeholder\", ctx_r1.duplicateNricPlaceHolder)(\"showClear\", true);\n    i0.ɵɵadvance(9);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(16, _c3));\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.enableAuthIRASSBtn());\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(17, _c3));\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.enableChangeClaimBtn());\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(18, _c3));\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.enableTxferOSBtn());\n  }\n}\nfunction DataEntryComponent_ng_template_10_ng_template_48_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                                    \");\n    i0.ɵɵelementStart(1, \"p-dropdown\", 46);\n    i0.ɵɵlistener(\"onChange\", function DataEntryComponent_ng_template_10_ng_template_48_Template_p_dropdown_onChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const filter_r15 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r15($event.value));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\n                                \");\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r13.selectedOwner)(\"options\", ctx_r13.ownerMap);\n  }\n}\nconst _c4 = function () {\n  return {\n    \"width\": \"13%\"\n  };\n};\nfunction DataEntryComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                    \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                        \");\n    i0.ɵɵelementStart(3, \"th\", 25);\n    i0.ɵɵelement(4, \"p-tableHeaderCheckbox\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n\\n                        \");\n    i0.ɵɵelementStart(6, \"th\", 26);\n    i0.ɵɵtext(7, \"SN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                        \");\n    i0.ɵɵelementStart(9, \"th\", 27);\n    i0.ɵɵtext(10, \"Case ID\");\n    i0.ɵɵelement(11, \"p-sortIcon\", 28);\n    i0.ɵɵtext(12, \"\\n                            \");\n    i0.ɵɵelement(13, \"p-columnFilter\", 29);\n    i0.ɵɵtext(14, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n                        \");\n    i0.ɵɵelementStart(16, \"th\", 30);\n    i0.ɵɵtext(17, \"Name\");\n    i0.ɵɵelement(18, \"p-sortIcon\", 31);\n    i0.ɵɵtext(19, \"\\n                            \");\n    i0.ɵɵelement(20, \"p-columnFilter\", 32);\n    i0.ɵɵtext(21, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n                        \");\n    i0.ɵɵelementStart(23, \"th\", 33);\n    i0.ɵɵtext(24, \"Start\");\n    i0.ɵɵelement(25, \"p-sortIcon\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n                        \");\n    i0.ɵɵelementStart(27, \"th\", 35);\n    i0.ɵɵtext(28, \"End\");\n    i0.ɵɵelement(29, \"p-sortIcon\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n                        \");\n    i0.ɵɵelementStart(31, \"th\", 37);\n    i0.ɵɵtext(32, \"Status\");\n    i0.ɵɵelement(33, \"p-sortIcon\", 38);\n    i0.ɵɵtext(34, \"\\n                            \");\n    i0.ɵɵelement(35, \"p-columnFilter\", 39);\n    i0.ɵɵtext(36, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(37, \"\\n                        \");\n    i0.ɵɵelementStart(38, \"th\", 40);\n    i0.ɵɵtext(39, \"Option\");\n    i0.ɵɵelement(40, \"p-sortIcon\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(41, \"\\n                        \");\n    i0.ɵɵelementStart(42, \"th\", 42);\n    i0.ɵɵtext(43, \"Last Owner\");\n    i0.ɵɵelement(44, \"p-sortIcon\", 43);\n    i0.ɵɵtext(45, \"\\n                            \");\n    i0.ɵɵelementStart(46, \"p-columnFilter\", 44);\n    i0.ɵɵtext(47, \"\\n                                \");\n    i0.ɵɵtemplate(48, DataEntryComponent_ng_template_10_ng_template_48_Template, 3, 2, \"ng-template\", 45);\n    i0.ɵɵtext(49, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(50, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(51, \"\\n\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(52, \"\\n                \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(38);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(2, _c4));\n  }\n}\nconst _c5 = function () {\n  return {\n    \"width\": \"100%\"\n  };\n};\nfunction DataEntryComponent_ng_template_12_p_dropdown_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-dropdown\", 52, 53);\n    i0.ɵɵtext(2, \"\\n\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c5));\n    i0.ɵɵproperty(\"options\", ctx_r21.claimOptionMap);\n  }\n}\nfunction DataEntryComponent_ng_template_12_ng_template_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                            -\\n                        \");\n  }\n}\nfunction DataEntryComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n\\n                \");\n    i0.ɵɵelementStart(1, \"tr\", 47);\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"p-tableCheckbox\", 48);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                    \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                    \");\n    i0.ɵɵtext(9, \"\\n                    \");\n    i0.ɵɵelementStart(10, \"td\")(11, \"a\", 49);\n    i0.ɵɵlistener(\"click\", function DataEntryComponent_ng_template_12_Template_a_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const dataEntry_r18 = restoredCtx.$implicit;\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.navigateHardCopyClaim(dataEntry_r18.value));\n    });\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(13, \"\\n                    \");\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelement(16, \"br\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n                    \");\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                    \");\n    i0.ɵɵelementStart(22, \"td\");\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \"\\n                    \");\n    i0.ɵɵelementStart(25, \"td\");\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \"\\n                    \");\n    i0.ɵɵelementStart(28, \"td\");\n    i0.ɵɵtext(29, \"\\n                        \");\n    i0.ɵɵtemplate(30, DataEntryComponent_ng_template_12_p_dropdown_30_Template, 3, 4, \"p-dropdown\", 50);\n    i0.ɵɵtext(31, \"\\n                        \");\n    i0.ɵɵtemplate(32, DataEntryComponent_ng_template_12_ng_template_32_Template, 1, 0, \"ng-template\", null, 51, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(34, \"\\n                        \");\n    i0.ɵɵtext(35, \"\\n\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(36, \"\\n                    \");\n    i0.ɵɵelementStart(37, \"td\");\n    i0.ɵɵtext(38);\n    i0.ɵɵpipe(39, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(40, \"\\n\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(41, \"\\n\\n\\n            \");\n  }\n  if (rf & 2) {\n    const dataEntry_r18 = ctx.$implicit;\n    const rowIndex_r19 = ctx.rowIndex;\n    const _r22 = i0.ɵɵreference(33);\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", ctx_r3.getRow(rowIndex_r19));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", dataEntry_r18);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(rowIndex_r19 + 1);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(dataEntry_r18.value.caseId);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", dataEntry_r18.value.nric, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", dataEntry_r18.value.name, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(dataEntry_r18.value.start);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(dataEntry_r18.value.end);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(dataEntry_r18.value.status);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", dataEntry_r18.value.claimType === \"SE\")(\"ngIfElse\", _r22);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(39, 12, dataEntry_r18.value.lastOwner));\n  }\n}\nfunction DataEntryComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelementStart(3, \"td\", 54);\n    i0.ɵɵtext(4, \"No records found.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n            \");\n  }\n}\nfunction DataEntryComponent_ng_template_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n            \");\n    i0.ɵɵelementStart(1, \"button\", 55);\n    i0.ɵɵlistener(\"click\", function DataEntryComponent_ng_template_35_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.displayTxferClaimOwnershipDialog.display = false);\n    });\n    i0.ɵɵtext(2, \"\\n\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n        \");\n    i0.ɵɵelementStart(4, \"button\", 56);\n    i0.ɵɵlistener(\"click\", function DataEntryComponent_ng_template_35_Template_button_click_4_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.onSubmit($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n\\n    \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c3));\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(5, _c3));\n  }\n}\nconst _c6 = function () {\n  return [10, 15, 20];\n};\nconst _c7 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nconst _c8 = function () {\n  return {\n    width: \"50vw\"\n  };\n};\nconst _c9 = function () {\n  return {\n    \"960px\": \"75vw\"\n  };\n};\nclass DataEntryComponent {\n  constructor(workloadService, primengConfig, account, nspConfirmService, formBuilder, ns2Http, dateUtilsService, cd, codeService, toastService, exportUtilsService, router) {\n    this.workloadService = workloadService;\n    this.primengConfig = primengConfig;\n    this.account = account;\n    this.nspConfirmService = nspConfirmService;\n    this.formBuilder = formBuilder;\n    this.ns2Http = ns2Http;\n    this.dateUtilsService = dateUtilsService;\n    this.cd = cd;\n    this.codeService = codeService;\n    this.toastService = toastService;\n    this.exportUtilsService = exportUtilsService;\n    this.router = router;\n    this.dataEntryList = [];\n    this.selectedRows = [];\n    this.selectAll = false;\n    this.totalRecords = 0;\n    this.cols = [];\n    this.pageSize = 10;\n    this.eventFirst = 0;\n    // currentPage!: number;\n    this.dateFormat = \"DD-MM-YYYY\";\n    this.selectedUpdatedData = [];\n    this.claimOptionMap = [];\n    this.pageData = {\n      currentPage: 0\n    };\n    this.duplicateNricPlaceHolder = \"0 Duplicates\";\n    this.displayTxferClaimOwnershipDialog = {\n      display: false\n    };\n    this.dataEntryForm = this.formBuilder.group({\n      dataEntryFormArray: this.formBuilder.array([])\n    });\n    this.ownerMap = [];\n  }\n  loadCodes() {\n    this.codeService.gets('claim_option_long').subscribe(codes => {\n      this.claimOptionMap = codes[0];\n    });\n  }\n  constructForm() {\n    this.dataEntryFormArray.clear();\n    this.dataEntryList.forEach(x => {\n      this.dataEntryFormArray.push(this.addRow(x));\n    });\n  }\n  getRow(rowIndex) {\n    return rowIndex % this.pageSize;\n  }\n  addRow(dataEntry) {\n    return this.formBuilder.group({\n      caseId: dataEntry.caseId,\n      claimInboxId: dataEntry.id,\n      claimId: dataEntry.claimId,\n      nric: dataEntry.nric,\n      name: dataEntry.name,\n      start: this.dateUtilsService.convertUnixToDateString(dataEntry.start, this.dateFormat),\n      end: this.dateUtilsService.convertUnixToDateString(dataEntry.end, this.dateFormat),\n      status: dataEntry.status,\n      statusCode: dataEntry.statusCode,\n      claimOpt: new forms_1.FormControl(dataEntry.optionCode),\n      initialClaimOption: dataEntry.optionCode,\n      lastOwner: dataEntry.lastOwner,\n      lastOwnerId: dataEntry.lastOwnerId,\n      lastOwnerLoginId: dataEntry.lastOwnerLoginId,\n      claimInboxOwner: dataEntry.claimInboxOwner,\n      claimType: dataEntry.claimType\n    });\n  }\n  get dataEntryFormArray() {\n    return this.dataEntryForm?.get('dataEntryFormArray');\n  }\n  handleSelection(caseId) {\n    console.log(\"Emit event = \" + caseId);\n  }\n  ngAfterViewInit() {\n    //\n  }\n  ngOnInit() {\n    this.account.identity().subscribe(account => {\n      this.currentAccount = this.copyAccount(account);\n    });\n    console.log(\"the current account\", this.currentAccount);\n    this.loadCodes();\n    this.captionGroup = this.formBuilder.group({\n      selectedDupNric: new forms_1.FormControl()\n    });\n    this.loading = true;\n  }\n  fieldGlobalIndex(index) {\n    return index;\n  }\n  onPage(event) {\n    console.log(\"pageevent\", event);\n    this.eventFirst = event.first;\n    this.pageData.currentPage = event.first / event.rows;\n    this.selectAll = false;\n    this.selectedRows = [];\n  }\n  /**\r\n   * With Lazy load, sorting and filtering needs to be done on server side\r\n   */\n  getDataEntryData(event) {\n    this.lastTableLazyLoadEvent = event;\n    this.loading = true;\n    this.pageSize = event.rows;\n    setTimeout(() => {\n      const options = this.ns2Http.convertLazyEvent(event, this.pageData, this.pageSize);\n      if (this.selectedDupNric) {\n        options.params = options.params.append(\"claimantNRIC\", this.selectedDupNric);\n      }\n      const fa = this.dataEntryForm.get('dataEntryFormArray');\n      this.workloadService.getDataEntryData(options).subscribe(resp => {\n        console.log(\"data is\", resp);\n        if (resp.body.data) {\n          this.dataEntryList = resp.body.data.dtoList;\n          this.totalRecords = resp.body.data.total_no_of_elems;\n          this.constructForm();\n          if (resp.body.data.duplicateNrics) {\n            this.nricWithMoreThanOneClaimOptions = resp.body.data.duplicateNrics;\n          }\n          if (resp.body.data.ownerMap) {\n            this.setOwnerMap(resp.body.data.ownerMap);\n          }\n          this.duplicateNricPlaceHolder = `${this.nricWithMoreThanOneClaimOptions.length} Duplicates`;\n        }\n        this.loading = false;\n      });\n    }, 0);\n    return this.dataEntryList;\n  }\n  navigateHardCopyClaim(dto) {\n    //TODO for pend auth, eventually have to change the routing to enquiry\n    if (dto.claimType === \"S\") {\n      this.router.navigate(['/claim/se-claim/edit-hardcopy-se', dto.claimId]);\n    } else if (dto.claimType === \"E\") {\n      this.router.navigate(['/claim/ec-claim/edit-hardcopy-ec', dto.caseId]);\n    }\n  }\n  setOwnerMap(ownerMap) {\n    this.ownerMap = [];\n    Object.entries(ownerMap).forEach(x => {\n      const rslt = x[1];\n      let displayName = rslt[\"displayName\"];\n      if (this.currentAccount.subjectId === rslt[\"ownerId\"]) {\n        displayName = displayName.concat(\" (Me)\");\n      }\n      this.ownerMap.push({\n        key: x[0],\n        value: displayName\n      });\n    });\n  }\n  onSelectDupNric(event) {\n    this.selectedDupNric = this.captionGroup.get(\"selectedDupNric\")?.value;\n    this.getDataEntryData(this.lastTableLazyLoadEvent);\n  }\n  displayID() {\n    const selectedUpdatedData = this.selectedRows;\n    console.log(\"selected updated is \", selectedUpdatedData);\n    this.selectedRowsId = selectedUpdatedData.map(x =>\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    x.claimInboxId);\n  }\n  onSelectAllChange(event) {\n    const checked = event.checked;\n    if (checked) {\n      this.selectedRows = this.dataEntryFormArray.controls;\n      this.selectAll = true;\n    } else {\n      this.selectedRows = [];\n      this.selectAll = false;\n    }\n  }\n  openDialog(event, type) {\n    console.log(\"btn is\" + type);\n    this.nspConfirmService.onConfirmPopup(event, type, null, () => {\n      switch (type) {\n        case 'confirmAuthIRAS':\n          this.authIRAS(this.selectedRows);\n          break;\n        case 'changeClaimOption':\n          this.changeClaim(this.selectedRows);\n          break;\n      }\n    });\n    console.log(\"pres\");\n  }\n  /**\r\n   *\r\n   * @param selectedRows\r\n   * calls change claim api\r\n   */\n  changeClaim(selectedRows) {\n    console.log(\"change claim\");\n    if (selectedRows) {\n      const reqList = [];\n      selectedRows.forEach(x => {\n        const req = {\n          claimInboxId: x.controls['claimInboxId'].value,\n          caseId: x.controls['caseId'].value,\n          optionCode: x.controls['claimOpt'].value,\n          currOptionCode: x.controls['initialClaimOption'].value\n        };\n        reqList.push(req);\n      });\n      this.workloadService.changeClaim(reqList).subscribe(resp => {\n        if (resp && resp.ok) {\n          if (resp.body.data) {\n            if (resp.body.data.success) {\n              this.toastService.success(resp.body.data.success);\n            }\n            if (resp.body.data.error) {\n              this.toastService.error(resp.body.data.error);\n            }\n            this.resetDataTable();\n          }\n        }\n      }, error => {\n        console.log(\"error is\" + String(error?.error?.error_desc));\n        this.toastService.error(String(error?.error?.error_desc));\n      });\n    }\n  }\n  /**\r\n   *\r\n   * @param selectedRows\r\n   * calls auth iras api\r\n   */\n  authIRAS(selectedRows) {\n    console.log(\"auth irasing\");\n    if (selectedRows) {\n      const reqList = [];\n      selectedRows.forEach(x => {\n        const req = {\n          claimInboxId: x.controls['claimInboxId'].value,\n          caseId: x.controls['caseId'].value,\n          optionCode: x.controls['claimOpt'].value,\n          currOptionCode: x.controls['initialClaimOption'].value\n        };\n        reqList.push(req);\n      });\n      this.workloadService.authIRAS(reqList).subscribe(resp => {\n        if (resp && resp.ok) {\n          if (resp.body.data) {\n            if (resp.body.data.success) {\n              this.toastService.success(resp.body.data.success);\n            }\n            if (resp.body.data.error) {\n              this.toastService.error(resp.body.data.error);\n            }\n            this.resetDataTable();\n          }\n        }\n      }, error => {\n        console.log(\"error is\" + String(error?.error?.error_desc));\n        this.toastService.error(String(error?.error?.error_desc));\n      });\n    }\n  }\n  /**\r\n   *\r\n   * @returns if actual claim inbox owner is null or status = Pend auth, disable\r\n   */\n  enableTxferOSBtn() {\n    let enable = true;\n    if (this.selectedRows.length > 0) {\n      this.selectedRows.forEach(x => {\n        if (x.controls['claimInboxOwner'].value === null || x.controls['claimInboxOwner'].value.trim().length === 0 || x.controls['lastOwnerId'].value !== null && x.controls['lastOwnerId'].value === this.currentAccount.subjectId) {\n          enable = false;\n          return;\n        }\n        // if (x.controls['statusCode'].value === \"PC2\") {\n        //   enable = false;\n        //   return;\n        // }\n      });\n    } else {\n      enable = false;\n    }\n    return enable;\n  }\n  /**\r\n   *\r\n   * @returns call api validate if status has been changed to pend IRAS or pend verify accordingly,\r\n   * after click and successful validation, will be changed to either status accordingly and removed from payroll verifier inboxes.\r\n   */\n  enableAuthIRASSBtn() {\n    const currTime = 3;\n    if (currTime > 3) {\n      return false;\n    }\n    if (this.selectedRows.length > 0) {\n      for (const x of this.selectedRows) {\n        if (x.controls['lastOwnerId'].value !== null && x.controls['lastOwnerId'].value === this.currentAccount.subjectId) {\n          return false;\n        }\n        if (x.controls['claimType'].value !== \"S\") {\n          return false;\n        }\n        if (x.controls['statusCode'].value !== \"PC2\") {\n          return false;\n        }\n        if (x.controls['claimOpt'].value !== \"2\") {\n          return false;\n        }\n      }\n    } else {\n      return false;\n    }\n    return true;\n  }\n  enableChangeClaimBtn() {\n    const currTime = 3;\n    if (currTime > 3) {\n      return false;\n    }\n    if (this.selectedRows.length > 0) {\n      for (const x of this.selectedRows) {\n        if (x.controls['lastOwnerId'].value !== null && x.controls['lastOwnerId'].value === this.currentAccount.subjectId) {\n          return false;\n        }\n        if (x.controls['claimType'].value !== \"S\") {\n          return false;\n        }\n        if (x.controls['statusCode'].value !== \"PC2\") {\n          return false;\n        }\n        if (x.controls['claimOpt'].value === \"2\") {\n          return false;\n        }\n      }\n    } else {\n      return false;\n    }\n    return true;\n  }\n  exportCSV(dataTable) {\n    this.workloadService.getDataEntryData(null).subscribe(resp => {\n      if (resp.body.data) {\n        const columns = [{\n          field: 'caseId',\n          header: 'Case ID',\n          index: 1\n        }, {\n          field: 'nric',\n          header: 'NRIC',\n          index: 1\n        }, {\n          field: 'name',\n          header: 'Name',\n          index: 2\n        }, {\n          field: 'start',\n          header: 'Start',\n          index: 3\n        }, {\n          field: 'end',\n          header: 'End',\n          index: 4\n        }, {\n          field: 'status',\n          header: 'Status',\n          index: 5\n        }, {\n          field: 'claimOpt',\n          header: 'Option',\n          index: 6\n        }, {\n          field: 'lastOwner',\n          header: 'Last Owner',\n          index: 7\n        }];\n        const dtoList = [];\n        resp.body.data.dtoList.forEach(dataEntry => {\n          const dto = {\n            caseId: dataEntry.caseId,\n            nric: dataEntry.nric,\n            name: dataEntry.name,\n            start: this.dateUtilsService.convertUnixToDateString(dataEntry.start, this.dateFormat),\n            end: this.dateUtilsService.convertUnixToDateString(dataEntry.end, this.dateFormat),\n            status: dataEntry.status,\n            claimOpt: this.getCodeDesc(this.claimOptionMap, dataEntry.optionCode),\n            lastOwner: dataEntry.lastOwner\n          };\n          dtoList.push(dto);\n        });\n        this.exportUtilsService.exportCSV(dataTable, dtoList, resp.body.data.total_no_of_elems, columns, \"data_entry_\".concat((0, common_1.formatDate)(new Date(), \"dd-MM-YYYY\", 'en-US')));\n        this.loading = false;\n      }\n    });\n  }\n  getCodeDesc(arr, codeId) {\n    const rslt = arr.find(x => x.codeId === codeId);\n    if (rslt) {\n      return rslt?.label['en-US'];\n    } else return '';\n  }\n  copyAccount(account) {\n    return {\n      email: account.email,\n      firstName: account.firstName,\n      lastName: account.lastName,\n      login: account.username,\n      authorities: account.authorities,\n      groups: account.groups,\n      subjectId: account.subjectId\n    };\n  }\n  onClickTransferOwnership() {\n    this.displayTxferClaimOwnershipDialog.display = true;\n  }\n  onSubmit(event) {\n    console.log(\"pressed transfer\");\n    this.nspConfirmService.onConfirmPopup(event, \"confirmTransferClaims\", this.displayTxferClaimOwnershipDialog, () => {\n      console.log(\"transfering ownership\");\n      if (this.selectedRows) {\n        const request = {\n          // TODO: Shaun to check how to properly do this\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          reqList: [],\n          txferReason: this.claimsTransferComment\n        };\n        this.selectedRows.forEach(x => {\n          const req = {\n            claimInboxId: x.controls['claimInboxId'].value,\n            caseId: x.controls['caseId'].value,\n            lastOwnerId: x.controls['lastOwnerId'].value\n          };\n          request.reqList.push(req);\n        });\n        this.workloadService.transferOwnership(request).subscribe(resp => {\n          if (resp && resp.ok) {\n            if (resp.body.data) {\n              if (resp.body.data.success) {\n                this.toastService.success(resp.body.data.success);\n              }\n              if (resp.body.data.error) {\n                this.toastService.error(resp.body.data.error);\n              }\n              this.resetDataTable();\n            }\n          }\n        }, error => {\n          console.log(\"error is\" + String(error?.error?.error_desc));\n          this.toastService.error(String(error?.error?.error_desc));\n        });\n      }\n    });\n  }\n  changeTo(event, rowIndex) {\n    console.log(\"option index is\", rowIndex);\n    console.log(\"option value is\", event.value);\n  }\n  resetDataTable() {\n    this.selectAll = false;\n    this.selectedRows = [];\n    this.table.filters = {};\n    this.pageData.currentPage = 0;\n    this.pageSize = 10;\n    this.table.reset();\n  }\n}\nexports.DataEntryComponent = DataEntryComponent;\nDataEntryComponent.ɵfac = function DataEntryComponent_Factory(t) {\n  return new (t || DataEntryComponent)(i0.ɵɵdirectiveInject(i1.WorkloadInboxService), i0.ɵɵdirectiveInject(i2.PrimeNGConfig), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i4.NspConfirmationService), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.Ns2HttpService), i0.ɵɵdirectiveInject(i7.DateUtilsService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i8.IcCodeService), i0.ɵɵdirectiveInject(i9.CustomToastService), i0.ɵɵdirectiveInject(i10.ExportUtilsService), i0.ɵɵdirectiveInject(i11.Router));\n};\nDataEntryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DataEntryComponent,\n  selectors: [[\"n2-data-entry\"]],\n  viewQuery: function DataEntryComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.confirmBtn = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n    }\n  },\n  decls: 40,\n  vars: 25,\n  consts: [[3, \"formGroup\"], [\"formArrayName\", \"dataEntryFormArray\"], [\"styleClass\", \"p-datatable-gridlines p-datatable-striped\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"responsiveLayout\", \"scroll\", \"sortField\", \"caseId\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"totalRecords\", \"selection\", \"selectAll\", \"lazy\", \"filterDelay\", \"loading\", \"rowsPerPageOptions\", \"selectionChange\", \"selectAllChange\", \"onLazyLoad\", \"onPage\"], [\"dataTable\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"col-md-12\", \"nsp-align-right\", \"nsp-top-padding\", \"nsp-bottom-padding\"], [\"pButton\", \"\", \"label\", \"press\", 1, \"p-button-raised\", 3, \"click\"], [\"header\", \"Transfer Claim Ownership\", 3, \"visible\", \"breakpoints\", \"draggable\", \"resizable\", \"visibleChange\"], [1, \"form-group\"], [\"pInputTextarea\", \"\", \"type\", \"text\", \"id\", \"claimsTransferComment\", \"rows\", \"8\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"pTemplate\", \"footer\"], [\"key\", \"confirmTransferClaims\", \"header\", \"Confirmation\", \"icon\", \"fa fa-question-circle\", \"width\", \"425\"], [1, \"grid\"], [1, \"col-6\", \"nsp-align-left\"], [\"icon\", \"pi pi-file-o\", 3, \"click\"], [\"formControlName\", \"selectedDupNric\", 3, \"options\", \"placeholder\", \"showClear\", \"onChange\"], [1, \"col-6\", \"nsp-align-right\"], [\"key\", \"confirmAuthIRAS\", \"header\", \"Confirmation\", \"icon\", \"fa fa-question-circle\", \"width\", \"425\"], [\"key\", \"changeClaimOption\", \"header\", \"Confirmation\", \"icon\", \"fa fa-question-circle\", \"width\", \"425\"], [\"id\", \"authBtn\", \"pButton\", \"\", \"label\", \"Authorize IRAS\", 3, \"disabled\", \"click\"], [\"id\", \"changeClaimOption\", \"pButton\", \"\", \"label\", \"Change Claim Option\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"label\", \"Transfer Ownerhip\", 3, \"disabled\", \"click\"], [\"scope\", \"col\", 2, \"width\", \"3%\"], [\"scope\", \"col\"], [\"scope\", \"col\", \"pSortableColumn\", \"caseId\"], [\"field\", \"caseId\"], [\"type\", \"text\", \"field\", \"caseId\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"claimantNRIC\"], [\"field\", \"claimantNRIC\"], [\"type\", \"text\", \"field\", \"claimantNRIC\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"dateTrgStart\"], [\"field\", \"dateTrgStart\"], [\"scope\", \"col\", \"pSortableColumn\", \"dateTrgEnd\"], [\"field\", \"dateTrgEnd\"], [\"scope\", \"col\", \"pSortableColumn\", \"claimStatus\"], [\"field\", \"claimStatus\"], [\"type\", \"text\", \"field\", \"claimStatus\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"claimOpt\"], [\"field\", \"claimOpt\"], [\"scope\", \"col\", \"pSortableColumn\", \"subjectInit\"], [\"field\", \"subjectInit\"], [\"type\", \"text\", \"field\", \"subjectInit\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"pTemplate\", \"filter\"], [\"optionLabel\", \"value\", \"optionValue\", \"key\", \"placeholder\", \"Owner\", 3, \"ngModel\", \"options\", \"onChange\"], [3, \"formGroupName\"], [3, \"value\"], [3, \"routerLink\", \"click\"], [\"appendTo\", \"body\", \"formControlName\", \"claimOpt\", \"optionValue\", \"codeId\", \"optionLabel\", \"label.en-US\", 3, \"options\", \"style\", 4, \"ngIf\", \"ngIfElse\"], [\"noOptions\", \"\"], [\"appendTo\", \"body\", \"formControlName\", \"claimOpt\", \"optionValue\", \"codeId\", \"optionLabel\", \"label.en-US\", 3, \"options\"], [\"dropdown\", \"\"], [\"colspan\", \"8\"], [\"pButton\", \"\", \"label\", \"Cancel\", 1, \"p-button-danger\", 3, \"click\"], [\"pButton\", \"\", \"label\", \"Submit\", 3, \"click\"]],\n  template: function DataEntryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \"\\n\\n\");\n      i0.ɵɵelementStart(1, \"form\", 0);\n      i0.ɵɵtext(2, \"\\n    \");\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵtext(4, \"\\n            \");\n      i0.ɵɵelementStart(5, \"p-table\", 2, 3);\n      i0.ɵɵlistener(\"selectionChange\", function DataEntryComponent_Template_p_table_selectionChange_5_listener($event) {\n        return ctx.selectedRows = $event;\n      })(\"selectAllChange\", function DataEntryComponent_Template_p_table_selectAllChange_5_listener($event) {\n        return ctx.onSelectAllChange($event);\n      })(\"onLazyLoad\", function DataEntryComponent_Template_p_table_onLazyLoad_5_listener($event) {\n        return ctx.getDataEntryData($event);\n      })(\"onPage\", function DataEntryComponent_Template_p_table_onPage_5_listener($event) {\n        return ctx.onPage($event);\n      });\n      i0.ɵɵtext(7, \"\\n                \");\n      i0.ɵɵtemplate(8, DataEntryComponent_ng_template_8_Template, 28, 19, \"ng-template\", 4);\n      i0.ɵɵtext(9, \"\\n                \");\n      i0.ɵɵtemplate(10, DataEntryComponent_ng_template_10_Template, 53, 3, \"ng-template\", 5);\n      i0.ɵɵtext(11, \"\\n            \");\n      i0.ɵɵtemplate(12, DataEntryComponent_ng_template_12_Template, 42, 14, \"ng-template\", 6);\n      i0.ɵɵtext(13, \"\\n            \");\n      i0.ɵɵtemplate(14, DataEntryComponent_ng_template_14_Template, 7, 0, \"ng-template\", 7);\n      i0.ɵɵtext(15, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(17, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \"\\n\\n\\n\\n\\n\\n\\n\");\n      i0.ɵɵtext(19, \"\\n\\n\");\n      i0.ɵɵelementStart(20, \"div\", 8);\n      i0.ɵɵtext(21, \"\\n    \");\n      i0.ɵɵelementStart(22, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function DataEntryComponent_Template_button_click_22_listener() {\n        return ctx.displayID();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \"\\n\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(24, \"\\n\\n\");\n      i0.ɵɵelementStart(25, \"p-dialog\", 10);\n      i0.ɵɵlistener(\"visibleChange\", function DataEntryComponent_Template_p_dialog_visibleChange_25_listener($event) {\n        return ctx.displayTxferClaimOwnershipDialog.display = $event;\n      });\n      i0.ɵɵtext(26, \"\\n    \");\n      i0.ɵɵelementStart(27, \"div\", 11);\n      i0.ɵɵtext(28, \"\\n    \");\n      i0.ɵɵelementStart(29, \"h6\");\n      i0.ɵɵtext(30, \"Claims transferred due to:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(31, \"\\n\\n        \");\n      i0.ɵɵelementStart(32, \"textarea\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function DataEntryComponent_Template_textarea_ngModelChange_32_listener($event) {\n        return ctx.claimsTransferComment = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(33, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \"\\n\\n    \");\n      i0.ɵɵtemplate(35, DataEntryComponent_ng_template_35_Template, 6, 6, \"ng-template\", 13);\n      i0.ɵɵtext(36, \"\\n    \");\n      i0.ɵɵelement(37, \"p-confirmPopup\", 14);\n      i0.ɵɵtext(38, \"\\n\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(39, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.dataEntryForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", ctx.dataEntryFormArray.controls)(\"paginator\", true)(\"rows\", ctx.pageSize)(\"showCurrentPageReport\", true)(\"totalRecords\", ctx.totalRecords)(\"selection\", ctx.selectedRows)(\"selectAll\", ctx.selectAll)(\"lazy\", true)(\"filterDelay\", 0)(\"loading\", ctx.loading)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(21, _c6));\n      i0.ɵɵadvance(17);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(22, _c7));\n      i0.ɵɵadvance(3);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(23, _c8));\n      i0.ɵɵproperty(\"visible\", ctx.displayTxferClaimOwnershipDialog.display)(\"breakpoints\", i0.ɵɵpureFunction0(24, _c9))(\"draggable\", false)(\"resizable\", false);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.claimsTransferComment);\n    }\n  },\n  dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i12.NgIf, i5.FormGroupDirective, i5.FormControlName, i5.FormGroupName, i5.FormArrayName, i2.PrimeTemplate, i13.ButtonDirective, i13.Button, i11.RouterLink, i14.Table, i14.SortableColumn, i14.SortIcon, i14.TableCheckbox, i14.TableHeaderCheckbox, i14.ColumnFilter, i15.Dropdown, i16.Dialog, i17.InputTextarea, i18.ConfirmPopup, i19.DefaultStringPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXRhLWVudHJ5LmNvbXBvbmVudC5zY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvd29ya2xvYWQvcGF5cm9sbC12ZXJpZmllci9kYXRhLWVudHJ5L2RhdGEtZW50cnkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLHdLQUF3SyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","DataEntryComponent","constructor","workloadService","primengConfig","account","nspConfirmService","formBuilder","ns2Http","dateUtilsService","cd","codeService","toastService","exportUtilsService","router","currentPage","display","group","dataEntryFormArray","array","loadCodes","gets","subscribe","codes","claimOptionMap","constructForm","clear","dataEntryList","forEach","x","push","addRow","getRow","rowIndex","pageSize","dataEntry","caseId","claimInboxId","id","claimId","nric","name","start","convertUnixToDateString","dateFormat","end","status","statusCode","claimOpt","forms_1","optionCode","initialClaimOption","lastOwner","lastOwnerId","lastOwnerLoginId","claimInboxOwner","claimType","dataEntryForm","get","handleSelection","console","log","ngAfterViewInit","ngOnInit","identity","currentAccount","copyAccount","captionGroup","selectedDupNric","loading","fieldGlobalIndex","index","onPage","event","eventFirst","first","pageData","rows","selectAll","selectedRows","getDataEntryData","lastTableLazyLoadEvent","setTimeout","options","convertLazyEvent","params","append","fa","resp","body","data","dtoList","totalRecords","total_no_of_elems","duplicateNrics","nricWithMoreThanOneClaimOptions","ownerMap","setOwnerMap","duplicateNricPlaceHolder","length","navigateHardCopyClaim","dto","navigate","Object","entries","rslt","displayName","subjectId","concat","key","value","onSelectDupNric","displayID","selectedUpdatedData","selectedRowsId","map","onSelectAllChange","checked","controls","openDialog","type","onConfirmPopup","authIRAS","changeClaim","reqList","req","currOptionCode","ok","success","error","resetDataTable","String","error_desc","enableTxferOSBtn","enable","trim","enableAuthIRASSBtn","currTime","enableChangeClaimBtn","exportCSV","dataTable","columns","field","header","getCodeDesc","Date","arr","codeId","find","label","email","firstName","lastName","login","username","authorities","groups","onClickTransferOwnership","displayTxferClaimOwnershipDialog","onSubmit","request","txferReason","claimsTransferComment","transferOwnership","changeTo","table","filters","reset","exports","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\workload\\payroll-verifier\\data-entry\\data-entry.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\workload\\payroll-verifier\\data-entry\\data-entry.component.html"],"sourcesContent":["import {AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {AccountService} from 'app/core/auth/account.service';\r\nimport {DateUtilsService} from 'app/core/util/date-utils.service';\r\nimport {CustomToastService} from 'app/layouts/service/customtoast.service';\r\nimport {NspConfirmationService} from 'app/shared/confirm/nsp-confirm.service';\r\nimport {Ns2HttpService} from 'app/shared/service/ns2-http.service';\r\nimport {WorkloadInboxService} from 'app/workload/service/workload-inbox.service';\r\nimport moment from 'moment';\r\nimport {LazyLoadEvent, PrimeNGConfig} from 'primeng/api';\r\nimport {Table, TableService} from 'primeng/table';\r\nimport {DataEntry} from './data-entry.model';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport { formatDate } from \"@angular/common\";\r\nimport {ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport { IcCodeService } from 'app/ng-connect';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'n2-data-entry',\r\n  templateUrl: './data-entry.component.html',\r\n  styleUrls: ['./data-entry.component.scss']\r\n})\r\nexport class DataEntryComponent implements OnInit, AfterViewInit {\r\n\r\n  public dataEntryList: any[] = [];\r\n  public selectedRows: any[] = [];\r\n\r\n  selectedRowsId: any;\r\n  selectAll = false;\r\n  loading!: boolean;\r\n  totalRecords = 0;\r\n  public cols: any [] = [];\r\n  currentAccount: any;\r\n  claimsTransferComment!: string;\r\n  pageSize = 10;\r\n  eventFirst = 0;\r\n  // currentPage!: number;\r\n  dateFormat = \"DD-MM-YYYY\";\r\n  selectedUpdatedData: any[] = [];\r\n  selectedOwner: any;\r\n  claimOptionMap: any[] = [];\r\n\r\n  pageData: { currentPage: number } = {\r\n    currentPage: 0\r\n  }\r\n  captionGroup: FormGroup;\r\n  public selectedDupNric: string;\r\n  lastTableLazyLoadEvent: LazyLoadEvent;\r\n  duplicateNricPlaceHolder = \"0 Duplicates\";\r\n\r\n  public nricWithMoreThanOneClaimOptions!: string[];\r\n\r\n  displayTxferClaimOwnershipDialog: any = {display: false};\r\n\r\n  dataEntryForm: FormGroup  = this.formBuilder.group({\r\n    dataEntryFormArray: this.formBuilder.array([])\r\n  });\r\n\r\n  @ViewChild('confirmBtn')\r\n  confirmBtn!: ElementRef;\r\n\r\n  ownerMap: any[] = [];\r\n\r\n  @ViewChild('dataTable', {static: true})\r\n  private table!: Table;\r\n\r\n  private _dataTable!: Table;\r\n\r\n\r\n  constructor(\r\n    private workloadService: WorkloadInboxService,\r\n    private primengConfig: PrimeNGConfig,\r\n    private account: AccountService,\r\n    private nspConfirmService: NspConfirmationService,\r\n    private formBuilder: FormBuilder,\r\n    private ns2Http: Ns2HttpService,\r\n    public dateUtilsService: DateUtilsService,\r\n    private cd: ChangeDetectorRef,\r\n    private codeService: IcCodeService,\r\n    private toastService: CustomToastService,\r\n    private exportUtilsService: ExportUtilsService,\r\n    private router: Router\r\n\r\n  ) {\r\n\r\n  }\r\n\r\n  loadCodes(): void {\r\n    this.codeService.gets('claim_option_long')\r\n    .subscribe((codes: any[]) => {\r\n      this.claimOptionMap = codes[0];\r\n    });\r\n  }\r\n\r\n  constructForm(): void {\r\n    this.dataEntryFormArray.clear();\r\n    this.dataEntryList.forEach(x=>{\r\n      this.dataEntryFormArray.push(this.addRow(x));\r\n    })\r\n  }\r\n\r\n  getRow(rowIndex: number){\r\n    return rowIndex%this.pageSize;\r\n  }\r\n\r\n  addRow(dataEntry: any) : FormGroup{\r\n    return this.formBuilder.group({\r\n      caseId: dataEntry.caseId,\r\n      claimInboxId: dataEntry.id,\r\n      claimId: dataEntry.claimId,\r\n      nric: dataEntry.nric,\r\n      name: dataEntry.name,\r\n      start: this.dateUtilsService.convertUnixToDateString(dataEntry.start, this.dateFormat),\r\n      end: this.dateUtilsService.convertUnixToDateString(dataEntry.end, this.dateFormat),\r\n      status: dataEntry.status,\r\n      statusCode: dataEntry.statusCode,\r\n      claimOpt: new FormControl(dataEntry.optionCode),\r\n      initialClaimOption: dataEntry.optionCode,\r\n      lastOwner: dataEntry.lastOwner,\r\n      lastOwnerId: dataEntry.lastOwnerId,\r\n      lastOwnerLoginId: dataEntry.lastOwnerLoginId,\r\n      claimInboxOwner: dataEntry.claimInboxOwner,\r\n      claimType: dataEntry.claimType\r\n\r\n    });\r\n  }\r\n\r\n  get dataEntryFormArray(): FormArray {\r\n    return this.dataEntryForm?.get('dataEntryFormArray') as FormArray\r\n  }\r\n\r\n  handleSelection(caseId: string){\r\n    console.log(\"Emit event = \" + caseId);\r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    //\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.account.identity().subscribe((account: any) => {\r\n      this.currentAccount = this.copyAccount(account);\r\n    });\r\n    console.log(\"the current account\", this.currentAccount);\r\n    this.loadCodes();\r\n    this.captionGroup = this.formBuilder.group({\r\n      selectedDupNric: new FormControl()\r\n    })\r\n    this.loading = true;\r\n\r\n  }\r\n\r\n  fieldGlobalIndex(index: number): number {\r\n    return index;\r\n  }\r\n\r\n  onPage(event: any): void {\r\n    console.log(\"pageevent\", event);\r\n    this.eventFirst = event.first;\r\n    this.pageData.currentPage = event.first / event.rows;\r\n    this.selectAll = false;\r\n    this.selectedRows = [];\r\n\r\n  }\r\n\r\n  /**\r\n   * With Lazy load, sorting and filtering needs to be done on server side\r\n   */\r\n  getDataEntryData(event: any): any[] {\r\n    this.lastTableLazyLoadEvent = event;\r\n    this.loading = true;\r\n    this.pageSize = event.rows;\r\n\r\n    setTimeout(() => {\r\n      const options = this.ns2Http.convertLazyEvent(event, this.pageData, this.pageSize);\r\n      if (this.selectedDupNric) {\r\n        options.params = options.params.append(\"claimantNRIC\", this.selectedDupNric);\r\n      }\r\n      const fa = this.dataEntryForm.get('dataEntryFormArray') as FormArray;\r\n      this.workloadService.getDataEntryData(options).subscribe((resp: any) => {\r\n        console.log(\"data is\", resp);\r\n        if (resp.body.data) {\r\n          this.dataEntryList = resp.body.data.dtoList;\r\n          this.totalRecords = resp.body.data.total_no_of_elems;\r\n          this.constructForm();\r\n          if (resp.body.data.duplicateNrics) {\r\n            this.nricWithMoreThanOneClaimOptions = resp.body.data.duplicateNrics;\r\n          }\r\n          if(resp.body.data.ownerMap){\r\n           this.setOwnerMap(resp.body.data.ownerMap);\r\n          }\r\n          this.duplicateNricPlaceHolder = `${this.nricWithMoreThanOneClaimOptions.length} Duplicates`\r\n        }\r\n        this.loading = false;\r\n      });\r\n    }, 0);\r\n    return this.dataEntryList;\r\n  }\r\n\r\n  navigateHardCopyClaim(dto: any): void{\r\n    //TODO for pend auth, eventually have to change the routing to enquiry\r\n    if(dto.claimType===\"S\"){\r\n      this.router.navigate(['/claim/se-claim/edit-hardcopy-se', dto.claimId]);\r\n    }else if(dto.claimType===\"E\"){\r\n      this.router.navigate(['/claim/ec-claim/edit-hardcopy-ec', dto.caseId]);\r\n    }\r\n  }\r\n\r\n  setOwnerMap(ownerMap: any){\r\n    this.ownerMap = [];\r\n    Object.entries(ownerMap).forEach(x=>{\r\n      const rslt:any = x[1];\r\n      let displayName = rslt[\"displayName\"]\r\n      if(this.currentAccount.subjectId === rslt[\"ownerId\"]){\r\n        displayName = displayName.concat(\" (Me)\");\r\n      }\r\n      this.ownerMap.push({\r\n        key: x[0],\r\n        value: displayName\r\n      })\r\n    })\r\n  }\r\n\r\n  onSelectDupNric(event: any): void {\r\n    this.selectedDupNric = this.captionGroup.get(\"selectedDupNric\")?.value;\r\n    this.getDataEntryData(this.lastTableLazyLoadEvent);\r\n  }\r\n\r\n  displayID(): void {\r\n    const selectedUpdatedData: any[] = this.selectedRows;\r\n    console.log(\"selected updated is \", selectedUpdatedData);\r\n    this.selectedRowsId = selectedUpdatedData.map(x =>\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n      x.claimInboxId\r\n    )\r\n  }\r\n\r\n  onSelectAllChange(event: any): void {\r\n    const checked = event.checked;\r\n    if (checked) {\r\n      this.selectedRows = this.dataEntryFormArray.controls;\r\n      this.selectAll = true;\r\n    } else {\r\n      this.selectedRows = [];\r\n      this.selectAll = false;\r\n    }\r\n  }\r\n\r\n  openDialog(event: Event, type: string): void {\r\n    console.log(\"btn is\" + type);\r\n\r\n    this.nspConfirmService.onConfirmPopup(event, type, null,\r\n      () => {\r\n        switch (type) {\r\n          case 'confirmAuthIRAS':\r\n            this.authIRAS(this.selectedRows);\r\n            break;\r\n          case 'changeClaimOption':\r\n            this.changeClaim(this.selectedRows);\r\n            break;\r\n        }\r\n      }\r\n    );\r\n    console.log(\"pres\")\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param selectedRows\r\n   * calls change claim api\r\n   */\r\n  changeClaim(selectedRows: any[]): void {\r\n    console.log(\"change claim\");\r\n    if (selectedRows) {\r\n      const reqList: any[] = [];\r\n      selectedRows.forEach(x => {\r\n        const req = {\r\n          claimInboxId: x.controls['claimInboxId'].value,\r\n          caseId: x.controls['caseId'].value,\r\n          optionCode: x.controls['claimOpt'].value,\r\n          currOptionCode: x.controls['initialClaimOption'].value\r\n        }\r\n        reqList.push(req);\r\n      })\r\n      this.workloadService.changeClaim(reqList).subscribe((resp: any) => {\r\n        if (resp && resp.ok) {\r\n          if (resp.body.data) {\r\n            if(resp.body.data.success){\r\n              this.toastService.success(resp.body.data.success);\r\n            }\r\n            if(resp.body.data.error){\r\n              this.toastService.error(resp.body.data.error);\r\n            }\r\n            this.resetDataTable();\r\n          }\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(\"error is\" + String(error?.error?.error_desc));\r\n        this.toastService.error(String(error?.error?.error_desc));\r\n      }\r\n    );}\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param selectedRows\r\n   * calls auth iras api\r\n   */\r\n  authIRAS(selectedRows: any): void {\r\n    console.log(\"auth irasing\");\r\n    if (selectedRows) {\r\n      const reqList: any[] = [];\r\n      selectedRows.forEach((x: any) => {\r\n        const req = {\r\n          claimInboxId: x.controls['claimInboxId'].value,\r\n          caseId: x.controls['caseId'].value,\r\n          optionCode: x.controls['claimOpt'].value,\r\n          currOptionCode: x.controls['initialClaimOption'].value\r\n\r\n        }\r\n        reqList.push(req);\r\n      })\r\n      this.workloadService.authIRAS(reqList).subscribe((resp: any) => {\r\n        if (resp && resp.ok) {\r\n          if (resp.body.data) {\r\n            if(resp.body.data.success){\r\n              this.toastService.success(resp.body.data.success);\r\n            }\r\n            if(resp.body.data.error){\r\n              this.toastService.error(resp.body.data.error);\r\n            }\r\n            this.resetDataTable();\r\n          }\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(\"error is\" + String(error?.error?.error_desc));\r\n        this.toastService.error(String(error?.error?.error_desc));\r\n      }\r\n    );}\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns if actual claim inbox owner is null or status = Pend auth, disable\r\n   */\r\n  enableTxferOSBtn(): boolean {\r\n    let enable = true;\r\n    if (this.selectedRows.length > 0) {\r\n      this.selectedRows.forEach(x => {\r\n        if (x.controls['claimInboxOwner'].value === null || x.controls['claimInboxOwner'].value.trim().length === 0 ||\r\n          (x.controls['lastOwnerId'].value !== null && x.controls['lastOwnerId'].value === this.currentAccount.subjectId)) {\r\n          enable = false;\r\n          return;\r\n        }\r\n        // if (x.controls['statusCode'].value === \"PC2\") {\r\n        //   enable = false;\r\n        //   return;\r\n        // }\r\n      });\r\n    } else {\r\n      enable = false;\r\n    }\r\n    return enable;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns call api validate if status has been changed to pend IRAS or pend verify accordingly,\r\n   * after click and successful validation, will be changed to either status accordingly and removed from payroll verifier inboxes.\r\n   */\r\n  enableAuthIRASSBtn(): boolean {\r\n    const currTime = 3;\r\n    if (currTime > 3) {\r\n      return false;\r\n    }\r\n    if (this.selectedRows.length > 0) {\r\n      for (const x of this.selectedRows) {\r\n        if (x.controls['lastOwnerId'].value !== null && x.controls['lastOwnerId'].value === this.currentAccount.subjectId) {\r\n          return false;\r\n        }\r\n        if (x.controls['claimType'].value !== \"S\") {\r\n          return false;\r\n        }\r\n        if (x.controls['statusCode'].value !== \"PC2\") {\r\n          return false;\r\n        }\r\n        if (x.controls['claimOpt'].value !== \"2\") {\r\n          return false;\r\n        }\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  enableChangeClaimBtn(): boolean {\r\n    const currTime = 3;\r\n    if (currTime > 3) {\r\n      return false;\r\n    }\r\n    if (this.selectedRows.length > 0) {\r\n      for (const x of this.selectedRows) {\r\n        if (x.controls['lastOwnerId'].value !== null && x.controls['lastOwnerId'].value === this.currentAccount.subjectId) {\r\n          return false;\r\n        }\r\n        if (x.controls['claimType'].value !== \"S\") {\r\n          return false;\r\n        }\r\n        if (x.controls['statusCode'].value !== \"PC2\") {\r\n          return false;\r\n        }\r\n        if (x.controls['claimOpt'].value === \"2\") {\r\n          return false;\r\n        }\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  exportCSV(dataTable: Table): void{\r\n    this.workloadService.getDataEntryData(null).subscribe((resp: any) => {\r\n      if (resp.body.data) {\r\n        const columns =\r\n          [\r\n            {field: 'caseId', header: 'Case ID', index: 1},\r\n            {field: 'nric', header: 'NRIC', index: 1},\r\n            {field: 'name', header: 'Name', index: 2},\r\n            {field: 'start', header: 'Start', index: 3},\r\n            {field: 'end', header: 'End', index: 4},\r\n            {field: 'status', header: 'Status', index: 5},\r\n            {field: 'claimOpt', header: 'Option', index: 6},\r\n            {field: 'lastOwner', header: 'Last Owner', index: 7}\r\n\r\n          ];\r\n        const dtoList:any[] = [];\r\n        resp.body.data.dtoList.forEach((dataEntry:any)=>{\r\n          const dto = {\r\n            caseId: dataEntry.caseId,\r\n            nric: dataEntry.nric,\r\n            name: dataEntry.name,\r\n            start: this.dateUtilsService.convertUnixToDateString(dataEntry.start, this.dateFormat),\r\n            end: this.dateUtilsService.convertUnixToDateString(dataEntry.end, this.dateFormat),\r\n            status: dataEntry.status,\r\n            claimOpt: this.getCodeDesc(this.claimOptionMap,dataEntry.optionCode),\r\n            lastOwner: dataEntry.lastOwner\r\n          }\r\n          dtoList.push(dto);\r\n\r\n        })\r\n        this.exportUtilsService.exportCSV(dataTable, dtoList,resp.body.data.total_no_of_elems, columns,\r\n          \"data_entry_\".concat(formatDate(new Date(),\"dd-MM-YYYY\", 'en-US')));\r\n      this.loading = false;\r\n    }});\r\n\r\n  }\r\n\r\n  getCodeDesc(arr: any[], codeId: string): string{\r\n    const rslt = arr.find(x=>\r\n      x.codeId === codeId\r\n    );\r\n    if(rslt) {\r\n      return rslt?.label['en-US'] as string;\r\n    }else return '';\r\n  }\r\n\r\n  copyAccount(account: any): any {\r\n    return {\r\n      email: account.email,\r\n      firstName: account.firstName,\r\n      lastName: account.lastName,\r\n      login: account.username,\r\n      authorities: account.authorities,\r\n      groups: account.groups,\r\n      subjectId: account.subjectId\r\n    };\r\n  }\r\n\r\n  onClickTransferOwnership(): void {\r\n    this.displayTxferClaimOwnershipDialog.display = true;\r\n  }\r\n\r\n  onSubmit(event: Event): void {\r\n    console.log(\"pressed transfer\");\r\n    this.nspConfirmService.onConfirmPopup(event, \"confirmTransferClaims\", this.displayTxferClaimOwnershipDialog,\r\n      () => {\r\n        console.log(\"transfering ownership\");\r\n        if (this.selectedRows) {\r\n          const request = {\r\n            // TODO: Shaun to check how to properly do this\r\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n            // @ts-ignore\r\n            reqList: [],\r\n            txferReason: this.claimsTransferComment\r\n          }\r\n          this.selectedRows.forEach(x => {\r\n            const req = {\r\n              claimInboxId: x.controls['claimInboxId'].value,\r\n              caseId: x.controls['caseId'].value,\r\n              lastOwnerId: x.controls['lastOwnerId'].value\r\n            }\r\n            request.reqList.push(req);\r\n          })\r\n          this.workloadService.transferOwnership(request).subscribe((resp: any) => {\r\n            if (resp && resp.ok) {\r\n              if (resp.body.data) {\r\n                if(resp.body.data.success){\r\n                  this.toastService.success(resp.body.data.success);\r\n                }\r\n                if(resp.body.data.error){\r\n                  this.toastService.error(resp.body.data.error);\r\n                }\r\n                this.resetDataTable();\r\n              }\r\n            }\r\n          },\r\n          (error: any) => {\r\n            console.log(\"error is\" + String(error?.error?.error_desc));\r\n            this.toastService.error(String(error?.error?.error_desc));\r\n          }\r\n        );}\r\n      })\r\n\r\n  }\r\n\r\n  changeTo(event: any, rowIndex: number): void {\r\n    console.log(\"option index is\", rowIndex);\r\n    console.log(\"option value is\", event.value);\r\n  }\r\n\r\n  resetDataTable(): void {\r\n    this.selectAll = false;\r\n    this.selectedRows = [];\r\n    this.table.filters = {};\r\n    this.pageData.currentPage = 0;\r\n    this.pageSize = 10;\r\n    this.table.reset();\r\n  }\r\n\r\n\r\n}\r\n","\r\n\r\n<form [formGroup]=\"dataEntryForm\">\r\n    <div formArrayName=\"dataEntryFormArray\">\r\n            <p-table [value]=\"dataEntryFormArray.controls\"\r\n                    [paginator]=\"true\"\r\n                    [rows]=\"pageSize\"\r\n                    [showCurrentPageReport]=\"true\"\r\n                    [totalRecords] = \"totalRecords\"\r\n                    [(selection)] = \"selectedRows\"\r\n                    [selectAll]=\"selectAll\"\r\n                    (selectAllChange)=\"onSelectAllChange($event)\"\r\n                    [lazy] = \"true\"\r\n                    (onLazyLoad)=\"getDataEntryData($event)\"\r\n                    [filterDelay]=\"0\"\r\n                    [loading] = \"loading\"\r\n                    styleClass=\"p-datatable-gridlines p-datatable-striped\"\r\n                    [rowsPerPageOptions]=\"[10,15,20]\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    responsiveLayout=\"scroll\"\r\n                    (onPage) = \"onPage($event)\"\r\n                    sortField=\"caseId\"\r\n                    #dataTable\r\n                    >\r\n                <ng-template pTemplate=\"caption\">\r\n                    <form [formGroup] = \"captionGroup\">\r\n                        <div class=\"grid\">\r\n                            <div class = \"col-6 nsp-align-left\">\r\n                                <p-button icon=\"pi pi-file-o\" [style]=\"{'margin-left': '.5em', 'margin-right': '.5em'}\" (click) = \"exportCSV(dataTable)\"></p-button>\r\n\r\n                                <p-dropdown [options]=\"nricWithMoreThanOneClaimOptions\" formControlName=\"selectedDupNric\" [placeholder]=\"duplicateNricPlaceHolder\" [showClear]=\"true\"\r\n                                (onChange)=\"onSelectDupNric($event)\"\r\n                                ></p-dropdown>\r\n\r\n                            </div>\r\n                            <div class = \"col-6 nsp-align-right\">\r\n                                <p-confirmPopup key = \"confirmAuthIRAS\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n                                <p-confirmPopup key = \"changeClaimOption\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n\r\n                                <button id = \"authBtn\" pButton label=\"Authorize IRAS\"  [disabled] = \"!enableAuthIRASSBtn()\" (click) = \"openDialog($event, 'confirmAuthIRAS')\" [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\">\r\n                                </button>\r\n                                <button id = \"changeClaimOption\" [disabled] = !enableChangeClaimBtn() pButton label=\"Change Claim Option\"  (click) = \"openDialog($event, 'changeClaimOption')\" [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\"></button>\r\n                                <button pButton label=\"Transfer Ownerhip\"  [disabled] = !enableTxferOSBtn() (click)=\"onClickTransferOwnership()\" [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\"></button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                </ng-template>\r\n                <ng-template pTemplate=\"header\" let-columns>\r\n                    <tr>\r\n                        <th scope=\"col\" style=\"width:3%\"><p-tableHeaderCheckbox></p-tableHeaderCheckbox></th>\r\n\r\n                        <th scope=\"col\">SN</th>\r\n                        <th scope=\"col\" pSortableColumn = \"caseId\">Case ID<p-sortIcon field=\"caseId\"></p-sortIcon>\r\n                            <p-columnFilter type=\"text\" field=\"caseId\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                        </th>\r\n                        <th scope=\"col\" pSortableColumn =\"claimantNRIC\">Name<p-sortIcon field=\"claimantNRIC\"></p-sortIcon>\r\n                            <p-columnFilter type=\"text\" field=\"claimantNRIC\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                        </th>\r\n                        <th scope=\"col\" pSortableColumn =\"dateTrgStart\">Start<p-sortIcon field=\"dateTrgStart\"></p-sortIcon></th>\r\n                        <th scope=\"col\" pSortableColumn =\"dateTrgEnd\">End<p-sortIcon field=\"dateTrgEnd\"></p-sortIcon></th>\r\n                        <th scope=\"col\" pSortableColumn =\"claimStatus\">Status<p-sortIcon field=\"claimStatus\"></p-sortIcon>\r\n                            <p-columnFilter type=\"text\" field=\"claimStatus\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                        </th>\r\n                        <th scope=\"col\" pSortableColumn =\"claimOpt\" [style]=\"{'width':'13%'}\">Option<p-sortIcon field=\"claimOpt\"></p-sortIcon></th>\r\n                        <th scope=\"col\" pSortableColumn =\"subjectInit\">Last Owner<p-sortIcon field=\"subjectInit\"></p-sortIcon>\r\n                            <p-columnFilter type=\"text\" field=\"subjectInit\" display=\"menu\" matchMode=\"contains\">\r\n                                <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                                    <p-dropdown [ngModel]=\"selectedOwner\" [options]=\"ownerMap\" (onChange)=\"filter($event.value)\"\r\n                                    optionLabel=\"value\" optionValue=\"key\" placeholder=\"Owner\"></p-dropdown>\r\n                                </ng-template>\r\n                            </p-columnFilter>\r\n                        </th>\r\n\r\n                    </tr>\r\n                </ng-template>\r\n            <ng-template pTemplate=\"body\" let-dataEntry let-rowIndex = \"rowIndex\" let-columns=\"columns\">\r\n\r\n                <tr  [formGroupName]=\"getRow(rowIndex)\">\r\n                    <td><p-tableCheckbox [value]=\"dataEntry\"></p-tableCheckbox></td>\r\n                    <td>{{ rowIndex + 1}}</td>\r\n                    <!-- <td>{{ dataEntry.value.caseId }}</td> -->\r\n                    <td><a [routerLink]=\"\" (click)=\"navigateHardCopyClaim(dataEntry.value)\">{{ dataEntry.value.caseId }}</a></td>\r\n                    <td>{{ dataEntry.value.nric }} <br/> {{ dataEntry.value.name }}</td>\r\n                    <td>{{ dataEntry.value.start }}</td>\r\n                    <td>{{ dataEntry.value.end }}</td>\r\n                    <td>{{ dataEntry.value.status}}</td>\r\n                    <td>\r\n                        <p-dropdown *ngIf=\"dataEntry.value.claimType==='SE' else noOptions\"\r\n                        appendTo=\"body\"\r\n                        formControlName = \"claimOpt\" [options]=\"claimOptionMap\"  optionValue=\"codeId\"\r\n                        optionLabel=\"label.en-US\" [style] = \"{'width': '100%'}\"\r\n                        #dropdown>\r\n\r\n                        </p-dropdown>\r\n                        <ng-template #noOptions>\r\n                            -\r\n                        </ng-template>\r\n                        <!-- {{ dataEntry.value.claimOption}} -->\r\n\r\n                    </td>\r\n                    <td>{{ dataEntry.value.lastOwner | defaultString }}</td>\r\n\r\n                </tr>\r\n\r\n\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td colspan=\"8\">No records found.</td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- <div class = \"col-md-6\">\r\n    <p>R is {{selectedRowsId}}</p>\r\n</div> -->\r\n\r\n<div class=\"col-md-12 nsp-align-right nsp-top-padding nsp-bottom-padding\">\r\n    <button pButton class =\"p-button-raised\" label=\"press\"  [style]=\"{'margin-left': '.5em'}\"\r\n    (click) = \"displayID()\"></button>\r\n\r\n</div>\r\n\r\n<p-dialog header=\"Transfer Claim Ownership\" [(visible)]=\"displayTxferClaimOwnershipDialog.display\" [breakpoints]=\"{'960px': '75vw'}\" [style]=\"{width: '50vw'}\"\r\n\r\n    [draggable]=\"false\" [resizable]=\"false\">\r\n    <div class=\"form-group\">\r\n    <h6>Claims transferred due to:</h6>\r\n\r\n        <textarea pInputTextarea  [(ngModel)]=\"claimsTransferComment\" type=\"text\" id=\"claimsTransferComment\" rows=\"8\" class = \"form-control\"></textarea>\r\n    </div>\r\n\r\n    <ng-template pTemplate=\"footer\">\r\n            <button pButton class =\"p-button-danger\" label=\"Cancel\"  (click)=\"displayTxferClaimOwnershipDialog.display=false\" [style]=\"{'margin-left': '.5em' , 'margin-bottom': '.5em'}\">\r\n\r\n            </button>\r\n        <button pButton  label=\"Submit\"  (click)=\"onSubmit($event)\" [style]=\"{'margin-left': '.5em' , 'margin-bottom': '.5em'}\"\r\n        ></button>\r\n\r\n    </ng-template>\r\n    <p-confirmPopup key = \"confirmTransferClaims\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n\r\n</p-dialog>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}