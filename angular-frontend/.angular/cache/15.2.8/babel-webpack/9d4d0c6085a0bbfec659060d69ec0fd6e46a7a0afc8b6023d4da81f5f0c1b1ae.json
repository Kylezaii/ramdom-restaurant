{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.viewPayrollService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nconst i2 = tslib_1.__importStar(require(\"@angular/common/http\"));\nconst i3 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nclass viewPayrollService {\n  constructor(applicationConfigService, http, ns2Http) {\n    this.applicationConfigService = applicationConfigService;\n    this.http = http;\n    this.ns2Http = ns2Http;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('/api/payroll/payroll');\n    this.infoResourceUrl = this.applicationConfigService.getEndpointFor('api/common/nsman');\n  }\n  getRequests(options) {\n    const url = \"assets/mock/payroll/payroll-award-data.json\";\n    return this.http.get(url, {\n      observe: 'response'\n    });\n  }\n  searchByNRIC(nric) {\n    const url = \"assets/mock/payroll/payroll-award-data.json\";\n    return this.http.get(url, {\n      observe: 'response'\n    });\n  }\n  getPayrollDetailByNRIC(nric, options) {\n    const url = `${this.resourceUrl}/search/${nric}`;\n    return this.ns2Http.get(url, options);\n  }\n  getNsmenInformationByNRIC(nric) {\n    const url = `${this.infoResourceUrl}/${nric}`;\n    return this.ns2Http.get(url);\n  }\n}\nexports.viewPayrollService = viewPayrollService;\nviewPayrollService.ɵfac = function viewPayrollService_Factory(t) {\n  return new (t || viewPayrollService)(i0.ɵɵinject(i1.ApplicationConfigService), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i3.Ns2HttpService));\n};\nviewPayrollService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: viewPayrollService,\n  factory: viewPayrollService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;;;;;AAUA,MACaA,kBAAkB;EAG3BC,YACYC,wBAAkD,EAChDC,IAAe,EACjBC,OAAuB;IAFvB,6BAAwB,GAAxBF,wBAAwB;IACtB,SAAI,GAAJC,IAAI;IACN,YAAO,GAAPC,OAAO;IALZ,gBAAW,GAAG,IAAI,CAACF,wBAAwB,CAACG,cAAc,CAAC,sBAAsB,CAAC;IAClF,oBAAe,GAAG,IAAI,CAACH,wBAAwB,CAACG,cAAc,CAAC,kBAAkB,CAAC;EAMrF;EAEJC,WAAW,CAACC,OAAc;IACtB,MAAMC,GAAG,GAAG,6CAA6C;IACzD,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAmBD,GAAG,EAAE;MAAEE,OAAO,EAAE;IAAU,CAAE,CAAC;EACxE;EAEAC,YAAY,CAACC,IAAY;IACrB,MAAMJ,GAAG,GAAG,6CAA6C;IACzD,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAmBD,GAAG,EAAE;MAAEE,OAAO,EAAE;IAAU,CAAE,CAAC;EACxE;EAEOG,sBAAsB,CAACD,IAAY,EAACL,OAAa;IACpD,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACM,WAAW,WAAWF,IAAI,EAAE;IAChD,OAAO,IAAI,CAACR,OAAO,CAACK,GAAG,CAACD,GAAG,EAACD,OAAO,CAAC;EACxC;EAEOQ,yBAAyB,CAACH,IAAW;IACxC,MAAMJ,GAAG,GAAG,GAAG,IAAI,CAACQ,eAAe,IAAIJ,IAAI,EAAE;IAC7C,OAAO,IAAI,CAACR,OAAO,CAACK,GAAG,CAACD,GAAG,CAAC;EAChC;;AA7BJS;;mBACajB,kBAAkB;AAAA;;SAAlBA,kBAAkB;EAAAkB,SAAlBlB,kBAAkB;EAAAmB,YADL;AAAM","names":["viewPayrollService","constructor","applicationConfigService","http","ns2Http","getEndpointFor","getRequests","options","url","get","observe","searchByNRIC","nric","getPayrollDetailByNRIC","resourceUrl","getNsmenInformationByNRIC","infoResourceUrl","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payroll\\payroll\\service\\view-payroll.service.ts"],"sourcesContent":["import { IPayrollRecord,INsmenRecord } from \"../model/view-payroll.model\";\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\n\r\nexport type EntityResponseType = HttpResponse<IPayrollRecord>;\r\nexport type EntityArrayResponseType = HttpResponse<IPayrollRecord[]>;\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class viewPayrollService{\r\n    public resourceUrl = this.applicationConfigService.getEndpointFor('/api/payroll/payroll');\r\n    public infoResourceUrl = this.applicationConfigService.getEndpointFor('api/common/nsman');\r\n    constructor(\r\n        private applicationConfigService: ApplicationConfigService,\r\n        protected http:HttpClient,\r\n        private ns2Http: Ns2HttpService,\r\n        ){\r\n        }\r\n\r\n    getRequests(options? : any): Observable<any> {\r\n        const url = \"assets/mock/payroll/payroll-award-data.json\";\r\n        return this.http.get<IPayrollRecord[]>(url, { observe: 'response' });\r\n    }\r\n\r\n    searchByNRIC(nric: string): Observable<EntityArrayResponseType> {\r\n        const url = \"assets/mock/payroll/payroll-award-data.json\";\r\n        return this.http.get<IPayrollRecord[]>(url, { observe: 'response' });\r\n    }\r\n\r\n    public getPayrollDetailByNRIC(nric: string,options?: any): Observable<any>{\r\n        const url = `${this.resourceUrl}/search/${nric}`;\r\n        return this.ns2Http.get(url,options);\r\n    }\r\n\r\n    public getNsmenInformationByNRIC(nric:string):Observable<any>{\r\n        const url = `${this.infoResourceUrl}/${nric}`;\r\n        return this.ns2Http.get(url);\r\n    }\r\n\r\n    // public getPayrollDetailByNRICDate(nric: string,from?: string,to?: string,options?: any): Observable<any>{\r\n    //     const url = `${this.resourceUrl}/search/${nric}&from=${from}&to=${to}`;\r\n    //     return this.ns2Http.get(url,options);\r\n    // }\r\n\r\n}"]},"metadata":{},"sourceType":"script","externalDependencies":[]}