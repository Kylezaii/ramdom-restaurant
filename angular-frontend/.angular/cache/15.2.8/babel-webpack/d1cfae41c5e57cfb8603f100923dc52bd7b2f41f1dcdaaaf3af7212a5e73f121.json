{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MassUploadComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@angular/common\");\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst fileupload2_directive_1 = require(\"app/shared/validator/fileupload2.directive\");\nconst mass_upload_enum_model_1 = require(\"./model/mass-upload-enum.model\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i2 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/shared/confirm/nsp-confirm.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i5 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i6 = tslib_1.__importStar(require(\"./service/mass-upload.service\"));\nconst i7 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i8 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i9 = tslib_1.__importStar(require(\"app/shared/service/file-upload.service\"));\nconst i10 = tslib_1.__importStar(require(\"app/ng-connect\"));\nconst i11 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/tooltip\"));\nconst i15 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i16 = tslib_1.__importStar(require(\"primeng/dropdown\"));\nconst i17 = tslib_1.__importStar(require(\"primeng/dialog\"));\nconst i18 = tslib_1.__importStar(require(\"primeng/confirmpopup\"));\nconst i19 = tslib_1.__importStar(require(\"../../shared/component/file-upload/file-upload.component\"));\nconst i20 = tslib_1.__importStar(require(\"primeng/panel\"));\nconst _c0 = [\"massUploadTable\"];\nconst _c1 = [\"massUploadFile\"];\nconst _c2 = [\"massUploadSupportingDocuments\"];\nfunction MassUploadComponent_ng_template_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n    \");\n    i0.ɵɵelementStart(1, \"div\", 25);\n    i0.ɵɵtext(2, \"\\n      \");\n    i0.ɵɵelementStart(3, \"div\", 26);\n    i0.ɵɵtext(4, \"\\n        \");\n    i0.ɵɵelementStart(5, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function MassUploadComponent_ng_template_31_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(29);\n      return i0.ɵɵresetView(ctx_r7.exportCSV(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n      \");\n    i0.ɵɵelementStart(8, \"div\", 28);\n    i0.ɵɵtext(9, \"\\n        \");\n    i0.ɵɵelementStart(10, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function MassUploadComponent_ng_template_31_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onUploadFile(ctx_r9.uploadFileDialog));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n  \");\n  }\n}\nfunction MassUploadComponent_ng_template_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n    \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n      \");\n    i0.ɵɵelementStart(3, \"th\", 30);\n    i0.ɵɵtext(4, \"S/N\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n      \");\n    i0.ɵɵelementStart(6, \"th\", 31);\n    i0.ɵɵtext(7, \"Transaction ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n      \");\n    i0.ɵɵelementStart(9, \"th\", 31);\n    i0.ɵɵtext(10, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n      \");\n    i0.ɵɵelementStart(12, \"th\", 31);\n    i0.ɵɵtext(13, \"Filename\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n      \");\n    i0.ɵɵelementStart(15, \"th\", 31);\n    i0.ɵɵtext(16, \"No. Of Records\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n      \");\n    i0.ɵɵelementStart(18, \"th\", 31);\n    i0.ɵɵtext(19, \"Uploaded By\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n      \");\n    i0.ɵɵelementStart(21, \"th\", 31);\n    i0.ɵɵtext(22, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \"\\n  \");\n  }\n}\nfunction MassUploadComponent_ng_template_35_span_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const record_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r12.massUploadStatusEnum[record_r10.status]);\n  }\n}\nfunction MassUploadComponent_ng_template_35_span_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\n          \");\n    i0.ɵɵelementStart(2, \"a\", 33);\n    i0.ɵɵlistener(\"click\", function MassUploadComponent_ng_template_35_span_36_Template_a_click_2_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const record_r10 = i0.ɵɵnextContext().$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.downloadFile(record_r10.uploadedFileId, record_r10.fileName));\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const record_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n            \", ctx_r13.massUploadStatusEnum[record_r10.status], \"\\n          \");\n  }\n}\nfunction MassUploadComponent_ng_template_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n    \");\n    i0.ɵɵelementStart(1, \"tr\", 32);\n    i0.ɵɵtext(2, \"\\n      \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n      \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n      \");\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n      \");\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13, \"\\n        \");\n    i0.ɵɵelementStart(14, \"a\", 33);\n    i0.ɵɵlistener(\"click\", function MassUploadComponent_ng_template_35_Template_a_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const record_r10 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.downloadFile(record_r10.uploadedFileId, record_r10.fileName));\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n      \");\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n      \");\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22, \"\\n        \");\n    i0.ɵɵelementStart(23, \"span\");\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(25, \"br\");\n    i0.ɵɵtext(26, \"\\n        \");\n    i0.ɵɵelementStart(27, \"span\");\n    i0.ɵɵtext(28);\n    i0.ɵɵpipe(29, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n      \");\n    i0.ɵɵelementStart(32, \"td\");\n    i0.ɵɵtext(33, \"\\n        \");\n    i0.ɵɵtemplate(34, MassUploadComponent_ng_template_35_span_34_Template, 2, 1, \"span\", 34);\n    i0.ɵɵtext(35, \"\\n        \");\n    i0.ɵɵtemplate(36, MassUploadComponent_ng_template_35_span_36_Template, 5, 1, \"span\", 34);\n    i0.ɵɵtext(37, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(38, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(39, \"\\n  \");\n  }\n  if (rf & 2) {\n    const record_r10 = ctx.$implicit;\n    const i_r11 = ctx.rowIndex;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pSelectableRow\", record_r10);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i_r11 + 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(record_r10.allowanceFileId);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.massUploadTypeEnum[record_r10.type]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(record_r10.fileName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(record_r10.count);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(record_r10.uploadedBy);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(29, 10, record_r10.uploadedDt, \"dd-MM-YYYY\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", record_r10.status != \"PENDING_APPROVAL_CONFLICT\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", record_r10.status == \"PENDING_APPROVAL_CONFLICT\");\n  }\n}\nfunction MassUploadComponent_ng_template_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n    \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n      \");\n    i0.ɵɵelementStart(3, \"td\", 35);\n    i0.ɵɵtext(4, \"No Mass Upload records found.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n  \");\n  }\n}\nconst _c3 = function () {\n  return [10, 25, 50];\n};\nconst _c4 = function () {\n  return {\n    width: \"35vw\"\n  };\n};\nconst _c5 = function () {\n  return {\n    \"960px\": \"75vw\"\n  };\n};\nclass MassUploadComponent {\n  constructor(fb, toastService, nspConfirmService, ns2httpService, route, router, massUploadService, dateUtilsService, exportUtilsService, fileUploadService, codeService, localeId) {\n    this.fb = fb;\n    this.toastService = toastService;\n    this.nspConfirmService = nspConfirmService;\n    this.ns2httpService = ns2httpService;\n    this.route = route;\n    this.router = router;\n    this.massUploadService = massUploadService;\n    this.dateUtilsService = dateUtilsService;\n    this.exportUtilsService = exportUtilsService;\n    this.fileUploadService = fileUploadService;\n    this.codeService = codeService;\n    this.localeId = localeId;\n    this.uploadFileDialog = {\n      display: false\n    };\n    this.typeOptions = [];\n    this.statusOptions = [];\n    this.massUploadRecords = [];\n    this.searchMassUploadForm = this.fb.group({\n      selectedType: new forms_1.FormControl(null),\n      selectedStatus: new forms_1.FormControl(null)\n    });\n    this.uploadFileForm = this.fb.group({\n      typeInput: new forms_1.FormControl(null, forms_1.Validators.required),\n      uploadedFile: new forms_1.FormControl([], [fileupload2_directive_1.FileUploadValidator2.maxFileLimit(1), fileupload2_directive_1.FileUploadValidator2.allowableExtension(\".csv\")]),\n      supportingDocuments: new forms_1.FormControl([], fileupload2_directive_1.FileUploadValidator2.allowableExtension(\".pdf\"))\n    });\n    this.fileUploadFileLimit = 1;\n    this.pageData = {\n      currentPage: 0\n    };\n    this.pageSize = 10;\n    this.massUploadStatusEnum = mass_upload_enum_model_1.MassUploadStatus;\n    this.massUploadTypeEnum = mass_upload_enum_model_1.MassUploadType;\n    //\n  }\n\n  ngOnInit() {\n    //\n    this.loadCodes();\n  }\n  loadMassUploadRecords(event) {\n    this.loading = true;\n    this.lazyLoadEvent = event;\n    setTimeout(() => {\n      const options = this.ns2httpService.convertLazyEvent(event, this.pageData, this.pageSize);\n      // service for lazy loading records\n      this.massUploadService.getAllMassUploadRecords(options).subscribe(res => {\n        console.log(res);\n        if (res.body?.data?.content) {\n          this.massUploadRecords = res.body.data.content;\n          this.totalRecords = res.body.data.totalElements;\n        } else {\n          this.massUploadRecords = [];\n          this.totalRecords = 0;\n        }\n        this.loading = false;\n      }, error => {\n        console.log(error);\n      });\n    }, 1000);\n    this.loadCodes();\n  }\n  loadCodes() {\n    // Mass upload types & status for dropdown\n    // Using Code Service\n    // this.codeService.gets('PRL_MASSUPLOAD_TYPE,PRL_MASSUPLOAD_STATUS').subscribe((codes: any[]) => {\n    //   console.log(codes[0]);\n    //   this.typeOptions = codes[0];\n    //   this.statusOptions = codes[1];\n    //   console.log(this.typeOptions);\n    //   console.log(this.statusOptions);\n    // });\n    // Using own service with ns2httpService\n    this.massUploadService.getCodes('PRL_MASSUPLOAD_TYPE,PRL_MASSUPLOAD_STATUS').subscribe(codes => {\n      console.log(codes);\n      this.typeOptions = codes.body[0];\n      this.statusOptions = codes.body[1];\n      console.log(this.typeOptions);\n      console.log(this.statusOptions);\n    }, error => {\n      console.log(error);\n    });\n  }\n  onSelectionChange(value) {\n    console.log(value);\n    this.selectedRecord = value;\n    console.log(this.selectedRecord);\n  }\n  onPage(event) {\n    this.pageSize = event.rows;\n    this.pageData.currentPage = event.first / event.rows;\n  }\n  search() {\n    console.log(this.searchMassUploadForm);\n    const sForm = this.searchMassUploadForm;\n    if (sForm.get('selectedType') != null) {\n      console.log(sForm.get('selectedType').value);\n      this.table.filter(sForm.get('selectedType').value, 'type', 'equal');\n    }\n    if (sForm.get('selectedStatus') != null) {\n      console.log(sForm.get('selectedStatus').value);\n      this.table.filter(sForm.get('selectedStatus').value, 'status', 'equal');\n    }\n  }\n  onUploadFile(dialog) {\n    dialog.display = true;\n  }\n  onClose(dialog) {\n    dialog.display = false;\n    this.massUploadFileComponent.clearAndReset();\n    this.supportingDocsFileUploadComponent.clearAndReset();\n    this.uploadFileForm.reset();\n    this.uploadFileForm.clearValidators();\n  }\n  onSubmit(event, key, dialog) {\n    if (this.massUploadFileComponent.verifiedFiles.length < 1) {\n      this.toastService.warn(\"File required\");\n    } else {\n      this.nspConfirmService.onConfirmPopup(event, key, dialog, () => {\n        this.uploadFile();\n      });\n    }\n  }\n  uploadFile() {\n    const fileMap = this.massUploadFileComponent.verifiedFiles.map(x => String(x.meta_data.id));\n    console.log(fileMap);\n    const request = {\n      type: this.uploadFileForm.get(\"typeInput\").value,\n      fileTxnId: fileMap[0],\n      supportingDocs: this.supportingDocsFileUploadComponent.verifiedFiles.map(x => String(x.meta_data.id))\n    };\n    console.log(request);\n    this.massUploadService.uploadFile(request).subscribe(res => {\n      console.log(res);\n      this.toastService.success(\"File will be processed in the background. Please check back later\");\n      this.loadMassUploadRecords(this.lazyLoadEvent);\n    }, error => {\n      console.log(error);\n      this.toastService.error(\"Failed to upload file\");\n    });\n  }\n  downloadFile(fileId, file) {\n    this.toastService.info(`Downloading doc ${file}`);\n    if (fileId) {\n      console.log(fileId);\n      this.fileUploadService.downloadTxnId(fileId).subscribe(res => {\n        if (res) {\n          console.log(res);\n          const data = res;\n          const contentDispositionHeader = data.headers.get('content-disposition');\n          const fileName = contentDispositionHeader.split(';')[1].trim().split('=')[1].replace(/\"/g, '');\n          const blob = new Blob([data.body], {\n            type: data.headers.get('content-type')\n          });\n          const anchor = document.createElement(\"a\");\n          anchor.href = URL.createObjectURL(blob);\n          anchor.download = fileName;\n          anchor.click();\n        }\n      }, error => {\n        console.log(error);\n        this.toastService.error(error.error?.error_desc);\n      });\n    }\n  }\n  exportCSV(table) {\n    const options = this.ns2httpService.convertLazyEvent(this.lazyLoadEvent, 0, this.totalRecords);\n    this.massUploadService.getAllMassUploadRecords(options).subscribe(res => {\n      if (res.body?.data?.content) {\n        const data = this.massUploadRecords;\n        const columns = [{\n          field: 'sn',\n          header: 'SN',\n          index: 0\n        }, {\n          field: 'txnId',\n          header: 'Transaction ID',\n          index: 1\n        }, {\n          field: 'type',\n          header: 'Type',\n          index: 2\n        }, {\n          field: 'filename',\n          header: 'Filename',\n          index: 3\n        }, {\n          field: 'noOfRecords',\n          header: 'No. Of Records',\n          index: 4\n        }, {\n          field: 'uploadedBy',\n          header: 'Uploaded By',\n          index: 5\n        }, {\n          field: 'status',\n          header: 'Status',\n          index: 6\n        }];\n        const dtoList = [];\n        console.log(\"data\", data);\n        data.forEach((record, index) => {\n          const dto = {\n            sn: index + 1,\n            txnId: record.txnId,\n            type: this.massUploadTypeEnum[record.type],\n            filename: record.filename,\n            noOfRecords: record.noOfRecords,\n            uploadedBy: `${String(record.uploadedBy ? record.uploadedBy : \"\")} ${String(this.dateUtilsService.formatStrDate(record.uploadedDt, \"DD-MM-YYYY\"))}`,\n            status: this.massUploadStatusEnum[record.status]\n          };\n          dtoList.push(dto);\n        });\n        this.exportUtilsService.exportCSV(table, dtoList, this.massUploadRecords.length, columns, \"MassUploadRecordList_\".concat((0, common_1.formatDate)(new Date(), \"dd-MM-YYYY\", this.localeId)));\n      } else {\n        this.toastService.info(\"No records to export\");\n      }\n    }, error => {\n      console.log(error.error?.error_desc);\n      this.loading = false;\n    });\n  }\n}\nexports.MassUploadComponent = MassUploadComponent;\nMassUploadComponent.ɵfac = function MassUploadComponent_Factory(t) {\n  return new (t || MassUploadComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CustomToastService), i0.ɵɵdirectiveInject(i3.NspConfirmationService), i0.ɵɵdirectiveInject(i4.Ns2HttpService), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i6.MassUploadService), i0.ɵɵdirectiveInject(i7.DateUtilsService), i0.ɵɵdirectiveInject(i8.ExportUtilsService), i0.ɵɵdirectiveInject(i9.FileUploadService), i0.ɵɵdirectiveInject(i10.IcCodeService), i0.ɵɵdirectiveInject(core_1.LOCALE_ID));\n};\nMassUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MassUploadComponent,\n  selectors: [[\"n2-mass-upload\"]],\n  viewQuery: function MassUploadComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 7);\n      i0.ɵɵviewQuery(_c2, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.massUploadFileComponent = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.supportingDocsFileUploadComponent = _t.first);\n    }\n  },\n  decls: 77,\n  vars: 34,\n  consts: [[\"header\", \"Search\"], [1, \"col-sm-12\", 3, \"formGroup\"], [1, \"grid\", \"gap-5\", \"ml-3\"], [\"for\", \"selectedType\", 1, \"mr-3\"], [\"styleClass\", \"w-20rem\", \"id\", \"selectedType\", \"formControlName\", \"selectedType\", \"optionLabel\", \"label.en-US\", \"optionValue\", \"codeId\", 3, \"options\", \"showClear\", \"autoDisplayFirst\"], [\"for\", \"selectedStatus\", 1, \"mr-3\"], [\"styleClass\", \"w-20rem\", \"id\", \"selectedStatus\", \"formControlName\", \"selectedStatus\", \"optionLabel\", \"label.en-US\", \"optionValue\", \"codeId\", 3, \"options\", \"showClear\", \"autoDisplayFirst\"], [\"pButton\", \"\", \"label\", \"Search\", 3, \"click\"], [\"styleClass\", \"p-datatable-gridlines\", \"selectionMode\", \"single\", \"datakey\", \"id\", \"responsiveLayout\", \"scroll\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"value\", \"selection\", \"paginator\", \"rows\", \"totalRecords\", \"rowsPerPageOptions\", \"showCurrentPageReport\", \"lazy\", \"loading\", \"selectionChange\", \"onLazyLoad\", \"onPage\"], [\"massUploadTable\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"header\", \"Upload File\", 3, \"visible\", \"draggable\", \"resizable\", \"modal\", \"breakpoints\", \"visibleChange\", \"onHide\"], [3, \"formGroup\"], [\"styleClass\", \"w-20rem\", \"id\", \"typeInput\", \"formControlName\", \"typeInput\", \"optionLabel\", \"label.en-US\", \"optionValue\", \"codeId\", 3, \"options\", \"showClear\", \"autoDisplayFirst\"], [\"formControlName\", \"uploadedFile\", \"id\", \"uploadedFile\", 3, \"contentHeight\", \"externalFileLimit\"], [\"massUploadFile\", \"\"], [\"formControlName\", \"supportingDocuments\", \"id\", \"supportingDocuments\", 3, \"contentHeight\"], [\"massUploadSupportingDocuments\", \"\"], [1, \"mt-5\", \"nsp-align-right\", \"gap-2\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Cancel\", 1, \"w-7rem\", \"p-button-danger\", 3, \"click\"], [\"key\", \"uploadMassUploadRecord\"], [\"pButton\", \"\", \"label\", \"Submit\", 1, \"w-7rem\", \"ml-2\", 3, \"disabled\", \"click\"], [1, \"grid\"], [1, \"col-6\", \"nsp-align-left\", \"flex\", \"justify-content-start\", \"gap-2\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-file-o\", \"pTooltip\", \"Export as CSV\", \"tooltipPosition\", \"bottom\", 3, \"click\"], [1, \"col-6\", \"nsp-align-right\", \"flex\", \"justify-content-end\", \"gap-2\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Upload File\", 3, \"click\"], [\"scope\", \"col\", 1, \"w-5rem\"], [\"scope\", \"col\"], [3, \"pSelectableRow\"], [1, \"text-blue-500\", \"underline\", 3, \"click\"], [4, \"ngIf\"], [\"colspan\", \"11\"]],\n  template: function MassUploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-panel\", 0);\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"form\", 1);\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵtext(5, \"\\n      \");\n      i0.ɵɵelementStart(6, \"div\");\n      i0.ɵɵtext(7, \"\\n        \");\n      i0.ɵɵelementStart(8, \"label\", 3);\n      i0.ɵɵtext(9, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(10, \"\\n        \");\n      i0.ɵɵelement(11, \"p-dropdown\", 4);\n      i0.ɵɵtext(12, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\n      \");\n      i0.ɵɵelementStart(14, \"div\");\n      i0.ɵɵtext(15, \"\\n        \");\n      i0.ɵɵelementStart(16, \"label\", 5);\n      i0.ɵɵtext(17, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \"\\n        \");\n      i0.ɵɵelement(19, \"p-dropdown\", 6);\n      i0.ɵɵtext(20, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(21, \"\\n      \");\n      i0.ɵɵelementStart(22, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function MassUploadComponent_Template_button_click_22_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(24, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"br\");\n      i0.ɵɵtext(27, \"\\n\\n\");\n      i0.ɵɵelementStart(28, \"p-table\", 8, 9);\n      i0.ɵɵlistener(\"selectionChange\", function MassUploadComponent_Template_p_table_selectionChange_28_listener($event) {\n        return ctx.onSelectionChange($event);\n      })(\"onLazyLoad\", function MassUploadComponent_Template_p_table_onLazyLoad_28_listener($event) {\n        return ctx.loadMassUploadRecords($event);\n      })(\"onPage\", function MassUploadComponent_Template_p_table_onPage_28_listener($event) {\n        return ctx.onPage($event);\n      });\n      i0.ɵɵtext(30, \"\\n  \");\n      i0.ɵɵtemplate(31, MassUploadComponent_ng_template_31_Template, 14, 0, \"ng-template\", 10);\n      i0.ɵɵtext(32, \"\\n  \");\n      i0.ɵɵtemplate(33, MassUploadComponent_ng_template_33_Template, 25, 0, \"ng-template\", 11);\n      i0.ɵɵtext(34, \"\\n  \");\n      i0.ɵɵtemplate(35, MassUploadComponent_ng_template_35_Template, 40, 13, \"ng-template\", 12);\n      i0.ɵɵtext(36, \"\\n  \");\n      i0.ɵɵtemplate(37, MassUploadComponent_ng_template_37_Template, 7, 0, \"ng-template\", 13);\n      i0.ɵɵtext(38, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(39, \"\\n\\n\\n\");\n      i0.ɵɵelementStart(40, \"p-dialog\", 14);\n      i0.ɵɵlistener(\"visibleChange\", function MassUploadComponent_Template_p_dialog_visibleChange_40_listener($event) {\n        return ctx.uploadFileDialog.display = $event;\n      })(\"onHide\", function MassUploadComponent_Template_p_dialog_onHide_40_listener() {\n        return ctx.onClose(ctx.uploadFileDialog);\n      });\n      i0.ɵɵtext(41, \"\\n  \");\n      i0.ɵɵelementStart(42, \"form\", 15);\n      i0.ɵɵtext(43, \"\\n    \");\n      i0.ɵɵelementStart(44, \"div\");\n      i0.ɵɵtext(45, \"\\n      \");\n      i0.ɵɵelementStart(46, \"label\", 3);\n      i0.ɵɵtext(47, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(48, \"\\n      \");\n      i0.ɵɵelement(49, \"p-dropdown\", 16);\n      i0.ɵɵtext(50, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(51, \"\\n    \");\n      i0.ɵɵelement(52, \"br\");\n      i0.ɵɵtext(53, \"\\n    \");\n      i0.ɵɵelementStart(54, \"n2-file-upload\", 17, 18);\n      i0.ɵɵtext(56, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(57, \"\\n    \");\n      i0.ɵɵelement(58, \"br\");\n      i0.ɵɵtext(59, \"\\n    \");\n      i0.ɵɵelementStart(60, \"span\");\n      i0.ɵɵtext(61, \"Supporting Documents *\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(62, \"\\n    \");\n      i0.ɵɵelement(63, \"n2-file-upload\", 19, 20);\n      i0.ɵɵtext(65, \"\\n    \");\n      i0.ɵɵelementStart(66, \"div\", 21);\n      i0.ɵɵtext(67, \"\\n      \");\n      i0.ɵɵelementStart(68, \"button\", 22);\n      i0.ɵɵlistener(\"click\", function MassUploadComponent_Template_button_click_68_listener() {\n        return ctx.onClose(ctx.uploadFileDialog);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(69, \"\\n      \");\n      i0.ɵɵelement(70, \"p-confirmPopup\", 23);\n      i0.ɵɵtext(71, \"\\n      \");\n      i0.ɵɵelementStart(72, \"button\", 24);\n      i0.ɵɵlistener(\"click\", function MassUploadComponent_Template_button_click_72_listener($event) {\n        return ctx.onSubmit($event, \"uploadMassUploadRecord\", ctx.uploadFileDialog);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(73, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(74, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(75, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(76, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.searchMassUploadForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"options\", ctx.typeOptions)(\"showClear\", true)(\"autoDisplayFirst\", false);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"options\", ctx.statusOptions)(\"showClear\", true)(\"autoDisplayFirst\", false);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"value\", ctx.massUploadRecords)(\"selection\", ctx.selectedRecord)(\"paginator\", true)(\"rows\", 10)(\"totalRecords\", ctx.totalRecords)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(31, _c3))(\"showCurrentPageReport\", true)(\"lazy\", true)(\"loading\", ctx.loading);\n      i0.ɵɵadvance(12);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(32, _c4));\n      i0.ɵɵproperty(\"visible\", ctx.uploadFileDialog.display)(\"draggable\", false)(\"resizable\", false)(\"modal\", true)(\"breakpoints\", i0.ɵɵpureFunction0(33, _c5));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.uploadFileForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"options\", ctx.typeOptions)(\"showClear\", true)(\"autoDisplayFirst\", false);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"contentHeight\", \"200px\")(\"externalFileLimit\", ctx.fileUploadFileLimit);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"contentHeight\", \"200px\");\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"disabled\", !ctx.uploadFileForm.valid);\n    }\n  },\n  dependencies: [i11.NgIf, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i12.PrimeTemplate, i13.ButtonDirective, i14.Tooltip, i15.Table, i15.SelectableRow, i16.Dropdown, i17.Dialog, i18.ConfirmPopup, i19.FileUploadComponent, i20.Panel, i11.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtYXNzLXVwbG9hZC5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvcGF5cm9sbC9tYXNzLXVwbG9hZC9tYXNzLXVwbG9hZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esd0tBQXdLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","MassUploadComponent","constructor","fb","toastService","nspConfirmService","ns2httpService","route","router","massUploadService","dateUtilsService","exportUtilsService","fileUploadService","codeService","localeId","display","group","selectedType","forms_1","selectedStatus","typeInput","required","uploadedFile","fileupload2_directive_1","maxFileLimit","allowableExtension","supportingDocuments","currentPage","mass_upload_enum_model_1","ngOnInit","loadCodes","loadMassUploadRecords","event","loading","lazyLoadEvent","setTimeout","options","convertLazyEvent","pageData","pageSize","getAllMassUploadRecords","subscribe","res","console","log","body","data","content","massUploadRecords","totalRecords","totalElements","error","getCodes","codes","typeOptions","statusOptions","onSelectionChange","value","selectedRecord","onPage","rows","first","search","searchMassUploadForm","sForm","get","table","filter","onUploadFile","dialog","onClose","massUploadFileComponent","clearAndReset","supportingDocsFileUploadComponent","uploadFileForm","reset","clearValidators","onSubmit","key","verifiedFiles","length","warn","onConfirmPopup","uploadFile","fileMap","map","x","String","meta_data","id","request","type","fileTxnId","supportingDocs","success","downloadFile","fileId","file","info","downloadTxnId","contentDispositionHeader","headers","fileName","split","trim","replace","blob","Blob","anchor","document","createElement","href","URL","createObjectURL","download","click","error_desc","exportCSV","columns","field","header","index","dtoList","forEach","record","dto","sn","txnId","massUploadTypeEnum","filename","noOfRecords","uploadedBy","formatStrDate","uploadedDt","status","massUploadStatusEnum","push","concat","Date","exports","core_1","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payroll\\mass-upload\\mass-upload.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payroll\\mass-upload\\mass-upload.component.html"],"sourcesContent":["import { formatDate } from '@angular/common';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Component, Inject, LOCALE_ID, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\nimport { IcCodeService } from 'app/ng-connect';\r\nimport { FileUploadComponent } from 'app/shared/component/file-upload/file-upload.component';\r\nimport { NspConfirmationService } from 'app/shared/confirm/nsp-confirm.service';\r\nimport { FileUploadService } from 'app/shared/service/file-upload.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { FileUploadValidator2 } from 'app/shared/validator/fileupload2.directive';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { Table } from 'primeng/table';\r\nimport { MassUploadStatus, MassUploadType } from './model/mass-upload-enum.model';\r\nimport { AllowanceFileView } from './model/mass-upload.model';\r\nimport { MassUploadService } from './service/mass-upload.service';\r\n\r\n@Component({\r\n  selector: 'n2-mass-upload',\r\n  templateUrl: './mass-upload.component.html',\r\n  styleUrls: ['./mass-upload.component.scss']\r\n})\r\nexport class MassUploadComponent implements OnInit {\r\n  uploadFileDialog: any = { display: false };\r\n\r\n  typeOptions: any[] = [];\r\n  statusOptions: any[] = [];\r\n\r\n  massUploadRecords: AllowanceFileView[] = [];\r\n  selectedRecord: AllowanceFileView;\r\n\r\n  searchMassUploadForm: FormGroup = this.fb.group({\r\n    selectedType: new FormControl(null),\r\n    selectedStatus: new FormControl(null)\r\n  })\r\n\r\n  uploadFileForm: FormGroup = this.fb.group({\r\n    typeInput: new FormControl(null, Validators.required),\r\n    uploadedFile: new FormControl([], [\r\n      FileUploadValidator2.maxFileLimit(1),\r\n      FileUploadValidator2.allowableExtension(\".csv\")]),\r\n    supportingDocuments: new FormControl([], FileUploadValidator2.allowableExtension(\".pdf\"))\r\n  })\r\n  fileUploadFileLimit = 1;\r\n\r\n  // for lazy loading\r\n  loading: boolean;\r\n  totalRecords: number;\r\n  pageData: { currentPage: number } = {\r\n    currentPage: 0\r\n  }\r\n  pageSize = 10;\r\n  lazyLoadEvent: LazyLoadEvent;\r\n\r\n  massUploadStatusEnum: { [key: string]: MassUploadStatus } = MassUploadStatus;\r\n  massUploadTypeEnum: { [key: string]: MassUploadType } = MassUploadType;\r\n\r\n  @ViewChild('massUploadTable') table: Table;\r\n\r\n  @ViewChild('massUploadFile', { static: true })\r\n  private massUploadFileComponent!: FileUploadComponent;\r\n\r\n  @ViewChild('massUploadSupportingDocuments', { static: true })\r\n  private supportingDocsFileUploadComponent!: FileUploadComponent;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastService: CustomToastService,\r\n    private nspConfirmService: NspConfirmationService,\r\n    private ns2httpService: Ns2HttpService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private massUploadService: MassUploadService,\r\n    private dateUtilsService: DateUtilsService,\r\n    private exportUtilsService: ExportUtilsService,\r\n    private fileUploadService: FileUploadService,\r\n    private codeService: IcCodeService,\r\n    @Inject(LOCALE_ID) protected localeId: string\r\n  ) {\r\n    //\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //\r\n    this.loadCodes();\r\n  }\r\n\r\n  loadMassUploadRecords(event: LazyLoadEvent): void {\r\n    this.loading = true;\r\n    this.lazyLoadEvent = event;\r\n    setTimeout(() => {\r\n      const options = this.ns2httpService.convertLazyEvent(event, this.pageData, this.pageSize);\r\n      // service for lazy loading records\r\n      this.massUploadService.getAllMassUploadRecords(options).subscribe(\r\n        (res: HttpResponse<any>) => {\r\n          console.log(res);\r\n          if (res.body?.data?.content) {\r\n            this.massUploadRecords = res.body.data.content;\r\n            this.totalRecords = res.body.data.totalElements;\r\n          } else {\r\n            this.massUploadRecords = [];\r\n            this.totalRecords = 0;\r\n          }\r\n          this.loading = false;\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          console.log(error);\r\n        }\r\n      )\r\n    }, 1000);\r\n    this.loadCodes();\r\n  }\r\n\r\n  loadCodes(): void {\r\n    // Mass upload types & status for dropdown\r\n\r\n    // Using Code Service\r\n    // this.codeService.gets('PRL_MASSUPLOAD_TYPE,PRL_MASSUPLOAD_STATUS').subscribe((codes: any[]) => {\r\n    //   console.log(codes[0]);\r\n    //   this.typeOptions = codes[0];\r\n    //   this.statusOptions = codes[1];\r\n    //   console.log(this.typeOptions);\r\n    //   console.log(this.statusOptions);\r\n    // });\r\n\r\n    // Using own service with ns2httpService\r\n    this.massUploadService.getCodes('PRL_MASSUPLOAD_TYPE,PRL_MASSUPLOAD_STATUS').subscribe(\r\n      (codes: HttpResponse<any>) => {\r\n        console.log(codes);\r\n        this.typeOptions = codes.body[0];\r\n        this.statusOptions = codes.body[1];\r\n        console.log(this.typeOptions);\r\n        console.log(this.statusOptions);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  onSelectionChange(value: any): void {\r\n    console.log(value);\r\n    this.selectedRecord = value;\r\n    console.log(this.selectedRecord);\r\n  }\r\n\r\n  onPage(event: any): void {\r\n    this.pageSize = event.rows;\r\n    this.pageData.currentPage = event.first / event.rows;\r\n  }\r\n\r\n  search(): void {\r\n    console.log(this.searchMassUploadForm);\r\n\r\n    const sForm = this.searchMassUploadForm;\r\n    if (sForm.get('selectedType') != null) {\r\n      console.log(sForm.get('selectedType').value);\r\n      this.table.filter(sForm.get('selectedType').value, 'type', 'equal');\r\n    }\r\n\r\n    if (sForm.get('selectedStatus') != null) {\r\n      console.log(sForm.get('selectedStatus').value);\r\n      this.table.filter(sForm.get('selectedStatus').value, 'status', 'equal');\r\n    }\r\n  }\r\n\r\n  onUploadFile(dialog: any): void {\r\n    dialog.display = true;\r\n  }\r\n\r\n  onClose(dialog: any): void {\r\n    dialog.display = false;\r\n    this.massUploadFileComponent.clearAndReset();\r\n    this.supportingDocsFileUploadComponent.clearAndReset();\r\n    this.uploadFileForm.reset();\r\n    this.uploadFileForm.clearValidators();\r\n  }\r\n\r\n  onSubmit(event: Event, key: string, dialog: any): void {\r\n    if (this.massUploadFileComponent.verifiedFiles.length < 1) {\r\n      this.toastService.warn(\"File required\");\r\n    } else {\r\n      this.nspConfirmService.onConfirmPopup(event, key, dialog, () => {\r\n        this.uploadFile();\r\n      });\r\n    }\r\n  }\r\n\r\n  uploadFile(): void {\r\n    const fileMap = this.massUploadFileComponent.verifiedFiles.map(x => String(x.meta_data.id));\r\n    console.log(fileMap);\r\n    const request = {\r\n      type: this.uploadFileForm.get(\"typeInput\").value as string,\r\n      fileTxnId: fileMap[0],\r\n      supportingDocs: this.supportingDocsFileUploadComponent.verifiedFiles.map(x => String(x.meta_data.id))\r\n    }\r\n    console.log(request);\r\n\r\n    this.massUploadService.uploadFile(request).subscribe(\r\n      (res: HttpResponse<any>) => {\r\n        console.log(res);\r\n        this.toastService.success(\"File will be processed in the background. Please check back later\");\r\n        this.loadMassUploadRecords(this.lazyLoadEvent);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        console.log(error);\r\n        this.toastService.error(\"Failed to upload file\");\r\n      }\r\n    );\r\n  }\r\n\r\n  downloadFile(fileId: string, file: string): void {\r\n    this.toastService.info(`Downloading doc ${file}`);\r\n    if (fileId) {\r\n      console.log(fileId);\r\n      this.fileUploadService.downloadTxnId(fileId).subscribe(\r\n        res => {\r\n          if (res) {\r\n            console.log(res);\r\n            const data = res;\r\n            const contentDispositionHeader: string = data.headers.get('content-disposition');\r\n            const fileName = contentDispositionHeader.split(';')[1].trim().split('=')[1].replace(/\"/g, '');\r\n            const blob = new Blob([data.body], { type: data.headers.get('content-type') });\r\n            const anchor = document.createElement(\"a\");\r\n            anchor.href = URL.createObjectURL(blob);\r\n            anchor.download = fileName;\r\n            anchor.click();\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.toastService.error(error.error?.error_desc);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  exportCSV(table: Table): void {\r\n    const options = this.ns2httpService.convertLazyEvent(this.lazyLoadEvent, 0, this.totalRecords);\r\n\r\n    this.massUploadService.getAllMassUploadRecords(options).subscribe(\r\n      res => {\r\n        if (res.body?.data?.content) {\r\n          const data = this.massUploadRecords;\r\n          const columns = [\r\n            { field: 'sn', header: 'SN', index: 0 },\r\n            { field: 'txnId', header: 'Transaction ID', index: 1 },\r\n            { field: 'type', header: 'Type', index: 2 },\r\n            { field: 'filename', header: 'Filename', index: 3 },\r\n            { field: 'noOfRecords', header: 'No. Of Records', index: 4 },\r\n            { field: 'uploadedBy', header: 'Uploaded By', index: 5 },\r\n            { field: 'status', header: 'Status', index: 6 },\r\n          ];\r\n\r\n          const dtoList: any[] = [];\r\n          console.log(\"data\", data);\r\n          data.forEach((record: any, index: number) => {\r\n            const dto = {\r\n              sn: index + 1,\r\n              txnId: record.txnId,\r\n              type: this.massUploadTypeEnum[record.type],\r\n              filename: record.filename,\r\n              noOfRecords: record.noOfRecords,\r\n              uploadedBy: `${String(record.uploadedBy ? record.uploadedBy : \"\")} ${String(this.dateUtilsService.formatStrDate(record.uploadedDt, \"DD-MM-YYYY\"))}`,\r\n              status: this.massUploadStatusEnum[record.status]\r\n            }\r\n            dtoList.push(dto);\r\n          });\r\n          this.exportUtilsService.exportCSV(table, dtoList, this.massUploadRecords.length, columns,\r\n            \"MassUploadRecordList_\".concat(formatDate(new Date(), \"dd-MM-YYYY\", this.localeId)));\r\n        } else {\r\n          this.toastService.info(\"No records to export\")\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error.error?.error_desc);\r\n        this.loading = false;\r\n      })\r\n  }\r\n}\r\n","<p-panel header=\"Search\">\r\n  <form [formGroup]=\"searchMassUploadForm\" class=\"col-sm-12\">\r\n    <div class=\"grid gap-5 ml-3\">\r\n      <div>\r\n        <label class=\"mr-3\" for=\"selectedType\">Type</label>\r\n        <p-dropdown styleClass=\"w-20rem\" [options]=\"typeOptions\" id=\"selectedType\" formControlName=\"selectedType\"\r\n          optionLabel=\"label.en-US\" optionValue=\"codeId\" [showClear]=\"true\" [autoDisplayFirst]=\"false\"></p-dropdown>\r\n      </div>\r\n      <div>\r\n        <label class=\"mr-3\" for=\"selectedStatus\">Status</label>\r\n        <p-dropdown styleClass=\"w-20rem\" [options]=\"statusOptions\" id=\"selectedStatus\" formControlName=\"selectedStatus\"\r\n          optionLabel=\"label.en-US\" optionValue=\"codeId\" [showClear]=\"true\" [autoDisplayFirst]=\"false\"></p-dropdown>\r\n      </div>\r\n      <button pButton label=\"Search\" (click)=\"search()\"></button>\r\n    </div>\r\n  </form>\r\n</p-panel><br />\r\n\r\n<p-table #massUploadTable [value]=\"massUploadRecords\" styleClass=\"p-datatable-gridlines\" selectionMode=\"single\"\r\n  [selection]=\"selectedRecord\" (selectionChange)=\"onSelectionChange($event)\" datakey=\"id\" responsiveLayout=\"scroll\"\r\n  [paginator]=\"true\" [rows]=\"10\" [totalRecords]=\"totalRecords\" [rowsPerPageOptions]=\"[10, 25, 50]\"\r\n  [showCurrentPageReport]=\"true\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n  [lazy]=\"true\" [loading]=\"loading\" (onLazyLoad)=\"loadMassUploadRecords($event)\" (onPage)=\"onPage($event)\">\r\n  <ng-template pTemplate=\"caption\">\r\n    <div class=\"grid\">\r\n      <div class=\"col-6 nsp-align-left flex justify-content-start gap-2\">\r\n        <button type=\"button\" pButton icon=\"pi pi-file-o\" pTooltip=\"Export as CSV\" tooltipPosition=\"bottom\"\r\n          (click)=\"exportCSV(massUploadTable)\"></button>\r\n      </div>\r\n      <div class=\"col-6 nsp-align-right flex justify-content-end gap-2\">\r\n        <button pButton type=\"button\" label=\"Upload File\" (click)=\"onUploadFile(uploadFileDialog)\"></button>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"header\">\r\n    <tr>\r\n      <th scope=\"col\" class=\"w-5rem\">S/N</th>\r\n      <th scope=\"col\">Transaction ID</th>\r\n      <th scope=\"col\">Type</th>\r\n      <th scope=\"col\">Filename</th>\r\n      <th scope=\"col\">No. Of Records</th>\r\n      <th scope=\"col\">Uploaded By</th>\r\n      <th scope=\"col\">Status</th>\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"body\" let-record let-i=\"rowIndex\">\r\n    <tr [pSelectableRow]=\"record\">\r\n      <td>{{ i + 1 }}</td>\r\n      <td>{{ record.allowanceFileId }}</td>\r\n      <td>{{ massUploadTypeEnum[record.type] }}</td>\r\n      <td>\r\n        <a class=\"text-blue-500 underline\" (click)=\"downloadFile(record.uploadedFileId, record.fileName)\">{{\r\n          record.fileName }}</a>\r\n      </td>\r\n      <td>{{ record.count }}</td>\r\n      <td>\r\n        <span>{{ record.uploadedBy }}</span><br>\r\n        <span>{{ record.uploadedDt | date: \"dd-MM-YYYY\"}}</span>\r\n      </td>\r\n      <td>\r\n        <span *ngIf=\"record.status != 'PENDING_APPROVAL_CONFLICT'\">{{ massUploadStatusEnum[record.status] }}</span>\r\n        <span *ngIf=\"record.status == 'PENDING_APPROVAL_CONFLICT'\">\r\n          <a class=\"text-blue-500 underline\" (click)=\"downloadFile(record.uploadedFileId, record.fileName)\">\r\n            {{ massUploadStatusEnum[record.status] }}\r\n          </a>\r\n        </span>\r\n      </td>\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"emptymessage\">\r\n    <tr>\r\n      <td colspan=\"11\">No Mass Upload records found.</td>\r\n    </tr>\r\n  </ng-template>\r\n</p-table>\r\n\r\n\r\n<p-dialog header=\"Upload File\" [(visible)]='uploadFileDialog.display' [draggable]='false' [resizable]='false'\r\n  [modal]='true' [breakpoints]=\"{'960px': '75vw'}\" [style]=\"{width: '35vw'}\" (onHide)=\"onClose(uploadFileDialog)\">\r\n  <form [formGroup]=\"uploadFileForm\">\r\n    <div>\r\n      <label class=\"mr-3\" for=\"selectedType\">Type</label>\r\n      <p-dropdown styleClass=\"w-20rem\" [options]=\"typeOptions\" id=\"typeInput\" formControlName=\"typeInput\"\r\n        optionLabel=\"label.en-US\" optionValue=\"codeId\" [showClear]=\"true\" [autoDisplayFirst]=\"false\"></p-dropdown>\r\n    </div>\r\n    <br>\r\n    <n2-file-upload formControlName=\"uploadedFile\" id=\"uploadedFile\" #massUploadFile [contentHeight]=\"'200px'\"\r\n      [externalFileLimit]=\"fileUploadFileLimit\">\r\n    </n2-file-upload>\r\n    <br>\r\n    <span>Supporting Documents *</span>\r\n    <n2-file-upload formControlName='supportingDocuments' id='supportingDocuments' #massUploadSupportingDocuments\r\n      [contentHeight]=\"'200px'\"></n2-file-upload>\r\n    <div class=\"mt-5 nsp-align-right gap-2\">\r\n      <button pButton class=\"w-7rem p-button-danger\" type='button' label=\"Cancel\"\r\n        (click)=\"onClose(uploadFileDialog)\"></button>\r\n      <p-confirmPopup key='uploadMassUploadRecord'></p-confirmPopup>\r\n      <button pButton class=\"w-7rem ml-2\" label=\"Submit\" [disabled]=\"!uploadFileForm.valid\"\r\n        (click)=\"onSubmit($event, 'uploadMassUploadRecord', uploadFileDialog)\"></button>\r\n    </div>\r\n  </form>\r\n</p-dialog>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}