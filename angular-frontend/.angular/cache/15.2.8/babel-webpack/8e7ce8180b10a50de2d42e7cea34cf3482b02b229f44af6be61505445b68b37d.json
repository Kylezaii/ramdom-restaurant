{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobExecutionComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@angular/core\");\nconst job_execution_model_1 = require(\"./job-execution.model\");\nconst pagination_constants_1 = require(\"app/config/pagination.constants\");\nconst dayjs_1 = tslib_1.__importDefault(require(\"dayjs\"));\nconst input_constants_1 = require(\"app/config/input.constants\");\nconst common_1 = require(\"@angular/common\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"./job-execution.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/util/parse-links.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/core/util/alert.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i5 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i6 = tslib_1.__importStar(require(\"app/core/util/event-manager.service\"));\nconst i7 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i8 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i9 = tslib_1.__importStar(require(\"app/ng-connect\"));\nconst i10 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i11 = tslib_1.__importStar(require(\"@fortawesome/angular-fontawesome\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/tooltip\"));\nconst i15 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i16 = tslib_1.__importStar(require(\"primeng/calendar\"));\nconst i17 = tslib_1.__importStar(require(\"../../../shared/language/translate.directive\"));\nconst i18 = tslib_1.__importStar(require(\"../../../shared/alert/alert.component\"));\nconst i19 = tslib_1.__importStar(require(\"primeng/multiselect\"));\nconst i20 = tslib_1.__importStar(require(\"@angular/common\"));\nfunction JobExecutionComponent_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵtext(2, \"\\n          \");\n    i0.ɵɵelementStart(3, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function JobExecutionComponent_ng_template_17_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(15);\n      return i0.ɵɵresetView(ctx_r5.clearFilter(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n          \");\n    i0.ɵɵelementStart(5, \"div\", 10);\n    i0.ɵɵtext(6, \"\\n            \");\n    i0.ɵɵelementStart(7, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function JobExecutionComponent_ng_template_17_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(15);\n      return i0.ɵɵresetView(ctx_r7.exportCSV(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n      \");\n  }\n}\nfunction JobExecutionComponent_ng_template_19_ng_template_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"p-multiSelect\", 42);\n    i0.ɵɵlistener(\"onChange\", function JobExecutionComponent_ng_template_19_ng_template_22_Template_p_multiSelect_onChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const filter_r13 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r13($event.value));\n    });\n    i0.ɵɵtext(2, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n              \");\n  }\n  if (rf & 2) {\n    const value_r12 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", value_r12)(\"options\", ctx_r8.jobList);\n  }\n}\nfunction JobExecutionComponent_ng_template_19_ng_template_55_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"p-calendar\", 43);\n    i0.ɵɵlistener(\"onSelect\", function JobExecutionComponent_ng_template_19_ng_template_55_Template_p_calendar_onSelect_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const filter_r17 = restoredCtx.filterCallback;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      const _r0 = i0.ɵɵreference(15);\n      return i0.ɵɵresetView(ctx_r18.callbackFilter($event, filter_r17, \"startTime\", _r0));\n    });\n    i0.ɵɵtext(2, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n              \");\n  }\n  if (rf & 2) {\n    const value_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", value_r16)(\"readonlyInput\", true);\n  }\n}\nfunction JobExecutionComponent_ng_template_19_ng_template_69_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"p-calendar\", 43);\n    i0.ɵɵlistener(\"onSelect\", function JobExecutionComponent_ng_template_19_ng_template_69_Template_p_calendar_onSelect_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const filter_r21 = restoredCtx.filterCallback;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      const _r0 = i0.ɵɵreference(15);\n      return i0.ɵɵresetView(ctx_r22.callbackFilter($event, filter_r21, \"endTime\", _r0));\n    });\n    i0.ɵɵtext(2, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n              \");\n  }\n  if (rf & 2) {\n    const value_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", value_r20)(\"readonlyInput\", true);\n  }\n}\nfunction JobExecutionComponent_ng_template_19_ng_template_93_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"p-multiSelect\", 44);\n    i0.ɵɵlistener(\"onChange\", function JobExecutionComponent_ng_template_19_ng_template_93_Template_p_multiSelect_onChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r27);\n      const filter_r25 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r25($event.value));\n    });\n    i0.ɵɵtext(2, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n              \");\n  }\n  if (rf & 2) {\n    const value_r24 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", value_r24)(\"options\", ctx_r11.jobExecutionStatusList);\n  }\n}\nfunction JobExecutionComponent_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n          \");\n    i0.ɵɵelementStart(3, \"th\", 12);\n    i0.ɵɵtext(4, \"\\n            \");\n    i0.ɵɵelementStart(5, \"div\", 13);\n    i0.ɵɵtext(6, \"\\n              ID\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n            \");\n    i0.ɵɵelement(8, \"p-sortIcon\", 14);\n    i0.ɵɵtext(9, \"\\n            \");\n    i0.ɵɵelement(10, \"p-columnFilter\", 15);\n    i0.ɵɵtext(11, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n          \");\n    i0.ɵɵelementStart(13, \"th\", 16);\n    i0.ɵɵtext(14, \"\\n            \");\n    i0.ɵɵelementStart(15, \"div\", 17);\n    i0.ɵɵtext(16, \"\\n              Job Name\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n            \");\n    i0.ɵɵelement(18, \"p-sortIcon\", 18);\n    i0.ɵɵtext(19, \"\\n            \");\n    i0.ɵɵelementStart(20, \"p-columnFilter\", 19);\n    i0.ɵɵtext(21, \"\\n              \");\n    i0.ɵɵtemplate(22, JobExecutionComponent_ng_template_19_ng_template_22_Template, 4, 2, \"ng-template\", 20);\n    i0.ɵɵtext(23, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n          \");\n    i0.ɵɵelementStart(26, \"th\", 21);\n    i0.ɵɵtext(27, \"\\n            \");\n    i0.ɵɵelementStart(28, \"div\", 22);\n    i0.ɵɵtext(29, \"\\n              Job Instance ID\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n            \");\n    i0.ɵɵelement(31, \"p-sortIcon\", 23);\n    i0.ɵɵtext(32, \"\\n            \");\n    i0.ɵɵelement(33, \"p-columnFilter\", 24);\n    i0.ɵɵtext(34, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(35, \"\\n\");\n    i0.ɵɵtext(36, \"\\n          \");\n    i0.ɵɵelementStart(37, \"th\", 25);\n    i0.ɵɵtext(38, \"\\n            \");\n    i0.ɵɵelementStart(39, \"div\", 26);\n    i0.ɵɵtext(40, \"\\n              Job Schedule ID\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(41, \"\\n\");\n    i0.ɵɵtext(42, \"\\n\");\n    i0.ɵɵtext(43, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(44, \"\\n          \");\n    i0.ɵɵelementStart(45, \"th\", 27);\n    i0.ɵɵtext(46, \"\\n            \");\n    i0.ɵɵelementStart(47, \"div\", 28);\n    i0.ɵɵtext(48, \"\\n              Start Time\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(49, \"\\n            \");\n    i0.ɵɵelement(50, \"p-sortIcon\", 29);\n    i0.ɵɵtext(51, \"\\n\");\n    i0.ɵɵtext(52, \"\\n            \");\n    i0.ɵɵelementStart(53, \"p-columnFilter\", 30);\n    i0.ɵɵtext(54, \"\\n              \");\n    i0.ɵɵtemplate(55, JobExecutionComponent_ng_template_19_ng_template_55_Template, 4, 2, \"ng-template\", 20);\n    i0.ɵɵtext(56, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(57, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(58, \"\\n          \");\n    i0.ɵɵelementStart(59, \"th\", 31);\n    i0.ɵɵtext(60, \"\\n            \");\n    i0.ɵɵelementStart(61, \"div\", 32);\n    i0.ɵɵtext(62, \"\\n              End Time\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(63, \"\\n            \");\n    i0.ɵɵelement(64, \"p-sortIcon\", 33);\n    i0.ɵɵtext(65, \"\\n\");\n    i0.ɵɵtext(66, \"\\n            \");\n    i0.ɵɵelementStart(67, \"p-columnFilter\", 34);\n    i0.ɵɵtext(68, \"\\n              \");\n    i0.ɵɵtemplate(69, JobExecutionComponent_ng_template_19_ng_template_69_Template, 4, 2, \"ng-template\", 20);\n    i0.ɵɵtext(70, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(71, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(72, \"\\n\");\n    i0.ɵɵtext(73, \"\\n          \");\n    i0.ɵɵelementStart(74, \"th\", 25);\n    i0.ɵɵtext(75, \"\\n            \");\n    i0.ɵɵelementStart(76, \"div\", 35);\n    i0.ɵɵtext(77, \"\\n              Duration\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(78, \"\\n\");\n    i0.ɵɵtext(79, \"\\n\");\n    i0.ɵɵtext(80, \"\\n            \");\n    i0.ɵɵelement(81, \"p-columnFilter\", 36);\n    i0.ɵɵtext(82, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(83, \"\\n          \");\n    i0.ɵɵelementStart(84, \"th\", 37);\n    i0.ɵɵtext(85, \"\\n            \");\n    i0.ɵɵelementStart(86, \"div\", 38);\n    i0.ɵɵtext(87, \"\\n              Status\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(88, \"\\n            \");\n    i0.ɵɵelement(89, \"p-sortIcon\", 39);\n    i0.ɵɵtext(90, \"\\n            \");\n    i0.ɵɵelementStart(91, \"p-columnFilter\", 40);\n    i0.ɵɵtext(92, \"\\n              \");\n    i0.ɵɵtemplate(93, JobExecutionComponent_ng_template_19_ng_template_93_Template, 4, 2, \"ng-template\", 20);\n    i0.ɵɵtext(94, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(95, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(96, \"\\n          \");\n    i0.ɵɵelementStart(97, \"th\", 25);\n    i0.ɵɵtext(98, \"\\n            \");\n    i0.ɵɵelementStart(99, \"div\", 41);\n    i0.ɵɵtext(100, \"\\n              Action\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(101, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(102, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(103, \"\\n      \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"showAddButton\", false)(\"showOperator\", false)(\"showMatchModes\", false);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"showAddButton\", false)(\"showOperator\", false)(\"showMatchModes\", false);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"showButtons\", false)(\"useGrouping\", false)(\"showAddButton\", false)(\"showOperator\", false)(\"showMatchModes\", false);\n    i0.ɵɵadvance(20);\n    i0.ɵɵproperty(\"showAddButton\", false)(\"showOperator\", false)(\"showMatchModes\", false)(\"showApplyButton\", false);\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"showAddButton\", false)(\"showOperator\", false)(\"showMatchModes\", false)(\"showApplyButton\", false);\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"showButtons\", false)(\"useGrouping\", false)(\"showAddButton\", false)(\"showOperator\", false)(\"showMatchModes\", false);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"showAddButton\", false)(\"showOperator\", false)(\"showMatchModes\", false);\n  }\n}\nconst _c0 = function (a1) {\n  return [\"job-execution\", a1];\n};\nfunction JobExecutionComponent_ng_template_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n          \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n          \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n          \");\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n          \");\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n          \");\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n          \");\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n          \");\n    i0.ɵɵelementStart(23, \"td\");\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n          \");\n    i0.ɵɵelementStart(26, \"td\");\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n          \");\n    i0.ɵɵelementStart(29, \"td\");\n    i0.ɵɵtext(30, \"\\n            \");\n    i0.ɵɵelementStart(31, \"div\", 45);\n    i0.ɵɵtext(32, \"\\n              \");\n    i0.ɵɵelementStart(33, \"span\");\n    i0.ɵɵtext(34, \"\\n                \");\n    i0.ɵɵelementStart(35, \"button\", 46);\n    i0.ɵɵtext(36, \"\\n                  \");\n    i0.ɵɵelement(37, \"fa-icon\", 47);\n    i0.ɵɵtext(38, \" \");\n    i0.ɵɵelementStart(39, \"span\", 48);\n    i0.ɵɵtext(40, \"View Execution\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(41, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n              \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(43, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(44, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(45, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(46, \"\\n      \");\n  }\n  if (rf & 2) {\n    const jobExecution_r28 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n            \", jobExecution_r28.id, \"\\n          \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n            \", jobExecution_r28.jobName, \"\\n          \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n            \", jobExecution_r28.jobInstanceId, \"\\n          \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n            \", jobExecution_r28.jobScheduleId, \"\\n          \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n            \", i0.ɵɵpipeBind2(17, 10, jobExecution_r28.startTime, \"yyyy-MM-dd HH:mm:ss\"), \"\\n          \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n            \", i0.ɵɵpipeBind2(21, 13, jobExecution_r28.endTime, \"yyyy-MM-dd HH:mm:ss\"), \"\\n          \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n            \", jobExecution_r28.duration, \"\\n          \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n            \", jobExecution_r28.status, \"\\n          \");\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(16, _c0, jobExecution_r28.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"icon\", \"eye\");\n  }\n}\nfunction JobExecutionComponent_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n          \");\n    i0.ɵɵelementStart(3, \"td\", 49);\n    i0.ɵɵtext(4, \"No Job Execution found.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n      \");\n  }\n}\nconst _c1 = function () {\n  return [10, 25, 50];\n};\nclass JobExecutionComponent {\n  constructor(jobExecutionService, parseLinks, alertService, accountService, activatedRoute, router, eventManager, n2httpService, exportUtilsService, codeService, localeId) {\n    this.jobExecutionService = jobExecutionService;\n    this.parseLinks = parseLinks;\n    this.alertService = alertService;\n    this.accountService = accountService;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.eventManager = eventManager;\n    this.n2httpService = n2httpService;\n    this.exportUtilsService = exportUtilsService;\n    this.codeService = codeService;\n    this.localeId = localeId;\n    this.jobExecutions = [];\n    this.itemsPerPage = pagination_constants_1.ITEMS_PER_PAGE;\n    this.batchJobNameList = [];\n    this.jobStatusList = [];\n    this.searchParamCriteria = new job_execution_model_1.SearchParamModel();\n    this.jobExecutionStatusList = job_execution_model_1.JobExecutionStatus;\n    this.loading = false;\n    this.totalRecords = 0;\n    this.pageData = {\n      currentPage: 0\n    };\n    this.pageSize = pagination_constants_1.ITEMS_PER_PAGE;\n  }\n  load(event) {\n    this.loading = true;\n    this.lazyLoadEvent = event;\n    const options = this.n2httpService.convertLazyEvent(event, this.pageData, this.pageSize);\n    // this.jobExecutionService.query(options).subscribe(\n    //   (res: HttpResponse<any>) => this.onSuccess(res.body, res.headers),\n    //   (res: HttpResponse<any>) => this.onError(res.body)\n    // );\n    this.jobExecutionService.search(options).subscribe(data => {\n      console.log(\"data\", data);\n      this.jobExecutions = data.body?.data?.content;\n      this.totalRecords = data.body?.data?.totalElements;\n      this.loading = false;\n    }, error => {\n      console.log(error.error?.error_desc);\n      this.loading = false;\n    });\n  }\n  exportCSV(dataTable) {\n    const options = this.n2httpService.convertLazyEvent(this.lazyLoadEvent, 0, this.totalRecords);\n    this.jobExecutionService.search(options).subscribe(resp => {\n      if (resp.body?.data?.content) {\n        const data = resp.body?.data?.content;\n        const columns = [{\n          field: 'sn',\n          header: 'SN',\n          index: 0\n        }, {\n          field: 'id',\n          header: 'Job Schedule ID',\n          index: 1\n        }, {\n          field: 'name',\n          header: 'Job Name',\n          index: 2\n        }, {\n          field: 'instanceId',\n          header: 'Job Instance Id',\n          index: 3\n        }, {\n          field: 'scheduleId',\n          header: 'Job Schedule Id',\n          index: 4\n        }, {\n          field: 'startTime',\n          header: 'Start Time',\n          index: 5\n        }, {\n          field: 'endTime',\n          header: 'End Time',\n          index: 6\n        }, {\n          field: 'duration',\n          header: 'Duration',\n          index: 7\n        }, {\n          field: 'status',\n          header: 'Status',\n          index: 8\n        }];\n        const dtoList = [];\n        console.log(\"data\", data);\n        data.forEach((d, index) => {\n          const dto = {\n            sn: index + 1,\n            id: d.id,\n            name: d.jobName,\n            instanceId: d.jobInstanceId,\n            scheduleId: d.jobScheduleId,\n            startTime: d.startTime,\n            endTime: d.endTime,\n            duration: d.duration,\n            status: d.status\n          };\n          dtoList.push(dto);\n        });\n        this.exportUtilsService.exportCSV(dataTable, dtoList, resp.body.data.total_no_of_elems, columns, \"data_\".concat((0, common_1.formatDate)(new Date(), \"dd-MM-YYYY\", this.localeId)));\n      }\n    }, error => {\n      console.log(error.error?.error_desc);\n      this.loading = false;\n    });\n  }\n  onPage(event) {\n    this.pageSize = event.rows;\n    this.pageData.currentPage = event.first / event.rows;\n  }\n  clearFilter(table) {\n    table.clear();\n  }\n  callbackFilter(input, filter, id, table) {\n    console.log(\"input\", input);\n    console.log(\"filter\", filter);\n    const formatted = (0, common_1.formatDate)(input, \"yyyy-MM-dd HH:mm:ss\", this.localeId);\n    filter(formatted);\n    //Patch back value without triggering filter\n    const filterMetadata = table.filters[id];\n    filterMetadata[0].value = input;\n  }\n  // loadAll(): void {\n  //   if (!this.searchParamCriteria.jobName) {\n  //     this.searchParamCriteria.jobName = '';\n  //   }\n  //\n  //   if (!this.searchParamCriteria.jobStatus) {\n  //     this.searchParamCriteria.jobStatus = '';\n  //   }\n  //\n  //   this.jobExecutionService\n  //     .query({\n  //       jobStartDateAsStr: this.convertDate(this.searchParamCriteria.jobStartDateAsStr),\n  //       jobEndDateAsStr: this.convertDate(this.searchParamCriteria.jobEndDateAsStr),\n  //       jobName: this.searchParamCriteria.jobName,\n  //       jobStatus: this.searchParamCriteria.jobStatus,\n  //       page: this.page - 1,\n  //       size: this.itemsPerPage,\n  //       sort: this.sort(),\n  //     })\n  //     .subscribe(\n  //       (res: HttpResponse<JobExecution[]>) => this.onSuccess(res.body, res.headers),\n  //       (res: HttpErrorResponse) => this.onError(res.message)\n  //     );\n  // }\n  // loadPage(page: number): void {\n  //   if (page !== this.previousPage) {\n  //     this.previousPage = page;\n  //     this.transition();\n  //   }\n  // }\n  // transition(): void {\n  //   this.router.navigate(['/admin/job-execution'], {\n  //     queryParams: {\n  //       page: this.page,\n  //       size: this.itemsPerPage,\n  //       sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc'),\n  //     },\n  //   });\n  // }\n  // clear(): void {\n  //   this.page = 0;\n  //   this.router.navigate([\n  //     '/admin/job-execution',\n  //     {\n  //       page: this.page,\n  //       sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc'),\n  //     },\n  //   ]);\n  // }\n  ngOnInit() {\n    this.accountService.identity().subscribe(account => this.currentAccount = account);\n    this.codeService.gets('batch_job').subscribe(codes => {\n      this.jobList = codes[0];\n    });\n    // this.handleNavigation();\n    this.getBatchJobNameList();\n    this.getBatchJobStatusList();\n    // this.registerChangeInJobExecutions();\n  }\n\n  getBatchJobNameList() {\n    this.jobExecutionService.getBatchJobNameList().subscribe(data => {\n      this.batchJobNameList = data;\n    });\n  }\n  getBatchJobStatusList() {\n    this.jobExecutionService.getBatchJobStatusList().subscribe(data => {\n      this.jobStatusList = data;\n    });\n  }\n  ngOnDestroy() {\n    if (this.eventSubscriber) {\n      this.eventManager.destroy(this.eventSubscriber);\n    }\n  }\n  // trackId(index: number, item: JobExecution): any {\n  //   return item.id;\n  // }\n  // registerChangeInJobExecutions(): void {\n  //   this.eventSubscriber = this.eventManager.subscribe('jobExecutionListModification', () => this.loadAll());\n  // }\n  // sort(): any {\n  //   const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\n  //   if (this.predicate !== 'id') {\n  //     result.push('id');\n  //   }\n  //   return result;\n  // }\n  // search(): void {\n  //   this.loadAll();\n  // }\n  reset() {\n    this.searchParamCriteria = {};\n  }\n  convertDate(searchParam) {\n    if (searchParam) {\n      return (0, dayjs_1.default)(searchParam).format(input_constants_1.DATE_FORMAT);\n    }\n    return '';\n  }\n}\nexports.JobExecutionComponent = JobExecutionComponent;\nJobExecutionComponent.ɵfac = function JobExecutionComponent_Factory(t) {\n  return new (t || JobExecutionComponent)(i0.ɵɵdirectiveInject(i1.JobExecutionService), i0.ɵɵdirectiveInject(i2.ParseLinks), i0.ɵɵdirectiveInject(i3.AlertService), i0.ɵɵdirectiveInject(i4.AccountService), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i6.EventManager), i0.ɵɵdirectiveInject(i7.Ns2HttpService), i0.ɵɵdirectiveInject(i8.ExportUtilsService), i0.ɵɵdirectiveInject(i9.IcCodeService), i0.ɵɵdirectiveInject(core_1.LOCALE_ID));\n};\nJobExecutionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: JobExecutionComponent,\n  selectors: [[\"ic-job-execution\"]],\n  decls: 28,\n  vars: 10,\n  consts: [[\"icTranslate\", \"jobWebApp.jobExecution.home.title\"], [1, \"card\"], [\"dataKey\", \"id\", \"styleClass\", \"p-datatable-gridlines\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"value\", \"rowsPerPageOptions\", \"rows\", \"autoLayout\", \"showCurrentPageReport\", \"lazy\", \"totalRecords\", \"paginator\", \"loading\", \"onLazyLoad\", \"onPage\"], [\"jobExecutionTable\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"flex\"], [\"pButton\", \"\", \"label\", \"All\", 1, \"p-button-outlined\", 3, \"click\"], [1, \"justify-content-start\", \"align-items-center\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-file-o\", \"pTooltip\", \"Export as CSV\", \"tooltipPosition\", \"bottom\", 3, \"click\"], [\"scope\", \"col\", \"pSortableColumn\", \"id\"], [\"icTranslate\", \"global.field.id\"], [\"field\", \"id\"], [\"type\", \"text\", \"field\", \"id\", \"display\", \"menu\", \"matchMode\", \"contains\", 3, \"showAddButton\", \"showOperator\", \"showMatchModes\"], [\"scope\", \"col\", \"pSortableColumn\", \"jobInstance.jobName\"], [\"icTranslate\", \"jobWebApp.jobExecution.jobName\"], [\"field\", \"jobInstance.jobName\"], [\"type\", \"text\", \"field\", \"jobInstance.jobName\", \"display\", \"menu\", \"matchMode\", \"in\", 3, \"showAddButton\", \"showOperator\", \"showMatchModes\"], [\"pTemplate\", \"filter\"], [\"scope\", \"col\", \"pSortableColumn\", \"jobInstance.id\"], [\"icTranslate\", \"jobWebApp.jobExecution.jobInstanceId\"], [\"field\", \"jobInstance.id\"], [\"type\", \"numeric\", \"field\", \"jobInstance.id\", \"display\", \"menu\", \"matchMode\", \"contains\", 3, \"showButtons\", \"useGrouping\", \"showAddButton\", \"showOperator\", \"showMatchModes\"], [\"scope\", \"col\"], [\"icTranslate\", \"schedule.table.id\"], [\"scope\", \"col\", \"pSortableColumn\", \"startTime\"], [\"icTranslate\", \"jobWebApp.jobExecution.startTime\"], [\"field\", \"startTime\"], [\"field\", \"startTime\", \"display\", \"menu\", \"matchMode\", \"contains\", 3, \"showAddButton\", \"showOperator\", \"showMatchModes\", \"showApplyButton\"], [\"scope\", \"col\", \"pSortableColumn\", \"endTime\"], [\"icTranslate\", \"jobWebApp.jobExecution.endTime\"], [\"field\", \"endTime\"], [\"field\", \"endTime\", \"display\", \"menu\", \"matchMode\", \"contains\", 3, \"showAddButton\", \"showOperator\", \"showMatchModes\", \"showApplyButton\"], [\"icTranslate\", \"jobWebApp.jobExecution.duration\"], [\"type\", \"numeric\", \"field\", \"durationInSeconds\", \"display\", \"menu\", \"matchMode\", \"contains\", 3, \"showButtons\", \"useGrouping\", \"showAddButton\", \"showOperator\", \"showMatchModes\"], [\"scope\", \"col\", \"pSortableColumn\", \"status\"], [\"icTranslate\", \"jobWebApp.jobExecution.status\"], [\"field\", \"status\"], [\"type\", \"text\", \"field\", \"status\", \"display\", \"menu\", \"matchMode\", \"in\", 3, \"showAddButton\", \"showOperator\", \"showMatchModes\"], [\"icTranslate\", \"jobWebApp.jobExecution.action\"], [\"placeholder\", \"Any\", \"optionLabel\", \"codeId\", \"optionValue\", \"codeId\", 3, \"ngModel\", \"options\", \"onChange\"], [\"dateFormat\", \"yy-mm-dd\", 3, \"ngModel\", \"readonlyInput\", \"onSelect\"], [\"placeholder\", \"Any\", \"optionLabel\", \"label\", \"optionValue\", \"value\", 3, \"ngModel\", \"options\", \"onChange\"], [1, \"btn-group\", \"flex-btn-group-container\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", \"btn-sm\", 3, \"routerLink\"], [3, \"icon\"], [\"icTranslate\", \"jobWebApp.jobExecution.btn.viewExecution\", 1, \"d-none\", \"d-md-inline\"], [\"colspan\", \"7\"]],\n  template: function JobExecutionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵelementStart(4, \"span\", 0);\n      i0.ɵɵtext(5, \"Job Executions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(6, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \"\\n  \");\n      i0.ɵɵelement(8, \"ic-alert\");\n      i0.ɵɵtext(9, \"\\n  \");\n      i0.ɵɵelement(10, \"br\");\n      i0.ɵɵtext(11, \"\\n\\n  \");\n      i0.ɵɵelementStart(12, \"div\", 1);\n      i0.ɵɵtext(13, \"\\n    \");\n      i0.ɵɵelementStart(14, \"p-table\", 2, 3);\n      i0.ɵɵlistener(\"onLazyLoad\", function JobExecutionComponent_Template_p_table_onLazyLoad_14_listener($event) {\n        return ctx.load($event);\n      })(\"onPage\", function JobExecutionComponent_Template_p_table_onPage_14_listener($event) {\n        return ctx.onPage($event);\n      });\n      i0.ɵɵtext(16, \"\\n      \");\n      i0.ɵɵtemplate(17, JobExecutionComponent_ng_template_17_Template, 11, 0, \"ng-template\", 4);\n      i0.ɵɵtext(18, \"\\n      \");\n      i0.ɵɵtemplate(19, JobExecutionComponent_ng_template_19_Template, 104, 27, \"ng-template\", 5);\n      i0.ɵɵtext(20, \"\\n      \");\n      i0.ɵɵtemplate(21, JobExecutionComponent_ng_template_21_Template, 47, 18, \"ng-template\", 6);\n      i0.ɵɵtext(22, \"\\n      \");\n      i0.ɵɵtemplate(23, JobExecutionComponent_ng_template_23_Template, 7, 0, \"ng-template\", 7);\n      i0.ɵɵtext(24, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(26, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(27, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"value\", ctx.jobExecutions)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(9, _c1))(\"rows\", ctx.pageSize)(\"autoLayout\", true)(\"showCurrentPageReport\", true)(\"lazy\", true)(\"totalRecords\", ctx.totalRecords)(\"paginator\", true)(\"loading\", ctx.loading);\n    }\n  },\n  dependencies: [i10.NgControlStatus, i10.NgModel, i11.FaIconComponent, i12.PrimeTemplate, i13.ButtonDirective, i5.RouterLink, i14.Tooltip, i15.Table, i15.SortableColumn, i15.SortIcon, i15.ColumnFilter, i16.Calendar, i17.TranslateDirective, i18.AlertComponent, i19.MultiSelect, i20.DatePipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","JobExecutionComponent","constructor","jobExecutionService","parseLinks","alertService","accountService","activatedRoute","router","eventManager","n2httpService","exportUtilsService","codeService","localeId","pagination_constants_1","job_execution_model_1","currentPage","load","event","loading","lazyLoadEvent","options","convertLazyEvent","pageData","pageSize","search","subscribe","data","console","log","jobExecutions","body","content","totalRecords","totalElements","error","error_desc","exportCSV","dataTable","resp","columns","field","header","index","dtoList","forEach","d","dto","sn","id","name","jobName","instanceId","jobInstanceId","scheduleId","jobScheduleId","startTime","endTime","duration","status","push","total_no_of_elems","concat","Date","onPage","rows","first","clearFilter","table","clear","callbackFilter","input","filter","formatted","filterMetadata","filters","value","ngOnInit","identity","account","currentAccount","gets","codes","jobList","getBatchJobNameList","getBatchJobStatusList","batchJobNameList","jobStatusList","ngOnDestroy","eventSubscriber","destroy","reset","searchParamCriteria","convertDate","searchParam","format","input_constants_1","exports","core_1","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\batch\\job-execution\\job-execution.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\batch\\job-execution\\job-execution.component.html"],"sourcesContent":["import {Component, OnInit, OnDestroy, Inject, LOCALE_ID} from '@angular/core';\r\nimport {HttpResponse, HttpErrorResponse, HttpParams} from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription, combineLatest } from 'rxjs';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { EventManager } from 'app/core/util/event-manager.service';\r\nimport { ParseLinks } from 'app/core/util/parse-links.service';\r\nimport { JobExecution, JobExecutionStatus, SearchParamModel } from './job-execution.model';\r\nimport { JobExecutionService } from './job-execution.service';\r\nimport { ITEMS_PER_PAGE } from 'app/config/pagination.constants';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport dayjs from 'dayjs';\r\nimport { DATE_FORMAT } from 'app/config/input.constants';\r\nimport { FilterMetadata, LazyLoadEvent } from 'primeng/api';\r\nimport {Table} from 'primeng/table';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport {Job} from \"app/admin/schedule/schedule.model\";\r\nimport {formatDate} from \"@angular/common\";\r\nimport {CodeView, IcCodeService} from \"app/ng-connect\";\r\n\r\n@Component({\r\n  selector: 'ic-job-execution',\r\n  templateUrl: './job-execution.component.html',\r\n})\r\nexport class JobExecutionComponent implements OnInit, OnDestroy {\r\n  currentAccount: any;\r\n  jobExecutions: JobExecution[] = [];\r\n  error: any;\r\n  success: any;\r\n  eventSubscriber?: Subscription;\r\n  routeData: any;\r\n  links: any;\r\n  totalItems: any;\r\n  queryCount: any;\r\n  itemsPerPage = ITEMS_PER_PAGE;\r\n  page!: number;\r\n  ascending!: boolean;\r\n  predicate!: string;\r\n  previousPage: any;\r\n  reverse: any;\r\n  batchJobNameList: any[] = [];\r\n  jobStatusList: any[] = [];\r\n  effectiveDateAsStrDp: any;\r\n  expireDateAsStrDp: any;\r\n  searchParamCriteria = new SearchParamModel();\r\n  public jobList?: CodeView[];\r\n  public jobExecutionStatusList = JobExecutionStatus;\r\n\r\n  public lazyLoadEvent?: LazyLoadEvent;\r\n  public loading = false;\r\n  public totalRecords = 0;\r\n  public pageData: { currentPage: number } = {\r\n    currentPage: 0\r\n  }\r\n  public pageSize = ITEMS_PER_PAGE;\r\n\r\n  constructor(\r\n    private jobExecutionService: JobExecutionService,\r\n    private parseLinks: ParseLinks,\r\n    private alertService: AlertService,\r\n    private accountService: AccountService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private eventManager: EventManager,\r\n    private n2httpService: Ns2HttpService,\r\n    private exportUtilsService: ExportUtilsService,\r\n    private codeService: IcCodeService,\r\n    @Inject(LOCALE_ID) protected localeId: string\r\n  ) {}\r\n\r\n  load(event: LazyLoadEvent): void {\r\n    this.loading = true;\r\n    this.lazyLoadEvent = event;\r\n\r\n    const options = this.n2httpService.convertLazyEvent(event, this.pageData, this.pageSize);\r\n\r\n    // this.jobExecutionService.query(options).subscribe(\r\n    //   (res: HttpResponse<any>) => this.onSuccess(res.body, res.headers),\r\n    //   (res: HttpResponse<any>) => this.onError(res.body)\r\n    // );\r\n\r\n    this.jobExecutionService.search(options).subscribe(\r\n      data => {\r\n        console.log(\"data\",data);\r\n        this.jobExecutions = data.body?.data?.content;\r\n        this.totalRecords = data.body?.data?.totalElements;\r\n        this.loading = false;\r\n      },\r\n      error => {\r\n        console.log(error.error?.error_desc);\r\n        this.loading = false;\r\n      })\r\n  }\r\n\r\n  exportCSV(dataTable: Table): void {\r\n    const options = this.n2httpService.convertLazyEvent(this.lazyLoadEvent, 0, this.totalRecords);\r\n\r\n    this.jobExecutionService.search(options).subscribe(\r\n      resp => {\r\n        if(resp.body?.data?.content) {\r\n\r\n          const data = resp.body?.data?.content;\r\n\r\n          const columns =\r\n            [\r\n              {field: 'sn', header: 'SN', index: 0},\r\n              {field: 'id', header: 'Job Schedule ID', index: 1},\r\n              {field: 'name', header: 'Job Name', index: 2},\r\n              {field: 'instanceId', header: 'Job Instance Id', index: 3},\r\n              {field: 'scheduleId', header: 'Job Schedule Id', index: 4},\r\n              {field: 'startTime', header: 'Start Time', index: 5},\r\n              {field: 'endTime', header: 'End Time', index: 6},\r\n              {field: 'duration', header: 'Duration', index: 7},\r\n              {field: 'status', header: 'Status', index: 8}\r\n            ];\r\n\r\n          const dtoList:any[] = [];\r\n          console.log(\"data\", data);\r\n          data.forEach((d: JobExecution, index: number) => {\r\n            const dto = {\r\n              sn: index + 1,\r\n              id: d.id,\r\n              name: d.jobName,\r\n              instanceId: d.jobInstanceId,\r\n              scheduleId: d.jobScheduleId,\r\n              startTime: d.startTime,\r\n              endTime: d.endTime,\r\n              duration: d.duration,\r\n              status: d.status\r\n            }\r\n            dtoList.push(dto);\r\n          });\r\n          this.exportUtilsService.exportCSV(dataTable, dtoList,resp.body.data.total_no_of_elems, columns,\r\n            \"data_\".concat(formatDate(new Date(),\"dd-MM-YYYY\", this.localeId)));\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error.error?.error_desc);\r\n        this.loading = false;\r\n      })\r\n  }\r\n\r\n  onPage(event: any): void {\r\n    this.pageSize = event.rows;\r\n    this.pageData.currentPage = event.first / event.rows;\r\n  }\r\n\r\n  public clearFilter(table: Table): void {\r\n    table.clear();\r\n  }\r\n\r\n  callbackFilter(input: any, filter: (a: any) => void, id: string, table: Table): void {\r\n    console.log(\"input\", input);\r\n    console.log(\"filter\", filter);\r\n    const formatted: string = formatDate(input, \"yyyy-MM-dd HH:mm:ss\", this.localeId);\r\n\r\n    filter(formatted);\r\n\r\n    //Patch back value without triggering filter\r\n    const filterMetadata = table.filters[id] as FilterMetadata[];\r\n    filterMetadata[0].value = input;\r\n  }\r\n\r\n  // loadAll(): void {\r\n  //   if (!this.searchParamCriteria.jobName) {\r\n  //     this.searchParamCriteria.jobName = '';\r\n  //   }\r\n  //\r\n  //   if (!this.searchParamCriteria.jobStatus) {\r\n  //     this.searchParamCriteria.jobStatus = '';\r\n  //   }\r\n  //\r\n  //   this.jobExecutionService\r\n  //     .query({\r\n  //       jobStartDateAsStr: this.convertDate(this.searchParamCriteria.jobStartDateAsStr),\r\n  //       jobEndDateAsStr: this.convertDate(this.searchParamCriteria.jobEndDateAsStr),\r\n  //       jobName: this.searchParamCriteria.jobName,\r\n  //       jobStatus: this.searchParamCriteria.jobStatus,\r\n  //       page: this.page - 1,\r\n  //       size: this.itemsPerPage,\r\n  //       sort: this.sort(),\r\n  //     })\r\n  //     .subscribe(\r\n  //       (res: HttpResponse<JobExecution[]>) => this.onSuccess(res.body, res.headers),\r\n  //       (res: HttpErrorResponse) => this.onError(res.message)\r\n  //     );\r\n  // }\r\n  // loadPage(page: number): void {\r\n  //   if (page !== this.previousPage) {\r\n  //     this.previousPage = page;\r\n  //     this.transition();\r\n  //   }\r\n  // }\r\n  // transition(): void {\r\n  //   this.router.navigate(['/admin/job-execution'], {\r\n  //     queryParams: {\r\n  //       page: this.page,\r\n  //       size: this.itemsPerPage,\r\n  //       sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc'),\r\n  //     },\r\n  //   });\r\n  // }\r\n\r\n  // clear(): void {\r\n  //   this.page = 0;\r\n  //   this.router.navigate([\r\n  //     '/admin/job-execution',\r\n  //     {\r\n  //       page: this.page,\r\n  //       sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc'),\r\n  //     },\r\n  //   ]);\r\n  // }\r\n\r\n  ngOnInit(): void {\r\n    this.accountService.identity().subscribe(account => (this.currentAccount = account));\r\n    this.codeService.gets('batch_job').subscribe((codes: any[]) => {\r\n      this.jobList = codes[0];\r\n    });\r\n    // this.handleNavigation();\r\n    this.getBatchJobNameList();\r\n    this.getBatchJobStatusList();\r\n    // this.registerChangeInJobExecutions();\r\n  }\r\n\r\n  getBatchJobNameList(): void {\r\n    this.jobExecutionService.getBatchJobNameList().subscribe((data: any[]) => {\r\n      this.batchJobNameList = data;\r\n    });\r\n  }\r\n\r\n  getBatchJobStatusList(): void {\r\n    this.jobExecutionService.getBatchJobStatusList().subscribe((data: any[]) => {\r\n      this.jobStatusList = data;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.eventSubscriber) {\r\n      this.eventManager.destroy(this.eventSubscriber);\r\n    }\r\n  }\r\n\r\n  // trackId(index: number, item: JobExecution): any {\r\n  //   return item.id;\r\n  // }\r\n\r\n  // registerChangeInJobExecutions(): void {\r\n  //   this.eventSubscriber = this.eventManager.subscribe('jobExecutionListModification', () => this.loadAll());\r\n  // }\r\n\r\n  // sort(): any {\r\n  //   const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n  //   if (this.predicate !== 'id') {\r\n  //     result.push('id');\r\n  //   }\r\n  //   return result;\r\n  // }\r\n\r\n  // search(): void {\r\n  //   this.loadAll();\r\n  // }\r\n\r\n  reset(): void {\r\n    this.searchParamCriteria = {};\r\n  }\r\n\r\n  private convertDate(searchParam: string): string {\r\n    if (searchParam) {\r\n      return dayjs(searchParam).format(DATE_FORMAT);\r\n    }\r\n    return '';\r\n  }\r\n\r\n  // private handleNavigation(): void {\r\n  //   combineLatest([this.activatedRoute.data, this.activatedRoute.queryParamMap]).subscribe(([data, params]) => {\r\n  //     const page = params.get('page');\r\n  //     this.page = page !== null ? +page : 1;\r\n  //     const sort = (params.get('sort') ?? data['defaultSort']).split(',');\r\n  //     this.predicate = sort[0];\r\n  //     this.ascending = sort[1] === 'asc';\r\n  //     this.loadAll();\r\n  //   });\r\n  // }\r\n\r\n  // private onSuccess(data: any, headers: any): void {\r\n  //   this.links = this.parseLinks.parse(headers.get('link'));\r\n  //   this.totalItems = headers.get('X-Total-Count');\r\n  //   this.queryCount = this.totalItems;\r\n  //   this.jobExecutions = data;\r\n  //   this.loading = false;\r\n  // }\r\n\r\n  // private onError(error: any): void {\r\n  //   this.loading = false;\r\n  //   this.alertService.addAlert({ type: 'danger', translationKey: error.message });\r\n  // }\r\n}\r\n","<div>\r\n  <h2>\r\n    <span icTranslate=\"jobWebApp.jobExecution.home.title\">Job Executions</span>\r\n  </h2>\r\n  <ic-alert></ic-alert>\r\n  <br />\r\n\r\n  <div class=\"card\">\r\n    <p-table #jobExecutionTable [value]=\"jobExecutions\" dataKey=\"id\"\r\n             styleClass=\"p-datatable-gridlines\"\r\n             [rowsPerPageOptions]=\"[10,25,50]\"\r\n             [rows]=\"pageSize\"\r\n             [autoLayout]=\"true\"\r\n             [showCurrentPageReport]=\"true\"\r\n             currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n             [lazy]=\"true\"\r\n             [totalRecords]=\"totalRecords\"\r\n             [paginator]=\"true\"\r\n             [loading]=\"loading\"\r\n             (onLazyLoad)=\"load($event)\"\r\n             (onPage)=\"onPage($event)\">\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"flex\">\r\n          <button pButton label=\"All\" class=\"p-button-outlined\" (click)=\"clearFilter(jobExecutionTable)\"></button>\r\n          <div class='justify-content-start align-items-center'>\r\n            <button type='button' pButton pRipple icon='pi pi-file-o' (click)='exportCSV(jobExecutionTable)' pTooltip='Export as CSV'\r\n                    tooltipPosition='bottom'></button>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th scope=\"col\" pSortableColumn=\"id\">\r\n            <div icTranslate=\"global.field.id\">\r\n              ID\r\n            </div>\r\n            <p-sortIcon field=\"id\"></p-sortIcon>\r\n            <p-columnFilter [showAddButton]=\"false\" [showOperator]=\"false\" [showMatchModes]=\"false\" type=\"text\" field=\"id\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n          </th>\r\n          <th scope=\"col\" pSortableColumn=\"jobInstance.jobName\">\r\n            <div icTranslate=\"jobWebApp.jobExecution.jobName\">\r\n              Job Name\r\n            </div>\r\n            <p-sortIcon field=\"jobInstance.jobName\"></p-sortIcon>\r\n            <p-columnFilter [showAddButton]=\"false\" [showOperator]=\"false\" [showMatchModes]=\"false\" type=\"text\" field=\"jobInstance.jobName\" display=\"menu\" matchMode=\"in\">\r\n              <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                <p-multiSelect [ngModel]=\"value\" [options]=\"jobList\" placeholder=\"Any\"\r\n                               (onChange)=\"filter($event.value)\" optionLabel=\"codeId\" optionValue=\"codeId\">\r\n                </p-multiSelect>\r\n              </ng-template>\r\n            </p-columnFilter>\r\n          </th>\r\n          <th scope=\"col\"  pSortableColumn=\"jobInstance.id\">\r\n            <div icTranslate=\"jobWebApp.jobExecution.jobInstanceId\">\r\n              Job Instance ID\r\n            </div>\r\n            <p-sortIcon field=\"jobInstance.id\"></p-sortIcon>\r\n            <p-columnFilter [showButtons]=\"false\" [useGrouping]=\"false\" [showAddButton]=\"false\" [showOperator]=\"false\" [showMatchModes]=\"false\" type=\"numeric\" field=\"jobInstance.id\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n          </th>\r\n<!--          <th pSortableColumn=\"jobScheduleId\">-->\r\n          <th scope=\"col\">\r\n            <div icTranslate=\"schedule.table.id\">\r\n              Job Schedule ID\r\n            </div>\r\n<!--            <p-sortIcon field=\"jobScheduleId\"></p-sortIcon>-->\r\n<!--            <p-columnFilter [showAddButton]=\"false\" [showOperator]=\"false\" [showMatchModes]=\"false\" type=\"text\" field=\"jobScheduleId\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>-->\r\n          </th>\r\n          <th scope=\"col\" pSortableColumn=\"startTime\">\r\n            <div icTranslate=\"jobWebApp.jobExecution.startTime\">\r\n              Start Time\r\n            </div>\r\n            <p-sortIcon field=\"startTime\"></p-sortIcon>\r\n<!--            <p-columnFilter [showAddButton]=\"false\" [showOperator]=\"false\" type=\"text\" field=\"startTime\" display=\"menu\"></p-columnFilter>-->\r\n            <p-columnFilter [showAddButton]=\"false\" [showOperator]=\"false\" [showMatchModes]=\"false\" [showApplyButton]=\"false\" field=\"startTime\" display=\"menu\" matchMode=\"contains\">\r\n              <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                <p-calendar [ngModel]=\"value\" [readonlyInput]=\"true\" (onSelect)=\"callbackFilter($event, filter, 'startTime', jobExecutionTable)\" dateFormat=\"yy-mm-dd\">\r\n                </p-calendar>\r\n              </ng-template>\r\n            </p-columnFilter>\r\n          </th>\r\n          <th scope=\"col\" pSortableColumn=\"endTime\">\r\n            <div icTranslate=\"jobWebApp.jobExecution.endTime\">\r\n              End Time\r\n            </div>\r\n            <p-sortIcon field=\"endTime\"></p-sortIcon>\r\n<!--            <p-columnFilter [showAddButton]=\"false\" [showOperator]=\"false\" type=\"text\" field=\"endTime\" display=\"menu\"></p-columnFilter>-->\r\n            <p-columnFilter [showAddButton]=\"false\" [showOperator]=\"false\" [showMatchModes]=\"false\" [showApplyButton]=\"false\" field=\"endTime\" display=\"menu\" matchMode=\"contains\">\r\n              <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                <p-calendar [ngModel]=\"value\" [readonlyInput]=\"true\" (onSelect)=\"callbackFilter($event, filter, 'endTime', jobExecutionTable)\" dateFormat=\"yy-mm-dd\">\r\n                </p-calendar>\r\n              </ng-template>\r\n            </p-columnFilter>\r\n          </th>\r\n<!--          <th pSortableColumn=\"durationInSeconds\">-->\r\n          <th scope=\"col\">\r\n            <div icTranslate=\"jobWebApp.jobExecution.duration\">\r\n              Duration\r\n            </div>\r\n<!--            <p-sortIcon field=\"durationInSeconds\"></p-sortIcon>-->\r\n<!--            <p-columnFilter [showAddButton]=\"false\" [showOperator]=\"false\" type=\"text\" field=\"durationInSeconds\" display=\"menu\"></p-columnFilter>-->\r\n            <p-columnFilter [showButtons]=\"false\" [useGrouping]=\"false\" [showAddButton]=\"false\" [showOperator]=\"false\" [showMatchModes]=\"false\" type=\"numeric\" field=\"durationInSeconds\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n          </th>\r\n          <th scope=\"col\" pSortableColumn=\"status\">\r\n            <div icTranslate=\"jobWebApp.jobExecution.status\">\r\n              Status\r\n            </div>\r\n            <p-sortIcon field=\"status\"></p-sortIcon>\r\n            <p-columnFilter [showAddButton]=\"false\" [showOperator]=\"false\" [showMatchModes]=\"false\" type=\"text\" field=\"status\" display=\"menu\" matchMode=\"in\">\r\n              <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                <p-multiSelect [ngModel]=\"value\" [options]=\"jobExecutionStatusList\" placeholder=\"Any\"\r\n                               (onChange)=\"filter($event.value)\" optionLabel=\"label\" optionValue=\"value\">\r\n                </p-multiSelect>\r\n              </ng-template>\r\n            </p-columnFilter>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <div icTranslate=\"jobWebApp.jobExecution.action\">\r\n              Action\r\n            </div>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-jobExecution>\r\n        <tr>\r\n          <td>\r\n            {{ jobExecution.id }}\r\n          </td>\r\n          <td>\r\n            {{ jobExecution.jobName }}\r\n          </td>\r\n          <td>\r\n            {{ jobExecution.jobInstanceId }}\r\n          </td>\r\n          <td>\r\n            {{ jobExecution.jobScheduleId }}\r\n          </td>\r\n          <td>\r\n            {{ jobExecution.startTime | date: 'yyyy-MM-dd HH:mm:ss' }}\r\n          </td>\r\n          <td>\r\n            {{ jobExecution.endTime | date: 'yyyy-MM-dd HH:mm:ss' }}\r\n          </td>\r\n          <td>\r\n            {{ jobExecution.duration }}\r\n          </td>\r\n          <td>\r\n            {{ jobExecution.status }}\r\n          </td>\r\n          <td>\r\n            <div class=\"btn-group flex-btn-group-container\">\r\n              <span>\r\n                <button type=\"submit\" [routerLink]=\"['job-execution', jobExecution.id]\" class=\"btn btn-info btn-sm\">\r\n                  <fa-icon [icon]=\"'eye'\"></fa-icon> <span class=\"d-none d-md-inline\" icTranslate=\"jobWebApp.jobExecution.btn.viewExecution\">View Execution</span>\r\n                </button>\r\n              </span>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"7\">No Job Execution found.</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}