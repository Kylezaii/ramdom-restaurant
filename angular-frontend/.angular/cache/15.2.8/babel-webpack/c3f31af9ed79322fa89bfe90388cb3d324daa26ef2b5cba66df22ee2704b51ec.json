{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoginService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst operators_1 = require(\"rxjs/operators\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/auth/auth-jwt.service\"));\nclass LoginService {\n  constructor(accountService, authServerProvider) {\n    this.accountService = accountService;\n    this.authServerProvider = authServerProvider;\n  }\n  login(credentials) {\n    return this.authServerProvider.login(credentials).pipe((0, operators_1.mergeMap)(() => this.accountService.identity(true)));\n  }\n  logout() {\n    this.authServerProvider.logout().subscribe({\n      complete: () => this.accountService.authenticate(null)\n    });\n  }\n  // Kerberos Added 20220408 , Start\n  loginKerberos() {\n    return this.authServerProvider.loginKerberos().pipe((0, operators_1.mergeMap)(() => this.accountService.identity(true)));\n  }\n}\nexports.LoginService = LoginService;\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.AccountService), i0.ɵɵinject(i2.AuthServerProvider));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;AAEA;;;;AAOA,MACaA,YAAY;EACvBC,YAAoBC,cAA8B,EAAUC,kBAAsC;IAA9E,mBAAc,GAAdD,cAAc;IAA0B,uBAAkB,GAAlBC,kBAAkB;EAAuB;EAErGC,KAAK,CAACC,WAAkB;IACtB,OAAO,IAAI,CAACF,kBAAkB,CAACC,KAAK,CAACC,WAAW,CAAC,CAACC,IAAI,CAAC,wBAAQ,EAAC,MAAM,IAAI,CAACJ,cAAc,CAACK,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5G;EAEAC,MAAM;IACJ,IAAI,CAACL,kBAAkB,CAACK,MAAM,EAAE,CAACC,SAAS,CAAC;MAAEC,QAAQ,EAAE,MAAM,IAAI,CAACR,cAAc,CAACS,YAAY,CAAC,IAAI;IAAC,CAAE,CAAC;EACxG;EAEA;EACAC,aAAa;IACV,OAAO,IAAI,CAACT,kBAAkB,CAACS,aAAa,EAAE,CAACN,IAAI,CAAC,wBAAQ,EAAC,MAAM,IAAI,CAACJ,cAAc,CAACK,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1G;;AAfFM;;mBACab,YAAY;AAAA;;SAAZA,YAAY;EAAAc,SAAZd,YAAY;EAAAe,YADC;AAAM","names":["LoginService","constructor","accountService","authServerProvider","login","credentials","pipe","identity","logout","subscribe","complete","authenticate","loginKerberos","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\login\\login.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {mergeMap} from 'rxjs/operators';\r\n\r\nimport {Account} from 'app/core/auth/account.model';\r\nimport {AccountService} from 'app/core/auth/account.service';\r\nimport {AuthServerProvider} from 'app/core/auth/auth-jwt.service';\r\nimport {Login} from './login.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoginService {\r\n  constructor(private accountService: AccountService, private authServerProvider: AuthServerProvider) {}\r\n\r\n  login(credentials: Login): Observable<Account | null> {\r\n    return this.authServerProvider.login(credentials).pipe(mergeMap(() => this.accountService.identity(true)));\r\n  }\r\n\r\n  logout(): void {\r\n    this.authServerProvider.logout().subscribe({ complete: () => this.accountService.authenticate(null) });\r\n  }\r\n\r\n  // Kerberos Added 20220408 , Start\r\n  loginKerberos(): Observable<Account | null> {\r\n     return this.authServerProvider.loginKerberos().pipe(mergeMap(() => this.accountService.identity(true)));\r\n  }\r\n  // Kerberos Added 20220408 , End\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}