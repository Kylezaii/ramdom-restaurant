{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileUploadWrapperComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@angular/core\");\nconst nspapp_constants_1 = require(\"app/shared/constants/nspapp.constants\");\nconst api_1 = require(\"primeng/api\");\nconst rxjs_1 = require(\"rxjs\");\nconst angular_cacheable_1 = require(\"angular-cacheable\");\nconst forms_1 = require(\"@angular/forms\");\nconst fileupload2_directive_1 = require(\"app/shared/validator/fileupload2.directive\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i2 = tslib_1.__importStar(require(\"app/shared/service/file-upload.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i4 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i5 = tslib_1.__importStar(require(\"./file-upload2.component\"));\nconst _c0 = [\"n2fileUpload\"];\nclass FileUploadWrapperComponent {\n  constructor(messageService, fileUploadService, toastService, formBuilder) {\n    this.messageService = messageService;\n    this.fileUploadService = fileUploadService;\n    this.toastService = toastService;\n    this.formBuilder = formBuilder;\n    // fileUploadForm: FormGroup;\n    this.fileUploadForm = this.formBuilder.group({\n      fileControl: new forms_1.FormControl([], null)\n    });\n    // private preloadedParams: any;\n    this.errMsg = [{\n      severity: 'error',\n      summary: 'Error',\n      detail: 'Message Content'\n    }];\n    // for emitting front end validation errors, use for disabling business context buttons\n    this.validationErrEvent = new core_1.EventEmitter();\n    this.defaultParam = {\n      fileLimit: nspapp_constants_1.NSPAppConstants.MAXIMUM_FILES,\n      maxMultiFileSize: nspapp_constants_1.NSPAppConstants.MAXIMUM_MULTI_FILE_SIZE,\n      maxSingleFileSize: nspapp_constants_1.NSPAppConstants.MAXIMUM_SINGLE_FILE_SIZE // in MB Override this if db fetches value or cache value\n    };\n\n    this.subscription = new rxjs_1.Subscription();\n  }\n  ngOnInit() {\n    this.preloadDMSParams();\n  }\n  fileUploadHandler(module, useCase) {\n    this.n2fileUpload.fileUploadHandler(module, useCase);\n  }\n  emitError(event) {\n    this.validationErrEvent.emit(event);\n  }\n  preloadDMSParams() {\n    this.fileUploadService.preloadDMSParam(null).subscribe(resp => {\n      if (resp.body.data) {\n        const preloadedParams = resp.body.data;\n        console.log('preloaded', preloadedParams);\n        this.defaultParam.maxMultiFileSize = preloadedParams.dms_multiple_file_max_size;\n        this.defaultParam.maxSingleFileSize = preloadedParams.dms_single_file_max_size;\n        this.defaultParam.fileLimit = preloadedParams.dms_max_number_files;\n        let baseValidator = forms_1.Validators.compose([fileupload2_directive_1.FileUploadValidator2.maxFileLimit(this.defaultParam.fileLimit), fileupload2_directive_1.FileUploadValidator2.maxSingleFileSize(this.defaultParam.maxSingleFileSize)]);\n        // order of composed validators have to be placed in order, for it to overwrite previous similar validatorFn\n        // default validators, followed by overwriting validators\n        if (this.fileValidator) {\n          baseValidator = forms_1.Validators.compose([baseValidator, this.fileValidator]);\n        }\n        this.fileUploadForm = this.formBuilder.group({\n          fileControl: new forms_1.FormControl([], baseValidator)\n        });\n      }\n    });\n  }\n}\nFileUploadWrapperComponent.ɵfac = function FileUploadWrapperComponent_Factory(t) {\n  return new (t || FileUploadWrapperComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.FileUploadService), i0.ɵɵdirectiveInject(i3.CustomToastService), i0.ɵɵdirectiveInject(i4.FormBuilder));\n};\nFileUploadWrapperComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FileUploadWrapperComponent,\n  selectors: [[\"ic-file-upload-wrapper\"]],\n  viewQuery: function FileUploadWrapperComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.n2fileUpload = _t.first);\n    }\n  },\n  inputs: {\n    fileValidator: \"fileValidator\"\n  },\n  outputs: {\n    validationErrEvent: \"validationErrEvent\"\n  },\n  features: [i0.ɵɵProvidersFeature([api_1.MessageService, {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: (0, core_1.forwardRef)(() => FileUploadWrapperComponent),\n    multi: true\n  }])],\n  decls: 7,\n  vars: 2,\n  consts: [[3, \"formGroup\"], [\"formControlName\", \"fileControl\", 3, \"control\", \"validationErrEvent\"], [\"n2fileUpload\", \"\"]],\n  template: function FileUploadWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \"\\n\\n\");\n      i0.ɵɵelementStart(1, \"form\", 0);\n      i0.ɵɵtext(2, \"\\n  \");\n      i0.ɵɵelementStart(3, \"ic-file-upload\", 1, 2);\n      i0.ɵɵlistener(\"validationErrEvent\", function FileUploadWrapperComponent_Template_ic_file_upload_validationErrEvent_3_listener($event) {\n        return ctx.emitError($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(5, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(6, \"\\n\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.fileUploadForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"control\", ctx.fileUploadForm == null ? null : ctx.fileUploadForm.get(\"fileControl\"));\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.FileUpload2Component],\n  styles: [\".custom-fileupload-remove-button.p-button.p-button-rounded {\\n  width: 1.5rem;\\n}\\n\\n  .custom-fileupload-remove-button.p-button.p-button-icon-only.p-button-rounded {\\n  height: 1.5rem;\\n}\\n\\n  .p-button.p-button-sm .p-button-icon {\\n  border: 3px;\\n}\\n\\n  .p-button.p-button-sm .p-button-danger {\\n  font-size: 0.6rem;\\n}\\n\\n  .p-fileupload-files {\\n  display: none !important;\\n}\\n\\n  .p-fileupload-content .p-progressbar {\\n  display: none !important;\\n}\\n\\n.n2-file-upload-content[_ngcontent-%COMP%] {\\n  overflow: auto;\\n  height: 400px;\\n  max-width: 100%;\\n  overflow-x: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGUtdXBsb2FkLmNvbXBvbmVudC5zY3NzIiwiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxccHJvamVjdHMlMjAyXFxuc3BheWlpYXBwXFxzcmNcXG1haW5cXHdlYmFwcFxcYXBwXFxzaGFyZWRcXGNvbXBvbmVudFxcZmlsZS11cGxvYWRcXGZpbGUtdXBsb2FkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBRUksYUFBQTtBQ0ZKOztBREtBO0VBQ0ksY0FBQTtBQ0ZKOztBREtBO0VBQ0ksV0FBQTtBQ0ZKOztBREtBO0VBQ0ksaUJBQUE7QUNGSjs7QURLQTtFQUNJLHdCQUFBO0FDRko7O0FES0E7RUFDSSx3QkFBQTtBQ0ZKOztBRFNBO0VBQ0ksY0FBQTtFQUNBLGFBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7QUNOSiIsImZpbGUiOiJmaWxlLXVwbG9hZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuOjpuZy1kZWVwIC5jdXN0b20tZmlsZXVwbG9hZC1yZW1vdmUtYnV0dG9uLnAtYnV0dG9uLnAtYnV0dG9uLXJvdW5kZWQge1xyXG5cclxuICAgIHdpZHRoOiAxLjVyZW07XHJcbn1cclxuXHJcbjo6bmctZGVlcCAuY3VzdG9tLWZpbGV1cGxvYWQtcmVtb3ZlLWJ1dHRvbi5wLWJ1dHRvbi5wLWJ1dHRvbi1pY29uLW9ubHkucC1idXR0b24tcm91bmRlZHtcclxuICAgIGhlaWdodDogMS41cmVtO1xyXG59XHJcblxyXG46Om5nLWRlZXAgLnAtYnV0dG9uLnAtYnV0dG9uLXNtIC5wLWJ1dHRvbi1pY29uIHtcclxuICAgIGJvcmRlcjogM3B4O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLnAtYnV0dG9uLnAtYnV0dG9uLXNtIC5wLWJ1dHRvbi1kYW5nZXIge1xyXG4gICAgZm9udC1zaXplOiAwLjZyZW07XHJcbn1cclxuXHJcbjo6bmctZGVlcCAucC1maWxldXBsb2FkLWZpbGVze1xyXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLnAtZmlsZXVwbG9hZC1jb250ZW50IC5wLXByb2dyZXNzYmFye1xyXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4vLyA6Om5nLWRlZXAgLnAtZmlsZXVwbG9hZC1jaG9vc2V7XHJcbi8vICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbi8vIH1cclxuXHJcbi5uMi1maWxlLXVwbG9hZC1jb250ZW50IHtcclxuICAgIG92ZXJmbG93OiBhdXRvOyBcclxuICAgIGhlaWdodDogNDAwcHg7IFxyXG4gICAgbWF4LXdpZHRoOiAxMDAlOyBcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlblxyXG59IiwiOjpuZy1kZWVwIC5jdXN0b20tZmlsZXVwbG9hZC1yZW1vdmUtYnV0dG9uLnAtYnV0dG9uLnAtYnV0dG9uLXJvdW5kZWQge1xuICB3aWR0aDogMS41cmVtO1xufVxuXG46Om5nLWRlZXAgLmN1c3RvbS1maWxldXBsb2FkLXJlbW92ZS1idXR0b24ucC1idXR0b24ucC1idXR0b24taWNvbi1vbmx5LnAtYnV0dG9uLXJvdW5kZWQge1xuICBoZWlnaHQ6IDEuNXJlbTtcbn1cblxuOjpuZy1kZWVwIC5wLWJ1dHRvbi5wLWJ1dHRvbi1zbSAucC1idXR0b24taWNvbiB7XG4gIGJvcmRlcjogM3B4O1xufVxuXG46Om5nLWRlZXAgLnAtYnV0dG9uLnAtYnV0dG9uLXNtIC5wLWJ1dHRvbi1kYW5nZXIge1xuICBmb250LXNpemU6IDAuNnJlbTtcbn1cblxuOjpuZy1kZWVwIC5wLWZpbGV1cGxvYWQtZmlsZXMge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbjo6bmctZGVlcCAucC1maWxldXBsb2FkLWNvbnRlbnQgLnAtcHJvZ3Jlc3NiYXIge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi5uMi1maWxlLXVwbG9hZC1jb250ZW50IHtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIGhlaWdodDogNDAwcHg7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufSJdfQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvc2hhcmVkL2NvbXBvbmVudC9maWxlLXVwbG9hZC9maWxlLXVwbG9hZC5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uL3Byb2plY3RzJTIwMi9uc3BheWlpYXBwL3NyYy9tYWluL3dlYmFwcC9hcHAvc2hhcmVkL2NvbXBvbmVudC9maWxlLXVwbG9hZC9maWxlLXVwbG9hZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUVJLGFBQUE7QUNGSjs7QURLQTtFQUNJLGNBQUE7QUNGSjs7QURLQTtFQUNJLFdBQUE7QUNGSjs7QURLQTtFQUNJLGlCQUFBO0FDRko7O0FES0E7RUFDSSx3QkFBQTtBQ0ZKOztBREtBO0VBQ0ksd0JBQUE7QUNGSjs7QURTQTtFQUNJLGNBQUE7RUFDQSxhQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0FDTko7QURDQSxnZ0ZBQWdnRiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuOjpuZy1kZWVwIC5jdXN0b20tZmlsZXVwbG9hZC1yZW1vdmUtYnV0dG9uLnAtYnV0dG9uLnAtYnV0dG9uLXJvdW5kZWQge1xyXG5cclxuICAgIHdpZHRoOiAxLjVyZW07XHJcbn1cclxuXHJcbjo6bmctZGVlcCAuY3VzdG9tLWZpbGV1cGxvYWQtcmVtb3ZlLWJ1dHRvbi5wLWJ1dHRvbi5wLWJ1dHRvbi1pY29uLW9ubHkucC1idXR0b24tcm91bmRlZHtcclxuICAgIGhlaWdodDogMS41cmVtO1xyXG59XHJcblxyXG46Om5nLWRlZXAgLnAtYnV0dG9uLnAtYnV0dG9uLXNtIC5wLWJ1dHRvbi1pY29uIHtcclxuICAgIGJvcmRlcjogM3B4O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLnAtYnV0dG9uLnAtYnV0dG9uLXNtIC5wLWJ1dHRvbi1kYW5nZXIge1xyXG4gICAgZm9udC1zaXplOiAwLjZyZW07XHJcbn1cclxuXHJcbjo6bmctZGVlcCAucC1maWxldXBsb2FkLWZpbGVze1xyXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLnAtZmlsZXVwbG9hZC1jb250ZW50IC5wLXByb2dyZXNzYmFye1xyXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4vLyA6Om5nLWRlZXAgLnAtZmlsZXVwbG9hZC1jaG9vc2V7XHJcbi8vICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbi8vIH1cclxuXHJcbi5uMi1maWxlLXVwbG9hZC1jb250ZW50IHtcclxuICAgIG92ZXJmbG93OiBhdXRvOyBcclxuICAgIGhlaWdodDogNDAwcHg7IFxyXG4gICAgbWF4LXdpZHRoOiAxMDAlOyBcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlblxyXG59IiwiOjpuZy1kZWVwIC5jdXN0b20tZmlsZXVwbG9hZC1yZW1vdmUtYnV0dG9uLnAtYnV0dG9uLnAtYnV0dG9uLXJvdW5kZWQge1xuICB3aWR0aDogMS41cmVtO1xufVxuXG46Om5nLWRlZXAgLmN1c3RvbS1maWxldXBsb2FkLXJlbW92ZS1idXR0b24ucC1idXR0b24ucC1idXR0b24taWNvbi1vbmx5LnAtYnV0dG9uLXJvdW5kZWQge1xuICBoZWlnaHQ6IDEuNXJlbTtcbn1cblxuOjpuZy1kZWVwIC5wLWJ1dHRvbi5wLWJ1dHRvbi1zbSAucC1idXR0b24taWNvbiB7XG4gIGJvcmRlcjogM3B4O1xufVxuXG46Om5nLWRlZXAgLnAtYnV0dG9uLnAtYnV0dG9uLXNtIC5wLWJ1dHRvbi1kYW5nZXIge1xuICBmb250LXNpemU6IDAuNnJlbTtcbn1cblxuOjpuZy1kZWVwIC5wLWZpbGV1cGxvYWQtZmlsZXMge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbjo6bmctZGVlcCAucC1maWxldXBsb2FkLWNvbnRlbnQgLnAtcHJvZ3Jlc3NiYXIge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi5uMi1maWxlLXVwbG9hZC1jb250ZW50IHtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIGhlaWdodDogNDAwcHg7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\ntslib_1.__decorate([(0, angular_cacheable_1.Cacheable)({\n  key: 'dms-param'\n})], FileUploadWrapperComponent.prototype, \"preloadDMSParams\", null);\nexports.FileUploadWrapperComponent = FileUploadWrapperComponent;","map":{"version":3,"mappings":";;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAIA,MAcaA,0BAA0B;EAiCrCC,YACUC,cAA8B,EAC9BC,iBAAoC,EACpCC,YAAgC,EAChCC,WAAwB;IAHxB,mBAAc,GAAdH,cAAc;IACd,sBAAiB,GAAjBC,iBAAiB;IACjB,iBAAY,GAAZC,YAAY;IACZ,gBAAW,GAAXC,WAAW;IAnCrB;IAEA,mBAAc,GAAc,IAAI,CAACA,WAAW,CAACC,KAAK,CAAC;MACjDC,WAAW,EAAE,IAAIC,mBAAW,CAAC,EAAE,EAAC,IAAI;KACrC,CAAC;IAED;IACA,WAAM,GAAc,CAAC;MAACC,QAAQ,EAAC,OAAO;MAAEC,OAAO,EAAC,OAAO;MAAEC,MAAM,EAAC;IAAiB,CAAC,CAAC;IAMnF;IACU,uBAAkB,GAAG,IAAIC,mBAAY,EAAO;IAK/C,iBAAY,GAAQ;MAC1BC,SAAS,EAAEC,kCAAe,CAACC,aAAa;MACxCC,gBAAgB,EAAEF,kCAAe,CAACG,uBAAuB;MACzDC,iBAAiB,EAAEJ,kCAAe,CAACK,wBAAwB,CAAC;KAE7D;;IAcC,IAAI,CAACC,YAAY,GAAG,IAAIC,mBAAY,EAAE;EACxC;EAEAC,QAAQ;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAC,iBAAiB,CAACC,MAAc,EAAEC,OAAe;IAC/C,IAAI,CAACC,YAAY,CAACH,iBAAiB,CAACC,MAAM,EAAEC,OAAO,CAAC;EACtD;EAEAE,SAAS,CAACC,KAAY;IACpB,IAAI,CAACC,kBAAkB,CAACC,IAAI,CAACF,KAAK,CAAC;EACrC;EAIAN,gBAAgB;IACd,IAAI,CAACpB,iBAAiB,CAAC6B,eAAe,CAAC,IAAI,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MAC5D,IAAIA,IAAI,CAACC,IAAI,CAACC,IAAI,EAAE;QAClB,MAAMC,eAAe,GAAGH,IAAI,CAACC,IAAI,CAACC,IAAI;QACtCE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,eAAe,CAAC;QACzC,IAAI,CAACG,YAAY,CAACxB,gBAAgB,GAAGqB,eAAe,CAACI,0BAA0B;QAC/E,IAAI,CAACD,YAAY,CAACtB,iBAAiB,GAAGmB,eAAe,CAACK,wBAAwB;QAC9E,IAAI,CAACF,YAAY,CAAC3B,SAAS,GAAGwB,eAAe,CAACM,oBAAoB;QAElE,IAAIC,aAAa,GAAgBpC,kBAAU,CAACqC,OAAO,CAAC,CAACC,4CAAoB,CAACC,YAAY,CAAC,IAAI,CAACP,YAAY,CAAC3B,SAAS,CAAC,EACjHiC,4CAAoB,CAAC5B,iBAAiB,CAAC,IAAI,CAACsB,YAAY,CAACtB,iBAAiB,CAAC,CAAC,CAAC;QAE7E;QACA;QACF,IAAG,IAAI,CAAC8B,aAAa,EAAC;UACpBJ,aAAa,GAAGpC,kBAAU,CAACqC,OAAO,CAAC,CAACD,aAAa,EAAE,IAAI,CAACI,aAAa,CAAC,CAAC;;QAEzE,IAAI,CAACC,cAAc,GAAG,IAAI,CAAC5C,WAAW,CAACC,KAAK,CAAC;UAC3CC,WAAW,EAAE,IAAIC,mBAAW,CAAC,EAAE,EAAEoC,aAAa;SAC/C,CAAC;;IAGN,CAAC,CAAC;EACJ;;;mBAhFW5C,0BAA0B;AAAA;;QAA1BA,0BAA0B;EAAAkD;EAAAC;IAAA;;;;;;;;;;;;;;mCAV1B,CACTC,oBAAc,EACd;IACEC,OAAO,EAAE7C,yBAAiB;IAC1B8C,WAAW,EAAE,qBAAU,EAAC,MAAKtD,0BAA0B,CAAC;IACxDuD,KAAK,EAAE;GACR,CACF;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCrBHC;MAAAA,+BAAmC;MACjCA;MAAAA,4CAIC;MAFDA;QAAA,OAAsBC,qBAAiB;MAAA,EAAC;MAEvCD,iBAAiB;MACpBA;MAAAA,iBAAO;MAEPA;;;MARMA,eAA4B;MAA5BA,8CAA4B;MAEhCA,eAA8C;MAA9CA,mGAA8C;;;;;;AD+E9CE,oBADC,iCAAS,EAAC;EAAEC,GAAG,EAAE;AAAW,CAAE,CAAC,kEAwB/B;AA9FHC","names":["FileUploadWrapperComponent","constructor","messageService","fileUploadService","toastService","formBuilder","group","fileControl","forms_1","severity","summary","detail","core_1","fileLimit","nspapp_constants_1","MAXIMUM_FILES","maxMultiFileSize","MAXIMUM_MULTI_FILE_SIZE","maxSingleFileSize","MAXIMUM_SINGLE_FILE_SIZE","subscription","rxjs_1","ngOnInit","preloadDMSParams","fileUploadHandler","module","useCase","n2fileUpload","emitError","event","validationErrEvent","emit","preloadDMSParam","subscribe","resp","body","data","preloadedParams","console","log","defaultParam","dms_multiple_file_max_size","dms_single_file_max_size","dms_max_number_files","baseValidator","compose","fileupload2_directive_1","maxFileLimit","fileValidator","fileUploadForm","selectors","viewQuery","api_1","provide","useExisting","multi","decls","vars","consts","template","i0","ctx","tslib_1","key","exports"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\shared\\component\\file-upload\\file-upload-wrapper.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\shared\\component\\file-upload\\file-upload-wrapper.component.html"],"sourcesContent":["import {Component, EventEmitter, forwardRef, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {CustomToastService} from 'app/layouts/service/customtoast.service';\r\nimport {NSPAppConstants} from 'app/shared/constants/nspapp.constants';\r\nimport {FileUploadService} from 'app/shared/service/file-upload.service';\r\nimport {Message, MessageService} from 'primeng/api';\r\nimport {Subscription} from 'rxjs';\r\nimport {Cacheable} from 'angular-cacheable';\r\nimport {FormBuilder, FormControl, FormGroup, NG_VALUE_ACCESSOR, ValidatorFn, Validators} from '@angular/forms';\r\nimport {FileUploadValidator2} from 'app/shared/validator/fileupload2.directive';\r\nimport {FileUploadComponent} from './file-upload.component';\r\n\r\n\r\n@Component({\r\n  selector: 'ic-file-upload-wrapper',\r\n  templateUrl: './file-upload-wrapper.component.html',\r\n  styleUrls: ['./file-upload.component.scss'],\r\n  providers: [\r\n    MessageService,\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() =>FileUploadWrapperComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\n\r\nexport class FileUploadWrapperComponent implements  OnInit {\r\n\r\n  // fileUploadForm: FormGroup;\r\n\r\n  fileUploadForm: FormGroup = this.formBuilder.group({\r\n    fileControl: new FormControl([],null)\r\n  });\r\n\r\n   // private preloadedParams: any;\r\n   errMsg: Message[] = [{severity:'error', summary:'Error', detail:'Message Content'}];\r\n\r\n   // control: AbstractControl;\r\n\r\n   @Input() fileValidator: ValidatorFn;\r\n\r\n   // for emitting front end validation errors, use for disabling business context buttons\r\n   @Output() validationErrEvent = new EventEmitter<any>();\r\n\r\n  @ViewChild('n2fileUpload', { static: true })\r\n  public n2fileUpload!: FileUploadComponent;\r\n\r\n  private defaultParam : any= {\r\n    fileLimit: NSPAppConstants.MAXIMUM_FILES, // in units Override this if db fetches value or cache value\r\n    maxMultiFileSize: NSPAppConstants.MAXIMUM_MULTI_FILE_SIZE, // in MB Override this if db fetches value or cache value\r\n    maxSingleFileSize: NSPAppConstants.MAXIMUM_SINGLE_FILE_SIZE // in MB Override this if db fetches value or cache value\r\n\r\n  }\r\n\r\n\r\n\r\n  private subscription: Subscription;\r\n\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private fileUploadService: FileUploadService,\r\n    private toastService: CustomToastService,\r\n    private formBuilder: FormBuilder,\r\n\r\n  ) {\r\n    this.subscription = new Subscription();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.preloadDMSParams();\r\n  }\r\n\r\n  fileUploadHandler(module: string, useCase: string): void {\r\n    this.n2fileUpload.fileUploadHandler(module, useCase);\r\n  }\r\n\r\n  emitError(event: Event): void {\r\n    this.validationErrEvent.emit(event);\r\n  }\r\n\r\n\r\n  @Cacheable({ key: 'dms-param' })\r\n  preloadDMSParams(): void {\r\n    this.fileUploadService.preloadDMSParam(null).subscribe(resp => {\r\n      if (resp.body.data) {\r\n        const preloadedParams = resp.body.data;\r\n        console.log('preloaded', preloadedParams);\r\n        this.defaultParam.maxMultiFileSize = preloadedParams.dms_multiple_file_max_size;\r\n        this.defaultParam.maxSingleFileSize = preloadedParams.dms_single_file_max_size;\r\n        this.defaultParam.fileLimit = preloadedParams.dms_max_number_files;\r\n\r\n        let baseValidator: ValidatorFn = Validators.compose([FileUploadValidator2.maxFileLimit(this.defaultParam.fileLimit),\r\n          FileUploadValidator2.maxSingleFileSize(this.defaultParam.maxSingleFileSize)]);\r\n\r\n          // order of composed validators have to be placed in order, for it to overwrite previous similar validatorFn\r\n          // default validators, followed by overwriting validators\r\n        if(this.fileValidator){\r\n          baseValidator = Validators.compose([baseValidator, this.fileValidator]);\r\n        }\r\n        this.fileUploadForm = this.formBuilder.group({\r\n          fileControl: new FormControl([], baseValidator)\r\n        })\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","\r\n\r\n<form [formGroup]='fileUploadForm'>\r\n  <ic-file-upload formControlName = \"fileControl\" \r\n  [control]=\"fileUploadForm?.get('fileControl')\"\r\n  (validationErrEvent)=\"emitError($event)\"\r\n  #n2fileUpload\r\n  ></ic-file-upload>\r\n</form>\r\n\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}