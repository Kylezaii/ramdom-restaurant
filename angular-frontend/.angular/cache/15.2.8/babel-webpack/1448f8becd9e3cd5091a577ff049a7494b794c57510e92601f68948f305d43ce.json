{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InstalmentBankfileGenerateComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst forms_1 = require(\"@angular/forms\");\nconst moment_1 = tslib_1.__importDefault(require(\"moment\"));\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i2 = tslib_1.__importStar(require(\"app/administration/black-out-date/public-holiday/service/public-holiday.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i4 = tslib_1.__importStar(require(\"primeng/calendar\"));\nconst _c0 = function () {\n  return [0, 6];\n};\nclass InstalmentBankfileGenerateComponent {\n  constructor(fb, publicHolidayService, dateUtilsService) {\n    this.fb = fb;\n    this.publicHolidayService = publicHolidayService;\n    this.dateUtilsService = dateUtilsService;\n    this.generateBankFileForm = this.fb.group({\n      collectionDate: new forms_1.FormControl(null, forms_1.Validators.required)\n    });\n    this.publicHolidays = [];\n  }\n  ngOnInit() {\n    this.loadPublicHolidays();\n    this.minDate = (0, moment_1.default)().add(1, 'd').toDate();\n  }\n  loadPublicHolidays() {\n    this.publicHolidayService.getCurrentOneYear(null).subscribe(resp => {\n      if (resp) {\n        const temp = resp.body.data;\n        temp.forEach(x => this.publicHolidays.push(new Date(x?.holidayDate)));\n        console.log(\"publicHolidays\", this.publicHolidays);\n        this.setDate();\n      }\n    });\n  }\n  isFormValid() {\n    return this.generateBankFileForm.valid;\n  }\n  getCollectionDate() {\n    return this.generateBankFileForm.get('collectionDate').value;\n  }\n  setDate() {\n    const nextWorkingDay = this.dateUtilsService.getNextWorkingDayExcldHoliday(this.publicHolidays);\n    this.generateBankFileForm.get('collectionDate').patchValue(nextWorkingDay);\n  }\n}\nexports.InstalmentBankfileGenerateComponent = InstalmentBankfileGenerateComponent;\nInstalmentBankfileGenerateComponent.ɵfac = function InstalmentBankfileGenerateComponent_Factory(t) {\n  return new (t || InstalmentBankfileGenerateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PublicHolidayService), i0.ɵɵdirectiveInject(i3.DateUtilsService));\n};\nInstalmentBankfileGenerateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InstalmentBankfileGenerateComponent,\n  selectors: [[\"n2-instalment-bankfile-generate\"]],\n  decls: 14,\n  vars: 5,\n  consts: [[3, \"formGroup\"], [1, \"grid\", \"align-items-center\"], [1, \"col-6\"], [1, \"col-6\", \"flex\"], [\"appendTo\", \"body\", \"formControlName\", \"collectionDate\", \"dateFormat\", \"dd-mm-yy (D)\", 3, \"disabledDays\", \"disabledDates\", \"minDate\"]],\n  template: function InstalmentBankfileGenerateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵtext(5, \"Select Collection Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(6, \"\\n    \");\n      i0.ɵɵelementStart(7, \"div\", 3);\n      i0.ɵɵtext(8, \"\\n      \");\n      i0.ɵɵelement(9, \"p-calendar\", 4);\n      i0.ɵɵtext(10, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(11, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.generateBankFileForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"disabledDays\", i0.ɵɵpureFunction0(4, _c0))(\"disabledDates\", ctx.publicHolidays)(\"minDate\", ctx.minDate);\n    }\n  },\n  dependencies: [i4.Calendar, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbnN0YWxtZW50LWJhbmtmaWxlLWdlbmVyYXRlLmNvbXBvbmVudC5zY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvcGF5bWVudC9iYW5rZmlsZS1zdG9wLXBheW1lbnQvaW5zdGFsbWVudC1iYW5rZmlsZS9pbnN0YWxtZW50LWJhbmtmaWxlLWdlbmVyYXRlL2luc3RhbG1lbnQtYmFua2ZpbGUtZ2VuZXJhdGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGdNQUFnTSIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;AACA;AAIA;;;;;;;;;AAEA,MAKaA,mCAAmC;EAQ9CC,YAAoBC,EAAe,EACzBC,oBAA0C,EAC1CC,gBAAkC;IAFxB,OAAE,GAAFF,EAAE;IACZ,yBAAoB,GAApBC,oBAAoB;IACpB,qBAAgB,GAAhBC,gBAAgB;IAT1B,yBAAoB,GAAc,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC9CC,cAAc,EAAE,IAAIC,mBAAW,CAAC,IAAI,EAAEA,kBAAU,CAACC,QAAQ;KAC1D,CAAC;IAEF,mBAAc,GAAW,EAAE;EAM3B;EAEAC,QAAQ;IACN,IAAI,CAACC,kBAAkB,EAAE;IACzB,IAAI,CAACC,OAAO,GAAG,oBAAM,GAAE,CAACC,GAAG,CAAC,CAAC,EAAC,GAAG,CAAC,CAACC,MAAM,EAAE;EAC7C;EAEAH,kBAAkB;IAChB,IAAI,CAACP,oBAAoB,CAACW,iBAAiB,CAAC,IAAI,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MACjE,IAAGA,IAAI,EAAE;QACP,MAAMC,IAAI,GAAGD,IAAI,CAACE,IAAI,CAACC,IAAI;QAC3BF,IAAI,CAACG,OAAO,CAAEC,CAAiB,IAC7B,IAAI,CAACC,cAAc,CAACC,IAAI,CAAC,IAAIC,IAAI,CAACH,CAAC,EAAEI,WAAW,CAAC,CAAC,CAAC;QACrDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACL,cAAc,CAAC;QAClD,IAAI,CAACM,OAAO,EAAE;;IAElB,CAAC,CAAC;EACJ;EACAC,WAAW;IACT,OAAO,IAAI,CAACC,oBAAoB,CAACC,KAAK;EACxC;EAEAC,iBAAiB;IACf,OAAO,IAAI,CAACF,oBAAoB,CAACG,GAAG,CAAC,gBAAgB,CAAC,CAACC,KAAK;EAC9D;EAEAN,OAAO;IACL,MAAMO,cAAc,GAAG,IAAI,CAAC/B,gBAAgB,CAACgC,6BAA6B,CAAC,IAAI,CAACd,cAAc,CAAC;IAC/F,IAAI,CAACQ,oBAAoB,CAACG,GAAG,CAAC,gBAAgB,CAAC,CAACI,UAAU,CAACF,cAAc,CAAC;EAC5E;;AA7CFG;;mBAKatC,mCAAmC;AAAA;;QAAnCA,mCAAmC;EAAAuC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZhDC,+BAAyC;MACvCA;MAAAA,8BAAqC;MACnCA;MAAAA,8BAAmB;MAAAA,uCAAuB;MAAAA,iBAAM;MAChDA;MAAAA,8BAAwB;MACtBA;MAAAA,gCAAgL;MAClLA;MAAAA,iBAAM;MACRA;MAAAA,iBAAM;MACRA;MAAAA,iBAAO;MACPA;;;MARMA,oDAAkC;MAIqDA,eAAsB;MAAtBA,yDAAsB","names":["InstalmentBankfileGenerateComponent","constructor","fb","publicHolidayService","dateUtilsService","group","collectionDate","forms_1","required","ngOnInit","loadPublicHolidays","minDate","add","toDate","getCurrentOneYear","subscribe","resp","temp","body","data","forEach","x","publicHolidays","push","Date","holidayDate","console","log","setDate","isFormValid","generateBankFileForm","valid","getCollectionDate","get","value","nextWorkingDay","getNextWorkingDayExcldHoliday","patchValue","exports","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payment\\bankfile-stop-payment\\instalment-bankfile\\instalment-bankfile-generate\\instalment-bankfile-generate.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payment\\bankfile-stop-payment\\instalment-bankfile\\instalment-bankfile-generate\\instalment-bankfile-generate.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport { IPublicHoliday } from 'app/administration/black-out-date/public-holiday/public-holiday.model';\r\nimport { PublicHolidayService } from 'app/administration/black-out-date/public-holiday/service/public-holiday.service';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'n2-instalment-bankfile-generate',\r\n  templateUrl: './instalment-bankfile-generate.component.html',\r\n  styleUrls: ['./instalment-bankfile-generate.component.scss']\r\n})\r\nexport class InstalmentBankfileGenerateComponent implements OnInit {\r\n  generateBankFileForm: FormGroup = this.fb.group({\r\n    collectionDate: new FormControl(null, Validators.required),\r\n  });\r\n\r\n  publicHolidays: Date[] = [];\r\n  minDate: Date;\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private publicHolidayService: PublicHolidayService,\r\n    private dateUtilsService: DateUtilsService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadPublicHolidays();\r\n    this.minDate = moment().add(1,'d').toDate();\r\n  }\r\n\r\n  loadPublicHolidays(): void {\r\n    this.publicHolidayService.getCurrentOneYear(null).subscribe(resp => {\r\n      if(resp) {\r\n        const temp = resp.body.data;\r\n        temp.forEach((x: IPublicHoliday) => \r\n          this.publicHolidays.push(new Date(x?.holidayDate)));\r\n        console.log(\"publicHolidays\", this.publicHolidays);\r\n        this.setDate();\r\n      }\r\n    })\r\n  }\r\n  isFormValid(): boolean {\r\n    return this.generateBankFileForm.valid;\r\n  }\r\n\r\n  getCollectionDate(): any {\r\n    return this.generateBankFileForm.get('collectionDate').value;\r\n  }\r\n\r\n  setDate(): void {\r\n    const nextWorkingDay = this.dateUtilsService.getNextWorkingDayExcldHoliday(this.publicHolidays);\r\n    this.generateBankFileForm.get('collectionDate').patchValue(nextWorkingDay);\r\n  }\r\n}\r\n","<form [formGroup]='generateBankFileForm'>\r\n  <div class='grid align-items-center'>\r\n    <div class='col-6'>Select Collection Date:</div>\r\n    <div class='col-6 flex'>\r\n      <p-calendar appendTo='body' formControlName='collectionDate' dateFormat=\"dd-mm-yy (D)\" [disabledDays]=\"[0,6]\" [disabledDates]=\"publicHolidays\" [minDate]=\"minDate\"></p-calendar>\r\n    </div>\r\n  </div>\r\n</form>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}