{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkLoadInboxRoute = exports.WorkLoadInboxResolvePagingParams = void 0;\nconst tslib_1 = require(\"tslib\");\nconst user_route_access_service_1 = require(\"app/core/auth/user-route-access.service\");\nconst personal_availability_component_1 = require(\"./personal-availability/personal-availability.component\");\nconst verifier_availability_component_1 = require(\"./verifier-availability/verifier-availability.component\");\nconst workload_inbox_component_1 = require(\"./workload-inbox.component\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nclass WorkLoadInboxResolvePagingParams {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  resolve(route) {\n    /** const page = route.queryParams['page'] ? route.queryParams['page'] : '1';\r\n        const sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';\r\n        return {\r\n            page: this.paginationUtil.parsePage(page),\r\n            predicate: this.paginationUtil.parsePredicate(sort),\r\n            ascending: this.paginationUtil.parseAscending(sort)\r\n      };**/\n  }\n}\nexports.WorkLoadInboxResolvePagingParams = WorkLoadInboxResolvePagingParams;\nWorkLoadInboxResolvePagingParams.ɵfac = function WorkLoadInboxResolvePagingParams_Factory(t) {\n  return new (t || WorkLoadInboxResolvePagingParams)();\n};\nWorkLoadInboxResolvePagingParams.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WorkLoadInboxResolvePagingParams,\n  factory: WorkLoadInboxResolvePagingParams.ɵfac\n});\nexports.WorkLoadInboxRoute = [{\n  path: 'inbox',\n  component: workload_inbox_component_1.WorkloadInboxComponent,\n  resolve: {\n    pagingParams: WorkLoadInboxResolvePagingParams\n  },\n  data: {},\n  canActivate: [user_route_access_service_1.UserRouteAccessService]\n}, {\n  path: 'personal-availability',\n  component: personal_availability_component_1.PersonalAvailabilityComponent,\n  resolve: {\n    pagingParams: WorkLoadInboxResolvePagingParams\n  },\n  data: {},\n  canActivate: [user_route_access_service_1.UserRouteAccessService]\n}, {\n  path: 'verifier-availability',\n  component: verifier_availability_component_1.VerifierAvailabilityComponent,\n  resolve: {\n    pagingParams: WorkLoadInboxResolvePagingParams\n  },\n  data: {},\n  canActivate: [user_route_access_service_1.UserRouteAccessService]\n}\n// {\n//   path: 'edit-hardcopy-ec',\n//   component: EditHardcopyEcComponent,\n//   data: {\n//     defaultSort: 'id,asc'\n//   },\n//   loadChildren: () => import('./payroll-verifier/payroll-verifier.module').then(m => m.PayrollVerifierModule)\n// }\n// {\n//   path: 'payroll-verifier',\n//   loadChildren: () => import('./payroll-verifier/payroll-verifier.module').then(m => m.PayrollVerifierModule)\n// }\n];","map":{"version":3,"mappings":";;;;;;;AAGA;AACA;AACA;AACA;;AAIA,MACaA,gCAAgC;EAC3C;EACAC,OAAO,CAACC,KAA6B;IACnC;;;;;;;EAAA;;AAJJC;;mBACaH,gCAAgC;AAAA;;SAAhCA,gCAAgC;EAAAI,SAAhCJ,gCAAgC;AAAA;AAchCG,0BAAkB,GAAW,CACxC;EACEE,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEC,iDAAsB;EACjCN,OAAO,EAAE;IACPO,YAAY,EAAER;GACf;EACDS,IAAI,EAAE,EACL;EACDC,WAAW,EAAE,CAACC,kDAAsB;CACrC,EACD;EACEN,IAAI,EAAE,uBAAuB;EAC7BC,SAAS,EAAEM,+DAA6B;EACxCX,OAAO,EAAE;IACPO,YAAY,EAAER;GACf;EACDS,IAAI,EAAE,EACL;EACDC,WAAW,EAAE,CAACC,kDAAsB;CACrC,EACD;EACEN,IAAI,EAAE,uBAAuB;EAC7BC,SAAS,EAAEO,+DAA6B;EACxCZ,OAAO,EAAE;IACPO,YAAY,EAAER;GACf;EACDS,IAAI,EAAE,EACL;EACDC,WAAW,EAAE,CAACC,kDAAsB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,CACD","names":["WorkLoadInboxResolvePagingParams","resolve","route","exports","factory","path","component","workload_inbox_component_1","pagingParams","data","canActivate","user_route_access_service_1","personal_availability_component_1","verifier_availability_component_1"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\workload\\workload-inbox.route.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, Resolve, Routes} from '@angular/router';\r\n\r\nimport {UserRouteAccessService} from 'app/core/auth/user-route-access.service';\r\nimport {PersonalAvailabilityComponent} from './personal-availability/personal-availability.component';\r\nimport {VerifierAvailabilityComponent} from './verifier-availability/verifier-availability.component';\r\nimport {WorkloadInboxComponent} from './workload-inbox.component';\r\nimport {EditHardcopyEcComponent} from '../claim/ec-claim/edit-hardcopy-ec/edit-hardcopy-ec.component';\r\nimport { EditHardcopySeComponent } from '../claim/se-claim/edit-hardcopy-se/edit-hardcopy-se.component';\r\n\r\n@Injectable()\r\nexport class WorkLoadInboxResolvePagingParams implements Resolve<any> {\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  resolve(route: ActivatedRouteSnapshot): any {\r\n    /** const page = route.queryParams['page'] ? route.queryParams['page'] : '1';\r\n        const sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';\r\n        return {\r\n            page: this.paginationUtil.parsePage(page),\r\n            predicate: this.paginationUtil.parsePredicate(sort),\r\n            ascending: this.paginationUtil.parseAscending(sort)\r\n      };**/\r\n  }\r\n}\r\n\r\n\r\nexport const WorkLoadInboxRoute: Routes = [\r\n  {\r\n    path: 'inbox',\r\n    component: WorkloadInboxComponent,\r\n    resolve: {\r\n      pagingParams: WorkLoadInboxResolvePagingParams,\r\n    },\r\n    data: {\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: 'personal-availability',\r\n    component: PersonalAvailabilityComponent,\r\n    resolve: {\r\n      pagingParams: WorkLoadInboxResolvePagingParams,\r\n    },\r\n    data: {\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: 'verifier-availability',\r\n    component: VerifierAvailabilityComponent,\r\n    resolve: {\r\n      pagingParams: WorkLoadInboxResolvePagingParams,\r\n    },\r\n    data: {\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  // {\r\n  //   path: 'edit-hardcopy-ec',\r\n  //   component: EditHardcopyEcComponent,\r\n  //   data: {\r\n  //     defaultSort: 'id,asc'\r\n  //   },\r\n  //   loadChildren: () => import('./payroll-verifier/payroll-verifier.module').then(m => m.PayrollVerifierModule)\r\n  // }\r\n  // {\r\n  //   path: 'payroll-verifier',\r\n  //   loadChildren: () => import('./payroll-verifier/payroll-verifier.module').then(m => m.PayrollVerifierModule)\r\n  // }\r\n];\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}