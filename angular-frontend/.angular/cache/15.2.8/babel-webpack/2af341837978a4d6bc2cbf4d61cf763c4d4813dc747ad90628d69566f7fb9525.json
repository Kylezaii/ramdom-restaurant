{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/D1347074/Desktop/projects 2/nspayiiapp/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SolePropComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@angular/common\");\nconst http_1 = require(\"@angular/common/http\");\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst moment_1 = tslib_1.__importDefault(require(\"moment\"));\nconst rxjs_1 = require(\"rxjs\");\nconst nspay2_constants_1 = require(\"app/nspay2.constants\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i2 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/claim/se-claim/service/se-claim.service\"));\nconst i5 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i6 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i7 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i8 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i9 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i10 = tslib_1.__importStar(require(\"primeng/card\"));\nconst i11 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/dropdown\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/confirmpopup\"));\nconst i15 = tslib_1.__importStar(require(\"primeng/inputnumber\"));\nconst i16 = tslib_1.__importStar(require(\"../../../../../shared/language/translate.directive\"));\nconst i17 = tslib_1.__importStar(require(\"../annual-income/annual-income.component\"));\nconst _c0 = [\"mthlyTable\"];\nconst _c1 = [\"consolTable\"];\nconst _c2 = function () {\n  return {\n    field: \"Divisor\"\n  };\n};\nfunction SolePropComponent_small_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c2));\n  }\n}\nconst _c3 = function () {\n  return {\n    field: \"Annual Divisor\"\n  };\n};\nfunction SolePropComponent_small_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c3));\n  }\n}\nconst _c4 = function () {\n  return {\n    \"display\": \"inline\"\n  };\n};\nconst _c5 = function () {\n  return {\n    \"display\": \"inline\",\n    \"margin-left\": \"2em\"\n  };\n};\nfunction SolePropComponent_div_31_p_table_4_ng_template_3_fieldset_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"fieldset\");\n    i0.ɵɵtext(1, \"\\n                                                \");\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3, \"\\n                                                    \");\n    i0.ɵɵelementStart(4, \"input\", 34);\n    i0.ɵɵlistener(\"click\", function SolePropComponent_div_31_p_table_4_ng_template_3_fieldset_16_Template_input_click_4_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r15.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                                                    \");\n    i0.ɵɵelementStart(6, \"label\", 35);\n    i0.ɵɵtext(7, \"Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n                                                \");\n    i0.ɵɵelementStart(10, \"div\");\n    i0.ɵɵtext(11, \"\\n                                                    \");\n    i0.ɵɵelementStart(12, \"input\", 36);\n    i0.ɵɵlistener(\"click\", function SolePropComponent_div_31_p_table_4_ng_template_3_fieldset_16_Template_input_click_12_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r17.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n                                                    \");\n    i0.ɵɵelementStart(14, \"label\", 35);\n    i0.ɵɵtext(15, \"Consolidated\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n                                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c4));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c5));\n    i0.ɵɵadvance(8);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c5));\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_3_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                                                \");\n    i0.ɵɵelementStart(1, \"fieldset\", 37);\n    i0.ɵɵtext(2, \"\\n                                                    \");\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4, \"\\n                                                        \");\n    i0.ɵɵelementStart(5, \"input\", 34);\n    i0.ɵɵlistener(\"click\", function SolePropComponent_div_31_p_table_4_ng_template_3_ng_template_18_Template_input_click_5_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r18.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                                                        \");\n    i0.ɵɵelementStart(7, \"label\", 35);\n    i0.ɵɵtext(8, \"Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n\\n                                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n                                                    \");\n    i0.ɵɵelementStart(11, \"div\");\n    i0.ɵɵtext(12, \"\\n                                                        \");\n    i0.ɵɵelementStart(13, \"input\", 36);\n    i0.ɵɵlistener(\"click\", function SolePropComponent_div_31_p_table_4_ng_template_3_ng_template_18_Template_input_click_13_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r20 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r20.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                                        \");\n    i0.ɵɵelementStart(15, \"label\", 35);\n    i0.ɵɵtext(16, \"Consolidated\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n                                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n                                            \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c4));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c5));\n    i0.ɵɵadvance(8);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c5));\n  }\n}\nconst _c6 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nfunction SolePropComponent_div_31_p_table_4_ng_template_3_button_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function SolePropComponent_div_31_p_table_4_ng_template_3_button_26_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r21.refreshOtherClaim());\n    });\n    i0.ɵɵtext(1, \"\\n                                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(4);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c6));\n    i0.ɵɵproperty(\"disabled\", !ctx_r13.enableRefreshOClaim());\n  }\n}\nconst _c7 = function () {\n  return {\n    \"text-align\": \"center\"\n  };\n};\nfunction SolePropComponent_div_31_p_table_4_ng_template_3_th_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r23 = ctx.$implicit;\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c7));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", yrmth_r23, \"\\n                            \");\n  }\n}\nconst _c8 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-right\": \".5em\"\n  };\n};\nconst _c9 = function () {\n  return {\n    \"width\": \"100%\"\n  };\n};\nconst _c10 = function () {\n  return {\n    \"text-align\": \"center\",\n    \"border-right\": \"2px solid black\"\n  };\n};\nfunction SolePropComponent_div_31_p_table_4_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                            \");\n    i0.ɵɵelement(3, \"th\", 21);\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"th\", 21);\n    i0.ɵɵtext(6, \"\\n                                \");\n    i0.ɵɵelementStart(7, \"form\", 1);\n    i0.ɵɵtext(8, \"\\n                                    \");\n    i0.ɵɵelementStart(9, \"div\", 22);\n    i0.ɵɵtext(10, \"\\n                                        \");\n    i0.ɵɵelementStart(11, \"div\", 23);\n    i0.ɵɵtext(12, \"\\n                                            \");\n    i0.ɵɵelementStart(13, \"p-button\", 24);\n    i0.ɵɵlistener(\"click\", function SolePropComponent_div_31_p_table_4_ng_template_3_Template_p_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r25);\n      i0.ɵɵnextContext();\n      const _r7 = i0.ɵɵreference(1);\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.exportToCSV(_r7));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                            \");\n    i0.ɵɵtext(15, \"\\n                                            \");\n    i0.ɵɵtemplate(16, SolePropComponent_div_31_p_table_4_ng_template_3_fieldset_16_Template, 18, 9, \"fieldset\", 25);\n    i0.ɵɵtext(17, \"\\n                                            \");\n    i0.ɵɵtemplate(18, SolePropComponent_div_31_p_table_4_ng_template_3_ng_template_18_Template, 20, 9, \"ng-template\", null, 26, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(20, \"\\n                                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                                        \");\n    i0.ɵɵelement(22, \"p-confirmPopup\", 27);\n    i0.ɵɵtext(23, \"\\n                                        \");\n    i0.ɵɵelementStart(24, \"div\", 28);\n    i0.ɵɵtext(25, \"\\n                                            \");\n    i0.ɵɵtemplate(26, SolePropComponent_div_31_p_table_4_ng_template_3_button_26_Template, 2, 4, \"button\", 29);\n    i0.ɵɵtext(27, \"\\n\\n                                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(32, \"\\n                        \");\n    i0.ɵɵelementStart(33, \"tr\");\n    i0.ɵɵtext(34, \"\\n                            \");\n    i0.ɵɵelement(35, \"th\", 21);\n    i0.ɵɵtext(36, \"\\n                            \");\n    i0.ɵɵelementStart(37, \"th\", 21);\n    i0.ɵɵtext(38, \"\\n                                \");\n    i0.ɵɵelementStart(39, \"form\", 1);\n    i0.ɵɵtext(40, \"\\n\\n                                    \");\n    i0.ɵɵelementStart(41, \"div\", 30);\n    i0.ɵɵtext(42, \"\\n                                        \");\n    i0.ɵɵelement(43, \"p-dropdown\", 31);\n    i0.ɵɵtext(44, \"\\n                                        \");\n    i0.ɵɵelementStart(45, \"label\", 32);\n    i0.ɵɵtext(46, \"Account\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(47, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(48, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(49, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(50, \"\\n                            \");\n    i0.ɵɵelementStart(51, \"th\", 21);\n    i0.ɵɵtext(52, \"Ave Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(53, \"\\n                            \");\n    i0.ɵɵelementStart(54, \"th\", 21);\n    i0.ɵɵtext(55, \"6-Mth Account\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(56, \"\\n                            \");\n    i0.ɵɵelementStart(57, \"th\", 21);\n    i0.ɵɵtext(58, \"Ave Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(59, \"\\n                            \");\n    i0.ɵɵtemplate(60, SolePropComponent_div_31_p_table_4_ng_template_3_th_60_Template, 2, 4, \"th\", 33);\n    i0.ɵɵpipe(61, \"slice\");\n    i0.ɵɵtext(62, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(63, \"\\n\\n                    \");\n  }\n  if (rf & 2) {\n    const _r11 = i0.ɵɵreference(19);\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵattribute(\"colspan\", ctx_r8.solePropForm.controls[\"yrmthList\"].value.length + 4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r8.captionGroup);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(26, _c8));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.isActive() && !ctx_r8.readOnly && ctx_r8.hasValidAuthorityAndStation())(\"ngIfElse\", _r11);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.isActive() && !ctx_r8.readOnly && ctx_r8.hasValidAuthorityAndStation());\n    i0.ɵɵadvance(11);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(27, _c7));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r8.headerGroup);\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(28, _c9));\n    i0.ɵɵproperty(\"options\", ctx_r8.getFormControlValue(ctx_r8.solePropForm, \"yearInputOptions\"))(\"formControl\", ctx_r8.getInnerFormControl(ctx_r8.solePropForm, \"headerGroup\", \"yearInput\"))(\"disabled\", !ctx_r8.isActive || ctx_r8.readOnly || !ctx_r8.hasValidAuthorityAndStation());\n    i0.ɵɵadvance(8);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(29, _c10));\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(30, _c7));\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(31, _c10));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(61, 22, ctx_r8.getYrmthList(), ctx_r8.maxMths - (ctx_r8.solePropForm == null ? null : ctx_r8.solePropForm.get(\"divisor\").value), ctx_r8.maxMths));\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_tr_1_p_inputNumber_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-inputNumber\", 44);\n    i0.ɵɵtext(1, \"\\n                               \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r31.getInnerFormControl(ctx_r31.dataFormArray, \"annual\", \"revenue\"));\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_tr_1_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                    \");\n    i0.ɵɵelementStart(1, \"div\", 42);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n  }\n  if (rf & 2) {\n    const ctx_r33 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(3, 1, ctx_r33.getInnerFormControl(ctx_r33.dataFormArray, \"annual\", \"revenue\").value, \"1.2-2\"), \"\\n                                    \");\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_tr_1_td_27_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-inputNumber\", 48);\n    i0.ɵɵtext(1, \"\\n                               \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r35 = i0.ɵɵnextContext().$implicit;\n    const ctx_r37 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r37.getInnerFormControl(ctx_r37.dataFormArray, yrmth_r35, \"revenue\"));\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_tr_1_td_27_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"div\", 42);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n  }\n  if (rf & 2) {\n    const yrmth_r35 = i0.ɵɵnextContext().$implicit;\n    const ctx_r39 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(3, 1, ctx_r39.getInnerFormControl(ctx_r39.dataFormArray, yrmth_r35, \"revenue\").value, \"1.2-2\"), \"\\n                                \");\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_tr_1_td_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 45);\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵtemplate(2, SolePropComponent_div_31_p_table_4_ng_template_5_tr_1_td_27_p_inputNumber_2_Template, 2, 2, \"p-inputNumber\", 46);\n    i0.ɵɵtext(3, \"\\n                               \");\n    i0.ɵɵtemplate(4, SolePropComponent_div_31_p_table_4_ng_template_5_tr_1_td_27_ng_template_4_Template, 5, 4, \"ng-template\", null, 47, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r35 = ctx.$implicit;\n    const _r38 = i0.ɵɵreference(5);\n    const ctx_r34 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", yrmth_r35);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r34.isActive() && !ctx_r34.readOnly && ctx_r34.hasValidAuthorityAndStation())(\"ngIfElse\", _r38);\n  }\n}\nconst _c11 = function () {\n  return {\n    \"border-right\": \"2px solid black\"\n  };\n};\nconst _c12 = function () {\n  return {\n    \"border-right\": \"2px solid black\",\n    \"text-align\": \"right\"\n  };\n};\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"td\", 39);\n    i0.ɵɵtext(6, \"\\n                                \");\n    i0.ɵɵtemplate(7, SolePropComponent_div_31_p_table_4_ng_template_5_tr_1_p_inputNumber_7_Template, 2, 2, \"p-inputNumber\", 40);\n    i0.ɵɵtext(8, \"\\n                               \");\n    i0.ɵɵtemplate(9, SolePropComponent_div_31_p_table_4_ng_template_5_tr_1_ng_template_9_Template, 5, 4, \"ng-template\", null, 41, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(11, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n                            \");\n    i0.ɵɵelementStart(13, \"td\")(14, \"div\", 42);\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(17, \"\\n                            \");\n    i0.ɵɵelementStart(18, \"td\")(19, \"div\", 42);\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"td\");\n    i0.ɵɵtext(24);\n    i0.ɵɵpipe(25, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n                            \");\n    i0.ɵɵtemplate(27, SolePropComponent_div_31_p_table_4_ng_template_5_tr_1_td_27_Template, 7, 3, \"td\", 43);\n    i0.ɵɵpipe(28, \"slice\");\n    i0.ɵɵtext(29, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r32 = i0.ɵɵreference(10);\n    const ctx_r28 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r28.cols[0]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.isActive() && !ctx_r28.readOnly && ctx_r28.hasValidAuthorityAndStation())(\"ngIfElse\", _r32);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(24, _c11));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(16, 11, ctx_r28.dataFormArray.get(\"annual\").get(\"revenue\").value / ctx_r28.solePropForm.get(\"annualDivisor\").value, \"1.2-2\"), \"\\n                            \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(21, 14, ctx_r28.getSumOfCurrRow(\"revenue\"), \"1.2-2\"), \"\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(25, _c12));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(25, 17, ctx_r28.getSumOfCurrRow(\"revenue\") / ctx_r28.solePropForm.get(\"divisor\").value, \"1.2-2\"), \"\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(28, 20, ctx_r28.getYrmthList(), ctx_r28.maxMths - (ctx_r28.solePropForm == null ? null : ctx_r28.solePropForm.get(\"divisor\").value), ctx_r28.maxMths));\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_tr_3_p_inputNumber_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-inputNumber\", 51);\n    i0.ɵɵtext(1, \"\\n                               \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r42 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r42.getInnerFormControl(ctx_r42.dataFormArray, \"annual\", \"netProfit\"));\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_tr_3_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"div\", 42);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n  }\n  if (rf & 2) {\n    const ctx_r44 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(3, 1, ctx_r44.getInnerFormControl(ctx_r44.dataFormArray, \"annual\", \"netProfit\").value, \"1.2-2\"), \"\\n                                \");\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_tr_3_td_27_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-inputNumber\", 51);\n    i0.ɵɵtext(1, \"\\n                               \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r46 = i0.ɵɵnextContext().$implicit;\n    const ctx_r48 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r48.getInnerFormControl(ctx_r48.dataFormArray, yrmth_r46, \"netProfit\"));\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_tr_3_td_27_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                    \");\n    i0.ɵɵelementStart(1, \"div\", 42);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n  }\n  if (rf & 2) {\n    const yrmth_r46 = i0.ɵɵnextContext().$implicit;\n    const ctx_r50 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(3, 1, ctx_r50.getInnerFormControl(ctx_r50.dataFormArray, yrmth_r46, \"netProfit\").value, \"1.2-2\"), \"\\n                                    \");\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_tr_3_td_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 45);\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵtemplate(2, SolePropComponent_div_31_p_table_4_ng_template_5_tr_3_td_27_p_inputNumber_2_Template, 2, 2, \"p-inputNumber\", 49);\n    i0.ɵɵtext(3, \"\\n                               \");\n    i0.ɵɵtemplate(4, SolePropComponent_div_31_p_table_4_ng_template_5_tr_3_td_27_ng_template_4_Template, 5, 4, \"ng-template\", null, 52, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r46 = ctx.$implicit;\n    const _r49 = i0.ɵɵreference(5);\n    const ctx_r45 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", yrmth_r46);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r45.isActive() && !ctx_r45.readOnly && ctx_r45.hasValidAuthorityAndStation())(\"ngIfElse\", _r49);\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"td\", 39);\n    i0.ɵɵtext(6, \"\\n                                \");\n    i0.ɵɵtemplate(7, SolePropComponent_div_31_p_table_4_ng_template_5_tr_3_p_inputNumber_7_Template, 2, 2, \"p-inputNumber\", 49);\n    i0.ɵɵtext(8, \"\\n                               \");\n    i0.ɵɵtemplate(9, SolePropComponent_div_31_p_table_4_ng_template_5_tr_3_ng_template_9_Template, 5, 4, \"ng-template\", null, 50, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(11, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n                            \");\n    i0.ɵɵelementStart(13, \"td\")(14, \"div\", 42);\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(17, \"\\n                            \");\n    i0.ɵɵelementStart(18, \"td\")(19, \"div\", 42);\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"td\");\n    i0.ɵɵtext(24);\n    i0.ɵɵpipe(25, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n                            \");\n    i0.ɵɵtemplate(27, SolePropComponent_div_31_p_table_4_ng_template_5_tr_3_td_27_Template, 7, 3, \"td\", 43);\n    i0.ɵɵpipe(28, \"slice\");\n    i0.ɵɵtext(29, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r43 = i0.ɵɵreference(10);\n    const ctx_r29 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r29.cols[1]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r29.isActive() && !ctx_r29.readOnly && ctx_r29.hasValidAuthorityAndStation())(\"ngIfElse\", _r43);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(24, _c11));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(16, 11, ctx_r29.dataFormArray.get(\"annual\").get(\"netProfit\").value / ctx_r29.solePropForm.get(\"annualDivisor\").value, \"1.2-2\"), \"\\n                            \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(21, 14, ctx_r29.getSumOfCurrRow(\"netProfit\"), \"1.2-2\"), \"\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(25, _c12));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(25, 17, ctx_r29.getSumOfCurrRow(\"netProfit\") / ctx_r29.solePropForm.get(\"divisor\").value, \"1.2-2\"), \"\\n                            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(28, 20, ctx_r29.getYrmthList(), ctx_r29.maxMths - (ctx_r29.solePropForm == null ? null : ctx_r29.solePropForm.get(\"divisor\").value), ctx_r29.maxMths));\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_tr_5_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r53 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(2, 1, ctx_r53.roundVal(ctx_r53.dataFormArray.get(\"annual\").get(\"netProfit\").value / ctx_r53.dataFormArray.get(\"annual\").get(\"revenue\").value * 100), \"1.0-0\"), \"%\\n                                \");\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_tr_5_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r54 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(2, 1, ctx_r54.roundVal(ctx_r54.getSumOfCurrRow(\"netProfit\") / ctx_r54.getSumOfCurrRow(\"revenue\") * 100), \"1.0-0\"), \"%\\n                            \");\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_tr_5_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 45);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r56 = ctx.$implicit;\n    i0.ɵɵproperty(\"formGroupName\", yrmth_r56);\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \"\\n                                \");\n    i0.ɵɵtemplate(7, SolePropComponent_div_31_p_table_4_ng_template_5_tr_5_div_7_Template, 3, 4, \"div\", 53);\n    i0.ɵɵtext(8, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n                            \");\n    i0.ɵɵelement(10, \"td\");\n    i0.ɵɵtext(11, \"\\n                            \");\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtemplate(13, SolePropComponent_div_31_p_table_4_ng_template_5_tr_5_div_13_Template, 3, 4, \"div\", 53);\n    i0.ɵɵtext(14, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"td\");\n    i0.ɵɵtext(16, \"\\n                            \");\n    i0.ɵɵtemplate(17, SolePropComponent_div_31_p_table_4_ng_template_5_tr_5_td_17_Template, 2, 1, \"td\", 43);\n    i0.ɵɵpipe(18, \"slice\");\n    i0.ɵɵtext(19, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r30 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r30.cols[2]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r30.dataFormArray.get(\"annual\").get(\"revenue\").value !== 0 && ctx_r30.dataFormArray.get(\"annual\").get(\"revenue\").value !== undefined && ctx_r30.dataFormArray.get(\"annual\").get(\"revenue\").value !== null);\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(12, _c11));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r30.getSumOfCurrRow(\"revenue\") !== 0 && ctx_r30.getSumOfCurrRow(\"revenue\") !== undefined && ctx_r30.getSumOfCurrRow(\"revenue\") !== null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(13, _c12));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(18, 8, ctx_r30.getYrmthList(), ctx_r30.maxMths - (ctx_r30.solePropForm == null ? null : ctx_r30.solePropForm.get(\"divisor\").value), ctx_r30.maxMths));\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                        \");\n    i0.ɵɵtemplate(1, SolePropComponent_div_31_p_table_4_ng_template_5_tr_1_Template, 30, 26, \"tr\", 8);\n    i0.ɵɵtext(2, \"\\n                        \");\n    i0.ɵɵtemplate(3, SolePropComponent_div_31_p_table_4_ng_template_5_tr_3_Template, 30, 26, \"tr\", 8);\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵtemplate(5, SolePropComponent_div_31_p_table_4_ng_template_5_tr_5_Template, 20, 14, \"tr\", 8);\n    i0.ɵɵtext(6, \"\\n                    \");\n  }\n  if (rf & 2) {\n    const rowIndex_r27 = ctx.rowIndex;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r27 == 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r27 == 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r27 == 2);\n  }\n}\nfunction SolePropComponent_div_31_p_table_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-table\", 17, 18);\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵtemplate(3, SolePropComponent_div_31_p_table_4_ng_template_3_Template, 64, 32, \"ng-template\", 19);\n    i0.ɵɵtext(4, \"\\n                    \");\n    i0.ɵɵtemplate(5, SolePropComponent_div_31_p_table_4_ng_template_5_Template, 7, 3, \"ng-template\", 20);\n    i0.ɵɵtext(6, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r4.getYrmthList())(\"filterDelay\", 0)(\"loading\", ctx_r4.loading);\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_4_fieldset_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r67 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"fieldset\");\n    i0.ɵɵtext(1, \"\\n                                                    \");\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3, \"\\n                                                        \");\n    i0.ɵɵelementStart(4, \"input\", 34);\n    i0.ɵɵlistener(\"click\", function SolePropComponent_div_31_ng_template_9_ng_template_4_fieldset_16_Template_input_click_4_listener($event) {\n      i0.ɵɵrestoreView(_r67);\n      const ctx_r66 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r66.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                                                        \");\n    i0.ɵɵelementStart(6, \"label\", 35);\n    i0.ɵɵtext(7, \"Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n                                                    \");\n    i0.ɵɵelementStart(10, \"div\");\n    i0.ɵɵtext(11, \"\\n                                                        \");\n    i0.ɵɵelementStart(12, \"input\", 36);\n    i0.ɵɵlistener(\"click\", function SolePropComponent_div_31_ng_template_9_ng_template_4_fieldset_16_Template_input_click_12_listener($event) {\n      i0.ɵɵrestoreView(_r67);\n      const ctx_r68 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r68.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n                                                        \");\n    i0.ɵɵelementStart(14, \"label\", 35);\n    i0.ɵɵtext(15, \"Consolidated\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n                                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c4));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c5));\n    i0.ɵɵadvance(8);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c5));\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_4_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r70 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                                                    \");\n    i0.ɵɵelementStart(1, \"fieldset\", 37);\n    i0.ɵɵtext(2, \"\\n                                                        \");\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4, \"\\n                                                            \");\n    i0.ɵɵelementStart(5, \"input\", 34);\n    i0.ɵɵlistener(\"click\", function SolePropComponent_div_31_ng_template_9_ng_template_4_ng_template_18_Template_input_click_5_listener($event) {\n      i0.ɵɵrestoreView(_r70);\n      const ctx_r69 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r69.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                                                            \");\n    i0.ɵɵelementStart(7, \"label\", 35);\n    i0.ɵɵtext(8, \"Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n\\n                                                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n                                                        \");\n    i0.ɵɵelementStart(11, \"div\");\n    i0.ɵɵtext(12, \"\\n                                                            \");\n    i0.ɵɵelementStart(13, \"input\", 36);\n    i0.ɵɵlistener(\"click\", function SolePropComponent_div_31_ng_template_9_ng_template_4_ng_template_18_Template_input_click_13_listener($event) {\n      i0.ɵɵrestoreView(_r70);\n      const ctx_r71 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r71.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                                            \");\n    i0.ɵɵelementStart(15, \"label\", 35);\n    i0.ɵɵtext(16, \"Consolidated\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n                                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n                                                \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c4));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c5));\n    i0.ɵɵadvance(8);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c5));\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_4_button_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r73 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function SolePropComponent_div_31_ng_template_9_ng_template_4_button_26_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r73);\n      const ctx_r72 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r72.refreshOtherClaim());\n    });\n    i0.ɵɵtext(1, \"\\n                                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r64 = i0.ɵɵnextContext(4);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c6));\n    i0.ɵɵproperty(\"disabled\", !ctx_r64.enableRefreshOClaim());\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_4_th_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const yrmth_r74 = ctx.$implicit;\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c7));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", yrmth_r74, \"\\n                                \");\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r76 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                                \");\n    i0.ɵɵelement(3, \"th\", 21);\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"th\", 21);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementStart(7, \"form\", 1);\n    i0.ɵɵtext(8, \"\\n                                        \");\n    i0.ɵɵelementStart(9, \"div\", 22);\n    i0.ɵɵtext(10, \"\\n                                            \");\n    i0.ɵɵelementStart(11, \"div\", 23);\n    i0.ɵɵtext(12, \"\\n                                                \");\n    i0.ɵɵelementStart(13, \"p-button\", 24);\n    i0.ɵɵlistener(\"click\", function SolePropComponent_div_31_ng_template_9_ng_template_4_Template_p_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r76);\n      i0.ɵɵnextContext();\n      const _r58 = i0.ɵɵreference(2);\n      const ctx_r75 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r75.exportToCSV(_r58));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                                \");\n    i0.ɵɵtext(15, \"\\n                                                \");\n    i0.ɵɵtemplate(16, SolePropComponent_div_31_ng_template_9_ng_template_4_fieldset_16_Template, 18, 9, \"fieldset\", 25);\n    i0.ɵɵtext(17, \"\\n                                                \");\n    i0.ɵɵtemplate(18, SolePropComponent_div_31_ng_template_9_ng_template_4_ng_template_18_Template, 20, 9, \"ng-template\", null, 26, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(20, \"\\n                                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                                            \");\n    i0.ɵɵelement(22, \"p-confirmPopup\", 27);\n    i0.ɵɵtext(23, \"\\n                                            \");\n    i0.ɵɵelementStart(24, \"div\", 28);\n    i0.ɵɵtext(25, \"\\n                                                \");\n    i0.ɵɵtemplate(26, SolePropComponent_div_31_ng_template_9_ng_template_4_button_26_Template, 2, 4, \"button\", 29);\n    i0.ɵɵtext(27, \"\\n                                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n                                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(32, \"\\n                            \");\n    i0.ɵɵelementStart(33, \"tr\");\n    i0.ɵɵtext(34, \"\\n                                \");\n    i0.ɵɵelement(35, \"th\", 21);\n    i0.ɵɵtext(36, \"\\n                                \");\n    i0.ɵɵelementStart(37, \"th\", 21);\n    i0.ɵɵtext(38, \"\\n                                    \");\n    i0.ɵɵelementStart(39, \"form\", 1);\n    i0.ɵɵtext(40, \"\\n\\n                                        \");\n    i0.ɵɵelementStart(41, \"div\", 30);\n    i0.ɵɵtext(42, \"\\n                                            \");\n    i0.ɵɵelement(43, \"p-dropdown\", 31);\n    i0.ɵɵtext(44, \"\\n                                            \");\n    i0.ɵɵelementStart(45, \"label\", 32);\n    i0.ɵɵtext(46, \"Account\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(47, \"\\n                                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(48, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(49, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(50, \"\\n                                \");\n    i0.ɵɵelementStart(51, \"th\", 21);\n    i0.ɵɵtext(52, \"Ave Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(53, \"\\n                                \");\n    i0.ɵɵelementStart(54, \"th\", 21);\n    i0.ɵɵtext(55, \"6-Mth Account\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(56, \"\\n                                \");\n    i0.ɵɵelementStart(57, \"th\", 21);\n    i0.ɵɵtext(58, \"Ave Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(59, \"\\n                                \");\n    i0.ɵɵtemplate(60, SolePropComponent_div_31_ng_template_9_ng_template_4_th_60_Template, 2, 4, \"th\", 33);\n    i0.ɵɵpipe(61, \"slice\");\n    i0.ɵɵtext(62, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(63, \"\\n\\n                        \");\n  }\n  if (rf & 2) {\n    const _r62 = i0.ɵɵreference(19);\n    const ctx_r59 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵattribute(\"colspan\", ctx_r59.solePropForm.controls[\"yrmthList\"].value.length + 4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r59.captionGroup);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(26, _c8));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r59.isActive() && !ctx_r59.readOnly && ctx_r59.hasValidAuthorityAndStation())(\"ngIfElse\", _r62);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r59.isActive() && !ctx_r59.readOnly && ctx_r59.hasValidAuthorityAndStation());\n    i0.ɵɵadvance(11);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(27, _c7));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r59.headerGroup);\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(28, _c9));\n    i0.ɵɵproperty(\"options\", ctx_r59.getFormControlValue(ctx_r59.solePropForm, \"yearInputOptions\"))(\"formControl\", ctx_r59.getInnerFormControl(ctx_r59.solePropForm, \"headerGroup\", \"yearInput\"))(\"disabled\", !ctx_r59.isActive || ctx_r59.readOnly || !ctx_r59.hasValidAuthorityAndStation());\n    i0.ɵɵadvance(8);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(29, _c10));\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(30, _c7));\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(31, _c10));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(61, 22, ctx_r59.getYrmthList(), ctx_r59.maxMths - (ctx_r59.solePropForm == null ? null : ctx_r59.solePropForm.get(\"divisor\").value), ctx_r59.maxMths));\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_tr_1_p_inputNumber_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-inputNumber\", 48);\n    i0.ɵɵtext(1, \"\\n                                   \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r82 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r82.getInnerFormControl(ctx_r82.consolDataFormArray, \"annual\", \"revenue\"));\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_tr_1_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"div\", 42);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const ctx_r84 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                            \", i0.ɵɵpipeBind2(3, 1, ctx_r84.getInnerFormControl(ctx_r84.consolDataFormArray, \"annual\", \"revenue\").value, \"1.2-2\"), \"\\n                                        \");\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_tr_1_p_inputNumber_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-inputNumber\", 48);\n    i0.ɵɵtext(1, \"\\n                                   \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r85 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r85.getInnerFormControl(ctx_r85.consolDataFormArray, \"consolidated\", \"revenue\"));\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_tr_1_ng_template_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"div\", 42);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const ctx_r87 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                            \", i0.ɵɵpipeBind2(3, 1, ctx_r87.getInnerFormControl(ctx_r87.consolDataFormArray, \"consolidated\", \"revenue\").value, \"1.2-2\"), \"\\n                                        \");\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_tr_1_td_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"td\", 39);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵtemplate(7, SolePropComponent_div_31_ng_template_9_ng_template_6_tr_1_p_inputNumber_7_Template, 2, 2, \"p-inputNumber\", 46);\n    i0.ɵɵtext(8, \"\\n                                   \");\n    i0.ɵɵtemplate(9, SolePropComponent_div_31_ng_template_9_ng_template_6_tr_1_ng_template_9_Template, 5, 4, \"ng-template\", null, 55, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(11, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n                                \");\n    i0.ɵɵelementStart(13, \"td\")(14, \"div\", 42);\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(17, \"\\n                                \");\n    i0.ɵɵelementStart(18, \"td\", 56);\n    i0.ɵɵtext(19, \"\\n                                    \");\n    i0.ɵɵtemplate(20, SolePropComponent_div_31_ng_template_9_ng_template_6_tr_1_p_inputNumber_20_Template, 2, 2, \"p-inputNumber\", 46);\n    i0.ɵɵtext(21, \"\\n                                   \");\n    i0.ɵɵtemplate(22, SolePropComponent_div_31_ng_template_9_ng_template_6_tr_1_ng_template_22_Template, 5, 4, \"ng-template\", null, 57, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(24, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n                                \");\n    i0.ɵɵelementStart(26, \"td\");\n    i0.ɵɵtext(27);\n    i0.ɵɵpipe(28, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n                                \");\n    i0.ɵɵtemplate(30, SolePropComponent_div_31_ng_template_9_ng_template_6_tr_1_td_30_Template, 2, 0, \"td\", 58);\n    i0.ɵɵpipe(31, \"slice\");\n    i0.ɵɵtext(32, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r83 = i0.ɵɵreference(10);\n    const _r86 = i0.ɵɵreference(23);\n    const ctx_r79 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r79.cols[0]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r79.isActive() && !ctx_r79.readOnly && ctx_r79.hasValidAuthorityAndStation())(\"ngIfElse\", _r83);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(22, _c11));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(16, 12, ctx_r79.consolDataFormArray.get(\"annual\").get(\"revenue\").value / ctx_r79.solePropForm.get(\"annualDivisor\").value, \"1.2-2\"), \"\\n                                \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r79.isActive() && !ctx_r79.readOnly && ctx_r79.hasValidAuthorityAndStation())(\"ngIfElse\", _r86);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(23, _c12));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(28, 15, ctx_r79.consolDataFormArray.get(\"consolidated\").get(\"revenue\").value / ctx_r79.solePropForm.get(\"divisor\").value, \"1.2-2\"), \"\\n                                \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(31, 18, ctx_r79.getYrmthList(), ctx_r79.maxMths - (ctx_r79.solePropForm == null ? null : ctx_r79.solePropForm.get(\"divisor\").value), ctx_r79.maxMths));\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_tr_3_p_inputNumber_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-inputNumber\", 51);\n    i0.ɵɵtext(1, \"\\n                                   \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r91 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r91.getInnerFormControl(ctx_r91.consolDataFormArray, \"annual\", \"netProfit\"));\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_tr_3_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"div\", 42);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const ctx_r93 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                            \", i0.ɵɵpipeBind2(3, 1, ctx_r93.getInnerFormControl(ctx_r93.consolDataFormArray, \"annual\", \"netProfit\").value, \"1.2-2\"), \"\\n                                        \");\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_tr_3_p_inputNumber_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-inputNumber\", 51);\n    i0.ɵɵtext(1, \"\\n                                   \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r94 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"formControl\", ctx_r94.getInnerFormControl(ctx_r94.consolDataFormArray, \"consolidated\", \"netProfit\"));\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_tr_3_ng_template_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"div\", 42);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const ctx_r96 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                            \", i0.ɵɵpipeBind2(3, 1, ctx_r96.getInnerFormControl(ctx_r96.consolDataFormArray, \"consolidated\", \"netProfit\").value, \"1.2-2\"), \"\\n                                        \");\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_tr_3_td_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"td\", 39);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵtemplate(7, SolePropComponent_div_31_ng_template_9_ng_template_6_tr_3_p_inputNumber_7_Template, 2, 2, \"p-inputNumber\", 49);\n    i0.ɵɵtext(8, \"\\n                                   \");\n    i0.ɵɵtemplate(9, SolePropComponent_div_31_ng_template_9_ng_template_6_tr_3_ng_template_9_Template, 5, 4, \"ng-template\", null, 59, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(11, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n                                \");\n    i0.ɵɵelementStart(13, \"td\")(14, \"div\", 42);\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(17, \"\\n                                \");\n    i0.ɵɵelementStart(18, \"td\", 56);\n    i0.ɵɵtext(19, \"\\n                                    \");\n    i0.ɵɵtemplate(20, SolePropComponent_div_31_ng_template_9_ng_template_6_tr_3_p_inputNumber_20_Template, 2, 2, \"p-inputNumber\", 49);\n    i0.ɵɵtext(21, \"\\n                                   \");\n    i0.ɵɵtemplate(22, SolePropComponent_div_31_ng_template_9_ng_template_6_tr_3_ng_template_22_Template, 5, 4, \"ng-template\", null, 60, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(24, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n                                \");\n    i0.ɵɵelementStart(26, \"td\");\n    i0.ɵɵtext(27);\n    i0.ɵɵpipe(28, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n                                \");\n    i0.ɵɵtemplate(30, SolePropComponent_div_31_ng_template_9_ng_template_6_tr_3_td_30_Template, 2, 0, \"td\", 58);\n    i0.ɵɵpipe(31, \"slice\");\n    i0.ɵɵtext(32, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r92 = i0.ɵɵreference(10);\n    const _r95 = i0.ɵɵreference(23);\n    const ctx_r80 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r80.cols[1]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r80.isActive() && !ctx_r80.readOnly && ctx_r80.hasValidAuthorityAndStation())(\"ngIfElse\", _r92);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(22, _c11));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(16, 12, ctx_r80.consolDataFormArray.get(\"annual\").get(\"netProfit\").value / ctx_r80.solePropForm.get(\"annualDivisor\").value, \"1.2-2\"), \"\\n                                \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r80.isActive() && !ctx_r80.readOnly && ctx_r80.hasValidAuthorityAndStation())(\"ngIfElse\", _r95);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(23, _c12));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(28, 15, ctx_r80.consolDataFormArray.get(\"consolidated\").get(\"netProfit\").value / ctx_r80.solePropForm.get(\"divisor\").value, \"1.2-2\"), \"\\n                                \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(31, 18, ctx_r80.getYrmthList(), ctx_r80.maxMths - (ctx_r80.solePropForm == null ? null : ctx_r80.solePropForm.get(\"divisor\").value), ctx_r80.maxMths));\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_tr_5_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r100 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(2, 1, ctx_r100.roundVal(ctx_r100.consolDataFormArray.get(\"annual\").get(\"netProfit\").value / ctx_r100.consolDataFormArray.get(\"annual\").get(\"revenue\").value * 100), \"1.0-0\"), \"%\\n                                    \");\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_tr_5_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r101 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(2, 1, ctx_r101.roundVal(ctx_r101.consolDataFormArray.get(\"consolidated\").get(\"netProfit\").value / ctx_r101.consolDataFormArray.get(\"consolidated\").get(\"revenue\").value * 100), \"1.0-0\"), \"%\\n                                \");\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_tr_5_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵtemplate(7, SolePropComponent_div_31_ng_template_9_ng_template_6_tr_5_div_7_Template, 3, 4, \"div\", 53);\n    i0.ɵɵtext(8, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n                                \");\n    i0.ɵɵelement(10, \"td\");\n    i0.ɵɵtext(11, \"\\n                                \");\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtemplate(13, SolePropComponent_div_31_ng_template_9_ng_template_6_tr_5_div_13_Template, 3, 4, \"div\", 53);\n    i0.ɵɵtext(14, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"td\");\n    i0.ɵɵtext(16, \"\\n                                \");\n    i0.ɵɵtemplate(17, SolePropComponent_div_31_ng_template_9_ng_template_6_tr_5_td_17_Template, 2, 0, \"td\", 58);\n    i0.ɵɵpipe(18, \"slice\");\n    i0.ɵɵtext(19, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r81 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r81.cols[2]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r81.consolDataFormArray.get(\"annual\").get(\"revenue\").value !== 0 && ctx_r81.consolDataFormArray.get(\"annual\").get(\"revenue\").value !== undefined && ctx_r81.consolDataFormArray.get(\"annual\").get(\"revenue\").value !== null);\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(12, _c11));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r81.consolDataFormArray.get(\"consolidated\").get(\"revenue\").value !== 0 && ctx_r81.consolDataFormArray.get(\"consolidated\").get(\"revenue\").value !== undefined && ctx_r81.consolDataFormArray.get(\"consolidated\").get(\"revenue\").value !== null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(13, _c12));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(18, 8, ctx_r81.getYrmthList(), ctx_r81.maxMths - (ctx_r81.solePropForm == null ? null : ctx_r81.solePropForm.get(\"divisor\").value), ctx_r81.maxMths));\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵtemplate(1, SolePropComponent_div_31_ng_template_9_ng_template_6_tr_1_Template, 33, 24, \"tr\", 8);\n    i0.ɵɵtext(2, \"\\n                            \");\n    i0.ɵɵtemplate(3, SolePropComponent_div_31_ng_template_9_ng_template_6_tr_3_Template, 33, 24, \"tr\", 8);\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵtemplate(5, SolePropComponent_div_31_ng_template_9_ng_template_6_tr_5_Template, 20, 14, \"tr\", 8);\n    i0.ɵɵtext(6, \"\\n                        \");\n  }\n  if (rf & 2) {\n    const rowIndex_r78 = ctx.rowIndex;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r78 == 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r78 == 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r78 == 2);\n  }\n}\nfunction SolePropComponent_div_31_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                    \");\n    i0.ɵɵelementStart(1, \"p-table\", 17, 54);\n    i0.ɵɵtext(3, \"\\n                        \");\n    i0.ɵɵtemplate(4, SolePropComponent_div_31_ng_template_9_ng_template_4_Template, 64, 32, \"ng-template\", 19);\n    i0.ɵɵtext(5, \"\\n                        \");\n    i0.ɵɵtemplate(6, SolePropComponent_div_31_ng_template_9_ng_template_6_Template, 7, 3, \"ng-template\", 20);\n    i0.ɵɵtext(7, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                \");\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r6.getYrmthList())(\"filterDelay\", 0)(\"loading\", ctx_r6.loading);\n  }\n}\nfunction SolePropComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵelementStart(2, \"div\", 14);\n    i0.ɵɵtext(3, \"\\n                \");\n    i0.ɵɵtemplate(4, SolePropComponent_div_31_p_table_4_Template, 7, 3, \"p-table\", 15);\n    i0.ɵɵtext(5, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n            \");\n    i0.ɵɵelementStart(7, \"div\", 1);\n    i0.ɵɵtext(8, \"\\n                \");\n    i0.ɵɵtemplate(9, SolePropComponent_div_31_ng_template_9_Template, 9, 3, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(11, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r5 = i0.ɵɵreference(10);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.solePropForm.controls[\"captionGroup\"].get(\"radioOption\").value === \"MTH\")(\"ngIfElse\", _r5);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.consolDataFormArray);\n  }\n}\nfunction SolePropComponent_div_51_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r106 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 61);\n    i0.ɵɵtext(1, \"\\n                \");\n    i0.ɵɵelementStart(2, \"p-button\", 62);\n    i0.ɵɵlistener(\"click\", function SolePropComponent_div_51_Template_p_button_click_2_listener($event) {\n      i0.ɵɵrestoreView(_r106);\n      const ctx_r105 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r105.copyToItem($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r3.enableCopytoItem());\n  }\n}\nconst _c13 = function () {\n  return {\n    \"width\": \"5em\",\n    \"text-align\": \"right\"\n  };\n};\nconst _c14 = function (a0) {\n  return {\n    \"color\": a0\n  };\n};\nclass SolePropComponent {\n  constructor(formBuilder, ns2Http, dateUtilsService, seClaimService, toastService, confirmationService, exportUtilsService, accountService, localeId) {\n    this.formBuilder = formBuilder;\n    this.ns2Http = ns2Http;\n    this.dateUtilsService = dateUtilsService;\n    this.seClaimService = seClaimService;\n    this.toastService = toastService;\n    this.confirmationService = confirmationService;\n    this.exportUtilsService = exportUtilsService;\n    this.accountService = accountService;\n    this.localeId = localeId;\n    this.radioOptions = [{\n      name: 'Monthly',\n      key: 'MTH'\n    }, {\n      name: 'Consolidated',\n      key: 'CON'\n    }];\n    this.sourceYrOptions = [];\n    this.loading = true;\n    this.currHardCopyDetails = {};\n    this.seHardCopyDetails = {};\n    this.selectedWDOption = {};\n    this.subscr = new rxjs_1.Subscription();\n    this.maxMths = 6;\n    this.dateFormat = \"DD-MM-YYYY\";\n    this.solePropForm = this.formBuilder.group({\n      id: new forms_1.FormControl(null, null),\n      workingDataId: new forms_1.FormControl('', null),\n      consolidated: new forms_1.FormControl(false, null),\n      divisor: new forms_1.FormControl(6, null),\n      annualDivisor: new forms_1.FormControl(12, null),\n      dataFormArray: this.formBuilder.group({}),\n      consolDataFormArray: this.formBuilder.group({}),\n      headerGroup: this.formBuilder.group({\n        yearInput: new forms_1.FormControl(0, null)\n      }),\n      captionGroup: this.formBuilder.group({\n        radioOption: new forms_1.FormControl(this.radioOptions[0].key, null)\n      }),\n      yrmthList: new forms_1.FormControl([], null),\n      startYrmth: new forms_1.FormControl('', null),\n      endYrmth: new forms_1.FormControl('', null),\n      yearInputOptions: new forms_1.FormControl([], null),\n      annualIncomeList: new forms_1.FormArray([])\n    });\n    this.periodStartDate = \"\";\n    this.periodEndDate = \"\";\n    this.yrmthList = [];\n    this.colMthRange = [];\n    this.dataSet = {\n      dataList: [],\n      annualList: []\n    };\n    this.yearInputOptions = [];\n    this.sysProposedAmt = 0;\n    this.nipDifference = 0;\n    this.netIncomeDifference = 0;\n    this.annualNIAvg = 0;\n    this.consolNIAvg = 0;\n    this.annualNIP = 0;\n    this.consolNIP = 0;\n    this.itemDetailsSection = {};\n    this.PEND_VERIFY_STATUS = \"PVE\";\n    this.PEND_ACTION_STATUS = \"PAC\";\n    this.totalAmtPayEvent = new core_1.EventEmitter();\n    console.log(\"tests\");\n  }\n  static createNewSolePropForm(startYrmth, endYrmth, workingDataOption, dateUtilsService, formBuilder, trgStartDte) {\n    const solePropFormGroup = formBuilder.group({\n      id: new forms_1.FormControl(null, null),\n      workingDataId: new forms_1.FormControl(null, null),\n      consolidated: new forms_1.FormControl(false, null),\n      divisor: new forms_1.FormControl(6, null),\n      annualDivisor: new forms_1.FormControl(12, null),\n      headerGroup: formBuilder.group({\n        yearInput: new forms_1.FormControl(0, null)\n      }),\n      dataFormArray: formBuilder.group({}),\n      consolDataFormArray: formBuilder.group({}),\n      captionGroup: formBuilder.group({\n        radioOption: new forms_1.FormControl(\"MTH\", null)\n      }),\n      yrmthList: new forms_1.FormControl([], null),\n      startYrmth: new forms_1.FormControl(startYrmth, null),\n      endYrmth: new forms_1.FormControl(endYrmth, null),\n      yearInputOptions: new forms_1.FormControl([], null),\n      annualIncomeList: new forms_1.FormArray([])\n    });\n    const claimStartYrMth = dateUtilsService.convertStrToDate(solePropFormGroup.get('startYrmth').value, \"DD-MM-YYYY\");\n    const claimEndYrMth = dateUtilsService.convertStrToDate(solePropFormGroup.get('endYrmth').value, \"DD-MM-YYYY\");\n    const claimStartDt = (0, moment_1.default)(new Date(claimStartYrMth.getFullYear(), claimStartYrMth.getMonth(), 1));\n    const claimEndDt = (0, moment_1.default)(new Date(claimEndYrMth.getFullYear(), +claimEndYrMth.getMonth() + 1, 0));\n    const colStartDt = claimEndDt.clone().subtract(+solePropFormGroup?.get('divisor').value - 1, 'months');\n    const colEndDt = claimEndDt.clone();\n    const colMthRange = [];\n    for (let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')) {\n      colMthRange.push(mth.format(\"DD-MM-YYYY\"));\n    }\n    const yrmthList = colMthRange.map(x => (0, moment_1.default)(dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\n    solePropFormGroup.get('yrmthList').setValue(yrmthList);\n    console.log(\"the alpha yr nmt\", yrmthList);\n    //create empty dataFormArray\n    //add Annual\n    solePropFormGroup.get('dataFormArray').addControl('annual', formBuilder.group({\n      yrmthReCon: new forms_1.FormControl(null, null),\n      yrmth: new forms_1.FormControl(null, null),\n      revenue: new forms_1.FormControl(null, null),\n      netProfit: new forms_1.FormControl(null, null),\n      type: new forms_1.FormControl('1', null)\n    }));\n    yrmthList.forEach(x => {\n      solePropFormGroup.get('dataFormArray').addControl(x, formBuilder.group({\n        yrmthReCon: new forms_1.FormControl(x, null),\n        yrmth: new forms_1.FormControl(x, null),\n        revenue: new forms_1.FormControl(null, null),\n        netProfit: new forms_1.FormControl(null, null),\n        type: new forms_1.FormControl('3', null)\n      }));\n    });\n    //create empty consolDataFormArray\n    //add Annual\n    solePropFormGroup.get('consolDataFormArray').addControl('annual', formBuilder.group({\n      yrmthReCon: new forms_1.FormControl(null, null),\n      yrmth: new forms_1.FormControl(null, null),\n      revenue: new forms_1.FormControl(null, null),\n      netProfit: new forms_1.FormControl(null, null),\n      type: new forms_1.FormControl('1', null),\n      year: new forms_1.FormControl(2014, null)\n    }));\n    //add consolidated\n    solePropFormGroup.get('consolDataFormArray').addControl('consolidated', formBuilder.group({\n      yrmthReCon: new forms_1.FormControl(null, null),\n      yrmth: new forms_1.FormControl(null, null),\n      revenue: new forms_1.FormControl(null, null),\n      netProfit: new forms_1.FormControl(null, null),\n      type: new forms_1.FormControl('2', null)\n    }));\n    const date1 = +dateUtilsService.convertMomentToStr((0, moment_1.default)(dateUtilsService.convertStrToDate(trgStartDte, \"DD-MM-YYYY\")).subtract(1, 'years'), \"YYYY\");\n    const date2 = +dateUtilsService.convertMomentToStr((0, moment_1.default)(dateUtilsService.convertStrToDate(trgStartDte, \"DD-MM-YYYY\")), \"YYYY\");\n    const yearInputOptions = [{\n      name: date1,\n      key: date1\n    }, {\n      name: date2,\n      key: date2\n    }];\n    //if no value from api or the claim section start date has been changed, default to first option\n    solePropFormGroup.get('headerGroup.yearInput')?.setValue(yearInputOptions[1].key);\n    solePropFormGroup.get('yearInputOptions')?.setValue(yearInputOptions);\n    //add default annualIncomeList\n    const annualIncomeFormGroup = formBuilder.group({\n      source: new forms_1.FormControl(null, null),\n      assessment: new forms_1.FormControl(null, null),\n      acctgPeriodStrt: new forms_1.FormControl(null, null),\n      acctgPeriodEnd: new forms_1.FormControl(null, null),\n      occupationNature: new forms_1.FormControl(null, null),\n      revenue: new forms_1.FormControl(null, null),\n      adjProfit: new forms_1.FormControl(null, null)\n    });\n    solePropFormGroup.get('annualIncomeList').push(annualIncomeFormGroup);\n    return solePropFormGroup;\n  }\n  static mapSolePropWDToFormGroup(solePropWD, dateUtilsService, formBuilder) {\n    const solePropFormGroup = formBuilder.group({\n      workingDataId: new forms_1.FormControl(solePropWD.workingDataId),\n      id: new forms_1.FormControl(solePropWD.id, null),\n      consolidated: new forms_1.FormControl(solePropWD.consolidated, null),\n      divisor: new forms_1.FormControl(solePropWD.divisor, null),\n      annualDivisor: new forms_1.FormControl(solePropWD.annualDivisor, null),\n      headerGroup: formBuilder.group({\n        yearInput: new forms_1.FormControl(0, null)\n      }),\n      dataFormArray: formBuilder.group({}),\n      consolDataFormArray: formBuilder.group({}),\n      captionGroup: formBuilder.group({\n        radioOption: new forms_1.FormControl(solePropWD.consolidated ? \"CON\" : \"MTH\", null)\n      }),\n      yrmthList: new forms_1.FormControl([], null),\n      startYrmth: new forms_1.FormControl(solePropWD.startYrmth, null),\n      endYrmth: new forms_1.FormControl(solePropWD.endYrmth, null),\n      yearInputOptions: new forms_1.FormControl([], null),\n      annualIncomeList: new forms_1.FormArray([])\n    });\n    const annualPartnerSubWD = solePropWD?.dataList?.filter(x => x.type === '1')[0];\n    solePropFormGroup.get('headerGroup.yearInput').setValue(annualPartnerSubWD?.year);\n    const claimEndYrMth = dateUtilsService.convertStrToDate(solePropFormGroup.get('endYrmth').value, \"DD-MM-YYYY\");\n    const claimEndDt = (0, moment_1.default)(new Date(claimEndYrMth.getFullYear(), +claimEndYrMth.getMonth() + 1, 0));\n    const colStartDt = claimEndDt.clone().subtract(+solePropFormGroup?.get('divisor').value - 1, 'months');\n    const colEndDt = claimEndDt.clone();\n    const colMthRange = [];\n    for (let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')) {\n      colMthRange.push(mth.format(\"DD-MM-YYYY\"));\n    }\n    const yrmthList = colMthRange.map(x => (0, moment_1.default)(dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\n    solePropFormGroup.get('yrmthList').setValue(yrmthList);\n    let dataRecon = [];\n    const newDataList = [];\n    if (solePropWD.consolidated) {\n      //expect 1\n      if (solePropWD.dataList) {\n        solePropFormGroup?.get('captionGroup.radioOption').setValue('CON');\n        dataRecon = SolePropComponent.staticConstructConsolidatedHeaderData(solePropWD.dataList, true, false, dateUtilsService, yrmthList);\n        SolePropComponent.constructForm(dataRecon, solePropFormGroup.get('consolDataFormArray'), false, formBuilder, solePropFormGroup);\n        // construct empty for mthly view\n        dataRecon = SolePropComponent.staticConstructConsolidatedHeaderData(newDataList, false, true, dateUtilsService, yrmthList);\n        SolePropComponent.constructForm(newDataList, solePropFormGroup.get('dataFormArray'), true, formBuilder, solePropFormGroup);\n      }\n    } else {\n      if (solePropWD.dataList) {\n        solePropFormGroup?.get('captionGroup.radioOption').setValue('MTH');\n        //list of mthly records\n        dataRecon = SolePropComponent.staticConstructConsolidatedHeaderData(solePropWD.dataList, false, false, dateUtilsService, yrmthList);\n        SolePropComponent.constructForm(dataRecon, solePropFormGroup.get('dataFormArray'), false, formBuilder, solePropFormGroup);\n        //construct empty for consolidated view\n        dataRecon = SolePropComponent.staticConstructConsolidatedHeaderData(newDataList, true, true, dateUtilsService, yrmthList);\n        SolePropComponent.constructForm(newDataList, solePropFormGroup.get('consolDataFormArray'), true, formBuilder, solePropFormGroup);\n      }\n    }\n    //set eligible mth divisor and prdn bonus divisor\n    solePropFormGroup.get('divisor').setValue(solePropWD.divisor);\n    solePropFormGroup.get('annualDivisor').setValue(solePropWD.annualDivisor);\n    solePropFormGroup.get('id').setValue(solePropWD.id);\n    solePropFormGroup.get('workingDataId').setValue(solePropWD.workingDataId);\n    solePropFormGroup.get('startYrmth').setValue(solePropWD.startYrmth);\n    solePropFormGroup.get('endYrmth').setValue(solePropWD.endYrmth);\n    solePropFormGroup.get('consolidated').setValue(solePropWD.consolidated);\n    solePropWD.annualIncomeList?.forEach(annualIncomeWD => {\n      const annualIncomeFormGroup = formBuilder.group({\n        source: new forms_1.FormControl(annualIncomeWD.source, null),\n        assessment: new forms_1.FormControl(annualIncomeWD.assessment === null ? null : dateUtilsService.convertStrToDate(annualIncomeWD.assessment, \"DD-MM-YYYY\"), null),\n        acctgPeriodStrt: new forms_1.FormControl(annualIncomeWD.acctgStartDate === null ? null : dateUtilsService.convertStrToDate(annualIncomeWD.acctgStartDate, \"DD-MM-YYYY\"), null),\n        acctgPeriodEnd: new forms_1.FormControl(annualIncomeWD.acctgEndDate === null ? null : dateUtilsService.convertStrToDate(annualIncomeWD.acctgEndDate, \"DD-MM-YYYY\"), null),\n        occupationNature: new forms_1.FormControl(annualIncomeWD.occupationNature, null),\n        revenue: new forms_1.FormControl(annualIncomeWD.revenue, null),\n        adjProfit: new forms_1.FormControl(annualIncomeWD.adjProfit, null)\n      });\n      solePropFormGroup.get('annualIncomeList').push(annualIncomeFormGroup);\n    });\n    return solePropFormGroup;\n  }\n  static constructForm(dataList, arrformGroup, empty, formBuilder, solePropForm) {\n    SolePropComponent.staticConstructInitialAnnualOptions(dataList, empty, solePropForm);\n    let yearInput;\n    if (arrformGroup === solePropForm.get('consolDataFormArray')) {\n      dataList.forEach(x => {\n        //if annual type\n        if (x.type === '1') {\n          console.log(\"migata\", x.year);\n          arrformGroup.addControl('annual', SolePropComponent.addRow(x, formBuilder));\n          yearInput = x.year;\n        } else if (x.type === '2') {\n          //if consolidated type\n          arrformGroup.addControl('consolidated', SolePropComponent.addRow(x, formBuilder));\n        }\n      });\n      console.log(\"the consol form\", arrformGroup);\n    } else {\n      dataList.forEach(x => {\n        //if annual type\n        if (x.type === '1') {\n          arrformGroup.addControl('annual', SolePropComponent.addRow(x, formBuilder));\n          yearInput = x.year;\n        } else if (x.type === '3') {\n          //if mthly type\n          arrformGroup.addControl(x?.yrmthReCon, SolePropComponent.addRow(x, formBuilder));\n        }\n      });\n      console.log(\"the mthly form\", arrformGroup);\n    }\n    if (yearInput) {\n      solePropForm?.get('headerGroup').get('yearInput').setValue(yearInput);\n    }\n  }\n  static staticConstructInitialAnnualOptions(dataList, empty, solePropForm) {\n    const annualData = dataList?.filter(x => x.type === '1')[0];\n    if (!empty) {\n      console.log(\"annual is \", annualData);\n      if (annualData.year !== undefined && !solePropForm.get('yearInputOptions').value.find(y => y.name === annualData.year)) {\n        const yearInputOptions = solePropForm.get('yearInputOptions').value;\n        yearInputOptions.push({\n          key: annualData.year,\n          name: annualData.year\n        });\n        solePropForm.get('yearInputOptions').setValue(yearInputOptions);\n      }\n    }\n  }\n  static staticConstructConsolidatedHeaderData(dataList, consolidated, empty, dateUtilsService, yrmthList) {\n    //initialize with 1 column annual income only\n    let sortedData;\n    const annualData = dataList.filter(x => x.type === '1');\n    if (annualData.length === 0) {\n      dataList.push({\n        type: '1'\n      });\n    }\n    let sanitizedDataList = [];\n    if (consolidated || empty) {\n      yrmthList.forEach((mth, colIndex) => {\n        dataList.push({\n          type: '2'\n        });\n        dataList.push({\n          yrmthReCon: mth,\n          type: '3'\n        });\n      });\n      sortedData = dataList;\n    } else {\n      sanitizedDataList = dataList.filter(x => yrmthList.includes(x.yrmth) && x.type === '3' || x.type === '1');\n      yrmthList.forEach(yrmth => {\n        const index = sanitizedDataList.findIndex(x => x.yrmth === yrmth && x.type !== '1');\n        if (index < 0) {\n          sanitizedDataList.push({\n            yrmthReCon: yrmth,\n            type: '3'\n          });\n        } else {\n          sanitizedDataList[index].yrmthReCon = yrmth;\n        }\n      });\n      console.log(\"after data\", sanitizedDataList);\n      sortedData = sanitizedDataList;\n    }\n    return sortedData;\n  }\n  static addRow(dataEntry, formBuilder) {\n    //does validation to makesure the yrmth tallies to yrmthRecon  or is annual other wise default to 0\n    let formObj;\n    if (dataEntry.type === '3' && dataEntry?.yrmthReCon !== undefined && dataEntry?.yrmth !== dataEntry?.yrmthReCon) {\n      formObj = {\n        yrmthReCon: new forms_1.FormControl(dataEntry?.yrmthReCon, null),\n        yrmth: new forms_1.FormControl(dataEntry?.yrmth, null),\n        revenue: new forms_1.FormControl(null, null),\n        netProfit: new forms_1.FormControl(null, null),\n        type: new forms_1.FormControl(dataEntry?.type, null)\n      };\n    } else {\n      if (dataEntry.type === '1') {\n        formObj = {\n          year: dataEntry.year,\n          yrmth: dataEntry?.yrmth,\n          yrmthReCon: new forms_1.FormControl(dataEntry?.yrmthReCon, null),\n          revenue: new forms_1.FormControl(dataEntry?.revenue || null, null),\n          netProfit: new forms_1.FormControl(dataEntry?.netProfit || null, null),\n          type: new forms_1.FormControl(dataEntry?.type, null)\n        };\n      } else {\n        formObj = {\n          yrmth: dataEntry?.yrmth,\n          yrmthReCon: new forms_1.FormControl(dataEntry?.yrmthReCon, null),\n          revenue: new forms_1.FormControl(dataEntry?.revenue || null, null),\n          netProfit: new forms_1.FormControl(dataEntry?.netProfit || null, null),\n          type: new forms_1.FormControl(dataEntry?.type, null)\n        };\n      }\n    }\n    return formBuilder.group(formObj);\n  }\n  static populateAnnualIncomeList(dataSet, formBuilder, dateUtilsService, solePropForm) {\n    dataSet.annualIncomeList?.forEach(annualIncomeWD => {\n      const annualIncomeFormGroup = formBuilder.group({\n        seq: new forms_1.FormControl(annualIncomeWD.seq, null),\n        source: new forms_1.FormControl(annualIncomeWD.source, null),\n        assessment: new forms_1.FormControl(annualIncomeWD.assessment === null ? null : dateUtilsService.convertStrToDate(annualIncomeWD.assessment, \"DD-MM-YYYY\"), null),\n        acctgPeriodStrt: new forms_1.FormControl(annualIncomeWD.acctgStartDate === null ? null : dateUtilsService.convertStrToDate(annualIncomeWD.acctgStartDate, \"DD-MM-YYYY\"), null),\n        acctgPeriodEnd: new forms_1.FormControl(annualIncomeWD.acctgEndDate === null ? null : dateUtilsService.convertStrToDate(annualIncomeWD.acctgEndDate, \"DD-MM-YYYY\"), null),\n        occupationNature: new forms_1.FormControl(annualIncomeWD.occupationNature, null),\n        revenue: new forms_1.FormControl(annualIncomeWD.revenue, null),\n        adjProfit: new forms_1.FormControl(annualIncomeWD.adjProfit, null)\n      });\n      solePropForm.get('annualIncomeList').push(annualIncomeFormGroup);\n    });\n  }\n  static mapSolePropFormGroupToWD(fg, obj, dateUtilsService) {\n    const annualIncomeDtoList = [];\n    const dataList = [];\n    const solePropWD = {\n      id: fg.get('id')?.value,\n      workingDataId: obj.workingDataId,\n      year: fg?.get('year')?.value || obj.year,\n      consolidated: fg?.get('consolidated')?.value,\n      archiveDt: obj.archiveDt,\n      dataList,\n      divisor: fg.get('divisor').value,\n      annualDivisor: fg.get('annualDivisor').value,\n      workingDataTypeCode: obj.workingDataTypeCode,\n      startYrmth: fg.get('startYrmth').value,\n      endYrmth: fg.get('endYrmth').value,\n      annualIncomeList: annualIncomeDtoList\n    };\n    const yrmthList = fg.get('yrmthList').value;\n    const subYrMthList = yrmthList.slice(6 - fg.get('divisor').value);\n    console.log('sub yr mmth', subYrMthList);\n    if (fg !== undefined && fg !== null) {\n      let yrmthFG;\n      let subWD;\n      if (fg.get('consolidated').value) {\n        yrmthFG = fg.get('consolDataFormArray').get('annual');\n        subWD = {\n          revenue: yrmthFG.get(\"revenue\").value,\n          netProfit: yrmthFG.get(\"netProfit\").value,\n          type: \"1\",\n          year: fg.get(\"headerGroup.yearInput\").value\n        };\n        dataList.push(subWD);\n        yrmthFG = fg.get('consolDataFormArray').get('consolidated');\n        subWD = {\n          revenue: yrmthFG.get(\"revenue\").value,\n          netProfit: yrmthFG.get(\"netProfit\").value,\n          type: \"2\"\n        };\n        dataList.push(subWD);\n      } else {\n        //mthly\n        yrmthFG = fg.get('dataFormArray').get('annual');\n        subWD = {\n          revenue: yrmthFG.get(\"revenue\").value,\n          netProfit: yrmthFG.get(\"netProfit\").value,\n          type: \"1\",\n          year: fg.get(\"headerGroup.yearInput\").value\n        };\n        dataList.push(subWD);\n        subYrMthList.forEach(key => {\n          yrmthFG = fg.get('dataFormArray').get(key);\n          subWD = {\n            revenue: yrmthFG.get(\"revenue\").value,\n            netProfit: yrmthFG.get(\"netProfit\").value,\n            type: \"3\",\n            yrmth: yrmthFG.get(\"yrmthReCon\").value\n          };\n          dataList.push(subWD);\n        });\n      }\n    }\n    const annualIncomeListFA = fg.get('annualIncomeList');\n    annualIncomeListFA.controls.forEach(control => {\n      const annualIncomeDto = {\n        workingDataId: obj.workingDataId,\n        seq: annualIncomeDtoList.length + 1,\n        source: control.get('source').value,\n        assessment: dateUtilsService.isValid(control.get('assessment').value) ? dateUtilsService.convertDateToStr(control.get('assessment').value, \"DD-MM-YYYY\") : null,\n        acctgStartDate: dateUtilsService.isValid(control.get('acctgPeriodStrt').value) ? dateUtilsService.convertDateToStr(control.get('acctgPeriodStrt').value, \"DD-MM-YYYY\") : null,\n        acctgEndDate: dateUtilsService.isValid(control.get('acctgPeriodEnd').value) ? dateUtilsService.convertDateToStr(control.get('acctgPeriodEnd').value, \"DD-MM-YYYY\") : null,\n        occupationNature: control.get('occupationNature').value,\n        revenue: control.get('revenue').value,\n        adjProfit: control.get('adjProfit').value\n      };\n      annualIncomeDtoList.push(annualIncomeDto);\n    });\n    console.log(\"whole saved is\", solePropWD);\n    return solePropWD;\n  }\n  ngOnInit() {\n    console.log(\"test\");\n    this.cols = [\"Revenue\", \"Net Profit\", \"Entity NIP\"];\n    this.constructAnnualYearInputOptions();\n  }\n  get dataFormArray() {\n    return this.solePropForm?.get('dataFormArray');\n  }\n  get consolDataFormArray() {\n    return this.solePropForm?.get('consolDataFormArray');\n  }\n  get captionGroup() {\n    return this.solePropForm?.get('captionGroup');\n  }\n  get headerGroup() {\n    return this.solePropForm?.get('headerGroup');\n  }\n  ngOnChanges(changes) {\n    if (changes.trgStartDte && this.isActive()) {\n      console.log(\"reconstructing\", changes);\n      this.generateYrMth(null);\n      this.constructPeriodStartEndDate();\n      this.constructAnnualYearInputOptions();\n    }\n    if (changes.seHardCopyDetails?.currentValue) {\n      this.currHardCopyDetails = changes.seHardCopyDetails.currentValue;\n    }\n    if (changes.selectedWDOption?.currentValue) {\n      this.currSelectedOption = changes.selectedWDOption?.currentValue;\n      this.subscr.unsubscribe();\n      this.yrmthList = [];\n      this.retrieveSolePropWD();\n    }\n  }\n  constructPeriodStartEndDate() {\n    const claimStartDt = this.dateUtilsService.convertStrToDate(this.currHardCopyDetails.trgStartDte, \"DD-MM-YYYY\");\n    this.periodEndDate = this.dateUtilsService.convertMomentToStr((0, moment_1.default)(claimStartDt).subtract(1, 'months'), \"MM-YYYY\");\n    this.periodStartDate = this.dateUtilsService.convertMomentToStr((0, moment_1.default)(claimStartDt).subtract(this.solePropForm.get(\"divisor\").value, 'months'), \"MM-YYYY\");\n  }\n  constructDynamicMthRange() {\n    this.colMthRange = [];\n    const claimStartDt = this.dateUtilsService.convertStrToMoment(this.currHardCopyDetails.trgStartDte, \"DD-MM-YYYY\");\n    const colEndDt = claimStartDt.clone().subtract(1, 'months');\n    const colStartDt = claimStartDt.clone().subtract(this.solePropForm?.get('divisor').value, 'months');\n    for (let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')) {\n      this.colMthRange.push(mth.format(\"DD-MM-YYYY\"));\n    }\n    console.log(\"col mth range\", this.colMthRange);\n    this.yrmthList = this.colMthRange.map(x => (0, moment_1.default)(this.dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\n  }\n  tester() {\n    console.log(\"the new map\", this.newUnsavedWorkingData);\n    console.log(\"rigata\", this.solePropForm.controls);\n  }\n  isActive() {\n    return this.currSelectedOption?.obj.archiveDt === 0;\n  }\n  constructAnnualYearInputOptions() {\n    let claimStartDt;\n    if (this.trgStartDte) {\n      claimStartDt = this.dateUtilsService.convertStrToDate(this.trgStartDte, \"DD-MM-YYYY\");\n    } else {\n      console.log(\"the trg is\", this.currHardCopyDetails.trgStartDte);\n      claimStartDt = this.dateUtilsService.convertStrToDate(this.currHardCopyDetails.trgStartDte, \"DD-MM-YYYY\");\n    }\n    const date1 = +this.dateUtilsService.convertMomentToStr((0, moment_1.default)(claimStartDt).subtract(1, 'years'), \"YYYY\");\n    const date2 = +this.dateUtilsService.convertMomentToStr((0, moment_1.default)(claimStartDt), \"YYYY\");\n    const yearInputOptions = [{\n      name: date1,\n      key: date1\n    }, {\n      name: date2,\n      key: date2\n    }];\n    console.log(\"hello year input\", yearInputOptions);\n    //if no value from api or the claim section start date has been changed, default to first option\n    this.solePropForm.get('yearInputOptions')?.setValue(yearInputOptions);\n    this.solePropForm.get('headerGroup.yearInput')?.setValue(yearInputOptions[1].key);\n  }\n  constructSourceYearOptions() {\n    const claimEndDt = this.dateUtilsService.convertStrToDate(this.currHardCopyDetails.trgEndDte, \"DD-MM-YYYY\");\n    this.sourceYrOptions = [{\n      name: 'NA ' + this.dateUtilsService.convertMomentToStr((0, moment_1.default)(claimEndDt).subtract(1, 'years'), \"YY\"),\n      key: 1\n    }, {\n      name: 'NA ' + this.dateUtilsService.convertMomentToStr((0, moment_1.default)(claimEndDt), \"YY\"),\n      key: 2\n    }, {\n      name: 'NA ' + this.dateUtilsService.convertMomentToStr((0, moment_1.default)(claimEndDt).add(1, 'years'), \"YY\"),\n      key: 3\n    }];\n    console.log('the year options', this.sourceYrOptions);\n  }\n  generateYrMth(dataSet) {\n    //base range is 6 mths from backend, other wise is 6 mths from claim start mth - 6 to claim start mth -1\n    let claimStartDt;\n    let claimEndDt;\n    if (dataSet) {\n      console.log(\"dataSet\", dataSet);\n      const claimStartYrMth = this.dateUtilsService.convertStrToDate(dataSet?.startYrmth, this.dateFormat);\n      const claimEndYrMth = this.dateUtilsService.convertStrToDate(dataSet.endYrmth, this.dateFormat);\n      claimStartDt = (0, moment_1.default)(new Date(claimStartYrMth.getFullYear(), claimStartYrMth.getMonth(), 1));\n      claimEndDt = (0, moment_1.default)(new Date(claimEndYrMth.getFullYear(), +claimEndYrMth.getMonth() + 1, 0));\n      const colStartDt = claimEndDt.clone().subtract(+this.solePropForm?.get('divisor').value - 1, 'months');\n      const colEndDt = claimEndDt.clone();\n      this.colMthRange = [];\n      for (let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')) {\n        this.colMthRange.push(mth.format(\"DD-MM-YYYY\"));\n      }\n      this.yrmthList = this.colMthRange.map(x => (0, moment_1.default)(this.dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\n      console.log(\"yr mth list\", this.yrmthList);\n    }\n    //adds more form control if needed\n    if (this.trgStartDte !== undefined && this.trgStartDte !== null) {\n      console.log(\"incomign trg date\", this.trgStartDte);\n      claimStartDt = this.dateUtilsService.convertStrToMoment(this.trgStartDte, this.dateFormat).subtract(6, 'months');\n      claimEndDt = this.dateUtilsService.convertStrToMoment(this.trgStartDte, this.dateFormat).subtract(1, 'months');\n      const colStartDt = claimStartDt.clone();\n      const colEndDt = claimEndDt.clone();\n      this.colMthRange = [];\n      for (let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')) {\n        this.colMthRange.push(mth.format(\"DD-MM-YYYY\"));\n      }\n      this.yrmthList = this.colMthRange.map(x => (0, moment_1.default)(this.dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\n      console.log(\"yr mth list\", this.yrmthList);\n      this.adjustFormArray();\n    }\n    const cloneYrmthList = JSON.parse(JSON.stringify(this.yrmthList));\n    console.log(\"clone is\", cloneYrmthList);\n    this.solePropForm.get('yrmthList').setValue(cloneYrmthList);\n    this.solePropForm.get('startYrmth').setValue(\"01-\".concat(cloneYrmthList[0]));\n    this.solePropForm.get('endYrmth').setValue(\"01-\".concat(cloneYrmthList[cloneYrmthList.length - 1]));\n  }\n  adjustFormArray() {\n    const existingYrMthControls = Object.keys(this.dataFormArray.controls);\n    const diffColHeaders = this.yrmthList.filter(x => !existingYrMthControls.includes(x));\n    if (this.dataFormArray.controls) {\n      let formObj;\n      diffColHeaders.forEach(yrmth => {\n        formObj = {\n          yrmth,\n          yrmthReCon: new forms_1.FormControl(yrmth, null),\n          revenue: new forms_1.FormControl(null, null),\n          netProfit: new forms_1.FormControl(null, null),\n          type: new forms_1.FormControl('3', null)\n        };\n        this.dataFormArray.addControl(yrmth, this.formBuilder.group(formObj));\n      });\n    }\n  }\n  retrieveSolePropWD() {\n    if (!this.currSelectedOption.changes && !this.currSelectedOption.newWD) {\n      this.solePropForm = this.formBuilder.group({\n        id: new forms_1.FormControl(null, null),\n        workingDataId: new forms_1.FormControl('', null),\n        consolidated: new forms_1.FormControl(false, null),\n        divisor: new forms_1.FormControl(6, null),\n        annualDivisor: new forms_1.FormControl(12, null),\n        dataFormArray: this.formBuilder.group({}),\n        consolDataFormArray: this.formBuilder.group({}),\n        headerGroup: this.formBuilder.group({\n          yearInput: new forms_1.FormControl('', null)\n        }),\n        captionGroup: this.formBuilder.group({\n          radioOption: new forms_1.FormControl(this.radioOptions[0].key, null)\n        }),\n        yrmthList: new forms_1.FormControl([], null),\n        startYrmth: new forms_1.FormControl('', null),\n        endYrmth: new forms_1.FormControl('', null),\n        yearInputOptions: new forms_1.FormControl([], null),\n        annualIncomeList: new forms_1.FormArray([])\n      });\n      let params = new http_1.HttpParams();\n      params = params.append(\"workingDataId\", this.currSelectedOption?.obj.workingDataId);\n      this.seClaimService.retrieveSolePropPartnerWD({\n        params\n      }).subscribe(resp => {\n        if (resp) {\n          if (resp.status === 200 && resp.body.data) {\n            this.generateYrMth(resp.body.data);\n            this.populateSolePropForm(resp.body.data, false);\n            this.valueChangeSubscribe();\n          }\n        }\n      }, error => {\n        console.log(\"error is\" + String(error?.error?.error_desc));\n        this.toastService.error(String(error?.error?.error_desc));\n      });\n    } else if (this.currSelectedOption.changes && !this.currSelectedOption.newWD) {\n      this.solePropForm = this.workingDataWithChanges.get(this.currSelectedOption?.obj?.workingDataId).formGroup;\n      this.yrmthList = this.solePropForm.get('yrmthList').value;\n      console.log(\"calling from exist\", this.workingDataWithChanges.get(this.currSelectedOption?.obj?.workingDataId).formGroup);\n      this.setRadioOption(this.solePropForm.get('consolidated').value);\n      console.log(\"get from changes WD Map\", this.solePropForm);\n      this.loading = false;\n    } else if (this.currSelectedOption.newWD) {\n      console.log(\"selected key\", this.currSelectedOption?.key.toString());\n      this.solePropForm = this.newUnsavedWorkingData.get(this.currSelectedOption?.key.toString()).formGroup;\n      console.log(\"get from new WD Map\", this.newUnsavedWorkingData.get(this.currSelectedOption?.key.toString()).formGroup);\n      if (this.solePropForm.get('consolidated')) {\n        this.setRadioOption(this.solePropForm.get('consolidated').value);\n        //defaulted to monthly\n      } else this.setRadioOption(false);\n      this.loading = false;\n    }\n  }\n  populateSolePropForm(dataSet, newForm) {\n    this.dataSet = dataSet;\n    const newDataList = [];\n    let dataRecon = [];\n    if (this.dataSet.consolidated === true) {\n      //expect 1\n      if (this.dataSet.dataList) {\n        this.solePropForm.get('captionGroup.radioOption').setValue('CON');\n        dataRecon = SolePropComponent.staticConstructConsolidatedHeaderData(this.dataSet.dataList, true, false, this.dateUtilsService, this.solePropForm.get('yrmthList').value);\n        SolePropComponent.constructForm(dataRecon, this.consolDataFormArray, false, this.formBuilder, this.solePropForm);\n        // construct empty for mthly view\n        SolePropComponent.staticConstructConsolidatedHeaderData(newDataList, false, true, this.dateUtilsService, this.solePropForm.get('yrmthList').value);\n        SolePropComponent.constructForm(newDataList, this.dataFormArray, true, this.formBuilder, this.solePropForm);\n      }\n    } else {\n      if (this.dataSet.dataList) {\n        console.log(\"imhere\");\n        this.solePropForm.get('captionGroup.radioOption').setValue('MTH');\n        //list of mthly records\n        dataRecon = SolePropComponent.staticConstructConsolidatedHeaderData(this.dataSet.dataList, false, false, this.dateUtilsService, this.solePropForm.get('yrmthList').value);\n        SolePropComponent.constructForm(dataRecon, this.dataFormArray, false, this.formBuilder, this.solePropForm);\n        //construct empty for consolidated view\n        SolePropComponent.staticConstructConsolidatedHeaderData(newDataList, true, true, this.dateUtilsService, this.solePropForm.get('yrmthList').value);\n        SolePropComponent.constructForm(newDataList, this.consolDataFormArray, true, this.formBuilder, this.solePropForm);\n      }\n    }\n    //set eligible mth divisor and prdn bonus divisor\n    this.solePropForm.get('divisor').setValue(dataSet.divisor);\n    this.solePropForm.get('annualDivisor').setValue(dataSet.annualDivisor);\n    this.solePropForm.get('id').setValue(dataSet.id);\n    this.solePropForm.get('workingDataId').setValue(dataSet.workingDataId);\n    this.solePropForm.get('startYrmth').setValue(dataSet.startYrmth);\n    this.solePropForm.get('endYrmth').setValue(dataSet.endYrmth);\n    this.solePropForm.get('consolidated').setValue(this.dataSet.consolidated);\n    SolePropComponent.populateAnnualIncomeList(dataSet, this.formBuilder, this.dateUtilsService, this.solePropForm);\n    this.loading = false;\n    return this.solePropForm;\n  }\n  valueChangeSubscribe() {\n    this.subscr = this.solePropForm.valueChanges.subscribe(changes => {\n      console.log(\"has changes\", changes);\n      this.currSelectedOption.changes = true;\n      this.saveSEClaimRequest.workingDataSectionInd = true;\n      if (!this.workingDataWithChanges.has(this.currSelectedOption?.obj?.workingDataId) && this.currSelectedOption?.obj?.archiveDt === 0) {\n        console.log(\"puting to id\", this.currSelectedOption?.obj?.workingDataId);\n        console.log(\"during subscribe\", this.solePropForm.controls);\n        this.workingDataWithChanges.set(this.currSelectedOption?.obj?.workingDataId, {\n          obj: this.currSelectedOption.obj,\n          formGroup: this.solePropForm\n        });\n      }\n    });\n  }\n  setRadioOption(consolidated) {\n    if (consolidated) {\n      this.solePropForm.get('captionGroup.radioOption').setValue('CON');\n    } else this.solePropForm.get('captionGroup.radioOption').setValue('MTH');\n  }\n  getInnerFormControl(fg, controlName, innerControlName) {\n    return fg?.get(controlName)?.get(innerControlName);\n  }\n  getSumOfCurrRow(formCtrlName) {\n    let sum = 0;\n    let fieldCtrl;\n    this.getYrmthList().slice(this.maxMths - this.solePropForm?.get('divisor').value, this.maxMths).forEach(yrmth => {\n      fieldCtrl = this.dataFormArray.get(yrmth).get(formCtrlName).value || 0; // fieldCtrl is field level, i.e. revenue\n      sum += fieldCtrl;\n    });\n    return sum;\n  }\n  getForm() {\n    console.log(\"rikza\", this.dataFormArray.controls);\n  }\n  confirmSwitch(e, type) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const value = e.target.value;\n      console.log(\"incoming value\", value);\n      if (value !== _this.solePropForm.get('captionGroup.radioOption').value) {\n        e.preventDefault();\n        const confirm = yield _this.showConfirm(e, type);\n        if (!confirm) {\n          return;\n        } else {\n          _this.solePropForm.get('captionGroup.radioOption').setValue(value);\n          _this.solePropForm.get('consolidated').setValue(value === 'CON');\n          _this.clearForm(value);\n        }\n      }\n    })();\n  }\n  showConfirm(e, type) {\n    return new Promise(resolve => {\n      this.confirmationService.confirm({\n        target: e.target,\n        message: 'All Working Data fields will be cleared',\n        header: 'Confirmation',\n        key: type,\n        icon: 'pi pi-exclamation-triangle',\n        acceptLabel: 'Proceed',\n        rejectLabel: 'Cancel',\n        accept() {\n          return resolve(true);\n        }\n      });\n    });\n  }\n  clearForm(radioKey) {\n    let yrmthFG;\n    if (radioKey === \"MTH\") {\n      Object.keys(this.consolDataFormArray.controls).forEach(key => {\n        yrmthFG = this.consolDataFormArray.get(key);\n        yrmthFG.get('revenue').setValue(null);\n        yrmthFG.get('netProfit').setValue(null);\n      });\n    } else {\n      Object.keys(this.dataFormArray.controls).forEach(key => {\n        console.log(\"key is\", key);\n        yrmthFG = this.dataFormArray.get(key);\n        yrmthFG.get('revenue').setValue(null);\n        yrmthFG.get('netProfit').setValue(null);\n      });\n    }\n  }\n  refreshOtherClaim() {\n    let params = new http_1.HttpParams();\n    params = params.append(\"nric\", this.currHardCopyDetails?.headerDto.nsManNric);\n    params = params.append(\"yrmthList\", JSON.stringify(this.getYrmthList()));\n    params = params.append(\"caseId\", this.currHardCopyDetails?.headerDto.caseId);\n    params = params.append(\"workingDataTypeCode\", this.selectedWDOption?.obj.workingDataTypeCode);\n    this.seClaimService.retrieveRefreshOtherSPPClaims({\n      params\n    }).subscribe(resp => {\n      if (resp) {\n        if (resp.status === 200 && resp.body.data) {\n          const refreshedArr = [];\n          resp.body.data.forEach(y => {\n            const ctrl = this.dataFormArray.get(y.yrmth);\n            this.refreshOtherClaimSetValue(ctrl, y);\n            refreshedArr.push(y.yrmth);\n          });\n          const existingYrMthControls = Object.keys(this.dataFormArray.controls);\n          const unrefreshed = refreshedArr.filter(x => !existingYrMthControls.includes(x));\n          unrefreshed.forEach(unrefreshMths => {\n            this.refreshOtherClaimSetValue(this.dataFormArray.get(unrefreshMths), null);\n          });\n        }\n      }\n    });\n  }\n  refreshOtherClaimSetValue(ctrl, data) {\n    if (ctrl) {\n      ctrl.get('revenue').setValue(data.revenue || null);\n      ctrl.get('netProfit').setValue(data.netProfit || null);\n    }\n  }\n  enableRefreshOClaim() {\n    return this.captionGroup.get('radioOption').value === 'MTH';\n  }\n  sortByAnnualandYrmthRecon() {\n    return function (a, b) {\n      if (a.type < b.type) {\n        return -1;\n      }\n      if (a.type > b.type) {\n        return 1;\n      } else {\n        //else 3\n        return (0, moment_1.default)(a.yrmthReCon, \"MM-YYYY\") < (0, moment_1.default)(b.yrmthReCon, \"MM-YYYY\") ? -1 : 1;\n      }\n    };\n  }\n  copyToItem(event) {\n    this.totalAmtPayEvent.emit(this.sysProposedAmt);\n  }\n  enableCopytoItem() {\n    const claimItemList = this.itemDetailsSection.itemForm?.get('otherSEItemArr');\n    let itxItem = null;\n    if (claimItemList.length > 0) {\n      itxItem = claimItemList?.controls.filter(x => x.get('itemType').value === 'AVE')[0];\n      return itxItem?.get('latestStatus').value === this.PEND_VERIFY_STATUS || itxItem?.get('latestStatus').value === this.PEND_ACTION_STATUS;\n    } else return false;\n  }\n  getSysProposedAmt() {\n    this.sysProposedAmt = this.solePropForm?.get('captionGroup.radioOption').value === 'MTH' ? this.getSumOfCurrRow('netProfit') / this.solePropForm?.get('divisor').value : +this.consolDataFormArray.get('consolidated')?.get('netProfit').value / this.solePropForm.get('divisor').value;\n    return this.sysProposedAmt;\n  }\n  roundVal(value) {\n    return Math.round(value);\n  }\n  getFormControlValue(fg, formCtrlName) {\n    return fg.get(formCtrlName).value;\n  }\n  getFormArray(fg, formCtrlName) {\n    return fg.get(formCtrlName);\n  }\n  getYrmthList() {\n    return this.solePropForm.get('yrmthList').value;\n  }\n  getNIPDiff() {\n    let diff = 0;\n    let annualNIP = 0;\n    let consolNIP = 0;\n    if (this.solePropForm?.get('captionGroup.radioOption').value === 'CON') {\n      annualNIP = isFinite((this.consolDataFormArray.get('annual')?.get('netProfit').value || 0) / this.consolDataFormArray.get('annual')?.get('revenue').value * 100 || 0) ? (this.consolDataFormArray.get('annual')?.get('netProfit').value || 0) / this.consolDataFormArray.get('annual')?.get('revenue').value * 100 || 0 : 0;\n      consolNIP = isFinite((this.dataFormArray.get('consolidated')?.get('netProfit').value || 0) / this.dataFormArray.get('consolidated')?.get('revenue').value * 100 || 0) ? (this.consolDataFormArray.get('consolidated')?.get('netProfit').value || 0) / this.consolDataFormArray.get('consolidated')?.get('revenue').value * 100 || 0 : 0;\n    } else {\n      annualNIP = isFinite((this.dataFormArray.get('annual')?.get('netProfit').value || 0) / this.dataFormArray.get('annual')?.get('revenue').value * 100 || 0) ? (this.dataFormArray.get('annual')?.get('netProfit').value || 0) / this.dataFormArray.get('annual')?.get('revenue').value * 100 || 0 : 0;\n      consolNIP = isFinite(this.getSumOfCurrRow('netProfit') / this.getSumOfCurrRow('revenue') * 100) ? this.getSumOfCurrRow('netProfit') / this.getSumOfCurrRow('revenue') * 100 : 0;\n    }\n    this.consolNIP = this.roundVal(consolNIP);\n    this.annualNIP = this.roundVal(annualNIP);\n    diff = this.getAbsoluteDiff(this.annualNIP, this.consolNIP);\n    return diff;\n  }\n  getNetIncomeDiff() {\n    let diff = 0;\n    let annualTotalNI = 0;\n    let consolTotalNI = 0;\n    if (this.solePropForm.get('captionGroup.radioOption').value === 'CON') {\n      annualTotalNI = this.consolDataFormArray.get('annual')?.get('netProfit').value / this.solePropForm.get('annualDivisor').value;\n      consolTotalNI = this.consolDataFormArray.get('consolidated')?.get('netProfit').value / this.solePropForm.get('divisor').value;\n    } else {\n      annualTotalNI = this.dataFormArray.get('annual')?.get('netProfit').value / this.solePropForm.get('annualDivisor').value;\n      consolTotalNI = this.getSumOfCurrRow('netProfit') / this.solePropForm.get('divisor').value;\n    }\n    this.annualNIAvg = annualTotalNI;\n    this.consolNIAvg = consolTotalNI;\n    diff = this.roundVal(this.getAbsoluteDiff(annualTotalNI, consolTotalNI));\n    return diff;\n  }\n  getAbsoluteDiff(x, y) {\n    return Math.abs(x - y);\n  }\n  isValidNumber(obj) {\n    return !isNaN(obj);\n  }\n  exportToCSV(dataTable) {\n    console.log(\"export to csv\");\n    const columns = [{\n      field: 'rowHeader',\n      header: \"\",\n      index: 0,\n      customExportHeader: \"\"\n    }, {\n      field: 'annualAccount',\n      header: 'Annual  Account'.concat(this.solePropForm.get(\"headerGroup.yearInput\").value),\n      index: 1\n    }, {\n      field: 'aveAnnualAccount',\n      header: 'Ave Monthly',\n      index: 2\n    }, {\n      field: 'mthAccount',\n      header: String(this.solePropForm.get('divisor').value).concat('-mth Account'),\n      index: 3\n    }, {\n      field: 'aveMthAccount',\n      header: 'Ave Monthly',\n      index: 4\n    }];\n    const subsetYrmth = this.getYrmthList().slice(this.maxMths - this.solePropForm?.get('divisor').value);\n    for (let i = 0; i < subsetYrmth.length; i++) {\n      columns.push({\n        field: String(subsetYrmth[i]),\n        header: String(subsetYrmth[i]),\n        index: i\n      });\n    }\n    const dtoList = [{\n      rowHeader: 'Revenue'\n    }, {\n      rowHeader: 'Net Profit'\n    }, {\n      rowHeader: 'Entity NIP (Percentage %)'\n    }];\n    const dataList = [];\n    let yrmthFG;\n    let subWD;\n    if (this.solePropForm?.get('captionGroup.radioOption').value === 'CON') {\n      this.exportAddConsol(yrmthFG, dataList, subWD, dtoList);\n    } else {\n      this.exportAddMthly(yrmthFG, dataList, subWD, subsetYrmth, dtoList);\n    }\n    this.exportUtilsService.exportCSV(dataTable, dtoList, 10, columns, \"sole_prop_data_\".concat((0, common_1.formatDate)(new Date(), \"dd-MM-YYYY\", this.localeId)));\n  }\n  exportAddConsol(yrmthFG, dataList, subWD, dtoList) {\n    yrmthFG = this.solePropForm.get('consolDataFormArray').get('annual');\n    subWD = {\n      revenue: yrmthFG.get(\"revenue\").value,\n      netProfit: yrmthFG.get(\"netProfit\").value,\n      type: \"1\",\n      year: this.solePropForm.get(\"headerGroup.yearInput\").value\n    };\n    dataList.push(subWD);\n    yrmthFG = this.solePropForm.get('consolDataFormArray').get('consolidated');\n    subWD = {\n      revenue: yrmthFG.get(\"revenue\").value,\n      netProfit: yrmthFG.get(\"netProfit\").value,\n      type: \"2\"\n    };\n    dataList.push(subWD);\n    //add annual\n    dataList.forEach(x => {\n      if (x.type === \"1\") {\n        dtoList[0]['annualAccount'] = x.revenue;\n        dtoList[1]['annualAccount'] = x.netProfit;\n        dtoList[2]['annualAccount'] = String(+x.netProfit / +x.revenue * 100).concat(\"%\"); //Entity NIP\n        dtoList[0]['aveAnnualAccount'] = x.revenue / this.solePropForm?.get('annualDivisor').value;\n        dtoList[1]['aveAnnualAccount'] = x.netProfit / this.solePropForm?.get('annualDivisor').value;\n        dtoList[2]['aveAnnualAccount'] = '';\n      } else if (x.type === \"2\") {\n        //add consol\n        dtoList[0]['mthAccount'] = x.revenue;\n        dtoList[1]['mthAccount'] = x.netProfit;\n        dtoList[2]['mthAccount'] = String(+x.netProfit / +x.revenue * 100).concat(\"%\"); //Entity NIP\n        dtoList[0]['aveMthAccount'] = x.revenue / this.solePropForm?.get('divisor').value;\n        dtoList[1]['aveMthAccount'] = x.netProfit / this.solePropForm?.get('divisor').value;\n        dtoList[2]['aveMthAccount'] = '';\n      }\n    });\n  }\n  exportAddMthly(yrmthFG, dataList, subWD, subsetYrmth, dtoList) {\n    //mthly\n    yrmthFG = this.solePropForm.get('dataFormArray').get('annual');\n    subWD = {\n      revenue: yrmthFG.get(\"revenue\").value,\n      netProfit: yrmthFG.get(\"netProfit\").value,\n      type: \"1\",\n      year: this.solePropForm.get(\"headerGroup.yearInput\").value\n    };\n    dataList.push(subWD);\n    subsetYrmth.forEach(key => {\n      yrmthFG = this.solePropForm.get('dataFormArray').get(key);\n      subWD = {\n        revenue: yrmthFG.get(\"revenue\").value,\n        netProfit: yrmthFG.get(\"netProfit\").value,\n        type: \"3\",\n        yrmth: yrmthFG.get(\"yrmthReCon\").value\n      };\n      dataList.push(subWD);\n    });\n    //add annual\n    dataList.forEach(x => {\n      if (x.type === \"1\") {\n        dtoList[0]['annualAccount'] = x.revenue;\n        dtoList[1]['annualAccount'] = x.netProfit;\n        dtoList[2]['annualAccount'] = String(+x.netProfit / +x.revenue * 100).concat(\"%\"); //Entity NIP\n        dtoList[0]['aveAnnualAccount'] = x.revenue / this.solePropForm?.get('annualDivisor').value;\n        dtoList[1]['aveAnnualAccount'] = x.netProfit / this.solePropForm?.get('annualDivisor').value;\n        dtoList[2]['aveAnnualAccount'] = '';\n      } else if (x.type === \"3\") {\n        dtoList[0][x.yrmth] = x.revenue;\n        dtoList[1][x.yrmth] = x.netProfit;\n        dtoList[2][x.yrmth] = '';\n      }\n    });\n    const mthlyDataList = dataList.filter(x => x.type === \"3\");\n    dtoList[0]['mthAccount'] = this.getSumByField(mthlyDataList.map(x => {\n      return x.revenue;\n    }));\n    dtoList[1]['mthAccount'] = this.getSumByField(mthlyDataList.map(x => {\n      return x.netProfit;\n    }));\n    dtoList[2]['mthAccount'] = String(+dtoList[1]['mthAccount'] / +dtoList[0]['mthAccount'] * 100).concat(\"%\");\n    dtoList[0]['aveMthAccount'] = dtoList[0]['mthAccount'] / this.solePropForm?.get('divisor').value;\n    dtoList[1]['aveMthAccount'] = dtoList[1]['mthAccount'] / this.solePropForm?.get('divisor').value;\n    dtoList[2]['aveMthAccount'] = \"\";\n  }\n  getSumByField(fieldArray) {\n    const initValue = 0;\n    const sum = fieldArray.reduce((accumulator, currentValue) => accumulator + currentValue, initValue);\n    return sum;\n  }\n  //allows input on need basis\n  hasValidAuthorityAndStation() {\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_VERIFIER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_VERIFICATION) {\n      return true;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_CERTIFICATION) {\n      return false;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_APPROVAL) {\n      return false;\n    }\n    return false;\n  }\n}\nexports.SolePropComponent = SolePropComponent;\nSolePropComponent.ɵfac = function SolePropComponent_Factory(t) {\n  return new (t || SolePropComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Ns2HttpService), i0.ɵɵdirectiveInject(i3.DateUtilsService), i0.ɵɵdirectiveInject(i4.SEClaimService), i0.ɵɵdirectiveInject(i5.CustomToastService), i0.ɵɵdirectiveInject(i6.ConfirmationService), i0.ɵɵdirectiveInject(i7.ExportUtilsService), i0.ɵɵdirectiveInject(i8.AccountService), i0.ɵɵdirectiveInject(core_1.LOCALE_ID));\n};\nSolePropComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SolePropComponent,\n  selectors: [[\"n2-sole-prop\"]],\n  viewQuery: function SolePropComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mthlyTable = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.consolTable = _t.first);\n    }\n  },\n  inputs: {\n    seHardCopyDetails: \"seHardCopyDetails\",\n    selectedWDOption: \"selectedWDOption\",\n    trgStartDte: \"trgStartDte\",\n    workingDataWithChanges: \"workingDataWithChanges\",\n    newUnsavedWorkingData: \"newUnsavedWorkingData\",\n    saveSEClaimRequest: \"saveSEClaimRequest\",\n    readOnly: \"readOnly\",\n    station: \"station\",\n    itemDetailsSection: \"itemDetailsSection\"\n  },\n  outputs: {\n    totalAmtPayEvent: \"totalAmtPayEvent\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 61,\n  vars: 50,\n  consts: [[\"pButton\", \"\", \"label\", \"TESTER\", 3, \"click\"], [3, \"formGroup\"], [1, \"grid\", 2, \"margin-top\", \"1em\", \"margin-left\", \"220px\"], [1, \"col-12\", \"justify-content-start\", \"gap-4\", \"flex\", \"align-items-center\"], [2, \"margin-right\", \"1em\"], [\"formControlName\", \"divisor\", 3, \"min\", \"max\", \"inputStyle\", \"disabled\", \"onBlur\"], [\"class\", \"p-error\", \"icTranslate\", \"nspay2App.claim.validation.CLM-V002\", 3, \"translateValues\", 4, \"ngIf\"], [\"formControlName\", \"annualDivisor\", 3, \"min\", \"max\", \"inputStyle\", \"disabled\"], [4, \"ngIf\"], [1, \"grid\", 2, \"margin-top\", \"1em\", \"margin-left\", \"200px\"], [3, \"ngStyle\"], [\"class\", \"col\", 4, \"ngIf\"], [1, \"flex\", \"col-6\", 3, \"annualIncomeFormArray\", \"seHardCopyDetails\", \"isActive\", \"readOnly\", \"station\"], [\"icTranslate\", \"nspay2App.claim.validation.CLM-V002\", 1, \"p-error\", 3, \"translateValues\"], [\"formArrayName\", \"dataFormArray\"], [\"styleClass\", \"p-datatable-gridlines p-datatable-striped\", \"responsiveLayout\", \"scroll\", 3, \"value\", \"filterDelay\", \"loading\", 4, \"ngIf\", \"ngIfElse\"], [\"consolOption\", \"\"], [\"styleClass\", \"p-datatable-gridlines p-datatable-striped\", \"responsiveLayout\", \"scroll\", 3, \"value\", \"filterDelay\", \"loading\"], [\"mthlyTable\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"scope\", \"col\"], [1, \"grid\"], [1, \"col-6\", \"nsp-align-left\"], [\"icon\", \"pi pi-file-o\", 3, \"click\"], [3, \"style\", 4, \"ngIf\", \"ngIfElse\"], [\"disabledRadio\", \"\"], [\"key\", \"confirmWarning\", \"header\", \"Confirmation\", \"icon\", \"fa fa-question-circle\", \"width\", \"425\"], [1, \"col-6\", \"nsp-align-right\"], [\"id\", \"refreshOtherClaim\", \"pButton\", \"\", \"label\", \"Refresh from Other Claim\", 3, \"disabled\", \"style\", \"click\", 4, \"ngIf\"], [1, \"col-5\", \"input-group\", \"gap-2\", \"flex\", \"align-content-center\"], [\"id\", \"source\", \"optionLabel\", \"name\", \"optionValue\", \"key\", \"autoWidth\", \"false\", \"appendTo\", \"body\", 3, \"options\", \"formControl\", \"disabled\"], [1, \"col-form-label\", \"flex\", \"align-items-center\"], [\"scope\", \"col\", 3, \"style\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"custom-radio\", \"type\", \"radio\", \"value\", \"MTH\", \"formControlName\", \"radioOption\", 1, \"p-radiobutton\", 3, \"click\"], [1, \"custom-control-label\"], [\"id\", \"con-custom-radio\", \"type\", \"radio\", \"value\", \"CON\", \"formControlName\", \"radioOption\", 1, \"p-radiobutton\", 3, \"click\"], [\"disabled\", \"\"], [\"id\", \"refreshOtherClaim\", \"pButton\", \"\", \"label\", \"Refresh from Other Claim\", 3, \"disabled\", \"click\"], [\"formGroupName\", \"annual\"], [\"inputStyleClass\", \"nsp-align-right\", \"id\", \"revenue\", \"mode\", \"decimal\", \"formControlName\", \"revenue\", 3, \"minFractionDigits\", \"formControl\", 4, \"ngIf\", \"ngIfElse\"], [\"labelAnnualRevenue\", \"\"], [2, \"text-align\", \"right\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"inputStyleClass\", \"nsp-align-right\", \"id\", \"revenue\", \"mode\", \"decimal\", \"formControlName\", \"revenue\", 3, \"minFractionDigits\", \"formControl\"], [3, \"formGroupName\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"revenue\", \"id\", \"revenue\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\", 4, \"ngIf\", \"ngIfElse\"], [\"labelMthlyRevenue\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"revenue\", \"id\", \"revenue\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"netProfit\", \"id\", \"netProfit\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\", 4, \"ngIf\", \"ngIfElse\"], [\"labelAnnualNetProfit\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"netProfit\", \"id\", \"netProfit\", \"mode\", \"decimal\", 3, \"minFractionDigits\", \"formControl\"], [\"labelMthlyNetProfit\", \"\"], [\"style\", \"text-align:right\", 4, \"ngIf\"], [\"consolTable\", \"\"], [\"labelConsolAnnualRevenue\", \"\"], [\"formGroupName\", \"consolidated\"], [\"labelConsolConsolidatedRevenue\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"labelConsolAnnualNetProfit\", \"\"], [\"labelConsolConsolidatedNetProfit\", \"\"], [1, \"col\"], [\"label\", \"Copy to Item\", 3, \"disabled\", \"click\"]],\n  template: function SolePropComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-card\");\n      i0.ɵɵtext(1, \"\\n    \");\n      i0.ɵɵelementStart(2, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function SolePropComponent_Template_button_click_2_listener() {\n        return ctx.tester();\n      });\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \"\\n    \");\n      i0.ɵɵelementStart(5, \"form\", 1);\n      i0.ɵɵtext(6, \"\\n        \");\n      i0.ɵɵelementStart(7, \"div\", 2);\n      i0.ɵɵtext(8, \"\\n            \");\n      i0.ɵɵelementStart(9, \"div\", 3);\n      i0.ɵɵtext(10, \"\\n                \");\n      i0.ɵɵelementStart(11, \"div\", 4);\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\n                \");\n      i0.ɵɵelementStart(14, \"div\", 4);\n      i0.ɵɵtext(15, \"\\n                    ( Divisor:\\u00A0\\u00A0\\n                    \");\n      i0.ɵɵelementStart(16, \"p-inputNumber\", 5);\n      i0.ɵɵlistener(\"onBlur\", function SolePropComponent_Template_p_inputNumber_onBlur_16_listener() {\n        return ctx.constructDynamicMthRange();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(17, \"\\n                    \");\n      i0.ɵɵtemplate(18, SolePropComponent_small_18_Template, 2, 2, \"small\", 6);\n      i0.ɵɵtext(19, \"\\n                    )\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n                \");\n      i0.ɵɵelementStart(21, \"div\", 4);\n      i0.ɵɵtext(22, \"\\n                    Annual Divisor:\\u00A0\\u00A0\\n                    \");\n      i0.ɵɵelementStart(23, \"p-inputNumber\", 7);\n      i0.ɵɵtext(24, \"\\n                    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \"\\n                    \");\n      i0.ɵɵtemplate(26, SolePropComponent_small_26_Template, 2, 2, \"small\", 6);\n      i0.ɵɵtext(27, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(28, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(29, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \"\\n        \");\n      i0.ɵɵtemplate(31, SolePropComponent_div_31_Template, 13, 3, \"div\", 8);\n      i0.ɵɵtext(32, \"\\n        \");\n      i0.ɵɵelementStart(33, \"div\", 9);\n      i0.ɵɵtext(34, \"\\n            \");\n      i0.ɵɵelementStart(35, \"div\", 3);\n      i0.ɵɵtext(36, \"\\n                 \");\n      i0.ɵɵelementStart(37, \"div\");\n      i0.ɵɵtext(38);\n      i0.ɵɵpipe(39, \"number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(40, \"\\n                \");\n      i0.ɵɵelementStart(41, \"div\", 10);\n      i0.ɵɵtext(42);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(43, \"\\n                \");\n      i0.ɵɵelementStart(44, \"div\", 10);\n      i0.ɵɵtext(45);\n      i0.ɵɵpipe(46, \"number\");\n      i0.ɵɵpipe(47, \"number\");\n      i0.ɵɵpipe(48, \"number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(49, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(50, \"\\n            \");\n      i0.ɵɵtemplate(51, SolePropComponent_div_51_Template, 4, 1, \"div\", 11);\n      i0.ɵɵtext(52, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(53, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(54, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(55, \"\\n\");\n      i0.ɵɵelement(56, \"br\");\n      i0.ɵɵtext(57, \"\\n\");\n      i0.ɵɵelementStart(58, \"n2-annual-income\", 12);\n      i0.ɵɵtext(59, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(60, \"\\n\");\n    }\n    if (rf & 2) {\n      let tmp_7_0;\n      let tmp_12_0;\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(43, _c6));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.solePropForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate2(\"\\n                    Period:\\n                    \", ctx.dateUtilsService.convertDateToStr(ctx.dateUtilsService.convertStrToDate(ctx.solePropForm.get(\"startYrmth\").value, ctx.dateFormat), \"MM-YYYY\"), \"\\n                    to\\n                    \", ctx.dateUtilsService.convertDateToStr(ctx.dateUtilsService.convertStrToDate(ctx.solePropForm.get(\"endYrmth\").value, ctx.dateFormat), \"MM-YYYY\"), \"\\n                \");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"min\", 1)(\"max\", 6)(\"inputStyle\", i0.ɵɵpureFunction0(44, _c13))(\"disabled\", !ctx.isActive() || ctx.readOnly || !ctx.hasValidAuthorityAndStation());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.solePropForm.get(\"divisor\")) == null ? null : tmp_7_0.touched) && !ctx.isValidNumber((tmp_7_0 = ctx.solePropForm.get(\"divisor\")) == null ? null : tmp_7_0.value));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"min\", 1)(\"max\", 12)(\"inputStyle\", i0.ɵɵpureFunction0(45, _c13))(\"disabled\", !ctx.isActive() || ctx.readOnly || !ctx.hasValidAuthorityAndStation());\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_12_0 = ctx.solePropForm.get(\"annualDivisor\")) == null ? null : tmp_12_0.touched) && !ctx.isValidNumber((tmp_12_0 = ctx.solePropForm.get(\"annualDivisor\")) == null ? null : tmp_12_0.value));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.currSelectedOption !== undefined);\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate1(\"System Proposed Amount: \", i0.ɵɵpipeBind2(39, 31, ctx.getSysProposedAmt(), \"1.2-2\"), \"\\n                \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(46, _c14, ctx.getNIPDiff() > 5 ? \"red\" : null));\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate3(\"NIP Difference: \", ctx.getNIPDiff(), \" %\\n                (\", ctx.consolNIP, \"% - \", ctx.annualNIP, \"%)\\n            \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(48, _c14, ctx.getNetIncomeDiff() > 1000 ? \"red\" : null));\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate3(\"Net Income Difference: \", i0.ɵɵpipeBind2(46, 34, ctx.getNetIncomeDiff(), \"1.2-2\"), \" (\", i0.ɵɵpipeBind2(47, 37, ctx.consolNIAvg, \"1.2-2\"), \" - \", i0.ɵɵpipeBind2(48, 40, ctx.annualNIAvg, \"1.2-2\"), \")\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.isActive() && !ctx.readOnly && ctx.hasValidAuthorityAndStation());\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"annualIncomeFormArray\", ctx.getFormArray(ctx.solePropForm, \"annualIncomeList\"))(\"seHardCopyDetails\", ctx.seHardCopyDetails)(\"isActive\", ctx.isActive())(\"readOnly\", ctx.readOnly)(\"station\", ctx.station);\n    }\n  },\n  dependencies: [i9.NgForOf, i9.NgIf, i9.NgStyle, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlDirective, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i10.Card, i6.PrimeTemplate, i11.ButtonDirective, i11.Button, i12.Table, i13.Dropdown, i14.ConfirmPopup, i15.InputNumber, i16.TranslateDirective, i17.AnnualIncomeComponent, i9.SlicePipe, i9.DecimalPipe],\n  styles: [\"[_nghost-%COMP%]     .p-panel .p-panel-header {\\n  height: 5rem;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable.p-datatable-striped .p-datatable-tbody > tr > :nth-child(1) {\\n  min-width: 200px;\\n  background: none;\\n  border: none;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable.p-datatable-striped .p-datatable-thead > tr > :nth-child(1) {\\n  min-width: 200px;\\n  background: none;\\n  border: none;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable.p-datatable-striped .p-datatable-tbody > tr > :nth-child(2) {\\n  min-width: 200px;\\n  width: 200px;\\n}\\n\\n[_nghost-%COMP%]     .grid-top-bold .td {\\n  border-bottom: 1px solid black;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable .p-datatable-tfoot > tr > td {\\n  text-align: left;\\n  padding: 1rem 1rem;\\n  border: none;\\n  border-width: none;\\n  font-weight: 600; \\n  color: #343a40;\\n  background: transparent;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable .p-datatable-thead > tr > th {\\n  position: sticky;\\n  top: 0px;\\n}\\n\\n[_nghost-%COMP%]     .transparent-input .p-inputtext {\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n  font-size: 1rem;\\n  color: #495057;\\n  background: #ffffff;\\n  padding: 0.75rem 0.75rem;\\n  border: none;\\n  -webkit-appearance: none;\\n          appearance: none;\\n}\\n\\n[_nghost-%COMP%]     .transparent-input .p-inputtext:enabled:focus {\\n  outline: 0 none;\\n  border-color: transparent;\\n}\\n\\n[_nghost-%COMP%]     .transparent-input .p-inputtext.ng-dirty.ng-invalid {\\n  border-color: transparent;\\n}\\n\\n[_nghost-%COMP%]     .transparent-input .p-inputtext:enabled:hover {\\n  border-color: transparent;\\n}\\n\\n[_nghost-%COMP%]     .p-card .p-card-content {\\n  padding: 0 0;\\n}\\n\\ninput[type=radio][_ngcontent-%COMP%] {\\n  width: 22px;\\n  height: 22px;\\n}\\n\\n.p-radiobutton[_ngcontent-%COMP%] {\\n  appearance: none;\\n  \\n  -webkit-appearance: none;\\n  border: 2px solid #ced4da;\\n  background-color: var(--bg-color);\\n  border-radius: 50%;\\n}\\n\\n.p-radiobutton[_ngcontent-%COMP%]:focus-visible {\\n  outline-offset: 0;\\n}\\n\\n#custom-radio[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:hover {\\n  outline-color: #14B8A6;\\n}\\n\\n#custom-radio[_ngcontent-%COMP%]:checked {\\n  outline-color: #14B8A6;\\n  background-color: #ffffff;\\n  border: 6px solid #14B8A6;\\n}\\n\\n#con-custom-radio[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:hover {\\n  outline-color: #14B8A6;\\n}\\n\\n#con-custom-radio[_ngcontent-%COMP%]:checked {\\n  outline-color: #14B8A6;\\n  background-color: #ffffff;\\n  border: 6px solid #14B8A6;\\n}\\n\\n@keyframes _ngcontent-%COMP%_outline-checked {\\n  0% {\\n    outline-offset: 0;\\n  }\\n  100% {\\n    outline-offset: -0.2rem;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","SolePropComponent","constructor","formBuilder","ns2Http","dateUtilsService","seClaimService","toastService","confirmationService","exportUtilsService","accountService","localeId","name","key","rxjs_1","group","id","forms_1","workingDataId","consolidated","divisor","annualDivisor","dataFormArray","consolDataFormArray","headerGroup","yearInput","captionGroup","radioOption","radioOptions","yrmthList","startYrmth","endYrmth","yearInputOptions","annualIncomeList","dataList","annualList","core_1","console","log","createNewSolePropForm","workingDataOption","trgStartDte","solePropFormGroup","claimStartYrMth","convertStrToDate","get","value","claimEndYrMth","claimStartDt","Date","getFullYear","getMonth","claimEndDt","colStartDt","clone","subtract","colEndDt","colMthRange","mth","isSameOrBefore","add","push","format","map","x","setValue","addControl","yrmthReCon","yrmth","revenue","netProfit","type","forEach","year","date1","convertMomentToStr","date2","annualIncomeFormGroup","source","assessment","acctgPeriodStrt","acctgPeriodEnd","occupationNature","adjProfit","mapSolePropWDToFormGroup","solePropWD","annualPartnerSubWD","filter","dataRecon","newDataList","staticConstructConsolidatedHeaderData","constructForm","annualIncomeWD","acctgStartDate","acctgEndDate","arrformGroup","empty","solePropForm","staticConstructInitialAnnualOptions","addRow","annualData","undefined","find","y","sortedData","length","sanitizedDataList","colIndex","includes","index","findIndex","dataEntry","formObj","populateAnnualIncomeList","dataSet","seq","mapSolePropFormGroupToWD","fg","obj","annualIncomeDtoList","archiveDt","workingDataTypeCode","subYrMthList","slice","yrmthFG","subWD","annualIncomeListFA","controls","control","annualIncomeDto","isValid","convertDateToStr","ngOnInit","cols","constructAnnualYearInputOptions","ngOnChanges","changes","isActive","generateYrMth","constructPeriodStartEndDate","seHardCopyDetails","currentValue","currHardCopyDetails","selectedWDOption","currSelectedOption","subscr","unsubscribe","retrieveSolePropWD","periodEndDate","periodStartDate","constructDynamicMthRange","convertStrToMoment","tester","newUnsavedWorkingData","constructSourceYearOptions","trgEndDte","sourceYrOptions","dateFormat","adjustFormArray","cloneYrmthList","JSON","parse","stringify","concat","existingYrMthControls","Object","keys","diffColHeaders","newWD","params","http_1","append","retrieveSolePropPartnerWD","subscribe","resp","status","body","data","populateSolePropForm","valueChangeSubscribe","error","String","error_desc","workingDataWithChanges","formGroup","setRadioOption","loading","toString","newForm","valueChanges","saveSEClaimRequest","workingDataSectionInd","has","set","getInnerFormControl","controlName","innerControlName","getSumOfCurrRow","formCtrlName","sum","fieldCtrl","getYrmthList","maxMths","getForm","confirmSwitch","e","target","preventDefault","confirm","showConfirm","clearForm","Promise","resolve","message","header","icon","acceptLabel","rejectLabel","accept","radioKey","refreshOtherClaim","headerDto","nsManNric","caseId","retrieveRefreshOtherSPPClaims","refreshedArr","ctrl","refreshOtherClaimSetValue","unrefreshed","unrefreshMths","enableRefreshOClaim","sortByAnnualandYrmthRecon","a","b","copyToItem","event","totalAmtPayEvent","emit","sysProposedAmt","enableCopytoItem","claimItemList","itemDetailsSection","itemForm","itxItem","PEND_VERIFY_STATUS","PEND_ACTION_STATUS","getSysProposedAmt","roundVal","Math","round","getFormControlValue","getFormArray","getNIPDiff","diff","annualNIP","consolNIP","isFinite","getAbsoluteDiff","getNetIncomeDiff","annualTotalNI","consolTotalNI","annualNIAvg","consolNIAvg","abs","isValidNumber","isNaN","exportToCSV","dataTable","columns","field","customExportHeader","subsetYrmth","i","dtoList","rowHeader","exportAddConsol","exportAddMthly","exportCSV","mthlyDataList","getSumByField","fieldArray","initValue","reduce","accumulator","hasValidAuthorityAndStation","hasAnyAuthority","nspay2_constants_1","CLAIMS_VERIFIER","station","STATION_VERIFICATION","CLAIMS_APPROVER","STATION_CERTIFICATION","STATION_APPROVAL","exports","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\working-data-section\\sole-prop\\sole-prop.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\working-data-section\\sole-prop\\sole-prop.component.html"],"sourcesContent":["import { formatDate } from '@angular/common';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Component, EventEmitter, Inject, Input, LOCALE_ID, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { AnnualIncomeWD } from 'app/claim/se-claim/model/annual-income-model';\r\nimport { SaveSEClaimRequest } from 'app/claim/se-claim/model/save-se-claim-request.model';\r\nimport { SolePropSubWD } from 'app/claim/se-claim/model/sole-prop-sub-data.model';\r\nimport { SolePropWD } from 'app/claim/se-claim/model/sole-prop.model ';\r\nimport { SEClaimService } from 'app/claim/se-claim/service/se-claim.service';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\nimport { NspConfirmationService } from 'app/shared/confirm/nsp-confirm.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport moment from 'moment';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { Table } from 'primeng/table';\r\nimport { Subscription } from 'rxjs';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { NSPAY2_ROLES, NSPAY2_STATION } from 'app/nspay2.constants';\r\n\r\n@Component({\r\n  selector: 'n2-sole-prop',\r\n  templateUrl: './sole-prop.component.html',\r\n  styleUrls: ['./sole-prop.component.scss']\r\n})\r\nexport class SolePropComponent implements OnInit {\r\n\r\n  radioOptions: any[] = [{name: 'Monthly', key: 'MTH'}, {name: 'Consolidated', key: 'CON'}];\r\n  sourceYrOptions: any[] = [];\r\n  loading = true;\r\n\r\n  currHardCopyDetails: any = {};\r\n  currSelectedOption: any;\r\n  @Input() seHardCopyDetails:any = {};\r\n  @Input() selectedWDOption:any = {};\r\n  @Input() trgStartDte: string;\r\n  @Input() workingDataWithChanges: Map<string, any>;\r\n  @Input() newUnsavedWorkingData: Map<string, any>;\r\n  @Input() saveSEClaimRequest: SaveSEClaimRequest;\r\n  //meant for routing from enquiry\r\n  @Input() readOnly: boolean;\r\n  @Input() station: string;\r\n\r\n  subscr:Subscription = new Subscription();\r\n\r\n  maxMths = 6;\r\n  cols: any[];\r\n  dateFormat = \"DD-MM-YYYY\";\r\n\r\n  solePropForm: FormGroup  = this.formBuilder.group({\r\n    id: new FormControl(null, null),\r\n    workingDataId: new FormControl('',null),\r\n    consolidated: new FormControl(false, null),\r\n    divisor: new FormControl(6, null),\r\n    annualDivisor: new FormControl(12, null),\r\n    dataFormArray: this.formBuilder.group({}),\r\n    consolDataFormArray: this.formBuilder.group({}),\r\n    headerGroup: this.formBuilder.group({\r\n      yearInput: new FormControl(0, null),\r\n    }),\r\n    captionGroup: this.formBuilder.group({\r\n      radioOption: new FormControl(this.radioOptions[0].key, null)\r\n    }),\r\n    yrmthList:new FormControl([], null),\r\n    startYrmth: new FormControl('', null),\r\n    endYrmth: new FormControl('', null),\r\n    yearInputOptions: new FormControl([], null),\r\n    annualIncomeList: new FormArray([]),\r\n\r\n  });\r\n\r\n  periodStartDate = \"\";\r\n  periodEndDate = \"\";\r\n  yrmthList: string[] = [];\r\n\r\n  colMthRange:any[] = [];\r\n  dataSet: any = {\r\n    dataList: [],\r\n    annualList:[]\r\n  }\r\n  yearInputOptions: any[]= [];\r\n\r\n  sysProposedAmt = 0;\r\n  nipDifference = 0;\r\n  netIncomeDifference = 0;\r\n\r\n  annualNIAvg = 0;\r\n  consolNIAvg = 0;\r\n\r\n  annualNIP = 0;\r\n  consolNIP = 0;\r\n\r\n  @Input() itemDetailsSection: any = {};\r\n  readonly PEND_VERIFY_STATUS = \"PVE\";\r\n  readonly PEND_ACTION_STATUS = \"PAC\";\r\n\r\n  @Output()  totalAmtPayEvent: EventEmitter<any> = new EventEmitter<any>();\r\n  @ViewChild('mthlyTable', {static: false})\r\n  private mthlyTable!: Table;\r\n  @ViewChild('consolTable', {static: false})\r\n  private consolTable!: Table;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private ns2Http: Ns2HttpService,\r\n    public dateUtilsService: DateUtilsService,\r\n    private seClaimService: SEClaimService,\r\n    private toastService: CustomToastService,\r\n    private confirmationService: ConfirmationService,\r\n    private exportUtilsService: ExportUtilsService,\r\n    public accountService: AccountService,\r\n    @Inject(LOCALE_ID) protected localeId: string\r\n\r\n  ) {\r\n    console.log(\"tests\")\r\n   }\r\n\r\n   static createNewSolePropForm(startYrmth: string, endYrmth: string, workingDataOption: any,\r\n    dateUtilsService: DateUtilsService, formBuilder: FormBuilder, trgStartDte: any): FormGroup<any> {\r\n    const solePropFormGroup: FormGroup = formBuilder.group({\r\n      id: new FormControl(null, null),\r\n      workingDataId: new FormControl(null,null),\r\n      consolidated: new FormControl(false, null),\r\n      divisor: new FormControl(6, null),\r\n      annualDivisor: new FormControl(12, null),\r\n      headerGroup: formBuilder.group({\r\n        yearInput: new FormControl(0, null),\r\n      }),\r\n      dataFormArray: formBuilder.group({}),\r\n      consolDataFormArray: formBuilder.group({}),\r\n      captionGroup: formBuilder.group({\r\n        radioOption: new FormControl(\"MTH\", null)\r\n      }),\r\n      yrmthList:new FormControl([], null),\r\n      startYrmth: new FormControl(startYrmth, null),\r\n      endYrmth: new FormControl(endYrmth, null),\r\n      yearInputOptions: new FormControl([], null),\r\n      annualIncomeList: new FormArray([])\r\n    });\r\n\r\n    const claimStartYrMth:Date =  dateUtilsService.convertStrToDate(solePropFormGroup.get('startYrmth').value, \"DD-MM-YYYY\");\r\n    const claimEndYrMth:Date =  dateUtilsService.convertStrToDate(solePropFormGroup.get('endYrmth').value, \"DD-MM-YYYY\");\r\n    const claimStartDt = moment(new Date(claimStartYrMth.getFullYear(), claimStartYrMth.getMonth(),1));\r\n    const claimEndDt = moment(new Date(claimEndYrMth.getFullYear(), +claimEndYrMth.getMonth()+ 1, 0));\r\n    const colStartDt = claimEndDt.clone().subtract(+solePropFormGroup?.get('divisor').value - 1, 'months');\r\n    const colEndDt = claimEndDt.clone();\r\n\r\n    const colMthRange = [];\r\n    for(let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')){\r\n      colMthRange.push(mth.format(\"DD-MM-YYYY\"));\r\n    }\r\n    const yrmthList = colMthRange.map(x=>  moment(dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\r\n    solePropFormGroup.get('yrmthList').setValue(yrmthList);\r\n    console.log(\"the alpha yr nmt\", yrmthList);\r\n    //create empty dataFormArray\r\n    //add Annual\r\n    (solePropFormGroup.get('dataFormArray') as FormGroup).addControl('annual', formBuilder.group({\r\n      yrmthReCon: new FormControl(null, null),\r\n      yrmth: new FormControl(null, null),\r\n      revenue: new FormControl(null, null),\r\n      netProfit: new FormControl(null, null),\r\n      type: new FormControl('1', null),\r\n    }));\r\n    yrmthList.forEach(x=>{\r\n      (solePropFormGroup.get('dataFormArray') as FormGroup).addControl(x, formBuilder.group({\r\n        yrmthReCon: new FormControl(x, null),\r\n        yrmth: new FormControl(x, null),\r\n        revenue: new FormControl(null, null),\r\n        netProfit: new FormControl(null, null),\r\n        type: new FormControl('3', null),\r\n      }));\r\n    });\r\n\r\n    //create empty consolDataFormArray\r\n    //add Annual\r\n    (solePropFormGroup.get('consolDataFormArray') as FormGroup).addControl('annual', formBuilder.group({\r\n      yrmthReCon: new FormControl(null, null),\r\n      yrmth: new FormControl(null, null),\r\n      revenue: new FormControl(null, null),\r\n      netProfit: new FormControl(null, null),\r\n      type: new FormControl('1', null),\r\n      year: new FormControl(2014, null),\r\n    }));\r\n    //add consolidated\r\n    (solePropFormGroup.get('consolDataFormArray') as FormGroup).addControl('consolidated', formBuilder.group({\r\n      yrmthReCon: new FormControl(null, null),\r\n      yrmth: new FormControl(null, null),\r\n      revenue: new FormControl(null, null),\r\n      netProfit: new FormControl(null, null),\r\n      type: new FormControl('2', null),\r\n    }));\r\n\r\n\r\n    const date1 = +dateUtilsService.convertMomentToStr(moment(dateUtilsService.convertStrToDate(trgStartDte, \"DD-MM-YYYY\")).subtract(1,'years'), \"YYYY\");\r\n    const date2 = +dateUtilsService.convertMomentToStr(moment(dateUtilsService.convertStrToDate(trgStartDte, \"DD-MM-YYYY\")), \"YYYY\");\r\n    const yearInputOptions = [\r\n      {name:  date1, key: date1},\r\n      {name:  date2, key: date2},\r\n    ]\r\n    //if no value from api or the claim section start date has been changed, default to first option\r\n    solePropFormGroup.get('headerGroup.yearInput')?.setValue(yearInputOptions[1].key);\r\n    solePropFormGroup.get('yearInputOptions')?.setValue(yearInputOptions);\r\n\r\n    //add default annualIncomeList\r\n    const annualIncomeFormGroup: FormGroup = formBuilder.group({\r\n      source: new FormControl(null, null),\r\n      assessment: new FormControl(null, null),\r\n      acctgPeriodStrt: new FormControl(null, null),\r\n      acctgPeriodEnd: new FormControl(null, null),\r\n      occupationNature: new FormControl(null, null),\r\n      revenue: new FormControl(null, null),\r\n      adjProfit: new FormControl(null, null),\r\n    });\r\n    (solePropFormGroup.get('annualIncomeList') as FormArray).push(annualIncomeFormGroup);\r\n    return solePropFormGroup;\r\n  }\r\n\r\n  static mapSolePropWDToFormGroup(solePropWD:SolePropWD, dateUtilsService: DateUtilsService, formBuilder: FormBuilder): FormGroup {\r\n    const solePropFormGroup = formBuilder.group({\r\n      workingDataId: new FormControl(solePropWD.workingDataId),\r\n      id: new FormControl(solePropWD.id, null),\r\n      consolidated: new FormControl(solePropWD.consolidated, null),\r\n      divisor: new FormControl(solePropWD.divisor, null),\r\n      annualDivisor: new FormControl(solePropWD.annualDivisor, null),\r\n      headerGroup: formBuilder.group({\r\n        yearInput: new FormControl(0, null),\r\n      }),\r\n      dataFormArray: formBuilder.group({}),\r\n      consolDataFormArray: formBuilder.group({}),\r\n      captionGroup: formBuilder.group({\r\n        radioOption: new FormControl(solePropWD.consolidated? \"CON\": \"MTH\", null)\r\n      }),\r\n      yrmthList:new FormControl([], null),\r\n      startYrmth: new FormControl(solePropWD.startYrmth, null),\r\n      endYrmth: new FormControl(solePropWD.endYrmth, null),\r\n      yearInputOptions: new FormControl([], null),\r\n      annualIncomeList: new FormArray([]),\r\n\r\n    });\r\n    const annualPartnerSubWD = solePropWD?.dataList?.filter(x=> x.type === '1')[0];\r\n    solePropFormGroup.get('headerGroup.yearInput').setValue(annualPartnerSubWD?.year);\r\n\r\n    const claimEndYrMth:Date =  dateUtilsService.convertStrToDate(solePropFormGroup.get('endYrmth').value, \"DD-MM-YYYY\");\r\n    const claimEndDt = moment(new Date(claimEndYrMth.getFullYear(), +claimEndYrMth.getMonth()+ 1, 0));\r\n    const colStartDt = claimEndDt.clone().subtract(+solePropFormGroup?.get('divisor').value - 1, 'months');\r\n    const colEndDt = claimEndDt.clone();\r\n\r\n    const colMthRange = [];\r\n    for(let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')){\r\n      colMthRange.push(mth.format(\"DD-MM-YYYY\"));\r\n    }\r\n    const yrmthList = colMthRange.map(x=>  moment(dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\r\n    solePropFormGroup.get('yrmthList').setValue(yrmthList);\r\n\r\n    let dataRecon:any[] = [];\r\n    const newDataList:any[] = [];\r\n    if(solePropWD.consolidated){\r\n       //expect 1\r\n       if(solePropWD.dataList){\r\n        solePropFormGroup?.get('captionGroup.radioOption').setValue('CON')\r\n        dataRecon = SolePropComponent.staticConstructConsolidatedHeaderData(solePropWD.dataList, true, false, dateUtilsService, yrmthList);\r\n        SolePropComponent.constructForm(dataRecon, solePropFormGroup.get('consolDataFormArray') as FormGroup, false, formBuilder, solePropFormGroup);\r\n        // construct empty for mthly view\r\n        dataRecon = SolePropComponent.staticConstructConsolidatedHeaderData(newDataList, false, true, dateUtilsService, yrmthList);\r\n        SolePropComponent.constructForm(newDataList, solePropFormGroup.get('dataFormArray') as FormGroup, true, formBuilder, solePropFormGroup);\r\n\r\n       }\r\n    }else {\r\n      if(solePropWD.dataList){\r\n        solePropFormGroup?.get('captionGroup.radioOption').setValue('MTH')\r\n        //list of mthly records\r\n\r\n        dataRecon = SolePropComponent.staticConstructConsolidatedHeaderData(solePropWD.dataList, false, false, dateUtilsService, yrmthList);\r\n        SolePropComponent.constructForm(dataRecon, solePropFormGroup.get('dataFormArray') as FormGroup, false, formBuilder, solePropFormGroup);\r\n\r\n        //construct empty for consolidated view\r\n        dataRecon = SolePropComponent.staticConstructConsolidatedHeaderData(newDataList, true, true, dateUtilsService, yrmthList);\r\n        SolePropComponent.constructForm(newDataList, solePropFormGroup.get('consolDataFormArray') as FormGroup, true, formBuilder, solePropFormGroup);\r\n\r\n      }\r\n    }\r\n\r\n    //set eligible mth divisor and prdn bonus divisor\r\n    solePropFormGroup.get('divisor').setValue(solePropWD.divisor);\r\n    solePropFormGroup.get('annualDivisor').setValue(solePropWD.annualDivisor);\r\n    solePropFormGroup.get('id').setValue(solePropWD.id);\r\n    solePropFormGroup.get('workingDataId').setValue(solePropWD.workingDataId);\r\n    solePropFormGroup.get('startYrmth').setValue(solePropWD.startYrmth);\r\n    solePropFormGroup.get('endYrmth').setValue(solePropWD.endYrmth);\r\n    solePropFormGroup.get('consolidated').setValue(solePropWD.consolidated);\r\n\r\n    solePropWD.annualIncomeList?.forEach((annualIncomeWD: AnnualIncomeWD) => {\r\n      const annualIncomeFormGroup: FormGroup = formBuilder.group({\r\n        source: new FormControl(annualIncomeWD.source, null),\r\n        assessment: new FormControl(annualIncomeWD.assessment === null? null :dateUtilsService.convertStrToDate(annualIncomeWD.assessment, \"DD-MM-YYYY\"), null),\r\n        acctgPeriodStrt: new FormControl(annualIncomeWD.acctgStartDate === null? null :dateUtilsService.convertStrToDate(annualIncomeWD.acctgStartDate, \"DD-MM-YYYY\"), null),\r\n        acctgPeriodEnd: new FormControl(annualIncomeWD.acctgEndDate === null? null :dateUtilsService.convertStrToDate(annualIncomeWD.acctgEndDate, \"DD-MM-YYYY\"), null),\r\n        occupationNature: new FormControl(annualIncomeWD.occupationNature, null),\r\n        revenue: new FormControl(annualIncomeWD.revenue, null),\r\n        adjProfit: new FormControl(annualIncomeWD.adjProfit, null),\r\n      });\r\n      (solePropFormGroup.get('annualIncomeList') as FormArray).push(annualIncomeFormGroup);\r\n    });\r\n\r\n    return solePropFormGroup;\r\n  }\r\n\r\n   static constructForm(dataList: any[], arrformGroup: FormGroup, empty: boolean, formBuilder: FormBuilder, solePropForm: FormGroup): void {\r\n    SolePropComponent.staticConstructInitialAnnualOptions(dataList, empty, solePropForm);\r\n    let yearInput;\r\n\r\n    if(arrformGroup === solePropForm.get('consolDataFormArray')){\r\n      dataList.forEach(x=>{\r\n        //if annual type\r\n        if(x.type === '1'){\r\n          console.log(\"migata\", x.year)\r\n          arrformGroup.addControl('annual',SolePropComponent.addRow(x, formBuilder));\r\n          yearInput = x.year;\r\n        }else if(x.type === '2'){\r\n          //if consolidated type\r\n          arrformGroup.addControl('consolidated',SolePropComponent.addRow(x,formBuilder));\r\n        }\r\n      })\r\n      console.log(\"the consol form\", arrformGroup);\r\n\r\n    }else{\r\n      dataList.forEach(x=>{\r\n        //if annual type\r\n        if(x.type === '1'){\r\n          arrformGroup.addControl('annual',SolePropComponent.addRow(x, formBuilder));\r\n          yearInput = x.year;\r\n        }else if(x.type === '3'){\r\n          //if mthly type\r\n          arrformGroup.addControl(x?.yrmthReCon,SolePropComponent.addRow(x, formBuilder));\r\n        }\r\n      })\r\n      console.log(\"the mthly form\", arrformGroup);\r\n\r\n    }\r\n    if(yearInput){\r\n      solePropForm?.get('headerGroup').get('yearInput').setValue(yearInput);\r\n    }\r\n  }\r\n\r\n  static staticConstructInitialAnnualOptions(dataList: any[],  empty: boolean, solePropForm: FormGroup): void{\r\n    const annualData = dataList?.filter(x=> x.type==='1')[0];\r\n    if(!empty){\r\n      console.log(\"annual is \", annualData);\r\n      if(annualData.year!==undefined && !(solePropForm.get('yearInputOptions').value as any[]).find(y=>y.name === annualData.year)){\r\n        const yearInputOptions = solePropForm.get('yearInputOptions').value;\r\n        yearInputOptions.push({key:annualData.year, name:annualData.year});\r\n        solePropForm.get('yearInputOptions').setValue(yearInputOptions);\r\n      }\r\n    }\r\n  }\r\n\r\n  static staticConstructConsolidatedHeaderData(dataList: any[], consolidated: boolean, empty: boolean, dateUtilsService: DateUtilsService, yrmthList: any[]): any[]{\r\n    //initialize with 1 column annual income only\r\n    let sortedData;\r\n    const annualData = dataList.filter(x=> x.type==='1');\r\n    if(annualData.length === 0){\r\n      dataList.push({\r\n        type: '1'\r\n      })\r\n    }\r\n\r\n    let sanitizedDataList:any[] =[];\r\n\r\n    if(consolidated || empty ){\r\n      yrmthList.forEach((mth:any, colIndex:number)=>{\r\n        dataList.push({\r\n          type: '2'\r\n        })\r\n        dataList.push(\r\n          {yrmthReCon: mth,\r\n          type: '3'\r\n          });\r\n        });\r\n      sortedData = dataList;\r\n    }else{\r\n      sanitizedDataList = dataList.filter(x=> (yrmthList.includes(x.yrmth) && x.type === '3') || x.type==='1');\r\n      yrmthList.forEach(yrmth =>{\r\n        const index = sanitizedDataList.findIndex(x=> x.yrmth ===  yrmth && x.type!=='1');\r\n        if(index<0){\r\n          sanitizedDataList.push({yrmthReCon: yrmth, type: '3'});\r\n        }else{\r\n          sanitizedDataList[index].yrmthReCon = yrmth;\r\n        }\r\n      })\r\n      console.log(\"after data\", sanitizedDataList);\r\n      sortedData = sanitizedDataList;\r\n\r\n    }\r\n    return sortedData;\r\n\r\n   }\r\n\r\n\r\n   static addRow(dataEntry: any , formBuilder: FormBuilder) : FormGroup{\r\n    //does validation to makesure the yrmth tallies to yrmthRecon  or is annual other wise default to 0\r\n    let formObj;\r\n    if((dataEntry.type === '3' && dataEntry?.yrmthReCon!==undefined && dataEntry?.yrmth!==dataEntry?.yrmthReCon)){\r\n      formObj  = {\r\n        yrmthReCon: new FormControl(dataEntry?.yrmthReCon, null),\r\n        yrmth: new FormControl(dataEntry?.yrmth, null),\r\n        revenue: new FormControl(null, null),\r\n        netProfit: new FormControl(null, null),\r\n        type: new FormControl(dataEntry?.type, null),\r\n      }\r\n    }else{\r\n      if(dataEntry.type === '1'){\r\n        formObj = {\r\n          year: dataEntry.year,\r\n          yrmth: dataEntry?.yrmth,\r\n          yrmthReCon: new FormControl(dataEntry?.yrmthReCon , null),\r\n          revenue: new FormControl(dataEntry?.revenue || null, null),\r\n          netProfit: new FormControl(dataEntry?.netProfit || null, null),\r\n          type: new FormControl(dataEntry?.type, null),\r\n        }\r\n      }else {\r\n        formObj = {\r\n          yrmth: dataEntry?.yrmth,\r\n          yrmthReCon: new FormControl(dataEntry?.yrmthReCon, null),\r\n          revenue: new FormControl(dataEntry?.revenue || null, null),\r\n          netProfit: new FormControl(dataEntry?.netProfit || null, null),\r\n          type: new FormControl(dataEntry?.type, null),\r\n        }\r\n      }\r\n    }\r\n      return formBuilder.group(formObj);\r\n   }\r\n\r\n   static populateAnnualIncomeList(dataSet: any, formBuilder: FormBuilder, dateUtilsService: DateUtilsService, solePropForm: FormGroup): void{\r\n    dataSet.annualIncomeList?.forEach((annualIncomeWD: AnnualIncomeWD) => {\r\n      const annualIncomeFormGroup: FormGroup = formBuilder.group({\r\n        seq: new FormControl(annualIncomeWD.seq, null),\r\n        source: new FormControl(annualIncomeWD.source, null),\r\n        assessment: new FormControl(annualIncomeWD.assessment === null? null :dateUtilsService.convertStrToDate(annualIncomeWD.assessment, \"DD-MM-YYYY\"), null),\r\n        acctgPeriodStrt: new FormControl(annualIncomeWD.acctgStartDate === null? null :dateUtilsService.convertStrToDate(annualIncomeWD.acctgStartDate, \"DD-MM-YYYY\"), null),\r\n        acctgPeriodEnd: new FormControl(annualIncomeWD.acctgEndDate === null? null :dateUtilsService.convertStrToDate(annualIncomeWD.acctgEndDate, \"DD-MM-YYYY\"), null),\r\n        occupationNature: new FormControl(annualIncomeWD.occupationNature, null),\r\n        revenue: new FormControl(annualIncomeWD.revenue, null),\r\n        adjProfit: new FormControl(annualIncomeWD.adjProfit, null),\r\n      });\r\n      (solePropForm.get('annualIncomeList') as FormArray).push(annualIncomeFormGroup);\r\n    });\r\n  }\r\n\r\n  static mapSolePropFormGroupToWD(fg: FormGroup, obj: any,  dateUtilsService: DateUtilsService):SolePropWD {\r\n    const annualIncomeDtoList: AnnualIncomeWD[] = [];\r\n    const dataList: SolePropSubWD[] = [];\r\n    const solePropWD: SolePropWD = {\r\n      id: fg.get('id')?.value,\r\n      workingDataId: obj.workingDataId,\r\n      year: fg?.get('year')?.value || obj.year,\r\n      consolidated: fg?.get('consolidated')?.value,\r\n      archiveDt: obj.archiveDt,\r\n      dataList,\r\n      divisor: fg.get('divisor').value,\r\n      annualDivisor: fg.get('annualDivisor').value,\r\n      workingDataTypeCode: obj.workingDataTypeCode,\r\n      startYrmth: fg.get('startYrmth').value,\r\n      endYrmth: fg.get('endYrmth').value,\r\n      annualIncomeList: annualIncomeDtoList\r\n    };\r\n    const yrmthList =  fg.get('yrmthList').value as Array<string>;\r\n    const subYrMthList = yrmthList.slice(6- fg.get('divisor').value);\r\n    console.log('sub yr mmth',subYrMthList);\r\n    if(fg!==undefined && fg!==null){\r\n      let yrmthFG;\r\n      let subWD: SolePropSubWD;\r\n      if(fg.get('consolidated').value) {\r\n        yrmthFG = ((fg.get('consolDataFormArray') as FormGroup)).get('annual');\r\n        subWD = {\r\n          revenue: yrmthFG.get(\"revenue\").value,\r\n          netProfit: yrmthFG.get(\"netProfit\").value,\r\n          type: \"1\",\r\n          year:  fg.get(\"headerGroup.yearInput\").value\r\n        }\r\n        dataList.push(subWD);\r\n        yrmthFG = ((fg.get('consolDataFormArray') as FormGroup)).get('consolidated');\r\n        subWD = {\r\n          revenue: yrmthFG.get(\"revenue\").value,\r\n          netProfit: yrmthFG.get(\"netProfit\").value,\r\n          type: \"2\",\r\n        }\r\n        dataList.push(subWD);\r\n\r\n      }else {\r\n        //mthly\r\n        yrmthFG = ((fg.get('dataFormArray') as FormGroup)).get('annual');\r\n        subWD = {\r\n          revenue: yrmthFG.get(\"revenue\").value,\r\n          netProfit: yrmthFG.get(\"netProfit\").value,\r\n          type: \"1\",\r\n          year:  fg.get(\"headerGroup.yearInput\").value\r\n        }\r\n        dataList.push(subWD);\r\n\r\n        subYrMthList.forEach(key=>{\r\n          yrmthFG = fg.get('dataFormArray').get(key);\r\n          subWD = {\r\n            revenue: yrmthFG.get(\"revenue\").value,\r\n            netProfit: yrmthFG.get(\"netProfit\").value,\r\n            type: \"3\",\r\n            yrmth: yrmthFG.get(\"yrmthReCon\").value,\r\n          }\r\n          dataList.push(subWD);\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    const annualIncomeListFA = (fg.get('annualIncomeList') as FormArray);\r\n    annualIncomeListFA.controls.forEach((control: AbstractControl)=>{\r\n      const annualIncomeDto: AnnualIncomeWD = {\r\n        workingDataId: obj.workingDataId,\r\n        seq: annualIncomeDtoList.length + 1,\r\n        source: control.get('source').value,\r\n        assessment: dateUtilsService.isValid(control.get('assessment').value)? dateUtilsService.convertDateToStr(control.get('assessment').value, \"DD-MM-YYYY\"): null,\r\n        acctgStartDate: dateUtilsService.isValid(control.get('acctgPeriodStrt').value)? dateUtilsService.convertDateToStr(control.get('acctgPeriodStrt').value, \"DD-MM-YYYY\"): null,\r\n        acctgEndDate: dateUtilsService.isValid(control.get('acctgPeriodEnd').value)? dateUtilsService.convertDateToStr(control.get('acctgPeriodEnd').value, \"DD-MM-YYYY\"): null,\r\n        occupationNature: control.get('occupationNature').value,\r\n        revenue: control.get('revenue').value,\r\n        adjProfit: control.get('adjProfit').value,\r\n      }\r\n      annualIncomeDtoList.push(annualIncomeDto);\r\n    })\r\n\r\n\r\n    console.log(\"whole saved is\", solePropWD)\r\n    return solePropWD;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"test\")\r\n    this.cols = [\r\n      \"Revenue\",\r\n      \"Net Profit\",\r\n      \"Entity NIP\"\r\n    ];\r\n    this.constructAnnualYearInputOptions();\r\n  }\r\n\r\n  get dataFormArray(): FormGroup {\r\n    return this.solePropForm?.get('dataFormArray') as FormGroup\r\n  }\r\n\r\n  get consolDataFormArray(): FormGroup {\r\n    return this.solePropForm?.get('consolDataFormArray') as FormGroup\r\n  }\r\n\r\n  get captionGroup(): FormGroup {\r\n    return this.solePropForm?.get('captionGroup') as FormGroup\r\n  }\r\n\r\n  get headerGroup(): FormGroup {\r\n    return this.solePropForm?.get('headerGroup') as FormGroup\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void{\r\n    if(changes.trgStartDte  && this.isActive()){\r\n      console.log(\"reconstructing\",changes)\r\n      this.generateYrMth(null);\r\n      this.constructPeriodStartEndDate();\r\n      this.constructAnnualYearInputOptions();\r\n\r\n    }\r\n    if(changes.seHardCopyDetails?.currentValue){\r\n      this.currHardCopyDetails=changes.seHardCopyDetails.currentValue;\r\n    }\r\n    if(changes.selectedWDOption?.currentValue){\r\n      this.currSelectedOption = changes.selectedWDOption?.currentValue;\r\n      this.subscr.unsubscribe();\r\n      this.yrmthList = [];\r\n      this.retrieveSolePropWD();\r\n    }\r\n\r\n  }\r\n\r\n  constructPeriodStartEndDate():void{\r\n    const claimStartDt = this.dateUtilsService.convertStrToDate(this.currHardCopyDetails.trgStartDte, \"DD-MM-YYYY\");\r\n    this.periodEndDate = this.dateUtilsService.convertMomentToStr(moment(claimStartDt).subtract(1,'months'), \"MM-YYYY\");\r\n    this.periodStartDate = this.dateUtilsService.convertMomentToStr(moment(claimStartDt).subtract(this.solePropForm.get(\"divisor\").value,'months'), \"MM-YYYY\");\r\n  }\r\n\r\n  constructDynamicMthRange(): void{\r\n    this.colMthRange = [];\r\n    const claimStartDt = this.dateUtilsService.convertStrToMoment(this.currHardCopyDetails.trgStartDte, \"DD-MM-YYYY\");\r\n    const colEndDt = claimStartDt.clone().subtract(1, 'months');\r\n    const colStartDt = claimStartDt.clone().subtract(this.solePropForm?.get('divisor').value, 'months');\r\n\r\n    for(let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')){\r\n      this.colMthRange.push(mth.format(\"DD-MM-YYYY\"));\r\n    }\r\n    console.log(\"col mth range\", this.colMthRange);\r\n    this.yrmthList = this.colMthRange.map(x=>  moment(this.dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\r\n\r\n  }\r\n\r\n  tester(): void{\r\n    console.log(\"the new map\", this.newUnsavedWorkingData);\r\n    console.log(\"rigata\", this.solePropForm.controls)\r\n  }\r\n\r\n  isActive(): boolean{\r\n    return this.currSelectedOption?.obj.archiveDt===0;\r\n  }\r\n\r\n  constructAnnualYearInputOptions():void{\r\n    let claimStartDt;\r\n    if(this.trgStartDte){\r\n      claimStartDt = this.dateUtilsService.convertStrToDate(this.trgStartDte, \"DD-MM-YYYY\");\r\n    }else {\r\n      console.log(\"the trg is\", this.currHardCopyDetails.trgStartDte);\r\n      claimStartDt = this.dateUtilsService.convertStrToDate( this.currHardCopyDetails.trgStartDte, \"DD-MM-YYYY\");\r\n\r\n    }\r\n\r\n    const date1 = +this.dateUtilsService.convertMomentToStr(moment(claimStartDt).subtract(1,'years'), \"YYYY\");\r\n    const date2 = +this.dateUtilsService.convertMomentToStr(moment(claimStartDt), \"YYYY\");\r\n    const yearInputOptions = [\r\n      {name:  date1, key: date1},\r\n      {name:  date2, key: date2},\r\n    ]\r\n    console.log(\"hello year input\", yearInputOptions)\r\n    //if no value from api or the claim section start date has been changed, default to first option\r\n    this.solePropForm.get('yearInputOptions')?.setValue(yearInputOptions);\r\n    this.solePropForm.get('headerGroup.yearInput')?.setValue(yearInputOptions[1].key);\r\n  }\r\n\r\n  constructSourceYearOptions():void{\r\n    const claimEndDt = this.dateUtilsService.convertStrToDate(this.currHardCopyDetails.trgEndDte, \"DD-MM-YYYY\");\r\n    this.sourceYrOptions = [\r\n      {name:  'NA ' + this.dateUtilsService.convertMomentToStr(moment(claimEndDt).subtract(1,'years'), \"YY\"), key: 1},\r\n      {name:  'NA ' + this.dateUtilsService.convertMomentToStr(moment(claimEndDt), \"YY\"), key: 2},\r\n      {name:  'NA ' + this.dateUtilsService.convertMomentToStr(moment(claimEndDt).add(1,'years'), \"YY\"), key: 3},\r\n    ]\r\n    console.log('the year options', this.sourceYrOptions);\r\n  }\r\n\r\n  generateYrMth(dataSet: any): void{\r\n    //base range is 6 mths from backend, other wise is 6 mths from claim start mth - 6 to claim start mth -1\r\n    let claimStartDt;\r\n    let  claimEndDt;\r\n    if(dataSet){\r\n      console.log(\"dataSet\", dataSet)\r\n      const claimStartYrMth:Date =  this.dateUtilsService.convertStrToDate(dataSet?.startYrmth, this.dateFormat);\r\n      const claimEndYrMth:Date =  this.dateUtilsService.convertStrToDate(dataSet.endYrmth, this.dateFormat);\r\n      claimStartDt = moment(new Date(claimStartYrMth.getFullYear(), claimStartYrMth.getMonth(),1));\r\n      claimEndDt = moment(new Date(claimEndYrMth.getFullYear(), +claimEndYrMth.getMonth()+ 1, 0));\r\n      const colStartDt = claimEndDt.clone().subtract(+this.solePropForm?.get('divisor').value - 1, 'months');\r\n      const colEndDt = claimEndDt.clone();\r\n\r\n      this.colMthRange = [];\r\n      for(let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')){\r\n        this.colMthRange.push(mth.format(\"DD-MM-YYYY\"));\r\n      }\r\n      this.yrmthList = this.colMthRange.map(x=>  moment(this.dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\r\n      console.log(\"yr mth list\", this.yrmthList)\r\n    }\r\n\r\n    //adds more form control if needed\r\n    if(this.trgStartDte!==undefined && this.trgStartDte !== null){\r\n      console.log(\"incomign trg date\", this.trgStartDte)\r\n      claimStartDt = this.dateUtilsService.convertStrToMoment(this.trgStartDte, this.dateFormat).subtract(6, 'months');\r\n      claimEndDt =     this.dateUtilsService.convertStrToMoment(this.trgStartDte, this.dateFormat).subtract(1, 'months');\r\n\r\n      const colStartDt = claimStartDt.clone();\r\n      const colEndDt = claimEndDt.clone();\r\n\r\n      this.colMthRange = [];\r\n      for(let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')){\r\n        this.colMthRange.push(mth.format(\"DD-MM-YYYY\"));\r\n      }\r\n      this.yrmthList = this.colMthRange.map(x=>  moment(this.dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\r\n      console.log(\"yr mth list\", this.yrmthList)\r\n\r\n      this.adjustFormArray();\r\n\r\n\r\n    }\r\n    const cloneYrmthList = JSON.parse(JSON.stringify(this.yrmthList))\r\n    console.log(\"clone is\", cloneYrmthList)\r\n    this.solePropForm.get('yrmthList').setValue(cloneYrmthList);\r\n    this.solePropForm.get('startYrmth').setValue(\"01-\".concat(cloneYrmthList[0]));\r\n    this.solePropForm.get('endYrmth').setValue(\"01-\".concat(cloneYrmthList[cloneYrmthList.length -1]));\r\n\r\n  }\r\n\r\n\r\n  adjustFormArray():void{\r\n    const existingYrMthControls =  Object.keys(this.dataFormArray.controls);\r\n    const diffColHeaders: string[] = this.yrmthList.filter( x => !existingYrMthControls.includes(x));\r\n    if(this.dataFormArray.controls){\r\n\r\n      let formObj;\r\n      diffColHeaders.forEach(yrmth=>{\r\n        formObj = {\r\n          yrmth,\r\n          yrmthReCon: new FormControl(yrmth, null),\r\n          revenue: new FormControl(null, null),\r\n          netProfit: new FormControl(null, null),\r\n          type: new FormControl('3', null)\r\n        }\r\n        this.dataFormArray.addControl(yrmth, this.formBuilder.group(formObj));\r\n      });\r\n    }\r\n  }\r\n\r\n  retrieveSolePropWD():void{\r\n\r\n    if((!this.currSelectedOption.changes && !this.currSelectedOption.newWD)) {\r\n\r\n    this.solePropForm = this.formBuilder.group({\r\n      id: new FormControl(null, null),\r\n      workingDataId: new FormControl('',null),\r\n      consolidated: new FormControl(false, null),\r\n      divisor: new FormControl(6, null),\r\n      annualDivisor: new FormControl(12, null),\r\n      dataFormArray: this.formBuilder.group({}),\r\n      consolDataFormArray: this.formBuilder.group({}),\r\n      headerGroup: this.formBuilder.group({\r\n        yearInput: new FormControl('', null),\r\n      }),\r\n      captionGroup: this.formBuilder.group({\r\n        radioOption: new FormControl(this.radioOptions[0].key, null)\r\n      }),\r\n      yrmthList:new FormControl([], null),\r\n      startYrmth: new FormControl('', null),\r\n      endYrmth: new FormControl('', null),\r\n      yearInputOptions: new FormControl([], null),\r\n      annualIncomeList: new FormArray([]),\r\n    });\r\n\r\n    let params = new HttpParams();\r\n    params = params.append(\"workingDataId\", this.currSelectedOption?.obj.workingDataId);\r\n    this.seClaimService.retrieveSolePropPartnerWD({params}).subscribe((resp:any) => {\r\n\r\n      if(resp){\r\n          if(resp.status === 200 && resp.body.data){\r\n            this.generateYrMth(resp.body.data);\r\n            this.populateSolePropForm(resp.body.data, false);\r\n            this.valueChangeSubscribe();\r\n          }\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(\"error is\" + String(error?.error?.error_desc));\r\n        this.toastService.error(String(error?.error?.error_desc));\r\n      });\r\n\r\n    }else if(this.currSelectedOption.changes && !this.currSelectedOption.newWD) {\r\n      this.solePropForm = this.workingDataWithChanges.get(this.currSelectedOption?.obj?.workingDataId).formGroup as FormGroup;\r\n      this.yrmthList = this.solePropForm.get('yrmthList').value;\r\n      console.log(\"calling from exist\", this.workingDataWithChanges.get(this.currSelectedOption?.obj?.workingDataId).formGroup)\r\n\r\n      this.setRadioOption(this.solePropForm.get('consolidated').value);\r\n      console.log(\"get from changes WD Map\", this.solePropForm)\r\n      this.loading = false;\r\n    }else if(this.currSelectedOption.newWD) {\r\n      console.log(\"selected key\",this.currSelectedOption?.key.toString())\r\n      this.solePropForm = this.newUnsavedWorkingData.get(this.currSelectedOption?.key.toString()).formGroup as FormGroup;\r\n      console.log(\"get from new WD Map\", this.newUnsavedWorkingData.get(this.currSelectedOption?.key.toString()).formGroup);\r\n\r\n      if(this.solePropForm.get('consolidated')){\r\n        this.setRadioOption(this.solePropForm.get('consolidated').value);\r\n        //defaulted to monthly\r\n      }else this.setRadioOption(false);\r\n\r\n      this.loading = false;\r\n\r\n    }\r\n  }\r\n\r\n  populateSolePropForm(dataSet: any, newForm: boolean): FormGroup{\r\n    this.dataSet = dataSet;\r\n    const newDataList: any[] = [];\r\n    let dataRecon:any[] = [];\r\n    if(this.dataSet.consolidated === true){\r\n      //expect 1\r\n      if(this.dataSet.dataList){\r\n        this.solePropForm.get('captionGroup.radioOption').setValue('CON');\r\n        dataRecon = SolePropComponent.staticConstructConsolidatedHeaderData(this.dataSet.dataList, true, false, this.dateUtilsService, this.solePropForm.get('yrmthList').value);\r\n        SolePropComponent.constructForm(dataRecon, this.consolDataFormArray, false, this.formBuilder, this.solePropForm);\r\n\r\n        // construct empty for mthly view\r\n        SolePropComponent.staticConstructConsolidatedHeaderData(newDataList, false, true, this.dateUtilsService, this.solePropForm.get('yrmthList').value);\r\n        SolePropComponent.constructForm(newDataList, this.dataFormArray, true, this.formBuilder, this.solePropForm);\r\n\r\n      }\r\n    }else{\r\n      if(this.dataSet.dataList){\r\n        console.log(\"imhere\")\r\n        this.solePropForm.get('captionGroup.radioOption').setValue('MTH');\r\n        //list of mthly records\r\n        dataRecon = SolePropComponent.staticConstructConsolidatedHeaderData(this.dataSet.dataList, false, false, this.dateUtilsService, this.solePropForm.get('yrmthList').value);\r\n        SolePropComponent.constructForm(dataRecon, this.dataFormArray, false, this.formBuilder, this.solePropForm);\r\n\r\n        //construct empty for consolidated view\r\n        SolePropComponent.staticConstructConsolidatedHeaderData(newDataList, true, true, this.dateUtilsService, this.solePropForm.get('yrmthList').value);\r\n        SolePropComponent.constructForm(newDataList, this.consolDataFormArray, true, this.formBuilder, this.solePropForm);\r\n      }\r\n    }\r\n    //set eligible mth divisor and prdn bonus divisor\r\n    this.solePropForm.get('divisor').setValue(dataSet.divisor);\r\n    this.solePropForm.get('annualDivisor').setValue(dataSet.annualDivisor);\r\n    this.solePropForm.get('id').setValue(dataSet.id);\r\n    this.solePropForm.get('workingDataId').setValue(dataSet.workingDataId);\r\n    this.solePropForm.get('startYrmth').setValue(dataSet.startYrmth);\r\n    this.solePropForm.get('endYrmth').setValue(dataSet.endYrmth);\r\n    this.solePropForm.get('consolidated').setValue(this.dataSet.consolidated);\r\n    SolePropComponent.populateAnnualIncomeList(dataSet, this.formBuilder,this.dateUtilsService, this.solePropForm);\r\n    this.loading = false;\r\n    return this.solePropForm;\r\n  }\r\n\r\n\r\n\r\n\r\n  valueChangeSubscribe():void{\r\n   this.subscr = this.solePropForm.valueChanges.subscribe(changes => {\r\n    console.log(\"has changes\", changes)\r\n      this.currSelectedOption.changes = true;\r\n      this.saveSEClaimRequest.workingDataSectionInd = true;\r\n      if(!this.workingDataWithChanges.has(this.currSelectedOption?.obj?.workingDataId) && this.currSelectedOption?.obj?.archiveDt === 0\r\n     ){\r\n      console.log(\"puting to id\",this.currSelectedOption?.obj?.workingDataId);\r\n      console.log(\"during subscribe\", this.solePropForm.controls)\r\n        this.workingDataWithChanges.set(this.currSelectedOption?.obj?.workingDataId,\r\n          {\r\n            obj: this.currSelectedOption.obj,\r\n            formGroup: this.solePropForm,\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  setRadioOption(consolidated: boolean): void{\r\n    if(consolidated){\r\n      this.solePropForm.get('captionGroup.radioOption').setValue('CON');\r\n    }else this.solePropForm.get('captionGroup.radioOption').setValue('MTH');\r\n  }\r\n\r\n  getInnerFormControl(fg: FormGroup, controlName: string, innerControlName: string): FormControl{\r\n    return fg?.get(controlName)?.get(innerControlName) as FormControl;\r\n  }\r\n\r\n  getSumOfCurrRow(formCtrlName: string): number\r\n  {\r\n    let sum = 0;\r\n    let fieldCtrl;\r\n    this.getYrmthList().slice(this.maxMths - this.solePropForm?.get('divisor').value, this.maxMths).forEach(yrmth => {//for each mth\r\n      fieldCtrl = this.dataFormArray.get(yrmth).get(formCtrlName).value|| 0;  // fieldCtrl is field level, i.e. revenue\r\n      sum+=fieldCtrl;\r\n    });\r\n    return sum;\r\n  }\r\n\r\n  getForm(){\r\n    console.log(\"rikza\", this.dataFormArray.controls);\r\n  }\r\n\r\n  async confirmSwitch(e: Event,  type: string) {\r\n    const value = (e.target as HTMLInputElement).value;\r\n    console.log(\"incoming value\",value)\r\n    if (value !== this.solePropForm.get('captionGroup.radioOption').value) {\r\n      e.preventDefault();\r\n      const confirm = await this.showConfirm(e,type);\r\n      if (!confirm) {\r\n        return;\r\n      }else{\r\n        this.solePropForm.get('captionGroup.radioOption').setValue(value);\r\n        this.solePropForm.get('consolidated').setValue(value === 'CON')\r\n        this.clearForm(value);\r\n      }\r\n    }\r\n  }\r\n\r\n  showConfirm(e: Event, type: string) {\r\n    return new Promise((resolve) => {\r\n      this.confirmationService.confirm({\r\n        target: e.target,\r\n        message: 'All Working Data fields will be cleared',\r\n        header: 'Confirmation',\r\n        key: type,\r\n        icon: 'pi pi-exclamation-triangle',\r\n        acceptLabel: 'Proceed',\r\n        rejectLabel: 'Cancel',\r\n        accept() {\r\n          return resolve(true)\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n  clearForm(radioKey: string): void{\r\n    let yrmthFG:AbstractControl;\r\n    if(radioKey === \"MTH\"){\r\n      Object.keys(this.consolDataFormArray.controls).forEach(key=>{\r\n        yrmthFG = this.consolDataFormArray.get(key);\r\n        yrmthFG.get('revenue').setValue(null);\r\n        yrmthFG.get('netProfit').setValue(null);\r\n      })\r\n\r\n    }else{\r\n      Object.keys(this.dataFormArray.controls).forEach(key=>{\r\n        console.log(\"key is\", key)\r\n        yrmthFG = this.dataFormArray.get(key);\r\n        yrmthFG.get('revenue').setValue(null);\r\n        yrmthFG.get('netProfit').setValue(null);\r\n      })\r\n    }\r\n  }\r\n\r\n  refreshOtherClaim(): void{\r\n    let params = new HttpParams();\r\n    params = params.append(\"nric\", this.currHardCopyDetails?.headerDto.nsManNric);\r\n    params = params.append(\"yrmthList\", JSON.stringify(this.getYrmthList()));\r\n    params = params.append(\"caseId\", this.currHardCopyDetails?.headerDto.caseId);\r\n    params = params.append(\"workingDataTypeCode\", this.selectedWDOption?.obj.workingDataTypeCode);\r\n\r\n\r\n\r\n    this.seClaimService.retrieveRefreshOtherSPPClaims({params}).subscribe((resp:any) => {\r\n      if(resp){\r\n        if(resp.status === 200 && resp.body.data){\r\n          const refreshedArr:string[] = [];\r\n          resp.body.data.forEach((y:any)=> {\r\n            const ctrl = this.dataFormArray.get(y.yrmth);\r\n            this.refreshOtherClaimSetValue(ctrl, y);\r\n            refreshedArr.push(y.yrmth);\r\n          });\r\n          const existingYrMthControls =  Object.keys(this.dataFormArray.controls);\r\n          const unrefreshed: string[] = refreshedArr.filter( x => !existingYrMthControls.includes(x));\r\n          unrefreshed.forEach(unrefreshMths=> {\r\n            this.refreshOtherClaimSetValue(this.dataFormArray.get(unrefreshMths), null);\r\n          })\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  refreshOtherClaimSetValue(ctrl: AbstractControl, data: any): void{\r\n    if(ctrl){\r\n      ctrl.get('revenue').setValue(data.revenue || null);\r\n      ctrl.get('netProfit').setValue(data.netProfit|| null);\r\n    }\r\n  }\r\n\r\n  enableRefreshOClaim():boolean{\r\n    return this.captionGroup.get('radioOption').value==='MTH';\r\n  }\r\n\r\n  sortByAnnualandYrmthRecon(){\r\n    return function (a: any, b: any) {\r\n      if(a.type < b.type){\r\n        return -1;\r\n      }if(a.type > b.type){\r\n        return 1;\r\n      }else {\r\n        //else 3\r\n        return moment(a.yrmthReCon,\"MM-YYYY\") < moment(b.yrmthReCon,\"MM-YYYY\") ? -1 : 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  copyToItem(event: any):void{\r\n    this.totalAmtPayEvent.emit(this.sysProposedAmt);\r\n  }\r\n\r\n  enableCopytoItem(): boolean{\r\n    const claimItemList = this.itemDetailsSection.itemForm?.get('otherSEItemArr') as FormArray;\r\n    let itxItem = null;\r\n    if(claimItemList.length>0){\r\n      itxItem = claimItemList?.controls.filter(x=> x.get('itemType').value === 'AVE')[0];\r\n      return itxItem?.get('latestStatus').value === this.PEND_VERIFY_STATUS || itxItem?.get('latestStatus').value === this.PEND_ACTION_STATUS;\r\n    }else return false;\r\n  }\r\n\r\n  getSysProposedAmt(): number{\r\n    this.sysProposedAmt =  this.solePropForm?.get('captionGroup.radioOption').value==='MTH'? (this.getSumOfCurrRow('netProfit'))/this.solePropForm?.get('divisor').value :\r\n    +this.consolDataFormArray.get('consolidated')?.get('netProfit').value/this.solePropForm.get('divisor').value;\r\n    return this.sysProposedAmt;\r\n  }\r\n\r\n\r\n  roundVal (value: number) {\r\n    return Math.round(value);\r\n  }\r\n\r\n  getFormControlValue(fg: FormGroup, formCtrlName: string): any{\r\n    return fg.get(formCtrlName).value;\r\n  }\r\n\r\n  getFormArray(fg: FormGroup,formCtrlName: string): FormArray{\r\n    return fg.get(formCtrlName) as FormArray;\r\n  }\r\n\r\n  getYrmthList(): string[]\r\n  {\r\n    return this.solePropForm.get('yrmthList').value as string[];\r\n  }\r\n\r\n\r\n  getNIPDiff(): number{\r\n    let diff = 0;\r\n    let annualNIP = 0;\r\n    let consolNIP = 0;\r\n    if(this.solePropForm?.get('captionGroup.radioOption').value==='CON'){\r\n      annualNIP = isFinite((this.consolDataFormArray.get('annual')?.get('netProfit').value || 0)/ (this.consolDataFormArray.get('annual')?.get('revenue').value) * 100 || 0)?\r\n      (this.consolDataFormArray.get('annual')?.get('netProfit').value || 0)/ (this.consolDataFormArray.get('annual')?.get('revenue').value) * 100 || 0 :  0;\r\n      consolNIP = isFinite((this.dataFormArray.get('consolidated')?.get('netProfit').value || 0)/ (this.dataFormArray.get('consolidated')?.get('revenue').value) * 100 || 0)?\r\n      (this.consolDataFormArray.get('consolidated')?.get('netProfit').value || 0)/ (this.consolDataFormArray.get('consolidated')?.get('revenue').value) * 100 || 0 :  0;\r\n    }else{\r\n      annualNIP = isFinite((this.dataFormArray.get('annual')?.get('netProfit').value || 0)/ (this.dataFormArray.get('annual')?.get('revenue').value) * 100 || 0)?\r\n      (this.dataFormArray.get('annual')?.get('netProfit').value || 0)/ (this.dataFormArray.get('annual')?.get('revenue').value) * 100 || 0 :  0;\r\n      consolNIP = isFinite((this.getSumOfCurrRow('netProfit') /  this.getSumOfCurrRow('revenue') * 100))? (this.getSumOfCurrRow('netProfit') /  this.getSumOfCurrRow('revenue') * 100):  0;\r\n    }\r\n    this.consolNIP = this.roundVal(consolNIP);\r\n    this.annualNIP  =this.roundVal(annualNIP);\r\n    diff = this.getAbsoluteDiff(this.annualNIP, this.consolNIP);\r\n    return diff;\r\n  }\r\n\r\n\r\n  getNetIncomeDiff(): number{\r\n    let diff = 0;\r\n    let annualTotalNI = 0;\r\n    let consolTotalNI = 0;\r\n    if(this.solePropForm.get('captionGroup.radioOption').value==='CON'){\r\n\r\n      annualTotalNI =  this.consolDataFormArray.get('annual')?.get('netProfit').value/this.solePropForm.get('annualDivisor').value;\r\n      consolTotalNI =  this.consolDataFormArray.get('consolidated')?.get('netProfit').value/this.solePropForm.get('divisor').value;\r\n    }else{\r\n      annualTotalNI = this.dataFormArray.get('annual')?.get('netProfit').value/this.solePropForm.get('annualDivisor').value;\r\n      consolTotalNI = (this.getSumOfCurrRow('netProfit'))/ this.solePropForm.get('divisor').value;\r\n    }\r\n    this.annualNIAvg = annualTotalNI;\r\n    this.consolNIAvg = consolTotalNI;\r\n    diff = this.roundVal(this.getAbsoluteDiff(annualTotalNI, consolTotalNI));\r\n    return diff;\r\n  }\r\n\r\n\r\n  getAbsoluteDiff(x:number, y: number): number{\r\n    return Math.abs(x-y);\r\n  }\r\n  isValidNumber(obj: any): boolean{\r\n    return !isNaN(obj);\r\n  }\r\n\r\n  exportToCSV(dataTable: Table): void{\r\n    console.log(\"export to csv\");\r\n    const columns =\r\n    [{field: 'rowHeader', header: \"\", index: 0, customExportHeader: \"\"},\r\n    {field: 'annualAccount', header: 'Annual  Account'.concat(this.solePropForm.get(\"headerGroup.yearInput\").value), index: 1},\r\n    {field: 'aveAnnualAccount', header: 'Ave Monthly', index: 2},\r\n    {field: 'mthAccount', header: String(this.solePropForm.get('divisor').value).concat('-mth Account'), index: 3},\r\n    {field: 'aveMthAccount', header: 'Ave Monthly', index: 4}]\r\n    const subsetYrmth = this.getYrmthList().slice( (this.maxMths - this.solePropForm?.get('divisor').value));\r\n    for(let i = 0; i< subsetYrmth.length; i++ ){\r\n      columns.push({field: String(subsetYrmth[i]), header:String(subsetYrmth[i]), index: i})\r\n    }\r\n\r\n    const dtoList:any[] = [\r\n      {rowHeader: 'Revenue'},\r\n      {rowHeader: 'Net Profit'},\r\n      {rowHeader: 'Entity NIP (Percentage %)'}\r\n    ];\r\n    const dataList: SolePropSubWD[] = [];\r\n    let yrmthFG;\r\n    let subWD: SolePropSubWD;\r\n\r\n    if(this.solePropForm?.get('captionGroup.radioOption').value==='CON'){\r\n      this.exportAddConsol(yrmthFG, dataList, subWD, dtoList);\r\n    }else{\r\n      this.exportAddMthly(yrmthFG, dataList, subWD, subsetYrmth, dtoList);\r\n    }\r\n    this.exportUtilsService.exportCSV(dataTable, dtoList,10, columns,\r\n      \"sole_prop_data_\".concat(formatDate(new Date(),\"dd-MM-YYYY\", this.localeId)));\r\n  }\r\n\r\n  exportAddConsol(yrmthFG: any, dataList: SolePropSubWD[], subWD: SolePropSubWD, dtoList: any[]){\r\n    yrmthFG = ((this.solePropForm.get('consolDataFormArray') as FormGroup)).get('annual');\r\n    subWD = {\r\n      revenue: yrmthFG.get(\"revenue\").value,\r\n      netProfit: yrmthFG.get(\"netProfit\").value,\r\n      type: \"1\",\r\n      year:  this.solePropForm.get(\"headerGroup.yearInput\").value\r\n    }\r\n    dataList.push(subWD);\r\n    yrmthFG = ((this.solePropForm.get('consolDataFormArray') as FormGroup)).get('consolidated');\r\n    subWD = {\r\n      revenue: yrmthFG.get(\"revenue\").value,\r\n      netProfit: yrmthFG.get(\"netProfit\").value,\r\n      type: \"2\",\r\n    }\r\n    dataList.push(subWD);\r\n\r\n     //add annual\r\n     dataList.forEach(x=>{\r\n      if(x.type === \"1\"){\r\n        dtoList[0]['annualAccount'] = x.revenue;\r\n        dtoList[1]['annualAccount'] = x.netProfit;\r\n        dtoList[2]['annualAccount'] = String(+x.netProfit/ +x.revenue * 100).concat(\"%\") ;//Entity NIP\r\n\r\n        dtoList[0]['aveAnnualAccount'] = x.revenue / this.solePropForm?.get('annualDivisor').value;\r\n        dtoList[1]['aveAnnualAccount'] = x.netProfit/ this.solePropForm?.get('annualDivisor').value;\r\n        dtoList[2]['aveAnnualAccount'] = '';\r\n      }else if(x.type === \"2\"){\r\n        //add consol\r\n        dtoList[0]['mthAccount'] = x.revenue;\r\n        dtoList[1]['mthAccount'] = x.netProfit;\r\n        dtoList[2]['mthAccount'] = String(+x.netProfit/ +x.revenue * 100).concat(\"%\") ;//Entity NIP\r\n\r\n        dtoList[0]['aveMthAccount'] = x.revenue / this.solePropForm?.get('divisor').value;\r\n        dtoList[1]['aveMthAccount'] = x.netProfit/ this.solePropForm?.get('divisor').value;\r\n        dtoList[2]['aveMthAccount'] = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  exportAddMthly(yrmthFG: any, dataList: SolePropSubWD[], subWD: SolePropSubWD, subsetYrmth: any[], dtoList: any[]){\r\n    //mthly\r\n    yrmthFG = ((this.solePropForm.get('dataFormArray') as FormGroup)).get('annual');\r\n    subWD = {\r\n      revenue: yrmthFG.get(\"revenue\").value,\r\n      netProfit: yrmthFG.get(\"netProfit\").value,\r\n      type: \"1\",\r\n      year:  this.solePropForm.get(\"headerGroup.yearInput\").value\r\n    }\r\n    dataList.push(subWD);\r\n\r\n    subsetYrmth.forEach(key=>{\r\n      yrmthFG = this.solePropForm.get('dataFormArray').get(key);\r\n      subWD = {\r\n        revenue: yrmthFG.get(\"revenue\").value,\r\n        netProfit: yrmthFG.get(\"netProfit\").value,\r\n        type: \"3\",\r\n        yrmth: yrmthFG.get(\"yrmthReCon\").value,\r\n      }\r\n      dataList.push(subWD);\r\n      }\r\n    );\r\n\r\n     //add annual\r\n     dataList.forEach(x=>{\r\n      if(x.type === \"1\"){\r\n        dtoList[0]['annualAccount'] = x.revenue;\r\n        dtoList[1]['annualAccount'] = x.netProfit;\r\n        dtoList[2]['annualAccount'] = String(+x.netProfit/ +x.revenue * 100).concat(\"%\") ;//Entity NIP\r\n\r\n        dtoList[0]['aveAnnualAccount'] = x.revenue / this.solePropForm?.get('annualDivisor').value;\r\n        dtoList[1]['aveAnnualAccount'] = x.netProfit/ this.solePropForm?.get('annualDivisor').value;\r\n        dtoList[2]['aveAnnualAccount'] = '';\r\n      }\r\n      else if(x.type === \"3\"){\r\n        dtoList[0][x.yrmth] = x.revenue;\r\n        dtoList[1][x.yrmth] = x.netProfit;\r\n        dtoList[2][x.yrmth] = '';\r\n      }\r\n    });\r\n    const mthlyDataList = dataList.filter(x=> x.type === \"3\");\r\n\r\n      dtoList[0]['mthAccount'] = this.getSumByField(mthlyDataList.map(x=> {return x.revenue}));\r\n      dtoList[1]['mthAccount'] = this.getSumByField(mthlyDataList.map(x=> {return x.netProfit}));\r\n      dtoList[2]['mthAccount'] =  String(+dtoList[1]['mthAccount']/ +dtoList[0]['mthAccount'] * 100).concat(\"%\");\r\n\r\n      dtoList[0]['aveMthAccount'] = dtoList[0]['mthAccount'] / this.solePropForm?.get('divisor').value;\r\n      dtoList[1]['aveMthAccount'] = dtoList[1]['mthAccount'] / this.solePropForm?.get('divisor').value;\r\n      dtoList[2]['aveMthAccount'] = \"\";\r\n  }\r\n\r\n  getSumByField(fieldArray: number[]): number{\r\n    const initValue = 0;\r\n    const sum = fieldArray.reduce((accumulator, currentValue) => accumulator + currentValue, initValue);\r\n    return sum;\r\n  }\r\n\r\n  //allows input on need basis\r\n  hasValidAuthorityAndStation(): boolean{\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_VERIFIER) && \r\n      this.station === NSPAY2_STATION.STATION_VERIFICATION){\r\n        return true;\r\n      }\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) && \r\n    this.station === NSPAY2_STATION.STATION_CERTIFICATION) {\r\n      return false;\r\n    }\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) && \r\n    this.station === NSPAY2_STATION.STATION_APPROVAL) {\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n   \r\n\r\n\r\n}\r\n","<p-card>\r\n    <button  (click)=\"tester()\"\r\n     pButton label=\"TESTER\" [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\"\r\n    >\r\n    </button>\r\n    <form [formGroup] = \"solePropForm\">\r\n        <div class=\"grid\" style=\"margin-top:1em; margin-left: 220px\">\r\n            <div class = \"col-12 justify-content-start gap-4 flex align-items-center\" >\r\n                <div style=\"margin-right:1em\">\r\n                    Period:\r\n                    {{ dateUtilsService.convertDateToStr(dateUtilsService.convertStrToDate(solePropForm.get('startYrmth').value, this.dateFormat), 'MM-YYYY') }}\r\n                    to\r\n                    {{ dateUtilsService.convertDateToStr(dateUtilsService.convertStrToDate(solePropForm.get('endYrmth').value, this.dateFormat), 'MM-YYYY')}}\r\n                </div>\r\n                <div style=\"margin-right:1em\">\r\n                    ( Divisor:&nbsp;&nbsp;\r\n                    <p-inputNumber\r\n                    [min]=\"1\" [max]=\"6\" [inputStyle]=\"{'width': '5em', 'text-align':'right'}\" (onBlur) = \"constructDynamicMthRange()\"\r\n                    formControlName = \"divisor\"\r\n                    [disabled] = \"!isActive() || readOnly || !hasValidAuthorityAndStation()\"></p-inputNumber>\r\n                    <small *ngIf=\"solePropForm.get('divisor')?.touched && !isValidNumber(solePropForm.get('divisor')?.value)\"\r\n                    class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V002\"\r\n                    [translateValues]=\"{ field: 'Divisor' }\">\r\n                    </small>\r\n                    )\r\n                </div>\r\n                <div style=\"margin-right:1em\">\r\n                    Annual Divisor:&nbsp;&nbsp;\r\n                    <p-inputNumber\r\n                        [min]=\"1\" [max]=\"12\" [inputStyle]=\"{'width': '5em', 'text-align':'right'}\"\r\n                        formControlName = \"annualDivisor\"\r\n                        [disabled] = \"!isActive() || readOnly || !hasValidAuthorityAndStation()\">\r\n                    </p-inputNumber>\r\n                    <small *ngIf=\"solePropForm.get('annualDivisor')?.touched && !isValidNumber(solePropForm.get('annualDivisor')?.value)\"\r\n                    class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V002\"\r\n                    [translateValues]=\"{ field: 'Annual Divisor' }\">\r\n                    </small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf = \"currSelectedOption!==undefined\">\r\n            <div formArrayName = \"dataFormArray\">\r\n                <p-table *ngIf = \"solePropForm.controls['captionGroup'].get('radioOption').value==='MTH'; else consolOption\"\r\n                [value]=\"getYrmthList()\"\r\n                [filterDelay]=\"0\"\r\n                [loading] = \"loading\"\r\n                styleClass=\"p-datatable-gridlines p-datatable-striped\"\r\n                responsiveLayout=\"scroll\"\r\n                #mthlyTable\r\n                >\r\n                    <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                            <th scope=\"col\"></th>\r\n                            <th scope=\"col\" [attr.colspan]=\"solePropForm.controls['yrmthList'].value.length + 4\">\r\n                                <form [formGroup] = \"captionGroup\">\r\n                                    <div class=\"grid\">\r\n                                        <div class = \"col-6 nsp-align-left\">\r\n                                            <p-button icon=\"pi pi-file-o\" (click) = \"exportToCSV(mthlyTable)\" [style]=\"{'margin-left': '.5em', 'margin-right': '.5em'}\"\r\n                                            ></p-button>\r\n                                            <!--fieldset is needed to group the radio buyttons together for custom radio input buttons-->\r\n                                            <fieldset *ngIf=\"isActive() && !readOnly && hasValidAuthorityAndStation(); else disabledRadio\" [style]=\"{'display':'inline'}\">\r\n                                                <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                    <input\r\n                                                    id=\"custom-radio\"\r\n                                                    class = \"p-radiobutton\"\r\n                                                    type=\"radio\"\r\n                                                    (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                    value=\"MTH\"\r\n                                                    formControlName=\"radioOption\"\r\n                                                    />\r\n                                                    <label class=\"custom-control-label\">Monthly</label>\r\n                                                </div>\r\n                                                <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                    <input\r\n                                                    id=\"con-custom-radio\"\r\n                                                    class = \"p-radiobutton\"\r\n                                                    type=\"radio\"\r\n                                                    (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                    value=\"CON\"\r\n                                                    formControlName=\"radioOption\"\r\n                                                    />\r\n                                                    <label class=\"custom-control-label\">Consolidated</label>\r\n                                                </div>\r\n                                            </fieldset>\r\n                                            <ng-template #disabledRadio>\r\n                                                <fieldset disabled [style]=\"{'display':'inline'}\">\r\n                                                    <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                        <input\r\n                                                        id=\"custom-radio\"\r\n                                                        class = \"p-radiobutton\"\r\n                                                        type=\"radio\"\r\n                                                        (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                        value=\"MTH\"\r\n                                                        formControlName=\"radioOption\"\r\n                                                        />\r\n                                                        <label class=\"custom-control-label\">Monthly</label>\r\n\r\n                                                    </div>\r\n                                                    <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                        <input\r\n                                                        id=\"con-custom-radio\"\r\n                                                        class = \"p-radiobutton\"\r\n                                                        type=\"radio\"\r\n                                                        (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                        value=\"CON\"\r\n                                                        formControlName=\"radioOption\"\r\n                                                        />\r\n                                                        <label class=\"custom-control-label\">Consolidated</label>\r\n                                                    </div>\r\n                                                </fieldset>\r\n                                            </ng-template>\r\n                                        </div>\r\n                                        <p-confirmPopup key = \"confirmWarning\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n                                        <div class = \"col-6 nsp-align-right\">\r\n                                            <button *ngIf=\"isActive() && !readOnly && hasValidAuthorityAndStation()\" id = \"refreshOtherClaim\" (click)=\"refreshOtherClaim()\"\r\n                                            [disabled] = !enableRefreshOClaim() pButton label=\"Refresh from Other Claim\" [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\"\r\n                                            >\r\n                                            </button>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"col\"></th>\r\n                            <th scope=\"col\" [style]=\"{'text-align': 'center'}\">\r\n                                <form [formGroup] = \"headerGroup\">\r\n\r\n                                    <div class=\"col-5 input-group gap-2 flex align-content-center\">\r\n                                        <p-dropdown [options]=\"getFormControlValue(solePropForm, 'yearInputOptions')\" id=\"source\" [formControl]=\"getInnerFormControl(solePropForm, 'headerGroup', 'yearInput')\"  optionLabel=\"name\" optionValue=\"key\"\r\n                                        [style]=\"{'width': '100%'}\" autoWidth=\"false\"  appendTo=\"body\"\r\n                                        [disabled]=\"!isActive || readOnly || !hasValidAuthorityAndStation()\"></p-dropdown>\r\n                                        <label class=\"col-form-label flex align-items-center\">Account</label>\r\n                                    </div>\r\n                                </form>\r\n                            </th>\r\n                            <th scope=\"col\" [style]=\"{'text-align': 'center', 'border-right': '2px solid black'}\">Ave Monthly</th>\r\n                            <th scope=\"col\" [style]=\"{'text-align': 'center'}\">6-Mth Account</th>\r\n                            <th scope=\"col\" [style]=\"{'text-align': 'center', 'border-right': '2px solid black'}\">Ave Monthly</th>\r\n                            <th scope=\"col\" [style]=\"{'text-align': 'center'}\"  *ngFor=\"let yrmth of getYrmthList() | slice: ( maxMths - this.solePropForm?.get('divisor').value): maxMths\">\r\n                                {{yrmth}}\r\n                            </th>\r\n                        </tr>\r\n\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-columns = \"cols\" let-rowIndex = \"rowIndex\">\r\n                        <tr  *ngIf=\"rowIndex== 0\"  >\r\n                            <td>{{ cols[0] }}</td>\r\n                            <td formGroupName = \"annual\">\r\n                                <p-inputNumber  inputStyleClass = \"nsp-align-right\"\r\n                                id=\"revenue\" mode=\"decimal\" [minFractionDigits]=\"2\" formControlName = \"revenue\"\r\n                                [formControl]=\"getInnerFormControl(dataFormArray, 'annual', 'revenue')\" *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelAnnualRevenue\"\r\n                                >\r\n                               </p-inputNumber>\r\n                               <ng-template #labelAnnualRevenue>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ getInnerFormControl(dataFormArray, 'annual', 'revenue').value | number : '1.2-2'}}\r\n                                    </div>\r\n                                </ng-template>\r\n                            </td>\r\n                            <td [style]=\"{'border-right': '2px solid black'}\"><div style=\"text-align:right\">\r\n                                {{ dataFormArray.get('annual').get('revenue').value/solePropForm.get('annualDivisor').value | number : '1.2-2'}}\r\n                            </div></td>\r\n                            <td><div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('revenue') | number : '1.2-2'}}\r\n                            </div>\r\n                            <td [style]=\"{'border-right': '2px solid black', 'text-align':'right'}\">\r\n                                {{ getSumOfCurrRow('revenue')/solePropForm.get('divisor').value| number : '1.2-2'}}\r\n                            </td>\r\n                            <td *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.solePropForm?.get('divisor').value): maxMths; let i = index\" [formGroupName] = \"yrmth\">\r\n                                <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"revenue\"\r\n                                id=\"revenue\" mode=\"decimal\" [minFractionDigits]=\"2\" *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelMthlyRevenue\"\r\n                                [formControl]=\"getInnerFormControl(this.dataFormArray, yrmth, 'revenue')\" >\r\n                               </p-inputNumber>\r\n                               <ng-template #labelMthlyRevenue>\r\n                                <div style=\"text-align:right\">\r\n                                    {{ getInnerFormControl(dataFormArray, yrmth, 'revenue').value | number : '1.2-2'}}\r\n                                </div>\r\n                            </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        <tr  *ngIf=\"rowIndex== 1\"  >\r\n                            <td>{{ cols[1] }}</td>\r\n                            <td formGroupName = \"annual\">\r\n                                <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"netProfit\"\r\n                                id=\"netProfit\" mode=\"decimal\" [minFractionDigits]=\"2\"\r\n                                [formControl]=\"getInnerFormControl(dataFormArray, 'annual', 'netProfit')\" *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelAnnualNetProfit\"\r\n                                >\r\n                               </p-inputNumber>\r\n                               <ng-template #labelAnnualNetProfit>\r\n                                <div style=\"text-align:right\">\r\n                                    {{ getInnerFormControl(dataFormArray, 'annual', 'netProfit').value | number : '1.2-2'}}\r\n                                </div>\r\n                            </ng-template>\r\n                            </td>\r\n                            <td [style]=\"{'border-right': '2px solid black'}\"><div style=\"text-align:right\">\r\n                                {{ dataFormArray.get('annual').get('netProfit').value/solePropForm.get('annualDivisor').value | number : '1.2-2'}}\r\n                            </div></td>\r\n                            <td><div style=\"text-align:right\">\r\n                                {{ getSumOfCurrRow('netProfit') | number : '1.2-2'}}\r\n                            </div>\r\n                            <td [style]=\"{'border-right': '2px solid black', 'text-align':'right'}\">\r\n                                {{ getSumOfCurrRow('netProfit')/solePropForm.get('divisor').value| number : '1.2-2'}}\r\n                            </td>\r\n                            <td *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.solePropForm?.get('divisor').value): maxMths; let i = index\" [formGroupName] = \"yrmth\">\r\n                                <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"netProfit\"\r\n                                id=\"netProfit\" mode=\"decimal\" [minFractionDigits]=\"2\" *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelMthlyNetProfit\"\r\n                                [formControl]=\"getInnerFormControl(this.dataFormArray, yrmth, 'netProfit')\" >\r\n                               </p-inputNumber>\r\n                               <ng-template #labelMthlyNetProfit>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ getInnerFormControl(dataFormArray, yrmth, 'netProfit').value | number : '1.2-2'}}\r\n                                    </div>\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        <tr  *ngIf=\"rowIndex== 2\"  >\r\n                            <td>{{ cols[2] }}</td>\r\n                            <td>\r\n                                <div style=\"text-align:right\" *ngIf=\"dataFormArray.get('annual').get('revenue').value!==0 && dataFormArray.get('annual').get('revenue').value!==undefined && dataFormArray.get('annual').get('revenue').value!==null\">\r\n                                    {{ roundVal(dataFormArray.get('annual').get('netProfit').value/dataFormArray.get('annual').get('revenue').value * 100) | number : '1.0-0' }}%\r\n                                </div>\r\n                            </td>\r\n                            <td [style]=\"{'border-right': '2px solid black'}\"></td>\r\n                            <td><div style=\"text-align:right\" *ngIf=\"getSumOfCurrRow('revenue')!==0 && getSumOfCurrRow('revenue')!==undefined && getSumOfCurrRow('revenue')!==null\">\r\n                                {{ roundVal(getSumOfCurrRow('netProfit') /  getSumOfCurrRow('revenue') * 100) | number : '1.0-0' }}%\r\n                            </div>\r\n                            <td [style]=\"{'border-right': '2px solid black', 'text-align':'right'}\"></td>\r\n                            <td *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.solePropForm?.get('divisor').value): maxMths; let i = index\" [formGroupName] = \"yrmth\">\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n            </div>\r\n            <div [formGroup]= \"consolDataFormArray\">\r\n                <ng-template #consolOption>\r\n                    <p-table\r\n                    [value]=\"getYrmthList()\"\r\n                    [filterDelay]=\"0\"\r\n                    [loading] = \"loading\"\r\n                    styleClass=\"p-datatable-gridlines p-datatable-striped\"\r\n                    responsiveLayout=\"scroll\"\r\n                    #consolTable\r\n                    >\r\n                        <ng-template pTemplate=\"header\">\r\n                            <tr>\r\n                                <th scope=\"col\"></th>\r\n                                <th scope=\"col\" [attr.colspan]=\"solePropForm.controls['yrmthList'].value.length + 4\">\r\n                                    <form [formGroup] = \"captionGroup\">\r\n                                        <div class=\"grid\">\r\n                                            <div class = \"col-6 nsp-align-left\">\r\n                                                <p-button icon=\"pi pi-file-o\" (click) = \"exportToCSV(consolTable)\" [style]=\"{'margin-left': '.5em', 'margin-right': '.5em'}\"\r\n                                                ></p-button>\r\n                                                <!--fieldset is needed to group the radio buyttons together for custom radio input buttons-->\r\n                                                <fieldset *ngIf=\"isActive() && !readOnly && hasValidAuthorityAndStation(); else disabledRadio\" [style]=\"{'display':'inline'}\">\r\n                                                    <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                        <input\r\n                                                        id=\"custom-radio\"\r\n                                                        class = \"p-radiobutton\"\r\n                                                        type=\"radio\"\r\n                                                        (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                        value=\"MTH\"\r\n                                                        formControlName=\"radioOption\"\r\n                                                        />\r\n                                                        <label class=\"custom-control-label\">Monthly</label>\r\n                                                    </div>\r\n                                                    <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                        <input\r\n                                                        id=\"con-custom-radio\"\r\n                                                        class = \"p-radiobutton\"\r\n                                                        type=\"radio\"\r\n                                                        (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                        value=\"CON\"\r\n                                                        formControlName=\"radioOption\"\r\n                                                        />\r\n                                                        <label class=\"custom-control-label\">Consolidated</label>\r\n                                                    </div>\r\n                                                </fieldset>\r\n                                                <ng-template #disabledRadio>\r\n                                                    <fieldset disabled [style]=\"{'display':'inline'}\">\r\n                                                        <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                            <input\r\n                                                            id=\"custom-radio\"\r\n                                                            class = \"p-radiobutton\"\r\n                                                            type=\"radio\"\r\n                                                            (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                            value=\"MTH\"\r\n                                                            formControlName=\"radioOption\"\r\n                                                            />\r\n                                                            <label class=\"custom-control-label\">Monthly</label>\r\n\r\n                                                        </div>\r\n                                                        <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                            <input\r\n                                                            id=\"con-custom-radio\"\r\n                                                            class = \"p-radiobutton\"\r\n                                                            type=\"radio\"\r\n                                                            (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                            value=\"CON\"\r\n                                                            formControlName=\"radioOption\"\r\n                                                            />\r\n                                                            <label class=\"custom-control-label\">Consolidated</label>\r\n                                                        </div>\r\n                                                    </fieldset>\r\n                                                </ng-template>\r\n                                            </div>\r\n                                            <p-confirmPopup key = \"confirmWarning\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n                                            <div class = \"col-6 nsp-align-right\">\r\n                                                <button *ngIf=\"isActive() && !readOnly && hasValidAuthorityAndStation()\" id = \"refreshOtherClaim\" (click)=\"refreshOtherClaim()\"\r\n                                                [disabled] = !enableRefreshOClaim() pButton label=\"Refresh from Other Claim\" [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\"\r\n                                                 >\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"col\"></th>\r\n                                <th scope=\"col\" [style]=\"{'text-align': 'center'}\">\r\n                                    <form [formGroup] = \"headerGroup\">\r\n\r\n                                        <div class=\"col-5 input-group gap-2 flex align-content-center\">\r\n                                            <p-dropdown [options]=\"getFormControlValue(solePropForm, 'yearInputOptions')\" id=\"source\" [formControl]=\"getInnerFormControl(solePropForm, 'headerGroup', 'yearInput')\" optionLabel=\"name\" optionValue=\"key\"\r\n                                            [style]=\"{'width': '100%'}\" autoWidth=\"false\"  appendTo=\"body\"\r\n                                            [disabled]=\"!isActive || readOnly || !hasValidAuthorityAndStation()\"></p-dropdown>\r\n                                            <label class=\"col-form-label flex align-items-center\">Account</label>\r\n                                        </div>\r\n                                    </form>\r\n                                </th>\r\n                                <th scope=\"col\" [style]=\"{'text-align': 'center', 'border-right': '2px solid black'}\">Ave Monthly</th>\r\n                                <th scope=\"col\" [style]=\"{'text-align': 'center'}\">6-Mth Account</th>\r\n                                <th scope=\"col\" [style]=\"{'text-align': 'center', 'border-right': '2px solid black'}\">Ave Monthly</th>\r\n                                <th scope=\"col\" [style]=\"{'text-align': 'center'}\" *ngFor=\"let yrmth of getYrmthList() | slice: ( maxMths - this.solePropForm?.get('divisor').value): maxMths\">\r\n                                    {{yrmth}}\r\n                                </th>\r\n                            </tr>\r\n\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"body\" let-columns = \"cols\" let-rowIndex = \"rowIndex\">\r\n                            <tr  *ngIf=\"rowIndex== 0\">\r\n                                <td>{{ cols[0] }}</td>\r\n                                <td formGroupName = \"annual\">\r\n                                    <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"revenue\"\r\n                                    id=\"revenue\" mode=\"decimal\" [minFractionDigits]=\"2\"\r\n                                    [formControl]=\"getInnerFormControl(consolDataFormArray, 'annual', 'revenue')\"\r\n                                    *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelConsolAnnualRevenue\">\r\n                                   </p-inputNumber>\r\n                                   <ng-template #labelConsolAnnualRevenue>\r\n                                        <div style=\"text-align:right\">\r\n                                            {{ getInnerFormControl(consolDataFormArray, 'annual', 'revenue').value | number : '1.2-2'}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </td>\r\n                                <td [style]=\"{'border-right': '2px solid black'}\"><div style=\"text-align:right\">\r\n                                    {{ consolDataFormArray.get('annual').get('revenue').value/solePropForm.get('annualDivisor').value | number : '1.2-2'}}\r\n                                </div></td>\r\n                                <td formGroupName = \"consolidated\">\r\n                                    <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"revenue\"\r\n                                    id=\"revenue\" mode=\"decimal\" [minFractionDigits]=\"2\"\r\n                                    [formControl]=\"getInnerFormControl(consolDataFormArray, 'consolidated', 'revenue')\"\r\n                                    *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelConsolConsolidatedRevenue\">\r\n                                   </p-inputNumber>\r\n                                   <ng-template #labelConsolConsolidatedRevenue>\r\n                                        <div style=\"text-align:right\">\r\n                                            {{ getInnerFormControl(consolDataFormArray, 'consolidated', 'revenue').value | number : '1.2-2'}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </td>\r\n                                <td [style]=\"{'border-right': '2px solid black', 'text-align':'right'}\">\r\n                                    {{ consolDataFormArray.get('consolidated').get('revenue').value /solePropForm.get('divisor').value| number : '1.2-2'}}\r\n                                </td>\r\n                                <td *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.solePropForm?.get('divisor').value): maxMths; let i = index\" >\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 1\">\r\n                                <td>{{ cols[1] }}</td>\r\n                                <td formGroupName = \"annual\">\r\n                                    <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"netProfit\"\r\n                                    id=\"netProfit\" mode=\"decimal\" [minFractionDigits]=\"2\"\r\n                                    [formControl]=\"getInnerFormControl(consolDataFormArray, 'annual', 'netProfit')\"\r\n                                    *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelConsolAnnualNetProfit\">\r\n                                   </p-inputNumber>\r\n                                   <ng-template #labelConsolAnnualNetProfit>\r\n                                        <div style=\"text-align:right\">\r\n                                            {{ getInnerFormControl(consolDataFormArray, 'annual', 'netProfit').value | number : '1.2-2'}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </td>\r\n                                <td [style]=\"{'border-right': '2px solid black'}\"><div style=\"text-align:right\">\r\n                                    {{ consolDataFormArray.get('annual').get('netProfit').value/solePropForm.get('annualDivisor').value | number : '1.2-2'}}\r\n                                </div></td>\r\n                                <td formGroupName = \"consolidated\">\r\n                                    <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"netProfit\"\r\n                                    id=\"netProfit\" mode=\"decimal\" [minFractionDigits]=\"2\"\r\n                                    [formControl]=\"getInnerFormControl(consolDataFormArray, 'consolidated', 'netProfit')\"\r\n                                    *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelConsolConsolidatedNetProfit\">\r\n                                   </p-inputNumber>\r\n                                   <ng-template #labelConsolConsolidatedNetProfit>\r\n                                        <div style=\"text-align:right\">\r\n                                            {{ getInnerFormControl(consolDataFormArray, 'consolidated', 'netProfit').value | number : '1.2-2'}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </td>\r\n                                <td [style]=\"{'border-right': '2px solid black', 'text-align':'right'}\">\r\n                                    {{ consolDataFormArray.get('consolidated').get('netProfit').value /solePropForm.get('divisor').value| number : '1.2-2'}}\r\n                                </td>\r\n                                <td *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.solePropForm?.get('divisor').value): maxMths; let i = index\" >\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 2\"  >\r\n                                <td>{{ cols[2] }}</td>\r\n                                <td>\r\n                                    <div style=\"text-align:right\" *ngIf=\"consolDataFormArray.get('annual').get('revenue').value!==0 && consolDataFormArray.get('annual').get('revenue').value!==undefined && consolDataFormArray.get('annual').get('revenue').value!==null\">\r\n                                        {{ roundVal(consolDataFormArray.get('annual').get('netProfit').value/consolDataFormArray.get('annual').get('revenue').value * 100) | number : '1.0-0' }}%\r\n                                    </div>\r\n                                </td>\r\n                                <td [style]=\"{'border-right': '2px solid black'}\"></td>\r\n                                <td><div style=\"text-align:right\" *ngIf=\"consolDataFormArray.get('consolidated').get('revenue').value!==0 && consolDataFormArray.get('consolidated').get('revenue').value!==undefined && consolDataFormArray.get('consolidated').get('revenue').value!==null\">\r\n                                    {{ roundVal(consolDataFormArray.get('consolidated').get('netProfit').value/ consolDataFormArray.get('consolidated').get('revenue').value * 100) | number : '1.0-0' }}%\r\n                                </div>\r\n                                <td [style]=\"{'border-right': '2px solid black', 'text-align':'right'}\"></td>\r\n                                <td *ngFor=\"let yrmth of getYrmthList()| slice: ( maxMths - this.solePropForm?.get('divisor').value): maxMths; let i = index\" >\r\n                                </td>\r\n                            </tr>\r\n                        </ng-template>\r\n                    </p-table>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n        <div class=\"grid\" style=\"margin-top:1em; margin-left: 200px\">\r\n            <div class = \"col-12 justify-content-start gap-4 flex align-items-center\" >\r\n                 <div>System Proposed Amount: {{ getSysProposedAmt() | number : '1.2-2'\r\n                }}\r\n                </div>\r\n                <div [ngStyle]=\"{'color': getNIPDiff()>5? 'red': null}\">NIP Difference: {{\r\n                    getNIPDiff()\r\n                }} %\r\n                ({{consolNIP}}% - {{annualNIP}}%)\r\n            </div>\r\n                <div [ngStyle]=\"{'color': getNetIncomeDiff()>1000? 'red': null}\" >Net Income Difference: {{ getNetIncomeDiff() | number : '1.2-2'}} ({{consolNIAvg | number : '1.2-2'}} - {{annualNIAvg | number : '1.2-2'}})</div>\r\n            </div>\r\n            <div class = \"col\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation()\" >\r\n                <p-button label=\"Copy to Item\" (click)=\"copyToItem($event)\" [disabled] = \"!enableCopytoItem()\"\r\n                ></p-button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</p-card>\r\n<br>\r\n<n2-annual-income class = \"flex col-6\"\r\n    [annualIncomeFormArray]=\"getFormArray(solePropForm,'annualIncomeList')\"\r\n    [seHardCopyDetails] = \"seHardCopyDetails\"\r\n    [isActive] = \"isActive() \"\r\n    [readOnly] = \"readOnly\"\r\n    [station]=\"station\">\r\n</n2-annual-income>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}