{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserResetpwdPopupComponent = exports.UserResetpwdDialogComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"./user.service\"));\nconst i2 = tslib_1.__importStar(require(\"@ng-bootstrap/ng-bootstrap\"));\nconst i3 = tslib_1.__importStar(require(\"app/core/util/event-manager.service\"));\nconst i4 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i5 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i6 = tslib_1.__importStar(require(\"@fortawesome/angular-fontawesome\"));\nconst i7 = tslib_1.__importStar(require(\"../../../shared/language/translate.directive\"));\nconst i8 = tslib_1.__importStar(require(\"../../../shared/alert/alert-error.component\"));\nconst i9 = tslib_1.__importStar(require(\"./user-resetpwd-popup.service\"));\nclass UserResetpwdDialogComponent {\n  constructor(userService, activeModal, eventManager, router) {\n    this.userService = userService;\n    this.activeModal = activeModal;\n    this.eventManager = eventManager;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.userId = this.router.url.substring(this.router.url.lastIndexOf('/') + 1);\n    this.previousUrl = 'admin/acm/ic-user/' + this.userId;\n  }\n  clear() {\n    this.activeModal.dismiss('cancel');\n    this.backToPrevious();\n  }\n  confirmResetPwd(loginName) {\n    this.userService.resetPassword(loginName).subscribe(() => {\n      this.eventManager.broadcast({\n        name: 'resourceListModification',\n        content: 'Reset a User Password'\n      });\n      this.activeModal.dismiss(true);\n      this.backToPrevious();\n    });\n  }\n  backToPrevious() {\n    setTimeout(() => {\n      this.router.navigate([this.previousUrl]);\n    }, 0);\n  }\n}\nexports.UserResetpwdDialogComponent = UserResetpwdDialogComponent;\nUserResetpwdDialogComponent.ɵfac = function UserResetpwdDialogComponent_Factory(t) {\n  return new (t || UserResetpwdDialogComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.NgbActiveModal), i0.ɵɵdirectiveInject(i3.EventManager), i0.ɵɵdirectiveInject(i4.Router));\n};\nUserResetpwdDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserResetpwdDialogComponent,\n  selectors: [[\"ic-user-resetpwd-dialog\"]],\n  decls: 40,\n  vars: 3,\n  consts: [[\"name\", \"resetForm\", 3, \"ngSubmit\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-hidden\", \"true\", 1, \"close\", 3, \"click\"], [1, \"modal-body\"], [1, \"modal-footer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-danger\", \"btn-sm\"], [3, \"icon\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"], [\"icTranslate\", \"entity.action.cancel\"]],\n  template: function UserResetpwdDialogComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function UserResetpwdDialogComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.confirmResetPwd(ctx.loginName);\n      });\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵelementStart(4, \"h4\", 2);\n      i0.ɵɵtext(5, \"Confirm reset password operation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(6, \"\\n    \");\n      i0.ɵɵelementStart(7, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function UserResetpwdDialogComponent_Template_button_click_7_listener() {\n        return ctx.clear();\n      });\n      i0.ɵɵtext(8, \"\\u00D7\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(9, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(10, \"\\n  \");\n      i0.ɵɵelementStart(11, \"div\", 4);\n      i0.ɵɵtext(12, \"\\n    \");\n      i0.ɵɵelement(13, \"ic-alert-error\");\n      i0.ɵɵtext(14, \"\\n    \");\n      i0.ɵɵelementStart(15, \"p\");\n      i0.ɵɵtext(16, \"\\n      Are you sure you want to reset the User \");\n      i0.ɵɵelementStart(17, \"strong\");\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \" password?\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(21, \"\\n  \");\n      i0.ɵɵelementStart(22, \"div\", 5);\n      i0.ɵɵtext(23, \"\\n    \");\n      i0.ɵɵelementStart(24, \"button\", 6);\n      i0.ɵɵelement(25, \"fa-icon\", 7);\n      i0.ɵɵtext(26, \"\\u00A0\");\n      i0.ɵɵelementStart(27, \"span\");\n      i0.ɵɵtext(28, \"Reset Password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(29, \"\\n    \");\n      i0.ɵɵelementStart(30, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function UserResetpwdDialogComponent_Template_button_click_30_listener() {\n        return ctx.clear();\n      });\n      i0.ɵɵtext(31, \"\\n      \");\n      i0.ɵɵelement(32, \"fa-icon\", 7);\n      i0.ɵɵtext(33, \"\\u00A0\");\n      i0.ɵɵelementStart(34, \"span\", 9);\n      i0.ɵɵtext(35, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(36, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(37, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(38, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(39, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(18);\n      i0.ɵɵtextInterpolate(ctx.loginName);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"icon\", \"clock\");\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"icon\", \"ban\");\n    }\n  },\n  dependencies: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i6.FaIconComponent, i7.TranslateDirective, i8.AlertErrorComponent],\n  encapsulation: 2\n});\nclass UserResetpwdPopupComponent {\n  constructor(route, userResetpwdPopupService) {\n    this.route = route;\n    this.userResetpwdPopupService = userResetpwdPopupService;\n  }\n  ngOnInit() {\n    this.routeSub = this.route.params.subscribe(params => {\n      this.userResetpwdPopupService.open(UserResetpwdDialogComponent, params['id']);\n    });\n  }\n  ngOnDestroy() {\n    this.routeSub.unsubscribe();\n  }\n}\nexports.UserResetpwdPopupComponent = UserResetpwdPopupComponent;\nUserResetpwdPopupComponent.ɵfac = function UserResetpwdPopupComponent_Factory(t) {\n  return new (t || UserResetpwdPopupComponent)(i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i9.UserResetpwdPopupService));\n};\nUserResetpwdPopupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserResetpwdPopupComponent,\n  selectors: [[\"ic-user-resetpwd-popup\"]],\n  decls: 0,\n  vars: 0,\n  template: function UserResetpwdPopupComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["UserResetpwdDialogComponent","constructor","userService","activeModal","eventManager","router","ngOnInit","userId","url","substring","lastIndexOf","previousUrl","clear","dismiss","backToPrevious","confirmResetPwd","loginName","resetPassword","subscribe","broadcast","name","content","setTimeout","navigate","exports","selectors","decls","vars","consts","template","i0","ctx","UserResetpwdPopupComponent","route","userResetpwdPopupService","routeSub","params","open","ngOnDestroy","unsubscribe","encapsulation"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\access-control\\user\\user-resetpwd-dialog.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\access-control\\user\\user-resetpwd-dialog.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { EventManager } from 'app/core/util/event-manager.service';\r\nimport { UserService } from './user.service';\r\nimport { UserResetpwdPopupService } from './user-resetpwd-popup.service';\r\n\r\n@Component({\r\n  selector: 'ic-user-resetpwd-dialog',\r\n  templateUrl: './user-resetpwd-dialog.component.html',\r\n})\r\nexport class UserResetpwdDialogComponent implements OnInit {\r\n  loginName?: string;\r\n  userId?: string;\r\n  previousUrl?: string;\r\n  constructor(\r\n    private userService: UserService,\r\n    public activeModal: NgbActiveModal,\r\n    private eventManager: EventManager,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userId = this.router.url.substring(this.router.url.lastIndexOf('/') + 1);\r\n    this.previousUrl = 'admin/acm/ic-user/' + this.userId;\r\n  }\r\n\r\n  clear(): void {\r\n    this.activeModal.dismiss('cancel');\r\n    this.backToPrevious();\r\n  }\r\n\r\n  confirmResetPwd(loginName: any): void {\r\n    this.userService.resetPassword(loginName).subscribe(() => {\r\n      this.eventManager.broadcast({\r\n        name: 'resourceListModification',\r\n        content: 'Reset a User Password',\r\n      });\r\n      this.activeModal.dismiss(true);\r\n      this.backToPrevious();\r\n    });\r\n  }\r\n\r\n  private backToPrevious(): void {\r\n    setTimeout(() => {\r\n      this.router.navigate([this.previousUrl]);\r\n    }, 0);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'ic-user-resetpwd-popup',\r\n  template: '',\r\n})\r\nexport class UserResetpwdPopupComponent implements OnInit, OnDestroy {\r\n  routeSub: any;\r\n\r\n  constructor(private route: ActivatedRoute, private userResetpwdPopupService: UserResetpwdPopupService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.routeSub = this.route.params.subscribe(params => {\r\n      this.userResetpwdPopupService.open(UserResetpwdDialogComponent as Component, params['id']);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.routeSub.unsubscribe();\r\n  }\r\n}\r\n","<form name=\"resetForm\" (ngSubmit)=\"confirmResetPwd(loginName)\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Confirm reset password operation</h4>\r\n    <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"clear()\">&times;</button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <ic-alert-error></ic-alert-error>\r\n    <p>\r\n      Are you sure you want to reset the User <strong>{{ loginName }}</strong> password?\r\n    </p>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"submit\" class=\"btn btn-danger btn-sm\"><fa-icon [icon]=\"'clock'\"></fa-icon>&nbsp;<span>Reset Password</span></button>\r\n    <button type=\"button\" class=\"btn btn-secondary btn-sm\" data-bs-dismiss=\"modal\" (click)=\"clear()\">\r\n      <fa-icon [icon]=\"'ban'\"></fa-icon>&nbsp;<span icTranslate=\"entity.action.cancel\">Cancel</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}