{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserTokenPopupService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst user_token_model_1 = require(\"app/admin/access-control/login-control/user-token.model\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@ng-bootstrap/ng-bootstrap\"));\nconst i2 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i3 = tslib_1.__importStar(require(\"app/admin/access-control/login-control/user-token.service\"));\nclass UserTokenPopupService {\n  constructor(modalService, router, userTokenService) {\n    this.modalService = modalService;\n    this.router = router;\n    this.userTokenService = userTokenService;\n    this.ngbModalRef = null;\n  }\n  open(component, id) {\n    return new Promise(resolve => {\n      if (this.ngbModalRef) {\n        resolve(this.ngbModalRef);\n      }\n      // const isOpen = this.ngbModalRef !== null;\n      // if (isOpen) {\n      //     resolve(this.ngbModalRef);\n      // }\n      if (id) {\n        this.userTokenService.find(id).subscribe(userToken => {\n          this.ngbModalRef = this.userTokenModalRef(component, userToken);\n          resolve(this.ngbModalRef);\n        });\n      } else {\n        // setTimeout used as a workaround for getting ExpressionChangedAfterItHasBeenCheckedError\n        setTimeout(() => {\n          this.ngbModalRef = this.userTokenModalRef(component, new user_token_model_1.UserToken());\n          resolve(this.ngbModalRef);\n        }, 0);\n      }\n    });\n  }\n  userTokenModalRef(component, userToken) {\n    const modalRef = this.modalService.open(component, {\n      size: 'lg',\n      backdrop: 'static'\n    });\n    modalRef.componentInstance.userToken = userToken;\n    modalRef.result.then(() => {\n      this.router.navigate([{\n        outlets: {\n          popup: null\n        }\n      }], {\n        replaceUrl: true\n      });\n      this.ngbModalRef = null;\n    }, () => {\n      this.router.navigate([{\n        outlets: {\n          popup: null\n        }\n      }], {\n        replaceUrl: true\n      });\n      this.ngbModalRef = null;\n    });\n    return modalRef;\n  }\n}\nexports.UserTokenPopupService = UserTokenPopupService;\nUserTokenPopupService.ɵfac = function UserTokenPopupService_Factory(t) {\n  return new (t || UserTokenPopupService)(i0.ɵɵinject(i1.NgbModal), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.UserTokenService));\n};\nUserTokenPopupService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserTokenPopupService,\n  factory: UserTokenPopupService.ɵfac\n});","map":{"version":3,"mappings":";;;;;;;AAGA;;;;;AAGA,MACaA,qBAAqB;EAGhCC,YAAoBC,YAAsB,EAAUC,MAAc,EAAUC,gBAAkC;IAA1F,iBAAY,GAAZF,YAAY;IAAoB,WAAM,GAANC,MAAM;IAAkB,qBAAgB,GAAhBC,gBAAgB;IAC1F,IAAI,CAACC,WAAW,GAAG,IAAI;EACzB;EAEAC,IAAI,CAACC,SAAoB,EAAEC,EAAiB;IAC1C,OAAO,IAAIC,OAAO,CAAcC,OAAO,IAAG;MACxC,IAAI,IAAI,CAACL,WAAW,EAAE;QACpBK,OAAO,CAAC,IAAI,CAACL,WAAW,CAAC;;MAE3B;MACA;MACA;MACA;MACA,IAAIG,EAAE,EAAE;QACN,IAAI,CAACJ,gBAAgB,CAACO,IAAI,CAACH,EAAE,CAAC,CAACI,SAAS,CAACC,SAAS,IAAG;UACnD,IAAI,CAACR,WAAW,GAAG,IAAI,CAACS,iBAAiB,CAACP,SAAS,EAAEM,SAAS,CAAC;UAC/DH,OAAO,CAAC,IAAI,CAACL,WAAW,CAAC;QAC3B,CAAC,CAAC;OACH,MAAM;QACL;QACAU,UAAU,CAAC,MAAK;UACd,IAAI,CAACV,WAAW,GAAG,IAAI,CAACS,iBAAiB,CAACP,SAAS,EAAE,IAAIS,4BAAS,EAAE,CAAC;UACrEN,OAAO,CAAC,IAAI,CAACL,WAAW,CAAC;QAC3B,CAAC,EAAE,CAAC,CAAC;;IAET,CAAC,CAAC;EACJ;EAEAS,iBAAiB,CAACP,SAAoB,EAAEM,SAAoB;IAC1D,MAAMI,QAAQ,GAAG,IAAI,CAACf,YAAY,CAACI,IAAI,CAACC,SAAS,EAAE;MAAEW,IAAI,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAQ,CAAE,CAAC;IACtFF,QAAQ,CAACG,iBAAiB,CAACP,SAAS,GAAGA,SAAS;IAChDI,QAAQ,CAACI,MAAM,CAACC,IAAI,CAClB,MAAK;MACH,IAAI,CAACnB,MAAM,CAACoB,QAAQ,CAAC,CAAC;QAAEC,OAAO,EAAE;UAAEC,KAAK,EAAE;QAAI;MAAE,CAAE,CAAC,EAAE;QAAEC,UAAU,EAAE;MAAI,CAAE,CAAC;MAC1E,IAAI,CAACrB,WAAW,GAAG,IAAI;IACzB,CAAC,EACD,MAAK;MACH,IAAI,CAACF,MAAM,CAACoB,QAAQ,CAAC,CAAC;QAAEC,OAAO,EAAE;UAAEC,KAAK,EAAE;QAAI;MAAE,CAAE,CAAC,EAAE;QAAEC,UAAU,EAAE;MAAI,CAAE,CAAC;MAC1E,IAAI,CAACrB,WAAW,GAAG,IAAI;IACzB,CAAC,CACF;IACD,OAAOY,QAAQ;EACjB;;AA9CFU;;mBACa3B,qBAAqB;AAAA;;SAArBA,qBAAqB;EAAA4B,SAArB5B,qBAAqB;AAAA","names":["UserTokenPopupService","constructor","modalService","router","userTokenService","ngbModalRef","open","component","id","Promise","resolve","find","subscribe","userToken","userTokenModalRef","setTimeout","user_token_model_1","modalRef","size","backdrop","componentInstance","result","then","navigate","outlets","popup","replaceUrl","exports","factory"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\access-control\\login-control\\user-token-popup.service.ts"],"sourcesContent":["import { Injectable, Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UserToken } from 'app/admin/access-control/login-control/user-token.model';\r\nimport { UserTokenService } from 'app/admin/access-control/login-control/user-token.service';\r\n\r\n@Injectable()\r\nexport class UserTokenPopupService {\r\n  private ngbModalRef: NgbModalRef | null;\r\n\r\n  constructor(private modalService: NgbModal, private router: Router, private userTokenService: UserTokenService) {\r\n    this.ngbModalRef = null;\r\n  }\r\n\r\n  open(component: Component, id?: number | any): Promise<NgbModalRef> {\r\n    return new Promise<NgbModalRef>(resolve => {\r\n      if (this.ngbModalRef) {\r\n        resolve(this.ngbModalRef);\r\n      }\r\n      // const isOpen = this.ngbModalRef !== null;\r\n      // if (isOpen) {\r\n      //     resolve(this.ngbModalRef);\r\n      // }\r\n      if (id) {\r\n        this.userTokenService.find(id).subscribe(userToken => {\r\n          this.ngbModalRef = this.userTokenModalRef(component, userToken);\r\n          resolve(this.ngbModalRef);\r\n        });\r\n      } else {\r\n        // setTimeout used as a workaround for getting ExpressionChangedAfterItHasBeenCheckedError\r\n        setTimeout(() => {\r\n          this.ngbModalRef = this.userTokenModalRef(component, new UserToken());\r\n          resolve(this.ngbModalRef);\r\n        }, 0);\r\n      }\r\n    });\r\n  }\r\n\r\n  userTokenModalRef(component: Component, userToken: UserToken): NgbModalRef {\r\n    const modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });\r\n    modalRef.componentInstance.userToken = userToken;\r\n    modalRef.result.then(\r\n      () => {\r\n        this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });\r\n        this.ngbModalRef = null;\r\n      },\r\n      () => {\r\n        this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });\r\n        this.ngbModalRef = null;\r\n      }\r\n    );\r\n    return modalRef;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}