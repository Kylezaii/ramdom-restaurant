{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmpClaimVerificationComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst http_1 = require(\"@angular/common/http\");\nconst forms_1 = require(\"@angular/forms\");\nconst EmpClaimRequest_model_1 = require(\"../model/EmpClaimRequest.model\");\nconst rxjs_1 = require(\"rxjs\");\nconst moment_1 = tslib_1.__importDefault(require(\"moment\"));\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/claim/ec-claim/service/ec-claim.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/claim/ec-claim/service/ec-claim-data.service\"));\nconst i5 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i6 = tslib_1.__importStar(require(\"app/claim/service/claim.service\"));\nconst i7 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i8 = tslib_1.__importStar(require(\"primeng/dynamicdialog\"));\nconst i9 = tslib_1.__importStar(require(\"app/ng-connect\"));\nconst i10 = tslib_1.__importStar(require(\"app/shared/confirm/nsp-confirm.service\"));\nconst i11 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/dialog\"));\nconst i15 = tslib_1.__importStar(require(\"primeng/inputtextarea\"));\nconst i16 = tslib_1.__importStar(require(\"primeng/confirmpopup\"));\nconst i17 = tslib_1.__importStar(require(\"primeng/messages\"));\nconst i18 = tslib_1.__importStar(require(\"primeng/toolbar\"));\nconst i19 = tslib_1.__importStar(require(\"primeng/accordion\"));\nconst i20 = tslib_1.__importStar(require(\"primeng/splitbutton\"));\nconst i21 = tslib_1.__importStar(require(\"./claim-section/claim-section.component\"));\nconst i22 = tslib_1.__importStar(require(\"./company-section/company-section.component\"));\nconst i23 = tslib_1.__importStar(require(\"./actual-training-detail-section/actual-training-detail-section.component\"));\nconst i24 = tslib_1.__importStar(require(\"./item-change-history-section/item-change-history-section.component\"));\nconst _c0 = [\"claimSection\"];\nconst _c1 = [\"companySection\"];\nconst _c2 = [\"actualTrgDetailSection\"];\nconst _c3 = function () {\n  return {\n    \"text-align\": \"center\",\n    \"margin-top\": \"0em\"\n  };\n};\nfunction EmpClaimVerificationComponent_div_76_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵelementStart(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.dueDate);\n  }\n}\nconst _c4 = function () {\n  return {\n    \"color\": \"red\",\n    \"text-align\": \"center\",\n    \"margin-top\": \"0em\"\n  };\n};\nfunction EmpClaimVerificationComponent_ng_template_78_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                    \");\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵtext(2, \"\\n                        \");\n    i0.ɵɵelementStart(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                \");\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.dueDate);\n  }\n}\nfunction EmpClaimVerificationComponent_div_93_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"a\", 7);\n    i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_div_93_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.popUpEClaim());\n    });\n    i0.ɵɵtext(2, \"eClaim\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c5 = function () {\n  return {\n    \"margin-bottom\": \".5em\"\n  };\n};\nfunction EmpClaimVerificationComponent_button_128_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_button_128_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.confirmNoActionReq($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(2, _c5));\n  }\n}\nfunction EmpClaimVerificationComponent_button_133_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_button_133_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.nextButtonOptions[0].command());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c5));\n    i0.ɵɵproperty(\"label\", ctx_r5.nextButtonOptions[0].label);\n  }\n}\nfunction EmpClaimVerificationComponent_ng_template_135_p_splitButton_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-splitButton\", 38);\n    i0.ɵɵlistener(\"onClick\", function EmpClaimVerificationComponent_ng_template_135_p_splitButton_1_Template_p_splitButton_onClick_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r25.nextButtonOptions[0].command());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"label\", ctx_r24.nextButtonOptions[0].label)(\"model\", ctx_r24.filteredNextButtonOptions());\n  }\n}\nfunction EmpClaimVerificationComponent_ng_template_135_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵtemplate(1, EmpClaimVerificationComponent_ng_template_135_p_splitButton_1_Template, 1, 2, \"p-splitButton\", 37);\n    i0.ɵɵtext(2, \" \\n            \");\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.nextButtonOptions.length > 1);\n  }\n}\nfunction EmpClaimVerificationComponent_p_splitButton_140_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-splitButton\", 39);\n    i0.ɵɵlistener(\"onClick\", function EmpClaimVerificationComponent_p_splitButton_140_Template_p_splitButton_onClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.prepareDataForUpdate($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r8.disableSave())(\"model\", ctx_r8.saveSubmitButtonOptions);\n  }\n}\nfunction EmpClaimVerificationComponent_p_messages_145_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"div\", 42);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n    \");\n  }\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r29.claimSection.claimJson.nspay2App.claim.warning[\"CLM-W003\"]);\n  }\n}\nfunction EmpClaimVerificationComponent_p_messages_145_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-messages\", 40);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵtemplate(2, EmpClaimVerificationComponent_p_messages_145_ng_template_2_Template, 4, 1, \"ng-template\", 41);\n    i0.ɵɵtext(3, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmpClaimVerificationComponent_p_messages_147_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"div\", 42);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n    \");\n  }\n  if (rf & 2) {\n    const ctx_r30 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r30.claimSection.claimJson.nspay2App.claim.warning[\"CLM-W004\"]);\n  }\n}\nfunction EmpClaimVerificationComponent_p_messages_147_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-messages\", 40);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵtemplate(2, EmpClaimVerificationComponent_p_messages_147_ng_template_2_Template, 4, 1, \"ng-template\", 43);\n    i0.ɵɵtext(3, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmpClaimVerificationComponent_p_messages_149_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"div\", 42);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n    \");\n  }\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r31.claimSection.claimJson.nspay2App.claim.warning[\"CLM-W006\"]);\n  }\n}\nfunction EmpClaimVerificationComponent_p_messages_149_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-messages\", 40);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵtemplate(2, EmpClaimVerificationComponent_p_messages_149_ng_template_2_Template, 4, 1, \"ng-template\", 43);\n    i0.ɵɵtext(3, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmpClaimVerificationComponent_n2_claim_section_153_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"n2-claim-section\", 44, 45);\n    i0.ɵɵlistener(\"syncWithActualTrgDetail\", function EmpClaimVerificationComponent_n2_claim_section_153_Template_n2_claim_section_syncWithActualTrgDetail_0_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.getActualTrgItem($event));\n    })(\"disableInputChange\", function EmpClaimVerificationComponent_n2_claim_section_153_Template_n2_claim_section_disableInputChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r35 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r35.disableClaimInput = $event);\n    })(\"click\", function EmpClaimVerificationComponent_n2_claim_section_153_Template_n2_claim_section_click_0_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.checkAllExpanded());\n    })(\"selectedChange\", function EmpClaimVerificationComponent_n2_claim_section_153_Template_n2_claim_section_selectedChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.accordionStates[0] = $event);\n    });\n    i0.ɵɵtext(2, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"empClaim\", ctx_r12.empClaim)(\"subject\", ctx_r12.subject)(\"claimItemDetail\", ctx_r12.claimItemDetail)(\"existingClaimItemMap\", ctx_r12.existingClaimItemMap)(\"fullItemStatusMap\", ctx_r12.fullItemStatusMap)(\"disableInput\", ctx_r12.disableClaimInput)(\"selected\", ctx_r12.accordionStates[0]);\n  }\n}\nfunction EmpClaimVerificationComponent_n2_company_section_155_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"n2-company-section\", 46, 47);\n    i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_n2_company_section_155_Template_n2_company_section_click_0_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.checkAllExpanded());\n    })(\"selectedChange\", function EmpClaimVerificationComponent_n2_company_section_155_Template_n2_company_section_selectedChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.accordionStates[1] = $event);\n    });\n    i0.ɵɵtext(2, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"empClaimRequest\", ctx_r13.empClaim)(\"disableInput\", ctx_r13.disableClaimInput)(\"selected\", ctx_r13.accordionStates[1]);\n  }\n}\nfunction EmpClaimVerificationComponent_n2_actual_training_detail_section_157_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"n2-actual-training-detail-section\", 48, 49);\n    i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_n2_actual_training_detail_section_157_Template_n2_actual_training_detail_section_click_0_listener() {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.checkAllExpanded());\n    })(\"selectedChange\", function EmpClaimVerificationComponent_n2_actual_training_detail_section_157_Template_n2_actual_training_detail_section_selectedChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.accordionStates[2] = $event);\n    });\n    i0.ɵɵtext(2, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"actualTrgDetail\", ctx_r14.actualTrgDetail)(\"empClaim\", ctx_r14.empClaim)(\"actualTrgItem\", ctx_r14.actualTrgItem)(\"selected\", ctx_r14.accordionStates[2])(\"disableInput\", ctx_r14.disableClaimInput);\n  }\n}\nfunction EmpClaimVerificationComponent_n2_item_change_history_section_159_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"n2-item-change-history-section\", 50, 51);\n    i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_n2_item_change_history_section_159_Template_n2_item_change_history_section_click_0_listener() {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r47 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r47.checkAllExpanded());\n    })(\"selectedChange\", function EmpClaimVerificationComponent_n2_item_change_history_section_159_Template_n2_item_change_history_section_selectedChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.accordionStates[3] = $event);\n    });\n    i0.ɵɵtext(2, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"itemChangeHistory\", ctx_r15.itemChangeHistory)(\"selected\", ctx_r15.accordionStates[3]);\n  }\n}\nfunction EmpClaimVerificationComponent_ng_template_169_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r51 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"button\", 52);\n    i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_ng_template_169_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r50.showRemarksDialogMap.set(\"closeRej\", false));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\n        \");\n    i0.ɵɵelement(3, \"p-confirmPopup\", 53);\n    i0.ɵɵtext(4, \"\\n        \");\n    i0.ɵɵelementStart(5, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_ng_template_169_Template_button_click_5_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r52 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r52.confirmSaveRemarks($event, \"closeRej\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n        \");\n    i0.ɵɵelementStart(7, \"button\", 55);\n    i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_ng_template_169_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r53 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r53.consoleLog());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n    \");\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", (tmp_0_0 = ctx_r16.remarksForm.get(\"closedRejectedRemarks\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nfunction EmpClaimVerificationComponent_ng_template_179_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r55 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"button\", 52);\n    i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_ng_template_179_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r54 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r54.showRemarksDialogMap.set(\"recomp\", false));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\n        \");\n    i0.ɵɵelement(3, \"p-confirmPopup\", 56);\n    i0.ɵɵtext(4, \"\\n        \");\n    i0.ɵɵelementStart(5, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_ng_template_179_Template_button_click_5_listener($event) {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r56 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r56.confirmSaveRemarks($event, \"recomp\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n        \");\n    i0.ɵɵelementStart(7, \"button\", 55);\n    i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_ng_template_179_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r57 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r57.consoleLog());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n    \");\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", (tmp_0_0 = ctx_r17.remarksForm.get(\"recompRemarks\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nconst _c6 = function () {\n  return {\n    \"margin\": \"0 auto\",\n    \"padding\": \"0\"\n  };\n};\nconst _c7 = function () {\n  return {\n    \"display\": \"flex\",\n    \"align-items\": \"center\"\n  };\n};\nconst _c8 = function () {\n  return {\n    width: \"50vw\"\n  };\n};\n// import { ClaimSectionComponent } from './claim-section/claim-section.component';\nclass EmpClaimVerificationComponent {\n  constructor(formBuilder, dateUtilsService, ecClaimService, eCClaimDataService, toastService, claimService, route, dialogService, codeService, router, nspConfirmationService) {\n    this.formBuilder = formBuilder;\n    this.dateUtilsService = dateUtilsService;\n    this.ecClaimService = ecClaimService;\n    this.eCClaimDataService = eCClaimDataService;\n    this.toastService = toastService;\n    this.claimService = claimService;\n    this.route = route;\n    this.dialogService = dialogService;\n    this.codeService = codeService;\n    this.router = router;\n    this.nspConfirmationService = nspConfirmationService;\n    this.disableInputItemStatusList = ['PAP', 'PRE', 'PRA', 'PIN'];\n    this.existingClaimItemMap = new Map(); // shared between claimSection and actual training section\n    this.caseId = \"\";\n    this.routeParams = {};\n    this.nsManNric = \"\";\n    this.nsManRank = \"\";\n    this.nsManName = \"\";\n    this.nsManPhoneNum = \"\";\n    this.nsManGender = \"\";\n    this.fullItemStatusMap = {};\n    this.dueDate = \"\";\n    this.disableClaimInput = false; // if claim status is not processing OR any item status in (PAP, PRE, PRA, PIN)\n    // switch buttons\n    this.nextButtonOptions = [];\n    this.saveSubmitButtonOptions = [];\n    this.showRemarksDialogMap = new Map();\n    this.isAppealCase = false;\n    this.nextClaimDto = {};\n    this.saveClaimDto = {};\n    this.nsInfo3 = \"\";\n    this.nsInfo4 = \"\";\n    this.claimOptionShort = \"\";\n    this.accordionStates = Array(4).fill(true);\n    this.allExpanded = true;\n    // remarks FormGroup\n    this.remarksForm = this.formBuilder.group({\n      closedRejectedRemarks: ['', [forms_1.Validators.required]],\n      recompRemarks: ['', [forms_1.Validators.required]]\n    });\n  }\n  ngOnInit() {\n    console.log('this.route', this.route);\n    this.route.queryParams.subscribe(params => {\n      console.log('route queryParams', params);\n      this.routeParams = params;\n      this.getEmpHardcopyClaimDetails();\n      this.initialiseSaveSubmitButton();\n      this.retrieveItemStatusMap();\n      this.initialiseNextButton();\n    });\n    this.showRemarksDialogMap.set(\"closeRej\", false);\n    this.showRemarksDialogMap.set(\"recomp\", false);\n  }\n  getActualTrgItem(data) {\n    this.actualTrgItem = data;\n    console.log('getActualTrgItem from CLAIM-SECTION', this.actualTrgItem);\n  }\n  getEmpHardcopyClaimDetails() {\n    let empClaimRequestParams = new http_1.HttpParams();\n    empClaimRequestParams = empClaimRequestParams.append(\"caseId\", this.routeParams?.caseId);\n    empClaimRequestParams = empClaimRequestParams.append(\"role\", 'role-cv');\n    const empClaimRequestByCaseId = this.ecClaimService.getEmpClaimRequestByCaseId(empClaimRequestParams);\n    const getItemDetailsByCaseId = this.ecClaimService.getItemDetailsByCaseId(this.routeParams?.caseId);\n    const getItemChangeHistoryByCaseId = this.ecClaimService.getItemChangeHistoryByCaseId(this.routeParams?.caseId);\n    const getUserLoginDetails = this.claimService.getUserLoginDetails();\n    let params = new http_1.HttpParams();\n    params = params.append(\"claimId\", this.routeParams?.claimId);\n    const getActualTrgDetailsByClaimId = this.claimService.retrieveActualTrainingDetails({\n      params\n    });\n    (0, rxjs_1.zip)(empClaimRequestByCaseId, getItemDetailsByCaseId, getActualTrgDetailsByClaimId, getItemChangeHistoryByCaseId, getUserLoginDetails).subscribe(([empClaimRes, itemDetailsRes, actualTrgDetailsRes, itemChangeHistoryRes, subjectRes]) => {\n      if (empClaimRes.body.data) {\n        this.empClaim = empClaimRes.body.data;\n        this.empClaim.saveEmpClaimRequestDto = new EmpClaimRequest_model_1.SaveEmpClaimRequest();\n        this.empClaim.claimInboxId = this.routeParams.claimInboxId;\n        if (this.empClaim?.claimDto?.processDueDate) {\n          const processDueDate = (0, moment_1.default)(this.empClaim?.claimDto?.processDueDate);\n          if ((0, moment_1.default)().isSame(processDueDate, 'day')) {\n            this.dueDate = 'Today';\n          } else if ((0, moment_1.default)().isAfter(processDueDate, 'day')) {\n            this.dueDate = 'Overdue';\n          } else {\n            const dateStr = processDueDate.format('DD');\n            const monthStr = processDueDate.format('MMM');\n            const dayStr = processDueDate.format('ddd');\n            this.dueDate = dateStr + ' ' + monthStr.toUpperCase() + ' (' + dayStr + ')';\n          }\n        }\n        if (this.empClaim.claimDto.latestStatus !== 'PRO') {\n          this.disableClaimInput = true;\n        }\n      }\n      if (itemDetailsRes.body.data) {\n        this.claimItemDetail = itemDetailsRes.body.data;\n        this.originalClaimItemDetail = itemDetailsRes.body.data.map(obj => ({\n          ...obj\n        })); // deep clone array (tracking of status changes)\n        this.claimItemDetail.forEach(item => {\n          this.existingClaimItemMap.set(item.claimItemId, null);\n          if (this.disableInputItemStatusList.includes(item.latestStatus)) {\n            this.disableClaimInput = true;\n          }\n        });\n      }\n      if (actualTrgDetailsRes.body.data) {\n        this.actualTrgDetail = actualTrgDetailsRes.body.data;\n      }\n      if (itemChangeHistoryRes.body.data) {\n        this.itemChangeHistory = itemChangeHistoryRes.body.data;\n      }\n      if (subjectRes.body.data) {\n        this.subject = subjectRes.body.data;\n      }\n      this.ecClaimService.getCabBlockByNric(this.empClaim?.claimDto.nric).subscribe(cabBlockRes => {\n        if (cabBlockRes.body.data) {\n          this.nsmanCab = 'Y';\n        } else {\n          this.nsmanCab = 'N';\n        }\n      });\n    });\n  }\n  cpfPopUp() {\n    const params2 = {\n      nric: this.empClaim.claimDto.nric,\n      name: this.empClaim.nsManName,\n      caseId: this.empClaim.claimDto.caseId,\n      claimId: this.empClaim.claimDto.id,\n      csn: this.empClaim?.empClaimDto.csn,\n      coyName: this.empClaim.coyName,\n      claimStartDate: this.empClaim.claimDto.trgStartDate\n    };\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/ec-claim/view-cpf'], {\n      queryParams: params2\n    }));\n    console.log(url);\n    window.open(url, \"viewCPF\", 'location=0,menubar=0,status=0,height=1000, width=1000');\n  }\n  // loadCodes(codeType: string, codeId: string): void {\n  //   this.codeService.get(codeType, codeId)\n  //   .subscribe((code: CodeView) => {\n  //     this.claimOptionShort = code.label['en-US'] as string;\n  //   });\n  // }\n  popUpLatestOwners() {\n    const params2 = {\n      nric: this.empClaim.claimDto.nric,\n      name: this.empClaim.nsManName,\n      caseId: this.empClaim.claimDto.caseId,\n      claimId: this.empClaim.claimDto.id\n    };\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/ec-claim/view-latest-owner'], {\n      queryParams: params2\n    }));\n    console.log(url);\n    window.open(url, \"viewLatestOwner\", 'location=0,menubar=0,status=0,height=1000, width=1500');\n  }\n  popUpEClaim() {\n    // localStorage.setItem('empClaim', JSON.stringify(this.empClaim));\n    // localStorage.setItem('claimItemDetail', JSON.stringify(this.claimItemDetail));\n    const params2 = {\n      eClaimId: this.empClaim.empClaimDto.eClaimId,\n      role: 'role-cv'\n    };\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/ec-claim/view-eclaim'], {\n      queryParams: params2\n    }));\n    console.log(url);\n    window.open(url, \"viewEClaim\", 'location=0,menubar=0,status=0,height=1000, width=1500');\n  }\n  popUpPastClaim() {\n    const params2 = {\n      nric: this.empClaim.claimDto.nric,\n      name: this.empClaim.nsManName,\n      caseId: this.empClaim.claimDto.caseId,\n      claimId: this.empClaim.claimDto.id,\n      //dk if the coyname to take is correct\n      csn: this.empClaim.csn1 + this.empClaim.csn2 + this.empClaim.csn3,\n      //dk if the coyname to take is correct\n      coyName: this.empClaim.coyName\n    };\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/ec-claim/view-past-claim'], {\n      queryParams: params2\n    }));\n    console.log(url);\n    window.open(url, \"viewPastClaim\", 'location=0,menubar=0,status=0,height=1000, width=1500');\n  }\n  popUpCpfDeviation() {\n    const params2 = {\n      nric: this.empClaim.claimDto.nric,\n      name: this.empClaim.nsManName,\n      caseId: this.empClaim.claimDto.caseId,\n      claimId: this.empClaim.claimDto.id\n    };\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/ec-claim/view-cpf-deviation'], {\n      queryParams: params2\n    }));\n    console.log(url);\n    window.open(url, \"viewCpfDeviation\", 'location=0,menubar=0,status=0,height=1000, width=1500');\n  }\n  popUpRemarks() {\n    const params2 = {\n      nric: this.empClaim.claimDto.nric,\n      name: this.empClaim.nsManName,\n      caseId: this.empClaim.claimDto.caseId\n    };\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/ec-claim/view-remarks'], {\n      queryParams: params2\n    }));\n    console.log(url);\n    window.open(url, \"viewRemarks\", 'location=0,menubar=0,status=0,height=1000, width=1500');\n  }\n  confirmNoActionReq(event) {\n    this.nspConfirmationService.onConfirmPopup(event, 'noActionRequired', null, () => {\n      console.log(\"no action required\");\n      let params = new http_1.HttpParams();\n      params = params.append('claimId', this.empClaim?.claimDto?.id);\n      params = params.append('claimType', 'E');\n      this.claimService.noActionReq({}, {\n        params\n      }).subscribe({\n        next: resp => {\n          if (resp && resp.ok) {\n            if (resp.body.data) {\n              this.toastService.success(resp.body.data);\n              this.routeToInbox();\n            }\n          }\n        },\n        error: error => {\n          console.log(\"error is\" + String(error?.error?.error_desc));\n          this.toastService.error(String(error?.error?.error_desc));\n        }\n      });\n    });\n  }\n  filteredNextButtonOptions() {\n    if (this.nextButtonOptions.length > 0) {\n      return this.nextButtonOptions.filter((x, index) => index !== 0);\n    } else {\n      return null;\n    }\n    ;\n  }\n  initialiseNextButton() {\n    console.log(\"initializing next button\");\n    let params = new http_1.HttpParams();\n    if (this.routeParams?.claimInboxId) {\n      params = params.append('claimInboxId', this.routeParams.claimInboxId);\n      this.nextButtonOptions = [];\n      this.claimService.nextClaim({\n        params\n      }).subscribe(resp => {\n        if (resp && resp.ok) {\n          if (resp.body.data) {\n            this.nextClaimDto = resp.body.data;\n            if (this.nextClaimDto?.nextRecomp) {\n              console.log(\"the next recomp claiminbox id\", this.nextClaimDto.nextRecomp?.claimInboxId);\n              this.nextButtonOptions.push({\n                label: 'Next Recomp',\n                id: \"1\",\n                command: () => {\n                  this.navigateVerificationPage(this.nextClaimDto.nextRecomp);\n                }\n              });\n            }\n            if (this.nextClaimDto?.nextNric) {\n              console.log(\"the next nric claiminbox id\", this.nextClaimDto.nextNric?.claimInboxId);\n              this.nextButtonOptions.push({\n                label: 'Next Nric',\n                id: \"2\",\n                command: () => {\n                  this.navigateVerificationPage(this.nextClaimDto.nextNric);\n                }\n              });\n            }\n            if (this.nextClaimDto?.nextDueDt) {\n              console.log(\"the next due date claiminbox id\", this.nextClaimDto.nextDueDt?.claimInboxId);\n              this.nextButtonOptions.push({\n                label: 'Next Due',\n                id: \"3\",\n                command: () => {\n                  this.navigateVerificationPage(this.nextClaimDto.nextDueDt);\n                }\n              });\n            }\n            if (this.nextClaimDto?.nextOption) {\n              console.log(\"the next option claiminbox id\", this.nextClaimDto.nextOption?.claimInboxId);\n              this.nextButtonOptions.push({\n                label: 'Next Option',\n                id: \"4\",\n                command: () => {\n                  this.navigateVerificationPage(this.nextClaimDto.nextOption);\n                }\n              });\n            }\n          }\n        }\n      });\n      this.nextButtonOptions.sort((a, b) => a.id.localeCompare(b.id));\n    }\n  }\n  navigateVerificationPage(dto) {\n    if (dto) {\n      console.log('nagivate next page', dto);\n      this.router.navigate(['/claim/ec-claim/claim-verification-ec'], {\n        queryParams: {\n          claimId: dto.claimId,\n          caseId: dto.caseId,\n          claimInboxId: dto.claimInboxId\n        }\n      }).then(() => {\n        window.location.reload();\n      });\n    }\n  }\n  initialiseSaveSubmitButton() {\n    this.saveSubmitButtonOptions = [{\n      label: 'Submit For Appeal',\n      disabled: !this.isAppealCase,\n      command: event => {\n        // this.validateItemStatusChanges(event);\n        this.prepareDataForUpdate(event);\n      }\n    }];\n  }\n  updateClaimFromChild() {\n    if (this.empClaim.coyType === 'N' && this.companySection.editedAddress === true) {\n      this.empClaim.saveEmpClaimRequestDto.saveCompanyAddressInd = 'Y';\n    }\n    if (this.empClaim.coyType === 'N' && this.companySection.editedCertOfficer()) {\n      this.empClaim.saveEmpClaimRequestDto.saveCompanyOfficerInd = 'Y';\n    }\n    this.claimSection.saveClaimSection();\n    this.companySection.saveCompanySection();\n    this.claimSection.saveClaimItemSection();\n    this.empClaim.itemDetailList = this.claimItemDetail;\n    if (this.empClaim.saveEmpClaimRequestDto.saveActualTrainingSectionInd) {\n      this.actualTrgDetailSection.saveActTrgDetailsSectionChanges();\n    }\n  }\n  disableSave() {\n    let isInvalid = false;\n    let invalidForm = null;\n    if (this.claimSection?.claimForm && this.claimSection?.claimForm.invalid) {\n      invalidForm = 'claimForm';\n      isInvalid = true;\n    }\n    // if (this.claimSection && this.claimSection.checkClaimItemsInvalid()) {\n    //   invalidForm = 'claimItemForm';\n    //   isInvalid = true;\n    // }\n    if (this.companySection?.companyForm && this.companySection?.companyForm.invalid) {\n      invalidForm = 'companyForm';\n      isInvalid = true;\n    }\n    if (this.actualTrgDetailSection?.actualTrainingForm && this.actualTrgDetailSection?.actualTrainingDetailArr.invalid) {\n      invalidForm = 'actualTrainingForm';\n      isInvalid = true;\n    }\n    return isInvalid;\n  }\n  prepareDataForUpdate(event) {\n    this.updateClaimFromChild();\n    const recompStatus = [\"PRA\"];\n    const closedTypeStatus = [\"COR\", \"CNS\", \"CCO\"];\n    for (const itemDetail of this.empClaim.itemDetailList) {\n      if (recompStatus.includes(String(itemDetail.latestStatus))) {\n        const originalItem = this.originalClaimItemDetail.find(originalItemDetail => originalItemDetail.claimItemId === itemDetail.claimItemId);\n        if (originalItem === undefined || originalItem === null || originalItem.latestStatus !== itemDetail.latestStatus) {\n          this.showRemarksDialogMap.set(\"recomp\", true);\n          break;\n        }\n      } else if (closedTypeStatus.includes(String(itemDetail.latestStatus))) {\n        const originalItem = this.originalClaimItemDetail.find(originalItemDetail => originalItemDetail.claimItemId === itemDetail.claimItemId);\n        if (originalItem === undefined || originalItem === null || originalItem.latestStatus !== itemDetail.latestStatus) {\n          this.showRemarksDialogMap.set(\"closeRej\", true);\n          break;\n        }\n      }\n    }\n    // if (this.empClaim.itemDetailList.some(item => recompStatus.includes(String(item.latestStatus)))) {\n    //   this.showRemarksDialogMap.set(\"recomp\", true);\n    // }\n    // if(this.empClaim.itemDetailList.some((item: any)=> closedTypeStatus.includes(String(item.latestStatus)))) {\n    //   this.showRemarksDialogMap.set(\"closeRej\", true);\n    // }\n    if (this.showRemarksDialogMap.get(\"closeRej\") === false && this.showRemarksDialogMap.get(\"recomp\") === false) {\n      this.confirmSave(event);\n    }\n  }\n  confirmSave(event) {\n    this.nspConfirmationService.onConfirmPopup(event, 'saveClaim', null, () => {\n      this.updateClaim('save');\n    });\n  }\n  confirmSaveRemarks(event, popupKey) {\n    this.nspConfirmationService.onConfirmPopup(event, popupKey, null, () => {\n      switch (popupKey) {\n        case 'closeRej':\n          if (this.showRemarksDialogMap.get(\"closeRej\")) {\n            this.showRemarksDialogMap.set(\"closeRej\", false);\n          }\n          break;\n        case 'recomp':\n          if (this.showRemarksDialogMap.get(\"recomp\")) {\n            this.showRemarksDialogMap.set(\"recomp\", false);\n          }\n          break;\n      }\n      let callApi = true;\n      for (const [key, value] of this.showRemarksDialogMap) {\n        console.log(`Map key is:${key} and value is:${String(value)}`);\n        if (value === true) {\n          callApi = false;\n          break;\n        }\n      }\n      if (callApi) {\n        console.log(\"called api\");\n        this.updateClaim('save');\n      }\n    });\n  }\n  setRemarksToPayload() {\n    if (this.remarksForm.get('closedRejectedRemarks')?.value) {\n      const closedRejectedRemarks = this.remarksForm.get('closedRejectedRemarks').value;\n      this.empClaim.closedRemarks = closedRejectedRemarks;\n    }\n    if (this.remarksForm.get('recompRemarks')?.value) {\n      const recompRemarks = this.remarksForm.get('recompRemarks').value;\n      this.empClaim.recompRemarks = recompRemarks;\n    }\n  }\n  updateClaim(action) {\n    this.consoleLog();\n    this.setRemarksToPayload();\n    console.log('UPDATE EMP CLAIM API CALLED');\n    // this.toastService.success('TEST: Save ' + String(this.routeParams.caseId) + ' successfully');\n    this.ecClaimService.updateEmpClaim(this.empClaim).subscribe(res => {\n      console.log('update res', res);\n      if (res) {\n        if (action === 'save') {\n          console.log('SUCCESSFULLY SAVE');\n          this.toastService.success('Save ' + String(this.routeParams.caseId) + ' successfully');\n          const newClaimInboxId = res.body.data?.claimInboxId ? res.body.data.claimInboxId : null;\n          const claimInboxReason = res.body.data?.claimInboxReason ? res.body.data.claimInboxReason : \"\";\n          // if response claimInboxId is null means no more inbox entry of this claim for this verifier (will not refresh the page)\n          // reason: no claimInboxId to pass in nextClaim function\n          if (newClaimInboxId) {\n            this.router.navigate(['/claim/ec-claim/claim-verification-ec'], {\n              queryParams: {\n                claimId: this.empClaim.claimDto.id,\n                caseId: this.empClaim.claimDto.caseId,\n                claimInboxId: newClaimInboxId,\n                reason: claimInboxReason\n              }\n            }).then(() => {\n              window.location.reload();\n            });\n          } else {\n            // refresh the data only\n            this.getEmpHardcopyClaimDetails();\n            this.claimSection.ngOnInit();\n            this.companySection.ngOnInit();\n            this.actualTrgDetailSection.ngOnInit();\n          }\n        }\n      }\n    });\n  }\n  routeToInbox() {\n    this.router.navigate(['/inbox']);\n  }\n  consoleLog() {\n    console.log('empClaim', this.empClaim);\n    console.log('claimItemDetail', this.claimItemDetail);\n    console.log('originalClaimItemDetail', this.originalClaimItemDetail);\n    console.log('nextClaimDto', this.nextClaimDto);\n    console.log('remarksForm', this.remarksForm);\n    console.log('showRemarksDialogMap', this.showRemarksDialogMap);\n    const selectedMap = new Map();\n    selectedMap.set('allExpanded', this.allExpanded);\n    selectedMap.set('disableClaimInput', this.disableClaimInput);\n    selectedMap.set('checkClaimItemsInvalid: ', this.claimSection.checkClaimItemsInvalid());\n    console.log('selectedMap', selectedMap);\n  }\n  retrieveItemStatusMap() {\n    this.claimService.retrieveItemStatusMap(null).subscribe(resp => {\n      if (resp.status === 200 && resp.body.data) {\n        this.fullItemStatusMap = new Map(Object.entries(resp.body.data));\n      }\n    }, error => {\n      console.log(\"error is\" + String(error?.error?.error_desc));\n      this.toastService.error(String(error?.error?.error_desc));\n    });\n  }\n  getItemStatusDesc(code) {\n    return this.fullItemStatusMap.get(code).toUpperCase();\n  }\n  popLetter() {\n    const claimItemObjList = [];\n    const claimItemList = this.claimSection.getAllAvailableItemForms();\n    claimItemList?.forEach(x => {\n      claimItemObjList.push({\n        itemType: x.get('itemType').value,\n        itemName: x.get('itemName').value,\n        claimItemId: x.get('claimItemId').value,\n        latestItemStatusCode: x.get('itemStatus')?.value,\n        latestItemStatusDesc: this.getItemStatusDesc(x.get('itemStatus')?.value)\n      });\n    });\n    console.log(\"the outer claim item obj\", claimItemObjList);\n    const params2 = {\n      nric: this.empClaim.claimDto.nric,\n      name: this.empClaim.nsManName,\n      caseId: this.empClaim.claimDto.caseId,\n      claimId: this.empClaim.claimDto.id,\n      claimType: 'E',\n      trgStartDte: this.dateUtilsService.convertDateToStr(this.dateUtilsService.convertStrToDate(this.empClaim.claimDto.trgStartDate, \"YYYY-MM-DD\"), \"DD-MM-YYYY\"),\n      trgEndDte: this.dateUtilsService.convertDateToStr(this.dateUtilsService.convertStrToDate(this.empClaim.claimDto.trgEndDate, \"YYYY-MM-DD\"), \"DD-MM-YYYY\"),\n      csn: this.empClaim.empClaimDto.csn,\n      latestStatus: this.empClaim.claimDto.latestStatus,\n      latestStatusDesc: this.empClaim.claimDto.latestStatusDesc,\n      verifier: this.empClaim.claimDto.lastVerifyBy,\n      verifierInit: this.empClaim.claimDto.lastVerifyByInit\n    };\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/pop-up/claim-letter', {\n      claimItemObjList: JSON.stringify(claimItemObjList)\n    }], {\n      queryParams: params2\n    }));\n    console.log(url);\n    window.open(url, \"viewClaimLetter\", 'location=0,menubar=0,status=0,height=1000, width=1500');\n  }\n  checkAllExpanded() {\n    this.allExpanded = this.accordionStates.every(a => a === true);\n  }\n  expandCollapseAll() {\n    if (this.allExpanded) {\n      this.accordionStates.fill(false, 0, 3);\n    } else {\n      this.accordionStates.fill(true, 0, 3);\n    }\n    this.checkAllExpanded();\n  }\n}\nexports.EmpClaimVerificationComponent = EmpClaimVerificationComponent;\nEmpClaimVerificationComponent.ɵfac = function EmpClaimVerificationComponent_Factory(t) {\n  return new (t || EmpClaimVerificationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DateUtilsService), i0.ɵɵdirectiveInject(i3.ECClaimService), i0.ɵɵdirectiveInject(i4.ECClaimDataService), i0.ɵɵdirectiveInject(i5.CustomToastService), i0.ɵɵdirectiveInject(i6.ClaimService), i0.ɵɵdirectiveInject(i7.ActivatedRoute), i0.ɵɵdirectiveInject(i8.DialogService), i0.ɵɵdirectiveInject(i9.IcCodeService), i0.ɵɵdirectiveInject(i7.Router), i0.ɵɵdirectiveInject(i10.NspConfirmationService));\n};\nEmpClaimVerificationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmpClaimVerificationComponent,\n  selectors: [[\"n2-ec-claim-verification\"]],\n  viewQuery: function EmpClaimVerificationComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.claimSection = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.companySection = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.actualTrgDetailSection = _t.first);\n    }\n  },\n  decls: 182,\n  vars: 52,\n  consts: [[1, \"sticky-header\", 2, \"background-color\", \"white\"], [1, \"p-toolbar-group-left\", \"col-9\"], [1, \"col-4\"], [1, \"row\"], [1, \"col-2\"], [1, \"col-auto\"], [1, \"col-6\"], [\"href\", \"javascript:\", 3, \"click\"], [1, \"p-toolbar-group-right\", \"col-3\"], [1, \"col-12\", \"flex\", \"align-items-center\", \"flex-wrap\", \"justify-content-end\"], [1, \"flex\", \"align-items-center\"], [\"class\", \"flex align-items-center\", 4, \"ngIf\", \"ngIfElse\"], [\"overdueDate\", \"\"], [1, \"grid\", 2, \"margin\", \"1em\"], [1, \"col-6\", \"justify-content-start\", \"gap-4\", \"flex\", \"align-items-center\"], [4, \"ngIf\"], [\"href\", \"#\"], [1, \"col-6\", \"flex\", \"justify-content-end\", \"gap-2\"], [\"pButton\", \"\", 3, \"click\"], [\"id\", \"noActionRequired\", \"key\", \"noActionRequired\"], [\"pButton\", \"\", \"label\", \"No action required\", 3, \"style\", \"click\", 4, \"ngIf\"], [\"pButton\", \"\", \"label\", \"Letter\", 3, \"click\"], [\"pButton\", \"\", 3, \"label\", \"style\", \"click\", 4, \"ngIf\", \"ngIfElse\"], [\"nextSplitButton\", \"\"], [\"id\", \"save\", \"key\", \"saveClaim\"], [\"label\", \"Save\", 3, \"disabled\", \"model\", \"onClick\", 4, \"ngIf\"], [\"severity\", \"warn\", 4, \"ngIf\"], [3, \"empClaim\", \"subject\", \"claimItemDetail\", \"existingClaimItemMap\", \"fullItemStatusMap\", \"disableInput\", \"selected\", \"syncWithActualTrgDetail\", \"disableInputChange\", \"click\", \"selectedChange\", 4, \"ngIf\"], [3, \"empClaimRequest\", \"disableInput\", \"selected\", \"click\", \"selectedChange\", 4, \"ngIf\"], [3, \"actualTrgDetail\", \"empClaim\", \"actualTrgItem\", \"selected\", \"disableInput\", \"click\", \"selectedChange\", 4, \"ngIf\"], [3, \"itemChangeHistory\", \"selected\", \"click\", \"selectedChange\", 4, \"ngIf\"], [\"header\", \"Remarks\", 3, \"visible\", \"modal\", \"draggable\", \"resizable\", \"formGroup\"], [\"rows\", \"5\", \"inputId\", \"remark\", \"formControlName\", \"closedRejectedRemarks\", \"maxlength\", \"450\", \"pInputTextarea\", \"\", 1, \"inputfield\", \"w-full\"], [\"pTemplate\", \"footer\"], [\"rows\", \"5\", \"inputId\", \"remark\", \"formControlName\", \"recompRemarks\", \"maxlength\", \"450\", \"pInputTextarea\", \"\", 1, \"inputfield\", \"w-full\"], [\"pButton\", \"\", \"label\", \"No action required\", 3, \"click\"], [\"pButton\", \"\", 3, \"label\", \"click\"], [3, \"label\", \"model\", \"onClick\", 4, \"ngIf\"], [3, \"label\", \"model\", \"onClick\"], [\"label\", \"Save\", 3, \"disabled\", \"model\", \"onClick\"], [\"severity\", \"warn\"], [\"key\", \"CLM-W003\", \"pTemplate\", \"\"], [1, \"ml-2\"], [\"key\", \"CLM-W004\", \"pTemplate\", \"\"], [3, \"empClaim\", \"subject\", \"claimItemDetail\", \"existingClaimItemMap\", \"fullItemStatusMap\", \"disableInput\", \"selected\", \"syncWithActualTrgDetail\", \"disableInputChange\", \"click\", \"selectedChange\"], [\"claimSection\", \"\"], [3, \"empClaimRequest\", \"disableInput\", \"selected\", \"click\", \"selectedChange\"], [\"companySection\", \"\"], [3, \"actualTrgDetail\", \"empClaim\", \"actualTrgItem\", \"selected\", \"disableInput\", \"click\", \"selectedChange\"], [\"actualTrgDetailSection\", \"\"], [3, \"itemChangeHistory\", \"selected\", \"click\", \"selectedChange\"], [\"itemChangeHistorySection\", \"\"], [\"pButton\", \"\", \"label\", \"Cancel\", \"type\", \"button\", 1, \"p-button-danger\", 3, \"click\"], [\"key\", \"closeRej\", \"header\", \"Confirmation\", \"icon\", \"fa fa-question-circle\", \"width\", \"425\"], [\"pButton\", \"\", \"label\", \"Submit\", \"type\", \"button\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"label\", \"log\", \"type\", \"button\", 1, \"p-button-primary\", 3, \"click\"], [\"key\", \"recomp\", \"header\", \"Confirmation\", \"icon\", \"fa fa-question-circle\", \"width\", \"425\"]],\n  template: function EmpClaimVerificationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n    \");\n      i0.ɵɵelementStart(2, \"p-toolbar\");\n      i0.ɵɵtext(3, \"\\n        \");\n      i0.ɵɵelementStart(4, \"div\", 1);\n      i0.ɵɵtext(5, \"\\n            \");\n      i0.ɵɵelementStart(6, \"div\", 2);\n      i0.ɵɵtext(7, \"\\n                \");\n      i0.ɵɵelementStart(8, \"div\", 3);\n      i0.ɵɵtext(9, \"\\n                    \");\n      i0.ɵɵelementStart(10, \"h2\");\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(14, \"\\n            \");\n      i0.ɵɵelementStart(15, \"div\", 4);\n      i0.ɵɵtext(16, \"\\n                \");\n      i0.ɵɵelementStart(17, \"div\", 3);\n      i0.ɵɵtext(18, \"\\n                    \");\n      i0.ɵɵelementStart(19, \"div\", 5);\n      i0.ɵɵtext(20, \"\\n                        \");\n      i0.ɵɵelementStart(21, \"span\");\n      i0.ɵɵtext(22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \"\\n                    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(24, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \"\\n                \");\n      i0.ɵɵelementStart(26, \"div\", 3);\n      i0.ɵɵtext(27, \"\\n                    \");\n      i0.ɵɵelementStart(28, \"div\", 5);\n      i0.ɵɵtext(29, \"\\n                        \");\n      i0.ɵɵelementStart(30, \"span\");\n      i0.ɵɵtext(31, \"\\n                            \");\n      i0.ɵɵelementStart(32, \"span\");\n      i0.ɵɵtext(33);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \"\\n                        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(35, \"\\n                    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(36, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(37, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(38, \"\\n            \");\n      i0.ɵɵelementStart(39, \"div\", 6);\n      i0.ɵɵtext(40, \"\\n                \");\n      i0.ɵɵelementStart(41, \"div\", 3);\n      i0.ɵɵtext(42, \"\\n                    \");\n      i0.ɵɵelementStart(43, \"div\", 2);\n      i0.ɵɵtext(44, \"\\n                        \");\n      i0.ɵɵelementStart(45, \"span\");\n      i0.ɵɵtext(46, \"CAB: \");\n      i0.ɵɵelementStart(47, \"a\", 7);\n      i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_Template_a_click_47_listener() {\n        return ctx.consoleLog();\n      });\n      i0.ɵɵtext(48);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(49, \"\\n                    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(50, \"\\n                    \");\n      i0.ɵɵelementStart(51, \"div\", 2);\n      i0.ɵɵtext(52, \"\\n                        Prepopulated (SYS)\\n                    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(53, \"\\n                    \");\n      i0.ɵɵelementStart(54, \"div\", 2);\n      i0.ɵɵtext(55);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(56, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(57, \"\\n                \");\n      i0.ɵɵelementStart(58, \"div\", 3);\n      i0.ɵɵtext(59, \"\\n                    \");\n      i0.ɵɵelementStart(60, \"div\", 5);\n      i0.ɵɵtext(61, \"\\n                        \");\n      i0.ɵɵelementStart(62, \"span\");\n      i0.ɵɵtext(63);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(64, \"\\n                    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(65, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(66, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(67, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(68, \"\\n        \");\n      i0.ɵɵelementStart(69, \"div\", 8);\n      i0.ɵɵtext(70, \"\\n            \");\n      i0.ɵɵelementStart(71, \"div\", 9);\n      i0.ɵɵtext(72, \"\\n                \");\n      i0.ɵɵelementStart(73, \"div\", 10);\n      i0.ɵɵtext(74, \"\\n                    Due:\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(75, \"\\n                \\u00A0\\u00A0\\n                \");\n      i0.ɵɵtemplate(76, EmpClaimVerificationComponent_div_76_Template, 5, 4, \"div\", 11);\n      i0.ɵɵtext(77, \"\\n                \");\n      i0.ɵɵtemplate(78, EmpClaimVerificationComponent_ng_template_78_Template, 7, 4, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtext(80, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(81, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(82, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(83, \"\\n    \");\n      i0.ɵɵelementStart(84, \"div\", 13);\n      i0.ɵɵtext(85, \"\\n        \");\n      i0.ɵɵtext(86, \"\\n        \");\n      i0.ɵɵelementStart(87, \"div\", 14);\n      i0.ɵɵtext(88, \"\\n            \");\n      i0.ɵɵelementStart(89, \"div\")(90, \"a\", 7);\n      i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_Template_a_click_90_listener() {\n        return ctx.popUpCpfDeviation();\n      });\n      i0.ɵɵtext(91, \"Deviation\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(92, \"\\n            \");\n      i0.ɵɵtemplate(93, EmpClaimVerificationComponent_div_93_Template, 3, 0, \"div\", 15);\n      i0.ɵɵtext(94, \"\\n            \");\n      i0.ɵɵelementStart(95, \"div\")(96, \"a\", 7);\n      i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_Template_a_click_96_listener() {\n        return ctx.popUpPastClaim();\n      });\n      i0.ɵɵtext(97, \"Past Claims\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(98, \"\\n            \");\n      i0.ɵɵelementStart(99, \"div\")(100, \"a\", 7);\n      i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_Template_a_click_100_listener() {\n        return ctx.cpfPopUp();\n      });\n      i0.ɵɵtext(101, \"CPF\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(102, \"\\n            \");\n      i0.ɵɵtext(103, \"\\n            \");\n      i0.ɵɵelementStart(104, \"div\")(105, \"a\", 16);\n      i0.ɵɵtext(106, \"Enquiry CPF/IRAS\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(107, \"\\n            \");\n      i0.ɵɵelementStart(108, \"div\")(109, \"a\", 7);\n      i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_Template_a_click_109_listener() {\n        return ctx.popUpLatestOwners();\n      });\n      i0.ɵɵtext(110, \"Owners\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(111, \"\\n            \");\n      i0.ɵɵelementStart(112, \"div\")(113, \"a\", 7);\n      i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_Template_a_click_113_listener() {\n        return ctx.popUpRemarks();\n      });\n      i0.ɵɵtext(114, \"Remarks\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(115, \"\\n            \");\n      i0.ɵɵelementStart(116, \"div\")(117, \"a\", 16);\n      i0.ɵɵtext(118, \"Prepopulated\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(119, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(120, \"\\n        \");\n      i0.ɵɵelementStart(121, \"div\", 17);\n      i0.ɵɵtext(122, \"\\n            \");\n      i0.ɵɵelementStart(123, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_Template_button_click_123_listener() {\n        return ctx.expandCollapseAll();\n      });\n      i0.ɵɵtext(124);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(125, \"\\n            \");\n      i0.ɵɵelement(126, \"p-confirmPopup\", 19);\n      i0.ɵɵtext(127, \"\\n            \");\n      i0.ɵɵtemplate(128, EmpClaimVerificationComponent_button_128_Template, 1, 3, \"button\", 20);\n      i0.ɵɵtext(129, \"\\n            \");\n      i0.ɵɵelementStart(130, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function EmpClaimVerificationComponent_Template_button_click_130_listener() {\n        return ctx.popLetter();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(131, \"\\n            \");\n      i0.ɵɵtext(132, \"\\n            \");\n      i0.ɵɵtemplate(133, EmpClaimVerificationComponent_button_133_Template, 1, 4, \"button\", 22);\n      i0.ɵɵtext(134, \"\\n            \");\n      i0.ɵɵtemplate(135, EmpClaimVerificationComponent_ng_template_135_Template, 3, 1, \"ng-template\", null, 23, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtext(137, \"\\n            \");\n      i0.ɵɵelement(138, \"p-confirmPopup\", 24);\n      i0.ɵɵtext(139, \"\\n            \");\n      i0.ɵɵtemplate(140, EmpClaimVerificationComponent_p_splitButton_140_Template, 1, 2, \"p-splitButton\", 25);\n      i0.ɵɵtext(141, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(142, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(143, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(144, \"\\n\\n\");\n      i0.ɵɵtemplate(145, EmpClaimVerificationComponent_p_messages_145_Template, 4, 0, \"p-messages\", 26);\n      i0.ɵɵtext(146, \"\\n\");\n      i0.ɵɵtemplate(147, EmpClaimVerificationComponent_p_messages_147_Template, 4, 0, \"p-messages\", 26);\n      i0.ɵɵtext(148, \"\\n\");\n      i0.ɵɵtemplate(149, EmpClaimVerificationComponent_p_messages_149_Template, 4, 0, \"p-messages\", 26);\n      i0.ɵɵtext(150, \"\\n\\n\");\n      i0.ɵɵelementStart(151, \"p-accordion\");\n      i0.ɵɵtext(152, \"\\n    \");\n      i0.ɵɵtemplate(153, EmpClaimVerificationComponent_n2_claim_section_153_Template, 3, 7, \"n2-claim-section\", 27);\n      i0.ɵɵtext(154, \"\\n    \");\n      i0.ɵɵtemplate(155, EmpClaimVerificationComponent_n2_company_section_155_Template, 3, 3, \"n2-company-section\", 28);\n      i0.ɵɵtext(156, \"\\n    \");\n      i0.ɵɵtemplate(157, EmpClaimVerificationComponent_n2_actual_training_detail_section_157_Template, 3, 5, \"n2-actual-training-detail-section\", 29);\n      i0.ɵɵtext(158, \"\\n    \");\n      i0.ɵɵtemplate(159, EmpClaimVerificationComponent_n2_item_change_history_section_159_Template, 3, 2, \"n2-item-change-history-section\", 30);\n      i0.ɵɵtext(160, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(161, \"\\n\\n\");\n      i0.ɵɵelementStart(162, \"p-dialog\", 31);\n      i0.ɵɵtext(163, \"\\n    \");\n      i0.ɵɵelementStart(164, \"h6\");\n      i0.ɵɵtext(165, \"Please key in remarks for submission of a claim with closed/rejected items\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(166, \"\\n    \");\n      i0.ɵɵelement(167, \"textarea\", 32);\n      i0.ɵɵtext(168, \"\\n    \");\n      i0.ɵɵtemplate(169, EmpClaimVerificationComponent_ng_template_169_Template, 9, 1, \"ng-template\", 33);\n      i0.ɵɵtext(170, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(171, \"\\n\\n\\n\");\n      i0.ɵɵelementStart(172, \"p-dialog\", 31);\n      i0.ɵɵtext(173, \"\\n\");\n      i0.ɵɵelementStart(174, \"h6\");\n      i0.ɵɵtext(175, \"Please key in remarks for recomputation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(176, \"\\n\");\n      i0.ɵɵelement(177, \"textarea\", 34);\n      i0.ɵɵtext(178, \"\\n    \");\n      i0.ɵɵtemplate(179, EmpClaimVerificationComponent_ng_template_179_Template, 9, 1, \"ng-template\", 33);\n      i0.ɵɵtext(180, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(181, \"\\n\");\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(79);\n      const _r6 = i0.ɵɵreference(136);\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(46, _c6));\n      i0.ɵɵadvance(4);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(47, _c7));\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate2(\"\\n                        \", ctx.empClaim == null ? null : ctx.empClaim.claimDto == null ? null : ctx.empClaim.claimDto.caseId, \" \", ctx.empClaim == null ? null : ctx.empClaim.claimDto == null ? null : ctx.empClaim.claimDto.nric, \"\\n                    \");\n      i0.ɵɵadvance(11);\n      i0.ɵɵtextInterpolate2(\"\", ctx.empClaim == null ? null : ctx.empClaim.nsManRank, \" \", ctx.empClaim == null ? null : ctx.empClaim.nsManName, \"\");\n      i0.ɵɵadvance(11);\n      i0.ɵɵtextInterpolate2(\"\", ctx.empClaim == null ? null : ctx.empClaim.nsManPhoneNum, \" (\", ctx.empClaim == null ? null : ctx.empClaim.nsManGender, \")\");\n      i0.ɵɵadvance(15);\n      i0.ɵɵtextInterpolate(ctx.nsmanCab);\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate1(\"\\n                        Reason: \", ctx.routeParams.reason, \"\\n                    \");\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate1(\"\\n                            Overlapping attendance: \", ctx.nsInfo4, \" \\u00A0 and 4 more attd\\n                        \");\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngIf\", ctx.dueDate && ctx.dueDate !== \"Overdue\")(\"ngIfElse\", _r1);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngIf\", ctx.empClaim == null ? null : ctx.empClaim.empClaimDto == null ? null : ctx.empClaim.empClaimDto.eClaimId);\n      i0.ɵɵadvance(30);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(48, _c5));\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.allExpanded ? \"Collapse All\" : \"Expand All\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", (ctx.empClaim == null ? null : ctx.empClaim.claimDto == null ? null : ctx.empClaim.claimDto.latestStatus) === \"COM\" && ctx.routeParams.reason === \"Supp Doc\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(49, _c5));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.nextButtonOptions.length === 1)(\"ngIfElse\", _r6);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.saveSubmitButtonOptions.length > 0);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.claimSection == null ? null : ctx.claimSection.claimForm) && (ctx.claimSection == null ? null : ctx.claimSection.isLongPeriod()));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (ctx.claimSection == null ? null : ctx.claimSection.claimForm) && (ctx.claimSection == null ? null : ctx.claimSection.isLateClaim()));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (ctx.claimSection == null ? null : ctx.claimSection.claimForm) && (ctx.claimSection == null ? null : ctx.claimSection.workHourStartMoreThanEnd()));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.empClaim && ctx.subject && ctx.claimItemDetail && ctx.fullItemStatusMap);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.empClaim);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.actualTrgDetail);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.itemChangeHistory);\n      i0.ɵɵadvance(3);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(50, _c8));\n      i0.ɵɵproperty(\"visible\", ctx.showRemarksDialogMap.get(\"closeRej\"))(\"modal\", true)(\"draggable\", false)(\"resizable\", false)(\"formGroup\", ctx.remarksForm);\n      i0.ɵɵadvance(10);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(51, _c8));\n      i0.ɵɵproperty(\"visible\", ctx.showRemarksDialogMap.get(\"recomp\"))(\"modal\", true)(\"draggable\", false)(\"resizable\", false)(\"formGroup\", ctx.remarksForm);\n    }\n  },\n  dependencies: [i11.NgIf, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i12.PrimeTemplate, i13.ButtonDirective, i14.Dialog, i15.InputTextarea, i16.ConfirmPopup, i17.Messages, i18.Toolbar, i19.Accordion, i20.SplitButton, i21.ClaimSectionComponent, i22.CompanySectionComponent, i23.ActualTrgDetailSectionComponent, i24.ItemChangeHistorySectionComponent],\n  styles: [\".default-toolbar {\\n  margin: 0 auto;\\n  padding: 0;\\n  background-color: var(--surface-b) !important;\\n}\\n\\nbody[_ngcontent-%COMP%] {\\n  height: 100vh;\\n  width: 100vw;\\n  overflow: auto;\\n}\\n\\n[_nghost-%COMP%]     .p-accordion .p-accordion-header .p-accordion-header-link {\\n  min-height: 4.25rem;\\n  padding: 0.5rem 1.25rem;\\n}\\n\\n[_nghost-%COMP%]     .sticky-header {\\n  position: sticky;\\n  top: 4rem;\\n  z-index: 999;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVjLWNsYWltLXZlcmlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyIsIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHByb2plY3RzJTIwMlxcbnNwYXlpaWFwcFxcc3JjXFxtYWluXFx3ZWJhcHBcXGFwcFxcY2xhaW1cXGVjLWNsYWltXFxlYy1jbGFpbS12ZXJpZmljYXRpb25cXGVjLWNsYWltLXZlcmlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNQTtFQUNFLGNBQUE7RUFDQSxVQUFBO0VBQ0EsNkNBQUE7QUNMRjs7QURRQTtFQUNFLGFBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtBQ0xGOztBRFFBO0VBQ0UsbUJBQUE7RUFDQSx1QkFBQTtBQ0xGOztBRFFBO0VBRUUsZ0JBQUE7RUFDQSxTQUFBO0VBQ0EsWUFBQTtBQ0xGIiwiZmlsZSI6ImVjLWNsYWltLXZlcmlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDo6bmctZGVlcCAucC10b29sYmFyLnRvb2xiYXJTIHtcclxuLy8gICAgIG1hcmdpbjogMCBhdXRvO1xyXG4vLyAgICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG4vLyAgICAgfVxyXG5cclxuXHJcbjo6bmctZGVlcCAuZGVmYXVsdC10b29sYmFye1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjp2YXIoLS1zdXJmYWNlLWIpICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgd2lkdGg6IDEwMHZ3O1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLnAtYWNjb3JkaW9uIC5wLWFjY29yZGlvbi1oZWFkZXIgLnAtYWNjb3JkaW9uLWhlYWRlci1saW5re1xyXG4gIG1pbi1oZWlnaHQ6IDQuMjVyZW07XHJcbiAgcGFkZGluZzogMC41cmVtIDEuMjVyZW07XHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAuc3RpY2t5LWhlYWRlcntcclxuICBwb3NpdGlvbjogLXdlYmtpdC1zdGlja3k7XHJcbiAgcG9zaXRpb246IHN0aWNreTtcclxuICB0b3A6IDRyZW07XHJcbiAgei1pbmRleDogOTk5OyAvLyBUaGlzIHByZXZlbnRzIGVsZW1lbnRzIHRvIGJlIHNlZW4gdGhyb3VnaCB0aGUgdG9vbGJhci5cclxufSIsIjo6bmctZGVlcCAuZGVmYXVsdC10b29sYmFyIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXN1cmZhY2UtYikgIWltcG9ydGFudDtcbn1cblxuYm9keSB7XG4gIGhlaWdodDogMTAwdmg7XG4gIHdpZHRoOiAxMDB2dztcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbjpob3N0IDo6bmctZGVlcCAucC1hY2NvcmRpb24gLnAtYWNjb3JkaW9uLWhlYWRlciAucC1hY2NvcmRpb24taGVhZGVyLWxpbmsge1xuICBtaW4taGVpZ2h0OiA0LjI1cmVtO1xuICBwYWRkaW5nOiAwLjVyZW0gMS4yNXJlbTtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5zdGlja3ktaGVhZGVyIHtcbiAgcG9zaXRpb246IC13ZWJraXQtc3RpY2t5O1xuICBwb3NpdGlvbjogc3RpY2t5O1xuICB0b3A6IDRyZW07XG4gIHotaW5kZXg6IDk5OTtcbn0iXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvY2xhaW0vZWMtY2xhaW0vZWMtY2xhaW0tdmVyaWZpY2F0aW9uL2VjLWNsYWltLXZlcmlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uL3Byb2plY3RzJTIwMi9uc3BheWlpYXBwL3NyYy9tYWluL3dlYmFwcC9hcHAvY2xhaW0vZWMtY2xhaW0vZWMtY2xhaW0tdmVyaWZpY2F0aW9uL2VjLWNsYWltLXZlcmlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNQTtFQUNFLGNBQUE7RUFDQSxVQUFBO0VBQ0EsNkNBQUE7QUNMRjs7QURRQTtFQUNFLGFBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtBQ0xGOztBRFFBO0VBQ0UsbUJBQUE7RUFDQSx1QkFBQTtBQ0xGOztBRFFBO0VBRUUsZ0JBQUE7RUFDQSxTQUFBO0VBQ0EsWUFBQTtBQ0xGO0FEQUEsZ21FQUFnbUUiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA6Om5nLWRlZXAgLnAtdG9vbGJhci50b29sYmFyUyB7XHJcbi8vICAgICBtYXJnaW46IDAgYXV0bztcclxuLy8gICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxuLy8gICAgIH1cclxuXHJcblxyXG46Om5nLWRlZXAgLmRlZmF1bHQtdG9vbGJhcntcclxuICBtYXJnaW46IDAgYXV0bztcclxuICBwYWRkaW5nOiAwO1xyXG4gIGJhY2tncm91bmQtY29sb3I6dmFyKC0tc3VyZmFjZS1iKSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5ib2R5IHtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIHdpZHRoOiAxMDB2dztcclxuICBvdmVyZmxvdzogYXV0bztcclxufVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5wLWFjY29yZGlvbiAucC1hY2NvcmRpb24taGVhZGVyIC5wLWFjY29yZGlvbi1oZWFkZXItbGlua3tcclxuICBtaW4taGVpZ2h0OiA0LjI1cmVtO1xyXG4gIHBhZGRpbmc6IDAuNXJlbSAxLjI1cmVtO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLnN0aWNreS1oZWFkZXJ7XHJcbiAgcG9zaXRpb246IC13ZWJraXQtc3RpY2t5O1xyXG4gIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgdG9wOiA0cmVtO1xyXG4gIHotaW5kZXg6IDk5OTsgLy8gVGhpcyBwcmV2ZW50cyBlbGVtZW50cyB0byBiZSBzZWVuIHRocm91Z2ggdGhlIHRvb2xiYXIuXHJcbn0iLCI6Om5nLWRlZXAgLmRlZmF1bHQtdG9vbGJhciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1zdXJmYWNlLWIpICFpbXBvcnRhbnQ7XG59XG5cbmJvZHkge1xuICBoZWlnaHQ6IDEwMHZoO1xuICB3aWR0aDogMTAwdnc7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtYWNjb3JkaW9uIC5wLWFjY29yZGlvbi1oZWFkZXIgLnAtYWNjb3JkaW9uLWhlYWRlci1saW5rIHtcbiAgbWluLWhlaWdodDogNC4yNXJlbTtcbiAgcGFkZGluZzogMC41cmVtIDEuMjVyZW07XG59XG5cbjpob3N0IDo6bmctZGVlcCAuc3RpY2t5LWhlYWRlciB7XG4gIHBvc2l0aW9uOiAtd2Via2l0LXN0aWNreTtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiA0cmVtO1xuICB6LWluZGV4OiA5OTk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","EmpClaimVerificationComponent","constructor","formBuilder","dateUtilsService","ecClaimService","eCClaimDataService","toastService","claimService","route","dialogService","codeService","router","nspConfirmationService","Map","Array","fill","group","closedRejectedRemarks","forms_1","required","recompRemarks","ngOnInit","console","log","queryParams","subscribe","params","routeParams","getEmpHardcopyClaimDetails","initialiseSaveSubmitButton","retrieveItemStatusMap","initialiseNextButton","showRemarksDialogMap","set","getActualTrgItem","data","actualTrgItem","empClaimRequestParams","http_1","append","caseId","empClaimRequestByCaseId","getEmpClaimRequestByCaseId","getItemDetailsByCaseId","getItemChangeHistoryByCaseId","getUserLoginDetails","claimId","getActualTrgDetailsByClaimId","retrieveActualTrainingDetails","empClaimRes","itemDetailsRes","actualTrgDetailsRes","itemChangeHistoryRes","subjectRes","body","empClaim","saveEmpClaimRequestDto","EmpClaimRequest_model_1","claimInboxId","claimDto","processDueDate","isSame","dueDate","isAfter","dateStr","format","monthStr","dayStr","toUpperCase","latestStatus","disableClaimInput","claimItemDetail","originalClaimItemDetail","map","obj","forEach","item","existingClaimItemMap","claimItemId","disableInputItemStatusList","includes","actualTrgDetail","itemChangeHistory","subject","getCabBlockByNric","nric","cabBlockRes","nsmanCab","cpfPopUp","params2","name","nsManName","id","csn","empClaimDto","coyName","claimStartDate","trgStartDate","url","serializeUrl","createUrlTree","window","open","popUpLatestOwners","popUpEClaim","eClaimId","role","popUpPastClaim","csn1","csn2","csn3","popUpCpfDeviation","popUpRemarks","confirmNoActionReq","event","onConfirmPopup","noActionReq","next","resp","ok","success","routeToInbox","error","String","error_desc","filteredNextButtonOptions","nextButtonOptions","length","filter","x","index","nextClaim","nextClaimDto","nextRecomp","push","label","command","navigateVerificationPage","nextNric","nextDueDt","nextOption","sort","a","b","localeCompare","dto","navigate","then","location","reload","saveSubmitButtonOptions","disabled","isAppealCase","prepareDataForUpdate","updateClaimFromChild","coyType","companySection","editedAddress","saveCompanyAddressInd","editedCertOfficer","saveCompanyOfficerInd","claimSection","saveClaimSection","saveCompanySection","saveClaimItemSection","itemDetailList","saveActualTrainingSectionInd","actualTrgDetailSection","saveActTrgDetailsSectionChanges","disableSave","isInvalid","invalidForm","claimForm","invalid","companyForm","actualTrainingForm","actualTrainingDetailArr","recompStatus","closedTypeStatus","itemDetail","originalItem","find","originalItemDetail","undefined","get","confirmSave","updateClaim","confirmSaveRemarks","popupKey","callApi","key","value","setRemarksToPayload","remarksForm","closedRemarks","action","consoleLog","updateEmpClaim","res","newClaimInboxId","claimInboxReason","reason","selectedMap","allExpanded","checkClaimItemsInvalid","status","fullItemStatusMap","Object","entries","getItemStatusDesc","code","popLetter","claimItemObjList","claimItemList","getAllAvailableItemForms","itemType","itemName","latestItemStatusCode","latestItemStatusDesc","claimType","trgStartDte","convertDateToStr","convertStrToDate","trgEndDte","trgEndDate","latestStatusDesc","verifier","lastVerifyBy","verifierInit","lastVerifyByInit","JSON","stringify","checkAllExpanded","accordionStates","every","expandCollapseAll","exports","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\ec-claim\\ec-claim-verification\\ec-claim-verification.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\ec-claim\\ec-claim-verification\\ec-claim-verification.component.html"],"sourcesContent":["import { HttpParams } from '@angular/common/http';\r\nimport { Component, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, NavigationEnd, NavigationStart, Router } from '@angular/router';\r\nimport { ECClaimService } from 'app/claim/ec-claim/service/ec-claim.service';\r\nimport { ClaimService } from 'app/claim/service/claim.service';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { CodeView, IcCodeService } from 'app/ng-connect';\r\nimport { EmpClaimRequest, SaveEmpClaimRequest } from '../model/EmpClaimRequest.model';\r\nimport { ClaimSectionComponent } from './claim-section/claim-section.component';\r\nimport { ClaimItemDetail } from '../model/ClaimItemDetail.model';\r\nimport { zip } from 'rxjs';\r\nimport { ActualTrainingDetail } from 'app/claim/model/actual-training-detail.model';\r\nimport { EmpClaimItemHistory } from '../model/EmpClaimItemHistory.model';\r\nimport { NspConfirmationService } from 'app/shared/confirm/nsp-confirm.service';\r\nimport { CompanySectionComponent } from './company-section/company-section.component';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { ActualTrgDetailSectionComponent } from './actual-training-detail-section/actual-training-detail-section.component';\r\nimport { ECClaimDataService } from 'app/claim/ec-claim/service/ec-claim-data.service';\r\nimport { param } from 'jquery';\r\nimport moment from 'moment';\r\n// import { ClaimSectionComponent } from './claim-section/claim-section.component';\r\n\r\n\r\n@Component({\r\n  selector: 'n2-ec-claim-verification',\r\n  templateUrl: './ec-claim-verification.component.html',\r\n  styleUrls: ['./ec-claim-verification.component.scss']\r\n})\r\nexport class EmpClaimVerificationComponent implements OnInit {\r\n\r\n  readonly disableInputItemStatusList = ['PAP', 'PRE', 'PRA', 'PIN'];\r\n\r\n  empClaim: EmpClaimRequest;\r\n  claimItemDetail: ClaimItemDetail[];\r\n  originalClaimItemDetail: ClaimItemDetail[]; // for checking item status changes\r\n  actualTrgDetail: ActualTrainingDetail[];\r\n  itemChangeHistory: EmpClaimItemHistory[];\r\n  existingClaimItemMap: Map<string, FormGroup> = new Map(); // shared between claimSection and actual training section\r\n  subject: any;\r\n  actualTrgItem: any;\r\n  caseId = \"\";\r\n  routeParams: any ={};\r\n  nsManNric = \"\";\r\n  nsManRank = \"\";\r\n  nsManName = \"\";\r\n  nsManPhoneNum = \"\";\r\n  nsManGender = \"\";\r\n  code?: CodeView;\r\n  fullItemStatusMap: any = {};\r\n  dueDate = \"\";\r\n  disableClaimInput = false; // if claim status is not processing OR any item status in (PAP, PRE, PRA, PIN)\r\n\r\n  // switch buttons\r\n  nextButtonOptions: MenuItem[] =[];\r\n  saveSubmitButtonOptions: MenuItem[] =[];\r\n\r\n  showRemarksDialogMap: Map<string, boolean> = new Map();\r\n  isAppealCase = false;\r\n\r\n  nextClaimDto: any = {}\r\n\r\n  saveClaimDto: any ={};\r\n\r\n  nsmanCab: string;\r\n  nsInfo3 = \"\";\r\n  nsInfo4 = \"\";\r\n\r\n  claimOptionShort = \"\";\r\n\r\n  accordionStates: boolean[] = Array(4).fill(true);\r\n  allExpanded = true;\r\n\r\n  // remarks FormGroup\r\n  remarksForm: FormGroup = this.formBuilder.group({\r\n    closedRejectedRemarks: ['', [Validators.required]],\r\n    recompRemarks: ['', [Validators.required]],\r\n  });\r\n\r\n  // claimOptionShortList: any[]=[];\r\n  @ViewChild('claimSection', {static: false})\r\n  public claimSection?: ClaimSectionComponent;\r\n  @ViewChild('companySection', {static: false})\r\n  public companySection?: CompanySectionComponent;\r\n  @ViewChild('actualTrgDetailSection', {static: false})\r\n  public actualTrgDetailSection?: ActualTrgDetailSectionComponent;\r\n\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    public dateUtilsService: DateUtilsService,\r\n    private ecClaimService: ECClaimService,\r\n    private eCClaimDataService: ECClaimDataService,\r\n    private toastService: CustomToastService,\r\n    private claimService: ClaimService,\r\n    private route: ActivatedRoute,\r\n    private dialogService: DialogService,\r\n    private codeService: IcCodeService,\r\n    private router: Router,\r\n    private nspConfirmationService: NspConfirmationService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    console.log('this.route', this.route);\r\n    this.route.queryParams.subscribe((params) => {\r\n      console.log('route queryParams', params);\r\n      this.routeParams = params;\r\n      this.getEmpHardcopyClaimDetails();\r\n      this.initialiseSaveSubmitButton();\r\n      this.retrieveItemStatusMap();\r\n      this.initialiseNextButton();\r\n    });\r\n    this.showRemarksDialogMap.set(\"closeRej\", false);\r\n    this.showRemarksDialogMap.set(\"recomp\", false);\r\n  }\r\n\r\n  getActualTrgItem(data: any) {\r\n    this.actualTrgItem = data;\r\n    console.log('getActualTrgItem from CLAIM-SECTION', this.actualTrgItem);\r\n  }\r\n\r\n  getEmpHardcopyClaimDetails(){\r\n\r\n    let empClaimRequestParams = new HttpParams();\r\n    empClaimRequestParams = empClaimRequestParams.append(\"caseId\", this.routeParams?.caseId);\r\n    empClaimRequestParams = empClaimRequestParams.append(\"role\", 'role-cv');\r\n\r\n    const empClaimRequestByCaseId = this.ecClaimService.getEmpClaimRequestByCaseId(empClaimRequestParams);\r\n    const getItemDetailsByCaseId = this.ecClaimService.getItemDetailsByCaseId(this.routeParams?.caseId);\r\n    const getItemChangeHistoryByCaseId = this.ecClaimService.getItemChangeHistoryByCaseId(this.routeParams?.caseId);\r\n    const getUserLoginDetails = this.claimService.getUserLoginDetails();\r\n\r\n    let params = new HttpParams();\r\n    params = params.append(\"claimId\", this.routeParams?.claimId);\r\n    const getActualTrgDetailsByClaimId = this.claimService.retrieveActualTrainingDetails({params});\r\n\r\n    zip(empClaimRequestByCaseId,\r\n      getItemDetailsByCaseId,\r\n      getActualTrgDetailsByClaimId,\r\n      getItemChangeHistoryByCaseId,\r\n      getUserLoginDetails).subscribe(([\r\n        empClaimRes,\r\n        itemDetailsRes,\r\n        actualTrgDetailsRes,\r\n        itemChangeHistoryRes,\r\n        subjectRes\r\n      ]) => {\r\n      if (empClaimRes.body.data) {\r\n        this.empClaim = empClaimRes.body.data;\r\n        this.empClaim.saveEmpClaimRequestDto = new SaveEmpClaimRequest();\r\n        this.empClaim.claimInboxId = this.routeParams.claimInboxId;\r\n        if (this.empClaim?.claimDto?.processDueDate) {\r\n          const processDueDate = moment(this.empClaim?.claimDto?.processDueDate);\r\n          if (moment().isSame(processDueDate, 'day')) {\r\n            this.dueDate = 'Today';\r\n          } else if (moment().isAfter(processDueDate, 'day')) {\r\n            this.dueDate = 'Overdue';\r\n          } else {\r\n            const dateStr = processDueDate.format('DD');\r\n            const monthStr = processDueDate.format('MMM');\r\n            const dayStr = processDueDate.format('ddd');\r\n            this.dueDate = dateStr + ' ' + monthStr.toUpperCase() + ' (' + dayStr + ')';\r\n          }            \r\n        }\r\n\r\n        if (this.empClaim.claimDto.latestStatus !== 'PRO') {\r\n          this.disableClaimInput = true;\r\n        }\r\n      }\r\n      if (itemDetailsRes.body.data) {\r\n        this.claimItemDetail = itemDetailsRes.body.data;\r\n        this.originalClaimItemDetail = itemDetailsRes.body.data.map((obj: ClaimItemDetail) => ({...obj})); // deep clone array (tracking of status changes)\r\n        this.claimItemDetail.forEach(item=> {\r\n          this.existingClaimItemMap.set(item.claimItemId, null);\r\n          if (this.disableInputItemStatusList.includes(item.latestStatus)) {\r\n            this.disableClaimInput = true;\r\n          }\r\n        });\r\n      }\r\n      if (actualTrgDetailsRes.body.data) {\r\n        this.actualTrgDetail = actualTrgDetailsRes.body.data;\r\n      }\r\n      if (itemChangeHistoryRes.body.data) {\r\n        this.itemChangeHistory = itemChangeHistoryRes.body.data;\r\n      }\r\n      if (subjectRes.body.data) {\r\n        this.subject = subjectRes.body.data;\r\n      }\r\n      this.ecClaimService.getCabBlockByNric(this.empClaim?.claimDto.nric).subscribe((cabBlockRes: any) => {\r\n        if (cabBlockRes.body.data) {\r\n            this.nsmanCab = 'Y';\r\n        } else {\r\n            this.nsmanCab = 'N';\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  cpfPopUp(): void{\r\n    const params2 = {\r\n      nric: this.empClaim.claimDto.nric,\r\n      name: this.empClaim.nsManName,\r\n      caseId: this.empClaim.claimDto.caseId,\r\n      claimId: this.empClaim.claimDto.id,\r\n      csn:this.empClaim?.empClaimDto.csn,\r\n      coyName: this.empClaim.coyName,\r\n      claimStartDate: this.empClaim.claimDto.trgStartDate\r\n    }\r\n\r\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/ec-claim/view-cpf'],{queryParams: params2}));\r\n    console.log(url);\r\n    window.open(url, \"viewCPF\", 'location=0,menubar=0,status=0,height=1000, width=1000');\r\n  }\r\n\r\n  // loadCodes(codeType: string, codeId: string): void {\r\n  //   this.codeService.get(codeType, codeId)\r\n  //   .subscribe((code: CodeView) => {\r\n  //     this.claimOptionShort = code.label['en-US'] as string;\r\n  //   });\r\n  // }\r\n\r\n  popUpLatestOwners(): void{\r\n    const params2 = {\r\n      nric: this.empClaim.claimDto.nric,\r\n      name: this.empClaim.nsManName,\r\n      caseId: this.empClaim.claimDto.caseId,\r\n      claimId: this.empClaim.claimDto.id\r\n    }\r\n\r\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/ec-claim/view-latest-owner'],{queryParams: params2}));\r\n    console.log(url);\r\n    window.open(url, \"viewLatestOwner\", 'location=0,menubar=0,status=0,height=1000, width=1500');\r\n  }\r\n\r\n  popUpEClaim(): void{\r\n    // localStorage.setItem('empClaim', JSON.stringify(this.empClaim));\r\n    // localStorage.setItem('claimItemDetail', JSON.stringify(this.claimItemDetail));\r\n    const params2 = {\r\n      eClaimId: this.empClaim.empClaimDto.eClaimId,\r\n      role: 'role-cv'\r\n    }\r\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/ec-claim/view-eclaim'], {queryParams: params2}));\r\n    console.log(url);\r\n    window.open(url, \"viewEClaim\", 'location=0,menubar=0,status=0,height=1000, width=1500');\r\n  }\r\n\r\n  popUpPastClaim(): void{\r\n    const params2 = {\r\n      nric: this.empClaim.claimDto.nric,\r\n      name: this.empClaim.nsManName,\r\n      caseId: this.empClaim.claimDto.caseId,\r\n      claimId: this.empClaim.claimDto.id,\r\n      //dk if the coyname to take is correct\r\n      csn: this.empClaim.csn1 + this.empClaim.csn2 + this.empClaim.csn3 ,\r\n      //dk if the coyname to take is correct\r\n      coyName: this.empClaim.coyName,\r\n    }\r\n\r\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/ec-claim/view-past-claim'],{queryParams: params2}));\r\n    console.log(url);\r\n    window.open(url, \"viewPastClaim\", 'location=0,menubar=0,status=0,height=1000, width=1500');\r\n  }\r\n\r\n  popUpCpfDeviation(): void{\r\n    const params2 = {\r\n      nric: this.empClaim.claimDto.nric,\r\n      name: this.empClaim.nsManName,\r\n      caseId: this.empClaim.claimDto.caseId,\r\n      claimId: this.empClaim.claimDto.id\r\n    }\r\n\r\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/ec-claim/view-cpf-deviation'],{queryParams: params2}));\r\n    console.log(url);\r\n    window.open(url, \"viewCpfDeviation\", 'location=0,menubar=0,status=0,height=1000, width=1500');\r\n  }\r\n\r\n  popUpRemarks(): void{\r\n    const params2 = {\r\n      nric: this.empClaim.claimDto.nric,\r\n      name: this.empClaim.nsManName,\r\n      caseId: this.empClaim.claimDto.caseId\r\n    }\r\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/ec-claim/view-remarks'], {queryParams: params2}));\r\n    console.log(url);\r\n    window.open(url, \"viewRemarks\", 'location=0,menubar=0,status=0,height=1000, width=1500');\r\n  }\r\n\r\n  confirmNoActionReq(event: Event) {\r\n    this.nspConfirmationService.onConfirmPopup(event, 'noActionRequired', null, () => {\r\n      console.log(\"no action required\");\r\n      let params = new HttpParams();\r\n      params = params.append('claimId',this.empClaim?.claimDto?.id);\r\n      params = params.append('claimType', 'E');\r\n      this.claimService.noActionReq({},{params}).subscribe({\r\n        next: (resp: any) => {\r\n          if (resp && resp.ok) {\r\n            if (resp.body.data) {\r\n              this.toastService.success(resp.body.data);\r\n              this.routeToInbox();\r\n            }\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          console.log(\"error is\" + String(error?.error?.error_desc));\r\n          this.toastService.error(String(error?.error?.error_desc));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  filteredNextButtonOptions(): MenuItem[]{\r\n    if(this.nextButtonOptions.length>0){\r\n      return this.nextButtonOptions.filter((x, index)=> index!==0);\r\n    }else {\r\n      return null\r\n    };\r\n  }\r\n\r\n  initialiseNextButton() {\r\n    console.log(\"initializing next button\")\r\n    let params = new HttpParams();\r\n    if (this.routeParams?.claimInboxId) {\r\n      params = params.append('claimInboxId',this.routeParams.claimInboxId);\r\n      this.nextButtonOptions = [];\r\n      this.claimService.nextClaim({params}).subscribe((resp:any)=> {\r\n        if (resp && resp.ok) {\r\n          if (resp.body.data) {\r\n            this.nextClaimDto = resp.body.data;\r\n            if(this.nextClaimDto?.nextRecomp){\r\n              console.log(\"the next recomp claiminbox id\", this.nextClaimDto.nextRecomp?.claimInboxId)\r\n              this.nextButtonOptions.push(\r\n                {\r\n                  label: 'Next Recomp', id: \"1\", command: () => {\r\n                  this.navigateVerificationPage(this.nextClaimDto.nextRecomp);\r\n                  }\r\n                }\r\n              )\r\n            }\r\n            if(this.nextClaimDto?.nextNric){\r\n              console.log(\"the next nric claiminbox id\", this.nextClaimDto.nextNric?.claimInboxId)\r\n              this.nextButtonOptions.push(\r\n                {\r\n                  label: 'Next Nric', id: \"2\", command: () => {\r\n                  this.navigateVerificationPage(this.nextClaimDto.nextNric);\r\n                  }\r\n                }\r\n              )\r\n            }\r\n            if(this.nextClaimDto?.nextDueDt){\r\n              console.log(\"the next due date claiminbox id\", this.nextClaimDto.nextDueDt?.claimInboxId)\r\n              this.nextButtonOptions.push(\r\n                {\r\n                  label: 'Next Due', id: \"3\", command: () => {\r\n                  this.navigateVerificationPage(this.nextClaimDto.nextDueDt);\r\n                  }\r\n                }\r\n              )\r\n            }\r\n            if(this.nextClaimDto?.nextOption){\r\n              console.log(\"the next option claiminbox id\", this.nextClaimDto.nextOption?.claimInboxId)\r\n              this.nextButtonOptions.push(\r\n                {\r\n                  label: 'Next Option', id: \"4\", command: () => {\r\n                  this.navigateVerificationPage(this.nextClaimDto.nextOption);\r\n                  }\r\n                }\r\n              )\r\n            }\r\n          }\r\n        }\r\n      })\r\n      this.nextButtonOptions.sort((a: MenuItem,b: MenuItem)=> a.id.localeCompare(b.id));\r\n    }\r\n  }\r\n\r\n  navigateVerificationPage(dto: any): void{\r\n    if(dto){\r\n      console.log('nagivate next page', dto);\r\n      this.router.navigate(['/claim/ec-claim/claim-verification-ec'], {queryParams: {\r\n        claimId: dto.claimId, \r\n        caseId: dto.caseId,\r\n        claimInboxId: dto.claimInboxId,\r\n      }}).then(() => {\r\n        window.location.reload();\r\n      });\r\n    }\r\n  }\r\n\r\n  initialiseSaveSubmitButton() {\r\n    this.saveSubmitButtonOptions = [\r\n      {\r\n        label: 'Submit For Appeal', disabled:!this.isAppealCase, command: (event: Event) => {\r\n          // this.validateItemStatusChanges(event);\r\n          this.prepareDataForUpdate(event);\r\n        }\r\n      }\r\n    ]\r\n  }\r\n\r\n  updateClaimFromChild() {\r\n    if (this.empClaim.coyType === 'N' && this.companySection.editedAddress === true) {\r\n      this.empClaim.saveEmpClaimRequestDto.saveCompanyAddressInd = 'Y';\r\n    }\r\n    if (this.empClaim.coyType === 'N' && this.companySection.editedCertOfficer()) {\r\n        this.empClaim.saveEmpClaimRequestDto.saveCompanyOfficerInd = 'Y';\r\n    }\r\n\r\n    this.claimSection.saveClaimSection();\r\n    this.companySection.saveCompanySection();\r\n    this.claimSection.saveClaimItemSection();\r\n    this.empClaim.itemDetailList = this.claimItemDetail;\r\n\r\n    if (this.empClaim.saveEmpClaimRequestDto.saveActualTrainingSectionInd) {\r\n      this.actualTrgDetailSection.saveActTrgDetailsSectionChanges();\r\n    }\r\n    \r\n  }\r\n\r\n  disableSave():boolean {\r\n    let isInvalid = false;\r\n    let invalidForm = null;\r\n\r\n    if (this.claimSection?.claimForm && this.claimSection?.claimForm.invalid) {\r\n      invalidForm = 'claimForm';\r\n      isInvalid = true;\r\n    }\r\n\r\n    // if (this.claimSection && this.claimSection.checkClaimItemsInvalid()) {\r\n    //   invalidForm = 'claimItemForm';\r\n    //   isInvalid = true;\r\n    // }\r\n\r\n    if (this.companySection?.companyForm && this.companySection?.companyForm.invalid) {\r\n      invalidForm = 'companyForm';\r\n      isInvalid = true;\r\n    } \r\n    if (this.actualTrgDetailSection?.actualTrainingForm && this.actualTrgDetailSection?.actualTrainingDetailArr.invalid) {\r\n      invalidForm = 'actualTrainingForm';\r\n      isInvalid = true;\r\n    }\r\n    return isInvalid;\r\n  }\r\n\r\n  prepareDataForUpdate(event: Event) {\r\n    this.updateClaimFromChild();\r\n    const recompStatus = [\"PRA\"];\r\n    const closedTypeStatus = [\"COR\", \"CNS\", \"CCO\"];\r\n    for (const itemDetail of this.empClaim.itemDetailList) {\r\n      if (recompStatus.includes(String(itemDetail.latestStatus))) {\r\n        const originalItem = this.originalClaimItemDetail.find(originalItemDetail => originalItemDetail.claimItemId === itemDetail.claimItemId);\r\n        if ((originalItem === undefined || originalItem === null) || originalItem.latestStatus !== itemDetail.latestStatus) {\r\n            this.showRemarksDialogMap.set(\"recomp\", true);\r\n            break;\r\n        }\r\n      } else if (closedTypeStatus.includes(String(itemDetail.latestStatus))) {\r\n        const originalItem = this.originalClaimItemDetail.find(originalItemDetail => originalItemDetail.claimItemId === itemDetail.claimItemId);\r\n        if ((originalItem === undefined || originalItem === null) || originalItem.latestStatus !== itemDetail.latestStatus) {\r\n            this.showRemarksDialogMap.set(\"closeRej\", true);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    // if (this.empClaim.itemDetailList.some(item => recompStatus.includes(String(item.latestStatus)))) {\r\n    //   this.showRemarksDialogMap.set(\"recomp\", true);\r\n    // }\r\n    // if(this.empClaim.itemDetailList.some((item: any)=> closedTypeStatus.includes(String(item.latestStatus)))) {\r\n    //   this.showRemarksDialogMap.set(\"closeRej\", true);\r\n    // }\r\n    if (this.showRemarksDialogMap.get(\"closeRej\") === false && this.showRemarksDialogMap.get(\"recomp\") === false) {\r\n      this.confirmSave(event);\r\n    }\r\n  }\r\n\r\n  confirmSave(event: Event) {\r\n    this.nspConfirmationService.onConfirmPopup(event, 'saveClaim', null, () => {\r\n        this.updateClaim('save');\r\n    });\r\n  }\r\n\r\n  confirmSaveRemarks(event: Event, popupKey: string) {\r\n    this.nspConfirmationService.onConfirmPopup(event, popupKey, null,\r\n      () => {\r\n        switch (popupKey) {\r\n          case 'closeRej':\r\n            if(this.showRemarksDialogMap.get(\"closeRej\")){\r\n              this.showRemarksDialogMap.set(\"closeRej\", false);\r\n            }\r\n            break;\r\n          case 'recomp':\r\n            if(this.showRemarksDialogMap.get(\"recomp\")){\r\n              this.showRemarksDialogMap.set(\"recomp\", false);\r\n            }\r\n            break;\r\n        }\r\n        let callApi = true;\r\n        for(const [key,value] of this.showRemarksDialogMap){\r\n          console.log(`Map key is:${key} and value is:${String(value)}`);\r\n          if(value === true){\r\n            callApi = false;\r\n            break;\r\n          }\r\n        }\r\n        if(callApi){\r\n          console.log(\"called api\");\r\n          this.updateClaim('save');\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setRemarksToPayload() {\r\n    if (this.remarksForm.get('closedRejectedRemarks')?.value) {\r\n      const closedRejectedRemarks = this.remarksForm.get('closedRejectedRemarks').value;\r\n      this.empClaim.closedRemarks = closedRejectedRemarks;\r\n    }\r\n    if (this.remarksForm.get('recompRemarks')?.value) {\r\n      const recompRemarks = this.remarksForm.get('recompRemarks').value; \r\n      this.empClaim.recompRemarks = recompRemarks;\r\n    }\r\n  }\r\n\r\n  updateClaim(action: string): void{\r\n    this.consoleLog();\r\n    this.setRemarksToPayload();\r\n    console.log('UPDATE EMP CLAIM API CALLED');\r\n    // this.toastService.success('TEST: Save ' + String(this.routeParams.caseId) + ' successfully');\r\n    this.ecClaimService.updateEmpClaim(this.empClaim).subscribe((res: any) => {\r\n      console.log('update res', res);\r\n      if (res) {\r\n        if (action === 'save') {\r\n          console.log('SUCCESSFULLY SAVE');\r\n          this.toastService.success('Save ' + String(this.routeParams.caseId) + ' successfully');\r\n          const newClaimInboxId = res.body.data?.claimInboxId ? res.body.data.claimInboxId : null;\r\n          const claimInboxReason = res.body.data?.claimInboxReason ? res.body.data.claimInboxReason : \"\";\r\n          // if response claimInboxId is null means no more inbox entry of this claim for this verifier (will not refresh the page)\r\n          // reason: no claimInboxId to pass in nextClaim function\r\n          if (newClaimInboxId) {\r\n            this.router.navigate(['/claim/ec-claim/claim-verification-ec'], {queryParams: {\r\n              claimId: this.empClaim.claimDto.id, \r\n              caseId: this.empClaim.claimDto.caseId,\r\n              claimInboxId: newClaimInboxId,\r\n              reason: claimInboxReason\r\n            }}).then(() => {\r\n              window.location.reload();\r\n            });\r\n          } else {\r\n            // refresh the data only\r\n            this.getEmpHardcopyClaimDetails();\r\n            this.claimSection.ngOnInit();\r\n            this.companySection.ngOnInit();\r\n            this.actualTrgDetailSection.ngOnInit();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  routeToInbox() {\r\n    this.router.navigate(['/inbox']);\r\n  }\r\n\r\n  consoleLog() {\r\n    console.log('empClaim', this.empClaim);\r\n    console.log('claimItemDetail', this.claimItemDetail);\r\n    console.log('originalClaimItemDetail', this.originalClaimItemDetail);\r\n    console.log('nextClaimDto', this.nextClaimDto);\r\n    console.log('remarksForm', this.remarksForm);\r\n    console.log('showRemarksDialogMap', this.showRemarksDialogMap);\r\n    const selectedMap = new Map();\r\n    selectedMap.set('allExpanded', this.allExpanded);\r\n    selectedMap.set('disableClaimInput', this.disableClaimInput);\r\n    selectedMap.set('checkClaimItemsInvalid: ', this.claimSection.checkClaimItemsInvalid());\r\n    console.log('selectedMap', selectedMap);\r\n  }\r\n\r\n  retrieveItemStatusMap(): void{\r\n    this.claimService.retrieveItemStatusMap(null).subscribe((resp:any) => {\r\n      if(resp.status === 200 && resp.body.data){\r\n        this.fullItemStatusMap = new Map<string, object>(Object.entries(resp.body.data));\r\n    }},\r\n    (error: any) => {\r\n      console.log(\"error is\" + String(error?.error?.error_desc));\r\n      this.toastService.error(String(error?.error?.error_desc));\r\n    });\r\n  }\r\n\r\n  \r\n  getItemStatusDesc(code: string): string{\r\n    return (this.fullItemStatusMap.get(code) as string).toUpperCase();\r\n  }\r\n\r\n  popLetter(): void{\r\n    const claimItemObjList:any[] = [];\r\n    const claimItemList = this.claimSection.getAllAvailableItemForms();\r\n      claimItemList?.forEach(x=>{\r\n        claimItemObjList.push({\r\n          itemType: x.get('itemType').value,\r\n          itemName: x.get('itemName').value,\r\n          claimItemId: x.get('claimItemId').value,\r\n          latestItemStatusCode: x.get('itemStatus')?.value,\r\n          latestItemStatusDesc: this.getItemStatusDesc(x.get('itemStatus')?.value)\r\n        })\r\n      })\r\n      console.log(\"the outer claim item obj\", claimItemObjList)\r\n    const params2 = {\r\n      nric: this.empClaim.claimDto.nric,\r\n      name: this.empClaim.nsManName,\r\n      caseId: this.empClaim.claimDto.caseId,\r\n      claimId: this.empClaim.claimDto.id,\r\n      claimType: 'E',\r\n      trgStartDte: this.dateUtilsService.convertDateToStr(this.dateUtilsService.convertStrToDate(this.empClaim.claimDto.trgStartDate, \"YYYY-MM-DD\"),  \"DD-MM-YYYY\"),\r\n      trgEndDte: this.dateUtilsService.convertDateToStr(this.dateUtilsService.convertStrToDate(this.empClaim.claimDto.trgEndDate, \"YYYY-MM-DD\"),  \"DD-MM-YYYY\"),\r\n      csn: this.empClaim.empClaimDto.csn,\r\n      latestStatus: this.empClaim.claimDto.latestStatus,\r\n      latestStatusDesc: this.empClaim.claimDto.latestStatusDesc,\r\n      verifier: this.empClaim.claimDto.lastVerifyBy,\r\n      verifierInit: this.empClaim.claimDto.lastVerifyByInit\r\n    }\r\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/pop-up/claim-letter', {claimItemObjList: JSON.stringify(claimItemObjList)}],{queryParams: params2},\r\n    ));\r\n    console.log(url);\r\n    window.open(url, \"viewClaimLetter\", 'location=0,menubar=0,status=0,height=1000, width=1500');\r\n  }\r\n\r\n  checkAllExpanded():void{\r\n    this.allExpanded = this.accordionStates.every(a => a === true);\r\n  }\r\n\r\n  expandCollapseAll(): void{\r\n    if(this.allExpanded){\r\n      this.accordionStates.fill(false,0,3);\r\n    } else {\r\n      this.accordionStates.fill(true,0,3);\r\n    }\r\n    this.checkAllExpanded();\r\n  }\r\n\r\n}\r\n","<div class=\"sticky-header\" style=\"background-color: white\">\r\n    <p-toolbar [style]=\"{'margin': '0 auto', 'padding': '0'}\">\r\n        <div class=\"p-toolbar-group-left col-9\">\r\n            <div class=\"col-4\" [style]=\"{'display':'flex', 'align-items':'center'}\">\r\n                <div class=\"row\">\r\n                    <h2>\r\n                        {{ empClaim?.claimDto?.caseId }} {{ empClaim?.claimDto?.nric }}\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-2\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-auto\">\r\n                        <span>{{ empClaim?.nsManRank }} {{ empClaim?.nsManName }}</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-auto\">\r\n                        <span>\r\n                            <span>{{ empClaim?.nsManPhoneNum }} ({{ empClaim?.nsManGender }})</span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-4\">\r\n                        <span>CAB: <a href='javascript:' (click)=\"consoleLog()\">{{nsmanCab}}</a></span>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        Prepopulated (SYS)\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        Reason: {{ routeParams.reason }}\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-auto\">\r\n                        <span>\r\n                            Overlapping attendance: {{nsInfo4}} &nbsp; and 4 more attd\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"p-toolbar-group-right col-3\">\r\n            <div class =\"col-12 flex align-items-center flex-wrap justify-content-end\">\r\n                <div class=\"flex align-items-center\">\r\n                    Due:\r\n                </div>\r\n                &nbsp;&nbsp;\r\n                <div class=\"flex align-items-center\" *ngIf=\"dueDate && dueDate !=='Overdue'; else overdueDate\">\r\n                    <h2 [style]=\"{'text-align': 'center','margin-top':'0em'}\">{{dueDate}}</h2>\r\n                </div>\r\n                <ng-template #overdueDate>\r\n                    <div class=\"flex align-items-center\">\r\n                        <h2 [style]=\"{'color': 'red', 'text-align': 'center','margin-top':'0em'}\">{{dueDate}}</h2>\r\n                    </div>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n    </p-toolbar>\r\n    <div class = \"grid\" style=\"margin: 1em\">\r\n        <!-- <div class = \"col-6 nsp-align-left display-inline-block flex align-items-center\" > -->\r\n        <div class = \"col-6 justify-content-start gap-4 flex align-items-center\" >\r\n            <div><a href='javascript:' (click)=\"popUpCpfDeviation()\">Deviation</a></div>\r\n            <div *ngIf=\"empClaim?.empClaimDto?.eClaimId\"><a href='javascript:' (click)=\"popUpEClaim()\">eClaim</a></div>\r\n            <div><a href='javascript:' (click)=\"popUpPastClaim()\">Past Claims</a></div>\r\n            <div><a href='javascript:' (click)=\"cpfPopUp()\">CPF</a></div>\r\n            <!--TODO: when enquiry is ready with this screen-->\r\n            <div><a href='#'>Enquiry CPF/IRAS</a></div>\r\n            <div><a href='javascript:' (click)=\"popUpLatestOwners()\">Owners</a></div>\r\n            <div><a href='javascript:' (click)=\"popUpRemarks()\">Remarks</a></div>\r\n            <div><a href='#'>Prepopulated</a></div>\r\n        </div>\r\n        <div class = \"col-6 flex justify-content-end gap-2\">\r\n            <button pButton (click)=\"expandCollapseAll()\" [style]=\"{'margin-bottom': '.5em'}\">{{this.allExpanded? \"Collapse All\": \"Expand All\"}}</button>\r\n            <p-confirmPopup id=\"noActionRequired\" key=\"noActionRequired\"></p-confirmPopup>\r\n            <button *ngIf=\"empClaim?.claimDto?.latestStatus==='COM' && routeParams.reason === 'Supp Doc'\" pButton label=\"No action required\" [style]=\"{'margin-bottom': '.5em'}\" (click)=\"confirmNoActionReq($event)\"></button>\r\n            <button pButton label=\"Letter\"  [style]=\"{'margin-bottom': '.5em'}\" (click)= \"popLetter()\"></button>\r\n            <!-- (click)= \"popLetter()\" -->\r\n            <button pButton *ngIf=\"nextButtonOptions.length === 1; else nextSplitButton\" [label]=\"nextButtonOptions[0].label\"  [style]=\"{'margin-bottom': '.5em'}\" (click)=\"nextButtonOptions[0].command()\"></button>\r\n            <ng-template #nextSplitButton>\r\n                <p-splitButton *ngIf=\"nextButtonOptions.length>1\" [label]=\"nextButtonOptions[0].label\" \r\n                    (onClick)=\"nextButtonOptions[0].command()\" [model]=\"filteredNextButtonOptions()\"></p-splitButton> \r\n            </ng-template>\r\n            <p-confirmPopup id=\"save\" key=\"saveClaim\"></p-confirmPopup>\r\n            <p-splitButton *ngIf=\"saveSubmitButtonOptions.length>0\" label=\"Save\"\r\n                [disabled]=\"disableSave()\" (onClick)=\"prepareDataForUpdate($event)\" [model]=\"saveSubmitButtonOptions\"></p-splitButton>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<p-messages severity=\"warn\" *ngIf=\"claimSection?.claimForm && claimSection?.isLongPeriod()\">\r\n    <ng-template key=\"CLM-W003\" pTemplate >\r\n        <div class=\"ml-2\">{{ claimSection.claimJson.nspay2App.claim.warning['CLM-W003'] }}</div>\r\n    </ng-template>\r\n</p-messages>\r\n<p-messages severity=\"warn\" *ngIf=\"claimSection?.claimForm && claimSection?.isLateClaim()\">\r\n    <ng-template key=\"CLM-W004\" pTemplate >\r\n        <div class=\"ml-2\">{{ claimSection.claimJson.nspay2App.claim.warning['CLM-W004'] }}</div>\r\n    </ng-template>\r\n</p-messages>\r\n<p-messages severity=\"warn\" *ngIf=\"claimSection?.claimForm && claimSection?.workHourStartMoreThanEnd()\">\r\n    <ng-template key=\"CLM-W004\" pTemplate >\r\n        <div class=\"ml-2\">{{ claimSection.claimJson.nspay2App.claim.warning['CLM-W006'] }}</div>\r\n    </ng-template>\r\n</p-messages>\r\n\r\n<p-accordion>\r\n    <n2-claim-section #claimSection *ngIf=\"empClaim && subject && claimItemDetail && fullItemStatusMap\" (syncWithActualTrgDetail)=\"getActualTrgItem($event)\"\r\n        [empClaim]=\"empClaim\" [subject]=\"subject\" [claimItemDetail]=\"claimItemDetail\" [existingClaimItemMap]=\"existingClaimItemMap\"\r\n        [fullItemStatusMap]=\"fullItemStatusMap\" [(disableInput)]=\"disableClaimInput\" (click)=\"checkAllExpanded()\" [(selected)]=\"accordionStates[0]\">\r\n    </n2-claim-section>\r\n    <n2-company-section #companySection *ngIf=\"empClaim\" [empClaimRequest]=\"empClaim\" [disableInput]=\"disableClaimInput\"\r\n        (click)=\"checkAllExpanded()\" [(selected)]=\"accordionStates[1]\">\r\n    </n2-company-section>\r\n    <n2-actual-training-detail-section #actualTrgDetailSection *ngIf=\"actualTrgDetail\" [actualTrgDetail]=\"actualTrgDetail\" [empClaim]=\"empClaim\" \r\n        [actualTrgItem]=\"actualTrgItem\" (click)=\"checkAllExpanded()\" [(selected)]=\"accordionStates[2]\" [disableInput]=\"disableClaimInput\">\r\n    </n2-actual-training-detail-section>\r\n    <n2-item-change-history-section  #itemChangeHistorySection *ngIf=\"itemChangeHistory\" [itemChangeHistory]=\"itemChangeHistory\"\r\n        (click)=\"checkAllExpanded()\" [(selected)]=\"accordionStates[3]\">\r\n    </n2-item-change-history-section>\r\n</p-accordion>\r\n\r\n<p-dialog header=\"Remarks\" [visible]=\"showRemarksDialogMap.get('closeRej')\"\r\n[modal]=\"true\" [style]=\"{width: '50vw'}\" [draggable]=\"false\" [resizable]=\"false\" [formGroup]=\"remarksForm\">\r\n    <h6>Please key in remarks for submission of a claim with closed/rejected items</h6>\r\n    <textarea rows=\"5\"\r\n    class=\"inputfield w-full\"\r\n    inputId = \"remark\"\r\n    formControlName = \"closedRejectedRemarks\"\r\n    maxlength=\"450\"\r\n    pInputTextarea\r\n    ></textarea>\r\n    <ng-template pTemplate=\"footer\">\r\n        <button pButton label=\"Cancel\" type=\"button\" (click)=\"showRemarksDialogMap.set('closeRej', false)\" class=\"p-button-danger\"></button>\r\n        <p-confirmPopup key = \"closeRej\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n        <button pButton label=\"Submit\" type=\"button\" (click)=\"confirmSaveRemarks($event, 'closeRej')\" \r\n        [disabled]=\"remarksForm.get('closedRejectedRemarks')?.hasError('required')\"></button>\r\n        <button pButton label=\"log\" type=\"button\" (click)=\"consoleLog()\" class=\"p-button-primary\"></button>\r\n    </ng-template>\r\n</p-dialog>\r\n\r\n\r\n<p-dialog header=\"Remarks\" [visible]=\"showRemarksDialogMap.get('recomp')\"\r\n[modal]=\"true\" [style]=\"{width: '50vw'}\" [draggable]=\"false\" [resizable]=\"false\" [formGroup]=\"remarksForm\">\r\n<h6>Please key in remarks for recomputation</h6>\r\n<textarea rows=\"5\"\r\n    class=\"inputfield w-full\"\r\n    inputId = \"remark\"\r\n    formControlName = \"recompRemarks\"\r\n    maxlength=\"450\"\r\n    pInputTextarea\r\n    ></textarea>\r\n    <ng-template pTemplate=\"footer\">\r\n        <button pButton label=\"Cancel\" type=\"button\" (click)=\"showRemarksDialogMap.set('recomp', false)\" class=\"p-button-danger\"></button>\r\n        <p-confirmPopup key = \"recomp\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n        <button pButton label=\"Submit\" type=\"button\" (click)=\"confirmSaveRemarks($event, 'recomp')\" \r\n        [disabled]=\"remarksForm.get('recompRemarks')?.hasError('required')\"></button>\r\n        <button pButton label=\"log\" type=\"button\" (click)=\"consoleLog()\" class=\"p-button-primary\"></button>\r\n    </ng-template>\r\n</p-dialog>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}