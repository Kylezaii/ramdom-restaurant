{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClaimLetterComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst http_1 = require(\"@angular/common/http\");\nconst forms_1 = require(\"@angular/forms\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i2 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i3 = tslib_1.__importStar(require(\"app/report-letter/letter/service/letter.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/claim/service/claim.service\"));\nconst i5 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i6 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i7 = tslib_1.__importStar(require(\"app/core/auth/state-storage.service\"));\nconst i8 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i9 = tslib_1.__importStar(require(\"../service/pop-up.service\"));\nconst i10 = tslib_1.__importStar(require(\"ngx-webstorage\"));\nconst i11 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i12 = tslib_1.__importStar(require(\"@angular/platform-browser\"));\nconst i13 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i15 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i16 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i17 = tslib_1.__importStar(require(\"primeng/dropdown\"));\nconst i18 = tslib_1.__importStar(require(\"primeng/dialog\"));\nconst _c0 = function () {\n  return {\n    \"margin-bottom\": \"1em\"\n  };\n};\nconst _c1 = function () {\n  return {\n    \"width\": \"30em\"\n  };\n};\nconst _c2 = function () {\n  return {\n    \"margin-right\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nfunction ClaimLetterComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"div\", 11);\n    i0.ɵɵtext(3, \"\\n            \");\n    i0.ɵɵelementStart(4, \"h5\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n        \");\n    i0.ɵɵelement(8, \"hr\");\n    i0.ɵɵtext(9, \"\\n        \");\n    i0.ɵɵelementStart(10, \"div\", 12);\n    i0.ɵɵtext(11, \"\\n            \");\n    i0.ɵɵelement(12, \"p-dropdown\", 13);\n    i0.ɵɵtext(13, \"\\n            \");\n    i0.ɵɵelementStart(14, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ClaimLetterComponent_div_2_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.navigateCreateNewLetter(null));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c0));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.params.caseId, \" Create New Letter\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(9, _c1));\n    i0.ɵɵproperty(\"options\", ctx_r0.letterTypeList);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(10, _c2));\n  }\n}\nfunction ClaimLetterComponent_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelementStart(3, \"th\", 15);\n    i0.ɵɵtext(4, \"SN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                    \");\n    i0.ɵɵelementStart(6, \"th\", 16);\n    i0.ɵɵtext(7, \"Submitted Date\");\n    i0.ɵɵelement(8, \"p-sortIcon\", 17);\n    i0.ɵɵtext(9, \"\\n                        \");\n    i0.ɵɵelement(10, \"p-columnFilter\", 18);\n    i0.ɵɵtext(11, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n                    \");\n    i0.ɵɵelementStart(13, \"th\", 19);\n    i0.ɵɵtext(14, \"Generated Date\");\n    i0.ɵɵelement(15, \"p-sortIcon\", 20);\n    i0.ɵɵtext(16, \"\\n                        \");\n    i0.ɵɵelement(17, \"p-columnFilter\", 21);\n    i0.ɵɵtext(18, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n                    \");\n    i0.ɵɵelementStart(20, \"th\", 22);\n    i0.ɵɵtext(21, \"Letter Type\");\n    i0.ɵɵelement(22, \"p-sortIcon\", 23);\n    i0.ɵɵtext(23, \"\\n                        \");\n    i0.ɵɵelement(24, \"p-columnFilter\", 24);\n    i0.ɵɵtext(25, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n                    \");\n    i0.ɵɵelementStart(27, \"th\", 25);\n    i0.ɵɵtext(28, \"Send To\");\n    i0.ɵɵelement(29, \"p-sortIcon\", 26);\n    i0.ɵɵtext(30, \"\\n                        \");\n    i0.ɵɵelement(31, \"p-columnFilter\", 27);\n    i0.ɵɵtext(32, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(33, \"\\n                    \");\n    i0.ɵɵelementStart(34, \"th\", 28);\n    i0.ɵɵtext(35, \"Copy To\");\n    i0.ɵɵelement(36, \"p-sortIcon\", 29);\n    i0.ɵɵtext(37, \"\\n                        \");\n    i0.ɵɵelement(38, \"p-columnFilter\", 30);\n    i0.ɵɵtext(39, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(40, \"\\n                    \");\n    i0.ɵɵelementStart(41, \"th\", 31);\n    i0.ɵɵtext(42, \"Author\");\n    i0.ɵɵelement(43, \"p-sortIcon\", 32);\n    i0.ɵɵtext(44, \"\\n                        \");\n    i0.ɵɵelement(45, \"p-columnFilter\", 33);\n    i0.ɵɵtext(46, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(47, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(48, \"\\n            \");\n  }\n}\nfunction ClaimLetterComponent_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"tr\", 34);\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                    \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                    \");\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n                    \");\n    i0.ɵɵelementStart(12, \"td\")(13, \"a\", 35);\n    i0.ɵɵlistener(\"click\", function ClaimLetterComponent_ng_template_18_Template_a_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const data_r10 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onRedirectLetterType(data_r10.value.letterFormId, data_r10.value.letterTypeCode, data_r10.value.owner, data_r10.value.genDt));\n    });\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(15, \"\\n                    \");\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n                    \");\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                    \");\n    i0.ɵɵelementStart(22, \"td\");\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n            \");\n  }\n  if (rf & 2) {\n    const data_r10 = ctx.$implicit;\n    const rowIndex_r11 = ctx.rowIndex;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", ctx_r3.getRow(rowIndex_r11));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(rowIndex_r11 + 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(data_r10.value.submittedDt);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(data_r10.value.genDt);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(data_r10.value.letterTypeTitle);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(data_r10.value.sendTo);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(data_r10.value.copyTo);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(data_r10.value.authorInit);\n  }\n}\nfunction ClaimLetterComponent_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelementStart(3, \"td\", 36);\n    i0.ɵɵtext(4, \"No records found.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n            \");\n  }\n}\nfunction ClaimLetterComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelement(2, \"object\", 38);\n    i0.ɵɵtext(3, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"data\", ctx_r5.previewLetterUrl, i0.ɵɵsanitizeResourceUrl);\n  }\n}\nconst _c3 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nfunction ClaimLetterComponent_ng_template_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"div\", 40);\n    i0.ɵɵtext(4, \"\\n                \");\n    i0.ɵɵelement(5, \"i\", 41)(6, \"br\");\n    i0.ɵɵtext(7, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n            \");\n    i0.ɵɵelementStart(9, \"div\", 40);\n    i0.ɵɵtext(10, \"\\n                Non Claim Owners are not allowed to update/delete letters. Please place all Claims in inbox to update/delete Letters.\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n        \");\n    i0.ɵɵelementStart(13, \"button\", 42);\n    i0.ɵɵlistener(\"click\", function ClaimLetterComponent_ng_template_29_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.displayPreviewLetterDialog.display = false);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n    \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(13);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(2, _c3));\n  }\n}\nconst _c4 = function () {\n  return [\"role-cv\", \"role-ca\"];\n};\nconst _c5 = function () {\n  return [5, 10, 15, 20];\n};\nconst _c6 = function () {\n  return {\n    width: \"60vw\",\n    height: \"100%\"\n  };\n};\nclass ClaimLetterComponent {\n  get generatedLetterArr() {\n    return this.letterForm?.get('generatedLetterArr');\n  }\n  constructor(dateUtilsService, route, letterService, claimService, formBuilder, accountService, router, stateStorageService, ns2Http, popUpService, $localStorage, toastService, domSanitizer) {\n    this.dateUtilsService = dateUtilsService;\n    this.route = route;\n    this.letterService = letterService;\n    this.claimService = claimService;\n    this.formBuilder = formBuilder;\n    this.accountService = accountService;\n    this.router = router;\n    this.stateStorageService = stateStorageService;\n    this.ns2Http = ns2Http;\n    this.popUpService = popUpService;\n    this.$localStorage = $localStorage;\n    this.toastService = toastService;\n    this.domSanitizer = domSanitizer;\n    this.totalRecords = 0;\n    this.letterTypeList = [];\n    this.pageSize = 5;\n    this.eventFirst = 0;\n    this.pageData = {\n      currentPage: 0\n    };\n    this.displayPreviewLetterDialog = {\n      display: false\n    };\n    this.letterForm = this.formBuilder.group({\n      letterType: new forms_1.FormControl(null, forms_1.Validators.required),\n      generatedLetterArr: this.formBuilder.array([])\n    });\n    console.log(\"test\");\n    this.accountService.identity().subscribe(account => {\n      this.currentAccount = this.copyAccount(account);\n    });\n  }\n  ngOnInit() {\n    //clear cache in pop up service except for initial page\n    this.popUpService.refreshStates();\n    this.route.queryParams.subscribe(params => {\n      this.params = params;\n      this.getLettersByClaimType(this.params.claimType);\n      const activateRouteObj = {\n        queryParams: params,\n        snapshotParams: this.route.snapshot.params\n      };\n      window.localStorage.setItem('claim-letter-route', JSON.stringify(activateRouteObj));\n    });\n  }\n  copyAccount(account) {\n    return {\n      email: account.email,\n      firstName: account.firstName,\n      lastName: account.lastName,\n      login: account.username,\n      authorities: account.authorities,\n      groups: account.groups,\n      subjectId: account.subjectId\n    };\n  }\n  getLettersByClaimType(claimType) {\n    let params = new http_1.HttpParams();\n    params = params.append(\"claimType\", claimType);\n    this.letterService.getLettersByClaimType({\n      params\n    }).subscribe(resp => {\n      if (resp.status === 200 && resp.body.data) {\n        resp.body.data.forEach(x => {\n          this.letterTypeList.push({\n            key: x.letterTypeCode,\n            label: x.letterTypeTitle\n          });\n        });\n        this.letterForm.get('letterType').setValue(this.letterTypeList[0]);\n      }\n    });\n  }\n  onPage(event) {\n    console.log(\"pageevent\", event);\n    this.eventFirst = event.first;\n    this.pageData.currentPage = event.first / event.rows;\n  }\n  retrieveClaimLetters(event) {\n    //retrieve by current user first\n    this.lastTableLazyLoadEvent = event;\n    this.loading = true;\n    this.pageSize = event.rows;\n    setTimeout(() => {\n      const options = this.ns2Http.convertLazyEvent(event, this.pageData, this.pageSize);\n      options.params = options.params.append(\"claimType\", this.params.claimType);\n      this.claimService.retrieveClaimLetters(options).subscribe(resp => {\n        if (resp.status === 200 && resp.body.data) {\n          console.log(\"data is\", resp);\n          this.constructForm(resp.body.data.dtoList);\n          this.totalRecords = resp.body.data.total_no_of_elems;\n        }\n        this.loading = false;\n      });\n    }, 0);\n  }\n  getRow(rowIndex) {\n    return rowIndex % this.pageSize;\n  }\n  constructForm(dtoList) {\n    this.generatedLetterArr.clear();\n    dtoList.forEach(x => {\n      this.generatedLetterArr.push(this.addRow(x));\n    });\n  }\n  addRow(data) {\n    return this.formBuilder.group({\n      letterFormId: data.letterFormId,\n      submittedDt: data.submittedDt,\n      author: data.author,\n      authorInit: data.authorInit,\n      claimId: data.claimId,\n      copyTo: data.copyTo,\n      sendTo: data.sendTo,\n      genDt: data.genDt,\n      letterTypeTitle: data.letterTypeTitle,\n      letterTypeCode: data.letterTypeCode,\n      owner: data.owner\n    });\n  }\n  //criteria for showing view letter window with foot note\n  //non CV/CA\n  //CV or CA but non owner\n  //recomp letter for CV,\n  //non recomp letter for CA\n  onRedirectLetterType(letterFormId, letterTypeCode, owner, genDt) {\n    const authorities = this.currentAccount?.authorities;\n    console.log(\"the auth\", authorities);\n    console.log(\"the letter type ciode\", letterTypeCode);\n    console.log(\"this.currentAccount.subjectId\", this.currentAccount.subjectId);\n    console.log(\"owner\", owner);\n    if (!['role-ca', 'role-cv'].some(el => authorities.includes(el)) || authorities.includes('role-cv') && (letterTypeCode === 'S12' || letterTypeCode === 'E08') || authorities.includes('role-ca') && !(letterTypeCode === 'S12' || letterTypeCode === 'E08') || ['role-ca', 'role-cv'].some(el => authorities.includes(el)) && this.currentAccount.subjectId !== owner) {\n      console.log(\"cheeto\");\n      this.previewLetter(letterFormId);\n    } else {\n      this.navigateCreateNewLetter(letterFormId);\n    }\n  }\n  previewLetter(letterFormId) {\n    console.log(\"viewing letter\");\n    let params = new http_1.HttpParams();\n    params = params.append('letterFormId', letterFormId);\n    this.claimService.previewClaimLetter(null, {\n      params,\n      responseType: 'blob'\n    }).subscribe(resp => {\n      if (resp && resp.status === 200) {\n        console.log(\"preview letter blob generated and returned successfully\");\n        const data = resp;\n        this.displayPreviewLetter(data);\n      }\n    }, error => {\n      console.log(\"error is\" + String(error?.error?.error_desc));\n      this.toastService.error(\"Failed to connect to Letter Generator, please try again. If the error persists, please contact the NSPAY Helpdesk\");\n    });\n  }\n  displayPreviewLetter(data) {\n    const blob = new Blob([data.body], {\n      type: data.headers.get('content-type')\n    });\n    this.previewLetterUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(URL.createObjectURL(blob) + '#toolbar=0');\n    this.displayPreviewLetterDialog.display = true;\n  }\n  navigateCreateNewLetter(letterFormId) {\n    // window.location.reload();\n    this.router.navigate(['claim/pop-up/create-new-letter', {\n      claimItemObjList: this.route.snapshot.paramMap.get(\"claimItemObjList\")\n    }], {\n      queryParams: {\n        caseId: this.params.caseId,\n        claimId: this.params.claimId,\n        claimType: this.params.claimType,\n        letterTypeCode: this.letterForm.get('letterType').value.key,\n        letterTypeTitle: this.letterForm.get('letterType').value.label,\n        nric: this.params.nric,\n        itemType: this.params.itemType,\n        itemName: this.params.itemName,\n        claimItemId: this.params.claimItemId,\n        latestStatus: this.params.latestStatus,\n        latestStatusDesc: this.params.latestStatusDesc,\n        trgStartDte: this.params.trgStartDte,\n        trgEndDte: this.params.trgEndDte,\n        csn: this.params.csn,\n        verifier: this.params.verifier,\n        verifierInit: this.params.verifierInit,\n        letterFormId\n      }\n    }).then(() => {\n      window.location.reload();\n    });\n  }\n}\nexports.ClaimLetterComponent = ClaimLetterComponent;\nClaimLetterComponent.ɵfac = function ClaimLetterComponent_Factory(t) {\n  return new (t || ClaimLetterComponent)(i0.ɵɵdirectiveInject(i1.DateUtilsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.LetterService), i0.ɵɵdirectiveInject(i4.ClaimService), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.AccountService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i7.StateStorageService), i0.ɵɵdirectiveInject(i8.Ns2HttpService), i0.ɵɵdirectiveInject(i9.PopUpService), i0.ɵɵdirectiveInject(i10.LocalStorageService), i0.ɵɵdirectiveInject(i11.CustomToastService), i0.ɵɵdirectiveInject(i12.DomSanitizer));\n};\nClaimLetterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClaimLetterComponent,\n  selectors: [[\"n2-claim-letter\"]],\n  decls: 32,\n  vars: 23,\n  consts: [[3, \"formGroup\"], [4, \"ngIf\"], [\"formArrayName\", \"generatedLetterArr\"], [\"styleClass\", \"p-datatable-gridlines p-datatable-striped\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"responsiveLayout\", \"scroll\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"totalRecords\", \"filterDelay\", \"loading\", \"rowsPerPageOptions\", \"lazy\", \"onPage\", \"onLazyLoad\"], [\"dataTable\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"header\", \"View Letter\", 3, \"visible\", \"modal\", \"closable\", \"dismissableMask\", \"draggable\", \"resizable\", \"visibleChange\"], [\"style\", \"height: 100%\", 4, \"ngIf\"], [\"pTemplate\", \"footer\"], [1, \"grid\", \"col-12\"], [1, \"flex\", \"justify-content-start\", \"gap-4\"], [\"id\", \"letterType\", \"formControlName\", \"letterType\", \"optionLabel\", \"label\", \"placeholder\", \"Select\", 3, \"options\"], [\"pButton\", \"\", \"label\", \"Create Letter\", 3, \"click\"], [\"scope\", \"col\"], [\"scope\", \"col\", \"pSortableColumn\", \"submittedDt\"], [\"field\", \"submittedDt\"], [\"type\", \"text\", \"field\", \"submittedDt\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"genDt\"], [\"field\", \"genDt\"], [\"type\", \"text\", \"field\", \"genDt\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"letterTypeTitle\"], [\"field\", \"letterTypeTitle\"], [\"type\", \"text\", \"field\", \"letterTypeTitle\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"sendTo\"], [\"field\", \"sendTo\"], [\"type\", \"text\", \"field\", \"sendTo\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"copyTo\"], [\"field\", \"copyTo\"], [\"type\", \"text\", \"field\", \"copyTo\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"authorInit\"], [\"field\", \"authorInit\"], [\"type\", \"text\", \"field\", \"authorInit\", \"display\", \"menu\", \"matchMode\", \"contains\"], [3, \"formGroupName\"], [\"href\", \"javascript:\", 3, \"click\"], [\"colspan\", \"7\"], [2, \"height\", \"100%\"], [\"type\", \"application/pdf\", \"width\", \"100%\", \"height\", \"100%\"], [1, \"flex\", \"align-items-center\", \"gap-2\"], [1, \"flex\", \"justify-content-start\"], [1, \"pi\", \"pi-info-circle\", 2, \"font-size\", \"1rem\"], [\"pButton\", \"\", \"label\", \"Close\", 1, \"p-button-danger\", 3, \"click\"]],\n  template: function ClaimLetterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵtext(1, \"\\n    \");\n      i0.ɵɵtemplate(2, ClaimLetterComponent_div_2_Template, 17, 11, \"div\", 1);\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵelement(4, \"br\");\n      i0.ɵɵtext(5, \"\\n    \");\n      i0.ɵɵelementStart(6, \"h5\");\n      i0.ɵɵtext(7, \"View Generated Letters\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \"\\n    \");\n      i0.ɵɵelement(9, \"hr\");\n      i0.ɵɵtext(10, \"\\n    \");\n      i0.ɵɵelementStart(11, \"div\", 2);\n      i0.ɵɵtext(12, \"\\n        \");\n      i0.ɵɵelementStart(13, \"p-table\", 3, 4);\n      i0.ɵɵlistener(\"onPage\", function ClaimLetterComponent_Template_p_table_onPage_13_listener($event) {\n        return ctx.onPage($event);\n      })(\"onLazyLoad\", function ClaimLetterComponent_Template_p_table_onLazyLoad_13_listener($event) {\n        return ctx.retrieveClaimLetters($event);\n      });\n      i0.ɵɵtext(15, \"\\n\\n            \");\n      i0.ɵɵtemplate(16, ClaimLetterComponent_ng_template_16_Template, 49, 0, \"ng-template\", 5);\n      i0.ɵɵtext(17, \"\\n            \");\n      i0.ɵɵtemplate(18, ClaimLetterComponent_ng_template_18_Template, 26, 8, \"ng-template\", 6);\n      i0.ɵɵtext(19, \"\\n            \");\n      i0.ɵɵtemplate(20, ClaimLetterComponent_ng_template_20_Template, 7, 0, \"ng-template\", 7);\n      i0.ɵɵtext(21, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(22, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(24, \"\\n\\n\");\n      i0.ɵɵelementStart(25, \"p-dialog\", 8);\n      i0.ɵɵlistener(\"visibleChange\", function ClaimLetterComponent_Template_p_dialog_visibleChange_25_listener($event) {\n        return ctx.displayPreviewLetterDialog.display = $event;\n      });\n      i0.ɵɵtext(26, \"\\n    \");\n      i0.ɵɵtemplate(27, ClaimLetterComponent_div_27_Template, 4, 1, \"div\", 9);\n      i0.ɵɵtext(28, \"\\n\\n    \");\n      i0.ɵɵtemplate(29, ClaimLetterComponent_ng_template_29_Template, 15, 3, \"ng-template\", 10);\n      i0.ɵɵtext(30, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(31, \"\\n\\n\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.letterForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.accountService.hasAnyAuthority(i0.ɵɵpureFunction0(20, _c4)));\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"value\", ctx.generatedLetterArr.controls)(\"paginator\", true)(\"rows\", ctx.pageSize)(\"showCurrentPageReport\", true)(\"totalRecords\", ctx.totalRecords)(\"filterDelay\", 0)(\"loading\", ctx.loading)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(21, _c5))(\"lazy\", true);\n      i0.ɵɵadvance(12);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(22, _c6));\n      i0.ɵɵproperty(\"visible\", ctx.displayPreviewLetterDialog.display)(\"modal\", true)(\"closable\", false)(\"dismissableMask\", true)(\"draggable\", false)(\"resizable\", false);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.previewLetterUrl != undefined);\n    }\n  },\n  dependencies: [i13.NgIf, i5.ɵNgNoValidate, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i5.FormGroupName, i5.FormArrayName, i14.PrimeTemplate, i15.ButtonDirective, i16.Table, i16.SortableColumn, i16.SortIcon, i16.ColumnFilter, i17.Dropdown, i18.Dialog],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbGFpbS1sZXR0ZXIuY29tcG9uZW50LnNjc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvY2xhaW0vcG9wLXVwL2NsYWltLWxldHRlci9jbGFpbS1sZXR0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLDRLQUE0SyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ClaimLetterComponent","generatedLetterArr","letterForm","get","constructor","dateUtilsService","route","letterService","claimService","formBuilder","accountService","router","stateStorageService","ns2Http","popUpService","$localStorage","toastService","domSanitizer","currentPage","display","group","letterType","forms_1","required","array","console","log","identity","subscribe","account","currentAccount","copyAccount","ngOnInit","refreshStates","queryParams","params","getLettersByClaimType","claimType","activateRouteObj","snapshotParams","snapshot","window","localStorage","setItem","JSON","stringify","email","firstName","lastName","login","username","authorities","groups","subjectId","http_1","append","resp","status","body","data","forEach","x","letterTypeList","push","key","letterTypeCode","label","letterTypeTitle","setValue","onPage","event","eventFirst","first","pageData","rows","retrieveClaimLetters","lastTableLazyLoadEvent","loading","pageSize","setTimeout","options","convertLazyEvent","constructForm","dtoList","totalRecords","total_no_of_elems","getRow","rowIndex","clear","addRow","letterFormId","submittedDt","author","authorInit","claimId","copyTo","sendTo","genDt","owner","onRedirectLetterType","some","el","includes","previewLetter","navigateCreateNewLetter","previewClaimLetter","responseType","displayPreviewLetter","error","String","error_desc","blob","Blob","type","headers","previewLetterUrl","bypassSecurityTrustResourceUrl","URL","createObjectURL","displayPreviewLetterDialog","navigate","claimItemObjList","paramMap","caseId","value","nric","itemType","itemName","claimItemId","latestStatus","latestStatusDesc","trgStartDte","trgEndDte","csn","verifier","verifierInit","then","location","reload","exports","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\pop-up\\claim-letter\\claim-letter.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\pop-up\\claim-letter\\claim-letter.component.html"],"sourcesContent":["import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpParams, HttpRequest } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ClaimService } from 'app/claim/service/claim.service';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { StateStorageService } from 'app/core/auth/state-storage.service';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { LetterService } from 'app/report-letter/letter/service/letter.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { Observable, tap } from 'rxjs';\r\nimport { PopUpService } from '../service/pop-up.service';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\n\r\n@Component({\r\n  selector: 'n2-claim-letter',\r\n  templateUrl: './claim-letter.component.html',\r\n  styleUrls: ['./claim-letter.component.scss']\r\n})\r\nexport class ClaimLetterComponent implements OnInit {\r\n  totalRecords = 0;\r\n  params: any;\r\n  loading!: boolean;\r\n  letterTypeList: any[] = [];\r\n  currentAccount: any;\r\n  pageSize = 5;\r\n  eventFirst = 0;\r\n  pageData: { currentPage: number } = {\r\n    currentPage: 0\r\n  }\r\n  lastTableLazyLoadEvent: LazyLoadEvent;\r\n  displayPreviewLetterDialog: any = { display: false };\r\n  previewLetterUrl: SafeResourceUrl;\r\n\r\n  letterForm: FormGroup = this.formBuilder.group({\r\n    letterType: new FormControl(null, Validators.required),\r\n    generatedLetterArr: this.formBuilder.array([])\r\n  });\r\n\r\n\r\n  \r\n  get generatedLetterArr(): FormArray {\r\n    return this.letterForm?.get('generatedLetterArr') as FormArray\r\n  }\r\n\r\n\r\n  constructor(\r\n    public dateUtilsService: DateUtilsService,\r\n    private route: ActivatedRoute,\r\n    private letterService: LetterService,\r\n    private claimService: ClaimService,\r\n    private formBuilder: FormBuilder,\r\n    public accountService: AccountService,\r\n    private router: Router,\r\n    private stateStorageService: StateStorageService,\r\n    private ns2Http: Ns2HttpService,\r\n    private popUpService: PopUpService,\r\n    private $localStorage: LocalStorageService,\r\n    private toastService: CustomToastService,\r\n    private domSanitizer: DomSanitizer,\r\n\r\n  ) {\r\n    console.log(\"test\");\r\n    this.accountService.identity().subscribe((account:any) => {\r\n      this.currentAccount = this.copyAccount(account);\r\n    });\r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    //clear cache in pop up service except for initial page\r\n    this.popUpService.refreshStates();\r\n    this.route.queryParams.subscribe((params) => {\r\n      this.params = params;     \r\n      this.getLettersByClaimType(this.params.claimType);\r\n      const activateRouteObj = {\r\n        queryParams: params,\r\n        snapshotParams: this.route.snapshot.params\r\n      }\r\n      window.localStorage.setItem('claim-letter-route',JSON.stringify(activateRouteObj));\r\n    });\r\n  }\r\n\r\n  copyAccount(account: any): any {\r\n    return {\r\n      email: account.email as string,\r\n      firstName: account.firstName as string,\r\n      lastName: account.lastName as string,\r\n      login: account.username as string,\r\n      authorities: account.authorities,\r\n      groups: account.groups,\r\n      subjectId: account.subjectId\r\n    };\r\n  }\r\n\r\n  getLettersByClaimType(claimType: string){\r\n    let params = new HttpParams();\r\n    params = params.append(\"claimType\", claimType)\r\n    this.letterService.getLettersByClaimType({params}).subscribe(resp => {\r\n      if (resp.status === 200 && resp.body.data) {\r\n        resp.body.data.forEach((x:any)=>{\r\n          this.letterTypeList.push({\r\n            key: x.letterTypeCode,\r\n            label: x.letterTypeTitle\r\n          });\r\n        })\r\n        this.letterForm.get('letterType').setValue(this.letterTypeList[0]);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  onPage(event: any): void {\r\n    console.log(\"pageevent\", event);\r\n    this.eventFirst = event.first;\r\n    this.pageData.currentPage = event.first / event.rows;\r\n  }\r\n\r\n  retrieveClaimLetters(event: any): void{\r\n    //retrieve by current user first\r\n    this.lastTableLazyLoadEvent = event;\r\n    this.loading = true;\r\n    this.pageSize = event.rows;\r\n    setTimeout(() => {\r\n\r\n      const options = this.ns2Http.convertLazyEvent(event, this.pageData, this.pageSize);\r\n      options.params = options.params.append(\"claimType\", this.params.claimType,);\r\n\r\n      this.claimService.retrieveClaimLetters(options).subscribe(resp => {\r\n        if (resp.status === 200 && resp.body.data) {\r\n          console.log(\"data is\", resp);\r\n          this.constructForm(resp.body.data.dtoList);\r\n          this.totalRecords = resp.body.data.total_no_of_elems;\r\n        }\r\n        this.loading = false;\r\n      });\r\n    }, 0);\r\n  }\r\n\r\n  getRow(rowIndex: number){\r\n    return rowIndex%this.pageSize;\r\n  }\r\n  \r\n  constructForm(dtoList: any[]): void {\r\n    this.generatedLetterArr.clear();\r\n    dtoList.forEach(x=>{\r\n      this.generatedLetterArr.push(this.addRow(x));\r\n    })\r\n  }\r\n\r\n  addRow(data: any) : FormGroup{\r\n    return this.formBuilder.group({\r\n      letterFormId: data.letterFormId,\r\n      submittedDt: data.submittedDt,\r\n      author: data.author,\r\n      authorInit: data.authorInit,\r\n      claimId: data.claimId,\r\n      copyTo: data.copyTo,\r\n      sendTo: data.sendTo,\r\n      genDt: data.genDt,\r\n      letterTypeTitle: data.letterTypeTitle,\r\n      letterTypeCode: data.letterTypeCode,\r\n      owner: data.owner\r\n    });\r\n  }\r\n\r\n  //criteria for showing view letter window with foot note\r\n  //non CV/CA\r\n  //CV or CA but non owner\r\n  //recomp letter for CV,\r\n  //non recomp letter for CA\r\n  onRedirectLetterType(letterFormId: string, letterTypeCode: string, owner: string, genDt: string){\r\n    const authorities = this.currentAccount?.authorities as string[];\r\n    console.log(\"the auth\", authorities)\r\n    console.log(\"the letter type ciode\", letterTypeCode)\r\n    console.log(\"this.currentAccount.subjectId\", this.currentAccount.subjectId)\r\n    console.log(\"owner\", owner)\r\n\r\n    if(!(['role-ca', 'role-cv']).some(el=> authorities.includes(el)) || \r\n    (authorities.includes('role-cv') && (letterTypeCode === 'S12' || letterTypeCode=== 'E08')) ||\r\n    (authorities.includes('role-ca') && !(letterTypeCode === 'S12' || letterTypeCode=== 'E08'))\r\n    || ((['role-ca', 'role-cv']).some(el=> authorities.includes(el)) && this.currentAccount.subjectId !== owner)){\r\n      console.log(\"cheeto\")\r\n      this.previewLetter(letterFormId);\r\n\r\n    }else{\r\n      this.navigateCreateNewLetter(letterFormId);\r\n    }\r\n\r\n  }\r\n\r\n  previewLetter(letterFormId: string): void{\r\n    console.log(\"viewing letter\")\r\n    let params = new HttpParams();\r\n    params = params.append('letterFormId', letterFormId);\r\n\r\n\r\n    this.claimService.previewClaimLetter(null, {params,  responseType: 'blob'}).subscribe((resp:any) => {\r\n      if(resp && resp.status === 200){\r\n        console.log(\"preview letter blob generated and returned successfully\");\r\n        const data = resp;\r\n        this.displayPreviewLetter(data);\r\n      }\r\n    },\r\n    (error: any) => {\r\n      console.log(\"error is\" + String(error?.error?.error_desc));\r\n      this.toastService.error(\r\n        \"Failed to connect to Letter Generator, please try again. If the error persists, please contact the NSPAY Helpdesk\");\r\n    });\r\n  }\r\n\r\n  displayPreviewLetter(data: any): void {\r\n    const blob = new Blob([data.body], {type: data.headers.get('content-type')});\r\n    this.previewLetterUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(URL.createObjectURL(blob)+'#toolbar=0');\r\n    this.displayPreviewLetterDialog.display = true;\r\n  }\r\n\r\n  navigateCreateNewLetter(letterFormId: string): void{\r\n    // window.location.reload();\r\n    this.router.navigate(['claim/pop-up/create-new-letter', {claimItemObjList: this.route.snapshot.paramMap.get(\"claimItemObjList\")}], {queryParams: {\r\n        caseId: this.params.caseId,\r\n        claimId: this.params.claimId,\r\n        claimType: this.params.claimType,\r\n        letterTypeCode: this.letterForm.get('letterType').value.key,\r\n        letterTypeTitle: this.letterForm.get('letterType').value.label,\r\n        nric: this.params.nric,\r\n        itemType: this.params.itemType,\r\n        itemName: this.params.itemName,\r\n        claimItemId: this.params.claimItemId,\r\n        latestStatus: this.params.latestStatus,\r\n        latestStatusDesc: this.params.latestStatusDesc,\r\n        trgStartDte: this.params.trgStartDte,\r\n        trgEndDte: this.params.trgEndDte,\r\n        csn: this.params.csn, //optional\r\n        verifier: this.params.verifier,\r\n        verifierInit: this.params.verifierInit,\r\n        letterFormId\r\n      }})\r\n      .then(() => {\r\n        window.location.reload();\r\n      });\r\n  }\r\n\r\n  // viewGeneratedLetter(letterFormId: string): void{\r\n  //   console.log(\"viewing letter\")\r\n  //   let params = new HttpParams();\r\n  //   params = params.append('letterFormId', letterFormId);\r\n\r\n\r\n  //   this.claimService.viewGeneratedClaimLetter(null, {params,  responseType: 'blob'}).subscribe((resp:any) => {\r\n  //     if(resp && resp.status === 200){\r\n  //       console.log(\"generated letter blob generated and returned successfully\");\r\n  //       const data = resp;\r\n  //       this.displayGeneratedLetter(data);\r\n  //     }\r\n  //   },\r\n  //   (error: any) => {\r\n  //     console.log(\"error is\" + String(error?.error?.error_desc));\r\n  //     this.toastService.error(\r\n  //       \"Failed to connect to Letter Generator, please try again. If the error persists, please contact the NSPAY Helpdesk\");\r\n  //   });\r\n  // }\r\n\r\n  \r\n  // displayGeneratedLetter(data: any): void {\r\n  //   const blob = new Blob([data.body], {type: data.headers.get('content-type')});\r\n  //   this.generatedLetterUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(URL.createObjectURL(blob)+'#toolbar=0');\r\n  //   this.displayGeneratedLetterDialog.display = true;\r\n  // }\r\n\r\n\r\n}\r\n","<form [formGroup]=\"letterForm\">\r\n    <div *ngIf = \"accountService.hasAnyAuthority(['role-cv', 'role-ca'])\">\r\n        <div class = \"grid col-12\" [style]=\"{'margin-bottom':'1em'}\">\r\n            <h5>{{ params.caseId }} Create New Letter</h5>\r\n        </div>\r\n        <hr>\r\n        <div class=\"flex justify-content-start gap-4\">\r\n            <p-dropdown  [options]=\"letterTypeList\" id=\"letterType\" formControlName=\"letterType\" optionLabel=\"label\"\r\n            placeholder=\"Select\" [style]=\"{'width':'30em'}\"></p-dropdown>\r\n            <button pButton  label=\"Create Letter\" (click)=\" navigateCreateNewLetter(null)\" [style]=\"{'margin-right': '.5em', 'margin-bottom': '.5em'}\"></button>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <h5>View Generated Letters</h5>\r\n    <hr>\r\n    <div formArrayName=\"generatedLetterArr\">\r\n        <p-table [value]=\"generatedLetterArr.controls\"\r\n            [paginator]=\"true\"\r\n            [rows]=\"pageSize\"\r\n            [showCurrentPageReport]=\"true\"\r\n            [totalRecords] = \"totalRecords\"\r\n            [filterDelay]=\"0\"\r\n            [loading] = \"loading\"\r\n            styleClass=\"p-datatable-gridlines p-datatable-striped\"\r\n            [rowsPerPageOptions]=\"[5,10,15,20]\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            responsiveLayout=\"scroll\"\r\n            (onPage) = \"onPage($event)\"\r\n            [lazy] = \"true\"\r\n            (onLazyLoad)=\"retrieveClaimLetters($event)\"\r\n            #dataTable\r\n            >\r\n\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th scope=\"col\">SN</th>\r\n                    <th scope=\"col\" pSortableColumn = \"submittedDt\">Submitted Date<p-sortIcon field=\"submittedDt\"></p-sortIcon>\r\n                        <p-columnFilter type=\"text\" field=\"submittedDt\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                    </th>\r\n                    <th scope=\"col\" pSortableColumn = \"genDt\">Generated Date<p-sortIcon field=\"genDt\"></p-sortIcon>\r\n                        <p-columnFilter type=\"text\" field=\"genDt\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                    </th>\r\n                    <th scope=\"col\" pSortableColumn = \"letterTypeTitle\">Letter Type<p-sortIcon field=\"letterTypeTitle\"></p-sortIcon>\r\n                        <p-columnFilter type=\"text\" field=\"letterTypeTitle\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                    </th>\r\n                    <th scope=\"col\" pSortableColumn = \"sendTo\">Send To<p-sortIcon field=\"sendTo\"></p-sortIcon>\r\n                        <p-columnFilter type=\"text\" field=\"sendTo\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                    </th>\r\n                    <th scope=\"col\" pSortableColumn = \"copyTo\">Copy To<p-sortIcon field=\"copyTo\"></p-sortIcon>\r\n                        <p-columnFilter type=\"text\" field=\"copyTo\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                    </th>\r\n                    <th scope=\"col\" pSortableColumn = \"authorInit\">Author<p-sortIcon field=\"authorInit\"></p-sortIcon>\r\n                        <p-columnFilter type=\"text\" field=\"authorInit\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-data let-rowIndex = \"rowIndex\" let-columns=\"columns\">\r\n                <tr [formGroupName]=\"getRow(rowIndex)\">\r\n                    <td>{{ rowIndex + 1}}</td>\r\n                    <td>{{ data.value.submittedDt }}</td>\r\n                    <td>{{ data.value.genDt }}</td>\r\n                    <td><a href='javascript:' (click) = \"onRedirectLetterType(data.value.letterFormId, data.value.letterTypeCode,\r\n                        data.value.owner, data.value.genDt)\">{{ data.value.letterTypeTitle }}</a></td>\r\n                    <td>{{ data.value.sendTo }}</td>\r\n                    <td>{{ data.value.copyTo }}</td>\r\n                    <td>{{ data.value.authorInit }}</td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td colspan=\"7\">No records found.</td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</form>\r\n\r\n<p-dialog header=\"View Letter\" [(visible)]=\"displayPreviewLetterDialog.display\" [modal]=\"true\" [closable]=\"false\"\r\n          [style]=\"{width: '60vw', height:'100%'}\" [dismissableMask]=\"true\" [draggable]=\"false\" [resizable]=\"false\" >\r\n    <div *ngIf=\"previewLetterUrl != undefined\" style=\"height: 100%\">\r\n        <object [attr.data]=\"previewLetterUrl\" type=\"application/pdf\" width=\"100%\" height=\"100%\"></object>\r\n    </div>\r\n\r\n    <ng-template pTemplate=\"footer\">\r\n        <div class=\"flex align-items-center gap-2\">\r\n            <div class = \"flex justify-content-start \">\r\n                <i class=\"pi pi-info-circle\" style=\"font-size: 1rem\"></i><br>\r\n            </div>\r\n            <div class = \"flex justify-content-start \">\r\n                Non Claim Owners are not allowed to update/delete letters. Please place all Claims in inbox to update/delete Letters.\r\n            </div>\r\n        </div>\r\n        <button pButton class=\"p-button-danger\" label=\"Close\" (click)=\"displayPreviewLetterDialog.display=false\"\r\n        [style]=\"{'margin-left': '.5em' , 'margin-bottom': '.5em'}\"></button>\r\n    </ng-template>\r\n</p-dialog>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}