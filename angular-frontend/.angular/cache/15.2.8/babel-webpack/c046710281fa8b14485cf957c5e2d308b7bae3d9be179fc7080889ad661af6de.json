{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActualTrainingDetailsSectionComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst http_1 = require(\"@angular/common/http\");\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst nspay2_constants_1 = require(\"app/nspay2.constants\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/ng-connect\"));\nconst i2 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i3 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i4 = tslib_1.__importStar(require(\"primeng/dynamicdialog\"));\nconst i5 = tslib_1.__importStar(require(\"app/claim/service/claim.service\"));\nconst i6 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i7 = tslib_1.__importStar(require(\"../../service/se-claim.service\"));\nconst i8 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i9 = tslib_1.__importStar(require(\"app/shared/service/formula.service\"));\nconst i10 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i11 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/card\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i15 = tslib_1.__importStar(require(\"primeng/inputtext\"));\nconst i16 = tslib_1.__importStar(require(\"primeng/inputnumber\"));\nconst i17 = tslib_1.__importStar(require(\"../../../../shared/language/translate.directive\"));\nconst i18 = tslib_1.__importStar(require(\"primeng/accordion\"));\nconst i19 = tslib_1.__importStar(require(\"../../../../shared/pipe/default-string.pipe\"));\nfunction ActualTrainingDetailsSectionComponent_div_6_p_card_2_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"div\")(3, \"b\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(5, \"\\n                            \");\n    i0.ɵɵelementStart(6, \"div\")(7, \"b\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate3(\"\", ctx_r6.dateUtilsService.convertUnixToDateString(item_r4.value.trgStartDt, ctx_r6.dateFormat), \"\\n                                (\", ctx_r6.dateUtilsService.convertUnixToDateString(item_r4.value.trgStartDt, ctx_r6.timeFormat), \"\\u00A0to\\u00A0\\n                                \", ctx_r6.dateUtilsService.convertUnixToDateString(item_r4.value.trgEndDt, ctx_r6.timeFormat), \")\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"(\", item_r4.value.trainingDesc, \")\");\n  }\n}\nfunction ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵelementStart(1, \"div\", 15);\n    i0.ɵɵtext(2, \"\\n                                \");\n    i0.ɵɵelementStart(3, \"div\")(4, \"b\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(6, \"\\n                                \");\n    i0.ɵɵelementStart(7, \"div\")(8, \"b\");\n    i0.ɵɵtext(9, \"to\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(10, \"\\n                                \");\n    i0.ɵɵelementStart(11, \"div\")(12, \"b\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(14, \"\\n                                \");\n    i0.ɵɵelementStart(15, \"div\")(16, \"b\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(18, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n                        \");\n  }\n  if (rf & 2) {\n    const item_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r8.dateUtilsService.convertUnixToDateString(item_r4.value.trgStartDt, ctx_r8.dateFormat), \"\\n                                    (\", ctx_r8.dateUtilsService.convertUnixToDateString(item_r4.value.trgStartDt, ctx_r8.timeFormat), \")\");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r8.dateUtilsService.convertUnixToDateString(item_r4.value.trgEndDt, ctx_r8.dateFormat), \"\\n                                    (\", ctx_r8.dateUtilsService.convertUnixToDateString(item_r4.value.trgEndDt, ctx_r8.timeFormat), \")\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"(\", item_r4.value.trainingDesc, \")\");\n  }\n}\nfunction ActualTrainingDetailsSectionComponent_div_6_p_card_2_div_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"div\", 15);\n    i0.ɵɵtext(3, \"\\n                                \");\n    i0.ɵɵelementStart(4, \"span\")(5, \"b\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                                \");\n    i0.ɵɵelementStart(9, \"div\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const sub_r15 = ctx.$implicit;\n    const i_r16 = ctx.index;\n    const ctx_r14 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"Sub \", i_r16 + 1, \": \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r14.dateUtilsService.convertUnixToDateString(sub_r15.value.trgStartDt, ctx_r14.timeFormat), \"\\u00A0tp\\u00A0\\n                                    \", ctx_r14.dateUtilsService.convertUnixToDateString(sub_r15.value.trgEndDt, ctx_r14.timeFormat), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"(\", sub_r15.value.trainingDesc, \")\");\n  }\n}\nfunction ActualTrainingDetailsSectionComponent_div_6_p_card_2_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵtemplate(2, ActualTrainingDetailsSectionComponent_div_6_p_card_2_div_10_div_2_Template, 13, 4, \"div\", 17);\n    i0.ɵɵtext(3, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.getSubAttd(item_r4));\n  }\n}\nfunction ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                                    \");\n    i0.ɵɵelementStart(3, \"th\", 18);\n    i0.ɵɵtext(4, \"Item\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                                    \");\n    i0.ɵɵelementStart(6, \"th\", 18);\n    i0.ɵɵtext(7, \"Formula\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                                    \");\n    i0.ɵɵelementStart(9, \"th\", 18);\n    i0.ɵɵtext(10, \"Computation String\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n                                    \");\n    i0.ɵɵelementStart(12, \"th\", 18);\n    i0.ɵɵtext(13, \"Computed Amt\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                    \");\n    i0.ɵɵelementStart(15, \"th\", 18);\n    i0.ɵɵtext(16, \"Payroll Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n                            \");\n  }\n}\nconst _c0 = function () {\n  return {\n    field: \"Computation String\"\n  };\n};\nfunction ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_18_td_9_small_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 26);\n    i0.ɵɵtext(1, \"\\n                                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\nconst _c1 = function () {\n  return {\n    \"max-width\": \"12em\"\n  };\n};\nfunction ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_18_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                        \");\n    i0.ɵɵelementStart(2, \"div\", 23);\n    i0.ɵɵtext(3, \"\\n                                            \");\n    i0.ɵɵelement(4, \"input\", 24);\n    i0.ɵɵtext(5, \"\\n                                            \");\n    i0.ɵɵtemplate(6, ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_18_td_9_small_6_Template, 2, 2, \"small\", 25);\n    i0.ɵɵtext(7, \"\\n                                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const innerItem_r19 = i0.ɵɵnextContext().$implicit;\n    const ctx_r21 = i0.ɵɵnextContext(3);\n    let tmp_2_0;\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c1));\n    i0.ɵɵadvance(4);\n    i0.ɵɵattribute(\"disabled\", ctx_r21.hasConflictAppClaims);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = innerItem_r19.get(\"computedFormula\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = innerItem_r19.get(\"computedFormula\")) == null ? null : tmp_2_0.touched));\n  }\n}\nfunction ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_18_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"td\")(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(4, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const innerItem_r19 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(innerItem_r19.value.computedFormula);\n  }\n}\nconst _c2 = function () {\n  return {\n    field: \"Computed Amt\"\n  };\n};\nfunction ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_18_td_14_small_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 26);\n    i0.ɵɵtext(1, \"\\n                                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c2));\n  }\n}\nconst _c3 = function () {\n  return {\n    \"max-width\": \"14em\",\n    \"width\": \"100%\"\n  };\n};\nfunction ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_18_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\n                                        \");\n    i0.ɵɵelementStart(2, \"div\", 23);\n    i0.ɵɵtext(3, \"\\n                                            \");\n    i0.ɵɵelementStart(4, \"p-inputNumber\", 27);\n    i0.ɵɵtext(5, \"\\n                                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                                            \");\n    i0.ɵɵtemplate(7, ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_18_td_14_small_7_Template, 2, 2, \"small\", 25);\n    i0.ɵɵtext(8, \"\\n                                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n\\n                                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const innerItem_r19 = i0.ɵɵnextContext().$implicit;\n    const ctx_r24 = i0.ɵɵnextContext(3);\n    let tmp_4_0;\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c1));\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c3));\n    i0.ɵɵproperty(\"minFractionDigits\", 2)(\"disabled\", ctx_r24.hasConflictAppClaims);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = innerItem_r19.get(\"computedAmt\")) == null ? null : tmp_4_0.hasError(\"required\")) && ((tmp_4_0 = innerItem_r19.get(\"computedAmt\")) == null ? null : tmp_4_0.touched));\n  }\n}\nfunction ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_18_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"td\")(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(5, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const innerItem_r19 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(4, 1, innerItem_r19.value.computedAmt, \"1.2-2\"));\n  }\n}\nconst _c4 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nfunction ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"tr\", 19);\n    i0.ɵɵtext(2, \"\\n                                    \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                                    \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                                    \");\n    i0.ɵɵtemplate(9, ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_18_td_9_Template, 9, 5, \"td\", 20);\n    i0.ɵɵtext(10, \"\\n                                    \");\n    i0.ɵɵtemplate(11, ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_18_ng_template_11_Template, 5, 1, \"ng-template\", null, 21, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(13, \"\\n                                    \");\n    i0.ɵɵtemplate(14, ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_18_td_14_Template, 10, 9, \"td\", 20);\n    i0.ɵɵtext(15, \"\\n                                    \");\n    i0.ɵɵtemplate(16, ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_18_ng_template_16_Template, 6, 4, \"ng-template\", null, 22, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(18, \"\\n                                    \");\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n                            \");\n  }\n  if (rf & 2) {\n    const innerItem_r19 = ctx.$implicit;\n    const rowIndex_r20 = ctx.rowIndex;\n    const _r22 = i0.ɵɵreference(12);\n    const _r25 = i0.ɵɵreference(17);\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(12, _c4, ctx_r11.is13xWarning(innerItem_r19) ? \"yellow\" : null))(\"formGroupName\", rowIndex_r20);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(innerItem_r19.value.itemName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", innerItem_r19.value.formulaCode, \"\\u00A0\", innerItem_r19.value.formulaDesc, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.is13xWarning(innerItem_r19) && !ctx_r11.readOnly)(\"ngIfElse\", _r22);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.is13xWarning(innerItem_r19) && !ctx_r11.readOnly)(\"ngIfElse\", _r25);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(21, 10, ctx_r11.dateUtilsService.convertUnixToDateString(innerItem_r19.value.payrollDate, \"DD-MM-YYYY (HHmm)\")));\n  }\n}\nconst _c5 = function () {\n  return {\n    \"margin-bottom\": \"1rem\",\n    \"width\": \"70vw\"\n  };\n};\nfunction ActualTrainingDetailsSectionComponent_div_6_p_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-card\", 6);\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵelementStart(2, \"div\", 7);\n    i0.ɵɵtext(3, \"\\n                        \");\n    i0.ɵɵtemplate(4, ActualTrainingDetailsSectionComponent_div_6_p_card_2_div_4_Template, 10, 4, \"div\", 8);\n    i0.ɵɵtext(5, \"\\n                        \");\n    i0.ɵɵtemplate(6, ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_6_Template, 20, 5, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(8, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n                    \");\n    i0.ɵɵtemplate(10, ActualTrainingDetailsSectionComponent_div_6_p_card_2_div_10_Template, 4, 1, \"div\", 10);\n    i0.ɵɵtext(11, \"\\n                    \");\n    i0.ɵɵelementStart(12, \"div\", 11);\n    i0.ɵɵtext(13, \"\\n                        \");\n    i0.ɵɵelementStart(14, \"p-table\", 12);\n    i0.ɵɵtext(15, \"\\n                            \");\n    i0.ɵɵtemplate(16, ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_16_Template, 19, 0, \"ng-template\", 13);\n    i0.ɵɵtext(17, \"\\n                            \");\n    i0.ɵɵtemplate(18, ActualTrainingDetailsSectionComponent_div_6_p_card_2_ng_template_18_Template, 24, 14, \"ng-template\", 14);\n    i0.ɵɵtext(19, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const _r7 = i0.ɵɵreference(7);\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c5));\n    i0.ɵɵproperty(\"formGroupName\", i_r5);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.dateUtilsService.convertUnixToDateString(item_r4.value.trgStartDt, ctx_r3.dateFormat) === ctx_r3.dateUtilsService.convertUnixToDateString(item_r4.value.trgEndDt, ctx_r3.dateFormat))(\"ngIfElse\", _r7);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", item_r4.value.trainingCode === \"X3\" || item_r4.value.trainingCode === \"X4\" || item_r4.value.trainingCode === \"X5\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", ctx_r3.getTable(item_r4));\n  }\n}\nfunction ActualTrainingDetailsSectionComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n\\n                \");\n    i0.ɵɵtemplate(2, ActualTrainingDetailsSectionComponent_div_6_p_card_2_Template, 22, 8, \"p-card\", 5);\n    i0.ɵɵtext(3, \"\\n            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.actualTrainingDetailArr.controls);\n  }\n}\nfunction ActualTrainingDetailsSectionComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵelement(2, \"i\", 28);\n    i0.ɵɵtext(3, \"\\n                    No records found.\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n            \");\n  }\n}\nclass ActualTrainingDetailsSectionComponent {\n  constructor(codeService, ns2Http, formBuilder, dialogService, claimService, toastService, seClaimService, dateUtilsService, formulaService, accountService) {\n    this.codeService = codeService;\n    this.ns2Http = ns2Http;\n    this.formBuilder = formBuilder;\n    this.dialogService = dialogService;\n    this.claimService = claimService;\n    this.toastService = toastService;\n    this.seClaimService = seClaimService;\n    this.dateUtilsService = dateUtilsService;\n    this.formulaService = formulaService;\n    this.accountService = accountService;\n    this.actualTrainingForm = this.formBuilder.group({\n      actualTrainingDetailArr: this.formBuilder.array([])\n    });\n    this.selectedChange = new core_1.EventEmitter();\n    this.dateFormat = \"DD-MM-YYYY\";\n    this.timeFormat = \"hhmm\";\n    this.formulaList = [];\n  }\n  ngOnInit() {\n    console.log(\"init actual training details\");\n    this.retrieveFormulaList();\n  }\n  get actualTrainingDetailArr() {\n    return this.actualTrainingForm.get('actualTrainingDetailArr');\n  }\n  ngOnChanges(changes) {\n    if (changes['seHardCopyDetails']?.currentValue) {\n      this.currHardCopyDetails = changes['seHardCopyDetails'].currentValue;\n      this.constructForm();\n    }\n    if (changes['matchedAttd']?.currentValue) {\n      this.matchedAttd = changes['matchedAttd'].currentValue;\n      this.recomputeMatchedAttd();\n    }\n  }\n  constructForm() {\n    this.retrieveActualTrainingDetails();\n  }\n  retrieveFormulaList() {\n    let params = new http_1.HttpParams();\n    params = params.append(\"claimType\", \"S\");\n    this.claimService.retrieveFormulaList({\n      params\n    }).subscribe(resp => {\n      if (resp.status === 200 && resp.body.data) {\n        resp.body.data.forEach(x => {\n          this.formulaList.push({\n            name: x.formulaDesc,\n            key: x.formulaCode\n          });\n        });\n      }\n    }, error => {\n      console.log(\"error is\" + String(error?.error?.error_desc));\n      this.toastService.error(String(error?.error?.error_desc));\n    });\n  }\n  retrieveActualTrainingDetails() {\n    let params = new http_1.HttpParams();\n    params = params.append(\"claimId\", this.currHardCopyDetails?.claimId);\n    this.claimService.retrieveActualTrainingDetails({\n      params\n    }).subscribe(resp => {\n      if (resp) {\n        if (resp.status === 200 && resp.body.data) {\n          this.setActualTrainingDetails(resp.body.data);\n        }\n      }\n    }, error => {\n      console.log(\"error is\" + String(error?.error?.error_desc));\n      this.toastService.error(String(error?.error?.error_desc));\n    });\n  }\n  setActualTrainingDetails(data) {\n    data.sort((a, b) => a.trgStartDt - b.trgStartDt);\n    this.actualTrainingDetailArr.clear();\n    data.forEach(x => {\n      this.actualTrainingDetailArr.push(this.formBuilder.group({\n        trgStartDt: x.trgStartDt,\n        trgEndDt: x.trgEndDt,\n        trainingDesc: x.trainingDesc,\n        trainingCode: x.trainingCode,\n        subAttdArr: this.addSubAttd(x),\n        claimItemTableArr: this.addTableGroup(x)\n      }));\n    });\n    this.valueChangeSub();\n  }\n  valueChangeSub() {\n    this.actualTrainingForm.valueChanges.subscribe(() => {\n      console.log(\"valuechange actual trainign details\");\n      this.saveSEClaimRequest.actualTrainingSectionInd = true;\n    });\n  }\n  getTable(fa) {\n    return fa.controls['claimItemTableArr'].controls;\n  }\n  getSubAttd(fa) {\n    return fa.controls['subAttdArr'].controls;\n  }\n  getCodeDesc(formulaCode) {\n    const rslt = this.formulaList.find(x => x.key.trim() === formulaCode.trim());\n    return rslt.name;\n  }\n  addSubAttd(data) {\n    const fa = this.formBuilder.array([]);\n    if (data.subAttendanceList) {\n      data.subAttendanceList.forEach(x => {\n        fa.push(this.formBuilder.group({\n          trgStartDt: x.trgStartDt,\n          trgEndDt: x.trgEndDt,\n          trainingDesc: x.trainingDesc\n        }));\n      });\n    }\n    return fa;\n  }\n  addTableGroup(data) {\n    const fa = this.formBuilder.array([]);\n    if (data.claimItemList) {\n      data.claimItemList.forEach(x => {\n        fa.push(this.formBuilder.group({\n          attendanceItemId: x.attendanceItemId,\n          claimItemId: x.claimItemId,\n          claimItemStatus: x.claimItemStatus,\n          itemName: x.itemName,\n          formulaCode: x.formulaCode,\n          formulaDesc: x.formulaDesc,\n          computedFormula: new forms_1.FormControl(x.computedFormula, forms_1.Validators.required),\n          computedAmt: new forms_1.FormControl(x.computedAmt, forms_1.Validators.required),\n          payrollDate: x.payrollDate\n        }));\n      });\n    }\n    return fa;\n  }\n  is13xWarning(innerItem) {\n    if (this.station === 'V') {\n      return innerItem.value.formulaCode === '13x' && (innerItem.value.claimItemStatus === 'PRE' || innerItem.value.claimItemStatus === 'RRA' || innerItem.value.claimItemStatus === 'PVE' || innerItem.value.claimItemStatus === 'PAC' || innerItem.value.claimItemStatus === 'RAP' || innerItem.value.claimItemStatus === 'RCE');\n    } else if (this.station === 'S' || this.station === 'A') {\n      return innerItem.value.formulaCode === '13x' && (innerItem.value.claimItemStatus === 'PAP' || innerItem.value.claimItemStatus === 'R2A');\n    }\n    return false;\n  }\n  recomputeMatchedAttd() {\n    const claimItemId = this.matchedAttd.claimItemId;\n    this.actualTrainingDetailArr.controls.forEach(fc => {\n      const matchedItemArr = fc.controls['claimItemTableArr'].controls.filter(x => x.value.claimItemId === claimItemId);\n      if (matchedItemArr.length > 0) {\n        matchedItemArr.forEach(x => {\n          x.get('formulaCode').setValue(this.matchedAttd.formulaCode);\n          x.get('formulaDesc').setValue(this.getCodeDesc(this.matchedAttd.formulaCode));\n          //recompute\n          this.recompute(this.matchedAttd, x, fc);\n        });\n      }\n    });\n  }\n  recompute(matchedAttd, x, fc) {\n    console.log(\"the asds\", fc.get('trgStartDt').value);\n    console.log(\"the actual trainign start date is \", fc.get('trgStartDt').value);\n    console.log(\"the actual trainign end date is \", fc.get('trgEndDt').value);\n    const formulaReq = {\n      dateFrom: this.dateUtilsService.convertUnixToDateString(fc.get('trgStartDt').value, this.dateFormat),\n      dateTo: this.dateUtilsService.convertUnixToDateString(fc.get('trgEndDt').value, this.dateFormat),\n      halfDayIndicator: \"N\",\n      approvedAmt: matchedAttd.apprAmt,\n      formulaCode: matchedAttd.formulaCode,\n      restDays: [],\n      payPeriodStart: 0\n    };\n    this.formulaService.computeFormula(formulaReq, null).subscribe(resp => {\n      if (resp.status === 200 && resp.body.data) {\n        x.get('computedFormula').setValue(resp.body.data.computationString);\n        x.get('computedAmt').setValue(resp.body.data.amtPayable);\n      }\n    }, error => {\n      console.log(\"error is\" + String(error?.error?.error_desc));\n      this.toastService.error(String(error?.error?.error_desc));\n    });\n  }\n  populateRequestWithActTrgDetailsSectionChanges() {\n    this.actualTrainingDetailArr.controls.forEach(actTrgDetail => {\n      const actTrgDto = this.mapActTrgDetailToDto(actTrgDetail);\n      if (this.saveSEClaimRequest.actualTrgDetailList === undefined) {\n        this.saveSEClaimRequest.actualTrgDetailList = [actTrgDto];\n      } else {\n        this.saveSEClaimRequest.actualTrgDetailList.push(actTrgDto);\n      }\n    });\n  }\n  // trgStartDt: x.trgStartDt,\n  // trgEndDt: x.trgEndDt,\n  // trainingDesc: x.trainingDesc,\n  // trainingCode: x.trainingCode,\n  // subAttdArr: this.addSubAttd(x),\n  // claimItemTableArr:  this.addTableGroup(x)\n  mapActTrgDetailToDto(actTrgDetail) {\n    const claimItemList = [];\n    actTrgDetail.get('claimItemTableArr').controls.forEach(x => {\n      claimItemList.push(this.mapAttdItemToDto(x));\n    });\n    const actTrgDto = {\n      trgStartDt: null,\n      trgEndDt: null,\n      trainingCode: null,\n      trainingDesc: null,\n      subAttendanceList: [],\n      claimItemList\n    };\n    console.log(\"actTrgDto\", actTrgDto);\n    return actTrgDto;\n  }\n  mapAttdItemToDto(attdItem) {\n    const attdItemDto = {\n      attendanceItemId: attdItem.get('attendanceItemId').value,\n      claimItemId: attdItem.get('claimItemId').value,\n      claimItemStatus: attdItem.get('claimItemStatus').value,\n      itemName: attdItem.get('itemName').value,\n      formulaCode: attdItem.get('formulaCode').value,\n      formulaDesc: attdItem.get('formulaDesc').value,\n      computedFormula: attdItem.get('computedFormula').value,\n      computedAmt: attdItem.get('computedAmt').value,\n      payrollDate: attdItem.get('payrollDate').value\n    };\n    return attdItemDto;\n  }\n  accordionClick() {\n    this.selectedChange.emit(this.selected);\n  }\n  //allows input on need basis\n  hasValidAuthorityAndStation() {\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_VERIFIER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_VERIFICATION) {\n      return true;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_CERTIFICATION) {\n      return false;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_APPROVAL) {\n      return false;\n    }\n    return false;\n  }\n}\nexports.ActualTrainingDetailsSectionComponent = ActualTrainingDetailsSectionComponent;\nActualTrainingDetailsSectionComponent.ɵfac = function ActualTrainingDetailsSectionComponent_Factory(t) {\n  return new (t || ActualTrainingDetailsSectionComponent)(i0.ɵɵdirectiveInject(i1.IcCodeService), i0.ɵɵdirectiveInject(i2.Ns2HttpService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.DialogService), i0.ɵɵdirectiveInject(i5.ClaimService), i0.ɵɵdirectiveInject(i6.CustomToastService), i0.ɵɵdirectiveInject(i7.SEClaimService), i0.ɵɵdirectiveInject(i8.DateUtilsService), i0.ɵɵdirectiveInject(i9.FormulaService), i0.ɵɵdirectiveInject(i10.AccountService));\n};\nActualTrainingDetailsSectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ActualTrainingDetailsSectionComponent,\n  selectors: [[\"n2-actual-training-details-section\"]],\n  inputs: {\n    seHardCopyDetails: \"seHardCopyDetails\",\n    matchedAttd: \"matchedAttd\",\n    saveSEClaimRequest: \"saveSEClaimRequest\",\n    readOnly: \"readOnly\",\n    selected: \"selected\",\n    station: \"station\",\n    hasConflictAppClaims: \"hasConflictAppClaims\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 14,\n  vars: 4,\n  consts: [[\"header\", \"Actual Training Details\", 3, \"selected\", \"selectedChange\", \"click\"], [3, \"formGroup\"], [\"formArrayName\", \"actualTrainingDetailArr\"], [4, \"ngIf\", \"ngIfElse\"], [\"emptymessage\", \"\"], [3, \"formGroupName\", \"style\", 4, \"ngFor\", \"ngForOf\"], [3, \"formGroupName\"], [1, \"grid\"], [\"class\", \"col flex align-items-center gap-4\", 4, \"ngIf\", \"ngIfElse\"], [\"diffDate\", \"\"], [\"formArrayName\", \"subAttdArr\", 4, \"ngIf\"], [\"formArrayName\", \"claimItemTableArr\"], [\"styleClass\", \"p-datatable-gridlines p-datatable-striped\", 3, \"value\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [1, \"col\", \"flex\", \"align-items-center\", \"gap-4\"], [\"formArrayName\", \"subAttdArr\"], [\"class\", \"grid\", 4, \"ngFor\", \"ngForOf\"], [\"scope\", \"col\"], [3, \"ngStyle\", \"formGroupName\"], [3, \"style\", 4, \"ngIf\", \"ngIfElse\"], [\"labelComputedFormula\", \"\"], [\"labelComputedAmt\", \"\"], [1, \"field\", \"grid\"], [\"type\", \"text\", \"pInputText\", \"\", \"formControlName\", \"computedFormula\", \"id\", \"computedFormula\"], [\"class\", \"p-error\", \"icTranslate\", \"nspay2App.claim.validation.CLM-V001\", 3, \"translateValues\", 4, \"ngIf\"], [\"icTranslate\", \"nspay2App.claim.validation.CLM-V001\", 1, \"p-error\", 3, \"translateValues\"], [\"type\", \"text\", \"formControlName\", \"computedAmt\", \"id\", \"computedAmt\", 3, \"minFractionDigits\", \"disabled\"], [1, \"pi\", \"pi-info-circle\"]],\n  template: function ActualTrainingDetailsSectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-accordionTab\", 0);\n      i0.ɵɵlistener(\"selectedChange\", function ActualTrainingDetailsSectionComponent_Template_p_accordionTab_selectedChange_0_listener($event) {\n        return ctx.selected = $event;\n      })(\"click\", function ActualTrainingDetailsSectionComponent_Template_p_accordionTab_click_0_listener() {\n        return ctx.accordionClick();\n      });\n      i0.ɵɵtext(1, \"\\n    \");\n      i0.ɵɵelementStart(2, \"form\", 1);\n      i0.ɵɵtext(3, \"\\n        \");\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵtext(5, \"\\n            \");\n      i0.ɵɵtemplate(6, ActualTrainingDetailsSectionComponent_div_6_Template, 4, 1, \"div\", 3);\n      i0.ɵɵtext(7, \"\\n            \");\n      i0.ɵɵtemplate(8, ActualTrainingDetailsSectionComponent_ng_template_8_Template, 5, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtext(10, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(11, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \"\\n\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\n\\n\");\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(9);\n      i0.ɵɵproperty(\"selected\", ctx.selected);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.actualTrainingForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.actualTrainingDetailArr.controls.length !== 0)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i11.NgForOf, i11.NgIf, i11.NgStyle, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName, i12.Card, i13.PrimeTemplate, i14.Table, i15.InputText, i16.InputNumber, i17.TranslateDirective, i18.AccordionTab, i11.DecimalPipe, i19.DefaultStringPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhY3R1YWwtdHJhaW5pbmctZGV0YWlscy1zZWN0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvY2xhaW0vc2UtY2xhaW0vc2UtY2xhaW0tdmVyaWZpY2F0aW9uL2FjdHVhbC10cmFpbmluZy1kZXRhaWxzLXNlY3Rpb24vYWN0dWFsLXRyYWluaW5nLWRldGFpbHMtc2VjdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb01BQW9NIiwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ActualTrainingDetailsSectionComponent","constructor","codeService","ns2Http","formBuilder","dialogService","claimService","toastService","seClaimService","dateUtilsService","formulaService","accountService","group","actualTrainingDetailArr","array","core_1","ngOnInit","console","log","retrieveFormulaList","actualTrainingForm","get","ngOnChanges","changes","currentValue","currHardCopyDetails","constructForm","matchedAttd","recomputeMatchedAttd","retrieveActualTrainingDetails","params","http_1","append","subscribe","resp","status","body","data","forEach","x","formulaList","push","name","formulaDesc","key","formulaCode","error","String","error_desc","claimId","setActualTrainingDetails","sort","a","b","trgStartDt","clear","trgEndDt","trainingDesc","trainingCode","subAttdArr","addSubAttd","claimItemTableArr","addTableGroup","valueChangeSub","valueChanges","saveSEClaimRequest","actualTrainingSectionInd","getTable","fa","controls","getSubAttd","getCodeDesc","rslt","find","trim","subAttendanceList","claimItemList","attendanceItemId","claimItemId","claimItemStatus","itemName","computedFormula","forms_1","required","computedAmt","payrollDate","is13xWarning","innerItem","station","value","fc","matchedItemArr","filter","length","setValue","recompute","formulaReq","dateFrom","convertUnixToDateString","dateFormat","dateTo","halfDayIndicator","approvedAmt","apprAmt","restDays","payPeriodStart","computeFormula","computationString","amtPayable","populateRequestWithActTrgDetailsSectionChanges","actTrgDetail","actTrgDto","mapActTrgDetailToDto","actualTrgDetailList","undefined","mapAttdItemToDto","attdItem","attdItemDto","accordionClick","selectedChange","emit","selected","hasValidAuthorityAndStation","hasAnyAuthority","nspay2_constants_1","CLAIMS_VERIFIER","STATION_VERIFICATION","CLAIMS_APPROVER","STATION_CERTIFICATION","STATION_APPROVAL","exports","selectors","inputs","seHardCopyDetails","readOnly","hasConflictAppClaims","outputs","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\actual-training-details-section\\actual-training-details-section.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\actual-training-details-section\\actual-training-details-section.component.html"],"sourcesContent":["import { HttpParams } from '@angular/common/http';\r\nimport { Component, EventEmitter, Input, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { FaProps } from '@fortawesome/angular-fontawesome';\r\nimport { ActualTrainingDetail, AttendanceItem } from 'app/claim/model/actual-training-detail.model';\r\nimport { ClaimService } from 'app/claim/service/claim.service';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\nimport { CodeView, IcCodeService } from 'app/ng-connect';\r\nimport { IComputeFormula } from 'app/shared/model/compute-formula.model';\r\nimport { FormulaService } from 'app/shared/service/formula.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { SaveSEClaimRequest } from '../../model/save-se-claim-request.model';\r\nimport { SEClaimService } from '../../service/se-claim.service';\r\nimport { NSPAY2_ROLES, NSPAY2_STATION } from 'app/nspay2.constants';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\n\r\n\r\n@Component({\r\n  selector: 'n2-actual-training-details-section',\r\n  templateUrl: './actual-training-details-section.component.html',\r\n  styleUrls: ['./actual-training-details-section.component.scss']\r\n})\r\nexport class ActualTrainingDetailsSectionComponent implements OnInit {\r\n\r\n  actualTrainingForm = this.formBuilder.group({\r\n    actualTrainingDetailArr: this.formBuilder.array([]),\r\n  })\r\n\r\n  @Input() seHardCopyDetails:any;\r\n  @Input() matchedAttd: any;\r\n  @Input() saveSEClaimRequest: SaveSEClaimRequest;\r\n  //meant for routing from enquiry\r\n  @Input() readOnly: boolean;\r\n  @Input() selected:boolean;\r\n  @Output() selectedChange = new EventEmitter<boolean>();\r\n  @Input() station: string;\r\n  @Input() hasConflictAppClaims:boolean;\r\n\r\n  readonly dateFormat = \"DD-MM-YYYY\";\r\n  readonly timeFormat = \"hhmm\";\r\n  formulaList:any[] = [];\r\n\r\n  currHardCopyDetails: any;\r\n\r\n  constructor(\r\n    private codeService: IcCodeService,\r\n    private ns2Http: Ns2HttpService,\r\n    private formBuilder: FormBuilder,\r\n    private dialogService: DialogService,\r\n    private claimService: ClaimService,\r\n    private toastService: CustomToastService,\r\n    private seClaimService: SEClaimService,\r\n    public dateUtilsService: DateUtilsService,\r\n    private formulaService: FormulaService,\r\n    public accountService: AccountService\r\n\r\n  ) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"init actual training details\");\r\n    this.retrieveFormulaList();\r\n\r\n  }\r\n\r\n  get actualTrainingDetailArr(): FormArray{\r\n    return this.actualTrainingForm.get('actualTrainingDetailArr') as FormArray;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void{\r\n    if(changes['seHardCopyDetails']?.currentValue) {\r\n      this.currHardCopyDetails=changes['seHardCopyDetails'].currentValue;\r\n      this.constructForm();\r\n    }\r\n    if(changes['matchedAttd']?.currentValue){\r\n      this.matchedAttd = changes['matchedAttd'].currentValue;\r\n      this.recomputeMatchedAttd();\r\n    }\r\n\r\n  }\r\n\r\n  constructForm():void{\r\n    this.retrieveActualTrainingDetails();\r\n  }\r\n\r\n  retrieveFormulaList():void{\r\n    let params = new HttpParams();\r\n    params = params.append(\"claimType\", \"S\");\r\n    this.claimService.retrieveFormulaList({params}).subscribe((resp:any) => {\r\n      if(resp.status === 200 && resp.body.data){\r\n        resp.body.data.forEach((x:any)=>{\r\n          this.formulaList.push({\r\n            name:x.formulaDesc,\r\n            key: x.formulaCode\r\n          })\r\n        })\r\n    }},\r\n    (error: any) => {\r\n      console.log(\"error is\" + String(error?.error?.error_desc));\r\n      this.toastService.error(String(error?.error?.error_desc));\r\n    });\r\n  }\r\n\r\n  retrieveActualTrainingDetails():void{\r\n    let params = new HttpParams();\r\n    params = params.append(\"claimId\",this.currHardCopyDetails?.claimId);\r\n    this.claimService.retrieveActualTrainingDetails({params}).subscribe((resp:any) => {\r\n\r\n      if(resp){\r\n          if(resp.status === 200 && resp.body.data){\r\n            this.setActualTrainingDetails(resp.body.data);\r\n          }\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(\"error is\" + String(error?.error?.error_desc));\r\n        this.toastService.error(String(error?.error?.error_desc));\r\n      });\r\n  }\r\n\r\n  setActualTrainingDetails(data: any[]): void{\r\n    data.sort((a:any, b:any)=> a.trgStartDt - b.trgStartDt)\r\n    this.actualTrainingDetailArr.clear();\r\n    data.forEach((x:any)=>{\r\n      this.actualTrainingDetailArr.push(this.formBuilder.group({\r\n        trgStartDt: x.trgStartDt,\r\n        trgEndDt: x.trgEndDt,\r\n        trainingDesc: x.trainingDesc,\r\n        trainingCode: x.trainingCode,\r\n        subAttdArr: this.addSubAttd(x),\r\n        claimItemTableArr:  this.addTableGroup(x)\r\n      }))\r\n    });\r\n    this.valueChangeSub();\r\n  }\r\n\r\n  valueChangeSub(): void{\r\n    this.actualTrainingForm.valueChanges.subscribe(() => {\r\n      console.log(\"valuechange actual trainign details\");\r\n      this.saveSEClaimRequest.actualTrainingSectionInd = true;\r\n    });\r\n  }\r\n\r\n  getTable(fa:any): any{\r\n    return fa.controls['claimItemTableArr'].controls;\r\n  }\r\n\r\n  getSubAttd(fa:any): any{\r\n    return fa.controls['subAttdArr'].controls;\r\n  }\r\n\r\n  getCodeDesc(formulaCode: string): string{\r\n    const rslt = this.formulaList.find(x=>\r\n      x.key.trim() === formulaCode.trim()\r\n    );\r\n    return rslt.name as string;\r\n  }\r\n\r\n  addSubAttd(data: any): FormArray{\r\n    const fa:FormArray = this.formBuilder.array([]);\r\n    if(data.subAttendanceList){\r\n      data.subAttendanceList.forEach((x:any)=>{\r\n        fa.push(this.formBuilder.group({\r\n          trgStartDt:  x.trgStartDt,\r\n          trgEndDt: x.trgEndDt,\r\n          trainingDesc:  x.trainingDesc,\r\n        }))\r\n      })\r\n    }\r\n    return fa;\r\n  }\r\n\r\n  addTableGroup(data: any): FormArray{\r\n    const fa:FormArray = this.formBuilder.array([]);\r\n    if(data.claimItemList){\r\n      data.claimItemList.forEach((x:any)=>{\r\n        fa.push(this.formBuilder.group({\r\n            attendanceItemId: x.attendanceItemId,\r\n            claimItemId: x.claimItemId,\r\n            claimItemStatus: x.claimItemStatus,\r\n            itemName:  x.itemName,\r\n            formulaCode:  x.formulaCode,\r\n            formulaDesc: x.formulaDesc,\r\n            computedFormula:  new FormControl(x.computedFormula, Validators.required),\r\n            computedAmt:  new FormControl(x.computedAmt, Validators.required),\r\n            payrollDate:  x.payrollDate\r\n          }))\r\n      })\r\n    }\r\n    return fa;\r\n  }\r\n\r\n  is13xWarning(innerItem:any): boolean {\r\n    if(this.station==='V'){\r\n      return innerItem.value.formulaCode === '13x' && (innerItem.value.claimItemStatus ==='PRE' ||\r\n      innerItem.value.claimItemStatus ==='RRA' || innerItem.value.claimItemStatus ==='PVE' ||\r\n      innerItem.value.claimItemStatus ==='PAC' || innerItem.value.claimItemStatus ==='RAP'\r\n      || innerItem.value.claimItemStatus ==='RCE');\r\n    }else if(this.station ==='S' || this.station === 'A'){\r\n      return innerItem.value.formulaCode === '13x' && (innerItem.value.claimItemStatus === 'PAP'|| \r\n      innerItem.value.claimItemStatus === 'R2A')\r\n    }return false;\r\n \r\n  }\r\n\r\n  recomputeMatchedAttd(): void{\r\n    const claimItemId = this.matchedAttd.claimItemId;\r\n    this.actualTrainingDetailArr.controls.forEach((fc:any) => {\r\n      const matchedItemArr = fc.controls['claimItemTableArr'].controls.filter((x:any)=>x.value.claimItemId === claimItemId);\r\n      if(matchedItemArr.length>0){\r\n        matchedItemArr.forEach((x:any)=>{\r\n          x.get('formulaCode').setValue(this.matchedAttd.formulaCode);\r\n          x.get('formulaDesc').setValue(this.getCodeDesc(this.matchedAttd.formulaCode));\r\n          //recompute\r\n          this.recompute(this.matchedAttd, x, fc);\r\n        })\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  recompute(matchedAttd: any, x: any, fc: any): void{\r\n    console.log(\"the asds\", fc.get('trgStartDt').value)\r\n    console.log(\"the actual trainign start date is \", fc.get('trgStartDt').value);\r\n    console.log(\"the actual trainign end date is \", fc.get('trgEndDt').value);\r\n\r\n    const formulaReq:IComputeFormula = {\r\n      dateFrom:  this.dateUtilsService.convertUnixToDateString(fc.get('trgStartDt').value, this.dateFormat),\r\n      dateTo: this.dateUtilsService.convertUnixToDateString(fc.get('trgEndDt').value, this.dateFormat),\r\n      halfDayIndicator: \"N\",\r\n      approvedAmt: matchedAttd.apprAmt,\r\n      formulaCode: matchedAttd.formulaCode,\r\n      restDays: [],\r\n      payPeriodStart: 0\r\n    }\r\n    this.formulaService.computeFormula(formulaReq, null).subscribe((resp:any) => {\r\n      if(resp.status === 200 && resp.body.data){\r\n        x.get('computedFormula').setValue(resp.body.data.computationString);\r\n        x.get('computedAmt').setValue(resp.body.data.amtPayable);\r\n      }\r\n    },\r\n    (error: any) => {\r\n      console.log(\"error is\" + String(error?.error?.error_desc));\r\n      this.toastService.error(String(error?.error?.error_desc));\r\n    });\r\n  }\r\n\r\n  populateRequestWithActTrgDetailsSectionChanges(): void{\r\n    this.actualTrainingDetailArr.controls.forEach((actTrgDetail: AbstractControl<any, any>)=>{\r\n      const actTrgDto: ActualTrainingDetail = this.mapActTrgDetailToDto(actTrgDetail);\r\n      if (this.saveSEClaimRequest.actualTrgDetailList === undefined) {\r\n        this.saveSEClaimRequest.actualTrgDetailList = [actTrgDto];\r\n      } else {\r\n        this.saveSEClaimRequest.actualTrgDetailList.push(actTrgDto);\r\n      }\r\n    })\r\n  }\r\n\r\n  // trgStartDt: x.trgStartDt,\r\n  // trgEndDt: x.trgEndDt,\r\n  // trainingDesc: x.trainingDesc,\r\n  // trainingCode: x.trainingCode,\r\n  // subAttdArr: this.addSubAttd(x),\r\n  // claimItemTableArr:  this.addTableGroup(x)\r\n\r\n  mapActTrgDetailToDto(actTrgDetail: AbstractControl<any, any>): ActualTrainingDetail {\r\n    const claimItemList: AttendanceItem[] = [];\r\n    (actTrgDetail.get('claimItemTableArr') as FormArray).controls.forEach((x: AbstractControl<any, any>)=>{\r\n      claimItemList.push(this.mapAttdItemToDto(x))\r\n    })\r\n    const actTrgDto: ActualTrainingDetail = {\r\n      trgStartDt: null,\r\n      trgEndDt: null,\r\n      trainingCode: null,\r\n      trainingDesc: null,\r\n      subAttendanceList: [],\r\n      claimItemList\r\n    }\r\n    console.log(\"actTrgDto\", actTrgDto)\r\n\r\n    return actTrgDto;\r\n  }\r\n\r\n  mapAttdItemToDto(attdItem:AbstractControl<any, any>): AttendanceItem {\r\n    const attdItemDto: AttendanceItem = {\r\n      attendanceItemId: attdItem.get('attendanceItemId').value,\r\n      claimItemId: attdItem.get('claimItemId').value,\r\n      claimItemStatus: attdItem.get('claimItemStatus').value,\r\n      itemName: attdItem.get('itemName').value,\r\n      formulaCode: attdItem.get('formulaCode').value,\r\n      formulaDesc: attdItem.get('formulaDesc').value,\r\n      computedFormula: attdItem.get('computedFormula').value,\r\n      computedAmt: attdItem.get('computedAmt').value,\r\n      payrollDate: attdItem.get('payrollDate').value,\r\n    }\r\n    return attdItemDto;\r\n  }\r\n\r\n  accordionClick(): void{\r\n    this.selectedChange.emit(this.selected);\r\n  }\r\n\r\n    //allows input on need basis\r\n    hasValidAuthorityAndStation(): boolean{\r\n      if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_VERIFIER) && \r\n        this.station === NSPAY2_STATION.STATION_VERIFICATION){\r\n          return true;\r\n        }\r\n      if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) && \r\n      this.station === NSPAY2_STATION.STATION_CERTIFICATION) {\r\n        return false;\r\n      }\r\n      if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) && \r\n      this.station === NSPAY2_STATION.STATION_APPROVAL) {\r\n        return false;\r\n      }\r\n      return false;\r\n    }\r\n     \r\n\r\n\r\n}\r\n","<p-accordionTab header=\"Actual Training Details\" [(selected)]=\"selected\" (click) = \"accordionClick()\">\r\n    <form [formGroup] = \"actualTrainingForm\">\r\n        <div formArrayName=\"actualTrainingDetailArr\">\r\n            <div *ngIf=\"actualTrainingDetailArr.controls.length!==0; else emptymessage\">\r\n\r\n                <p-card *ngFor=\"let item of actualTrainingDetailArr.controls; let i = index\" [formGroupName]=\"i\"   [style]=\"{'margin-bottom': '1rem', 'width':'70vw'}\" >\r\n                    <div class = \"grid\" >\r\n                        <div class = \"col flex align-items-center gap-4\" *ngIf = \"this.dateUtilsService.convertUnixToDateString(item.value.trgStartDt, this.dateFormat)\r\n                        ===this.dateUtilsService.convertUnixToDateString(item.value.trgEndDt, this.dateFormat); else diffDate\">\r\n                            <div><b>{{ this.dateUtilsService.convertUnixToDateString(item.value.trgStartDt, this.dateFormat) }}\r\n                                ({{ this.dateUtilsService.convertUnixToDateString(item.value.trgStartDt, this.timeFormat)}}&nbsp;to&nbsp;\r\n                                {{ this.dateUtilsService.convertUnixToDateString(item.value.trgEndDt, this.timeFormat)}})</b></div>\r\n                            <div><b>({{item.value.trainingDesc}})</b></div>\r\n                        </div>\r\n                        <ng-template #diffDate>\r\n                            <div class = \"col flex align-items-center gap-4\" >\r\n                                <div><b>{{ this.dateUtilsService.convertUnixToDateString(item.value.trgStartDt, this.dateFormat) }}\r\n                                    ({{  this.dateUtilsService.convertUnixToDateString(item.value.trgStartDt, this.timeFormat)}})</b></div>\r\n                                <div><b>to</b></div>\r\n                                <div><b>{{  this.dateUtilsService.convertUnixToDateString(item.value.trgEndDt, this.dateFormat)}}\r\n                                    ({{ this.dateUtilsService.convertUnixToDateString(item.value.trgEndDt, this.timeFormat)}})</b></div>\r\n                                <div><b>({{item.value.trainingDesc}})</b></div>\r\n                            </div>\r\n                        </ng-template>\r\n                    </div>\r\n                    <div formArrayName=\"subAttdArr\" *ngIf = \"item.value.trainingCode === 'X3' || item.value.trainingCode === 'X4' || item.value.trainingCode === 'X5'\">\r\n                        <div *ngFor=\"let sub of getSubAttd(item); let i = index\" class = \"grid\" >\r\n                            <div class = \"col flex align-items-center gap-4\">\r\n                                <span><b>Sub {{ i + 1 }}: </b>{{ this.dateUtilsService.convertUnixToDateString(sub.value.trgStartDt, this.timeFormat) }}&nbsp;tp&nbsp;\r\n                                    {{ this.dateUtilsService.convertUnixToDateString(sub.value.trgEndDt, this.timeFormat) }}</span>\r\n                                <div>({{sub.value.trainingDesc}})</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div formArrayName=\"claimItemTableArr\">\r\n                        <p-table\r\n                        [value]=\"getTable(item)\"\r\n                        styleClass=\"p-datatable-gridlines p-datatable-striped\"\r\n                        >\r\n                            <ng-template pTemplate=\"header\" let-columns>\r\n                                <tr>\r\n                                    <th scope=\"col\">Item</th>\r\n                                    <th scope=\"col\">Formula</th>\r\n                                    <th scope=\"col\">Computation String</th>\r\n                                    <th scope=\"col\">Computed Amt</th>\r\n                                    <th scope=\"col\">Payroll Date</th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"body\" let-innerItem let-rowIndex = \"rowIndex\">\r\n                                <tr [ngStyle]= \"{'background-color': is13xWarning(innerItem)?  'yellow' :null}\" [formGroupName] = rowIndex>\r\n                                    <td>{{ innerItem.value.itemName }}</td>\r\n                                    <td>{{ innerItem.value.formulaCode }}&nbsp;{{ innerItem.value.formulaDesc }}</td>\r\n                                    <td [style]=\"{'max-width':'12em'}\"  *ngIf = \"is13xWarning(innerItem) && !readOnly; else labelComputedFormula\">\r\n                                        <div class=\"field grid\">\r\n                                            <input type=\"text\"  pInputText\r\n                                            formControlName=\"computedFormula\" id=\"computedFormula\" \r\n                                            [attr.disabled]=\"hasConflictAppClaims\"/>\r\n                                            <small *ngIf=\"innerItem.get('computedFormula')?.hasError('required') && innerItem.get('computedFormula')?.touched\"\r\n                                                class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V001\"\r\n                                                [translateValues]=\"{ field: 'Computation String' }\">\r\n                                            </small>\r\n                                        </div>\r\n                                    </td>\r\n                                    <ng-template #labelComputedFormula>\r\n                                        <td><span>{{ innerItem.value.computedFormula }}</span></td>\r\n                                    </ng-template>\r\n                                    <td [style]=\"{'max-width':'12em'}\" *ngIf = \"is13xWarning(innerItem) && !readOnly; else labelComputedAmt\" >\r\n                                        <div class=\"field grid \">\r\n                                            <p-inputNumber  type=\"text\"\r\n                                            formControlName=\"computedAmt\" id=\"computedAmt\" [minFractionDigits]=\"2\" [style]=\"{'max-width': '14em', 'width':'100%'}\"\r\n                                            [disabled]=\"hasConflictAppClaims\">\r\n                                            </p-inputNumber >\r\n                                            <small  *ngIf=\"innerItem.get('computedAmt')?.hasError('required') && innerItem.get('computedAmt')?.touched\"\r\n                                                class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V001\"\r\n                                                [translateValues]=\"{ field: 'Computed Amt' }\" >\r\n                                            </small>\r\n                                        </div>\r\n\r\n                                    </td>\r\n                                    <ng-template #labelComputedAmt>\r\n                                        <td><span>{{ innerItem.value.computedAmt  | number : '1.2-2'}}</span></td>\r\n                                    </ng-template>\r\n                                    <td>{{ this.dateUtilsService.convertUnixToDateString(innerItem.value.payrollDate, 'DD-MM-YYYY (HHmm)') | defaultString}}</td>\r\n                                </tr>\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </p-card>\r\n            </div>\r\n            <ng-template #emptymessage>\r\n                <span><i class=\"pi pi-info-circle\"></i>\r\n                    No records found.\r\n                </span>\r\n            </ng-template>\r\n        </div>\r\n    </form>\r\n\r\n</p-accordionTab>\r\n\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}