{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReportService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nclass ReportService {\n  constructor(ns2HttpService, applicationConfigService) {\n    this.ns2HttpService = ns2HttpService;\n    this.applicationConfigService = applicationConfigService;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('/api/report-letter/report');\n    //\n  }\n\n  getAllReportTypes(options) {\n    const url = `${this.resourceUrl}/retrieve_report_type`;\n    return this.ns2HttpService.get(url, options);\n  }\n  getReportParams(reportUUID, options) {\n    const url = `${this.resourceUrl}/retrieve_report_params/${reportUUID}`;\n    return this.ns2HttpService.get(url, options);\n  }\n  getGeneratedReports(options) {\n    const url = `${this.resourceUrl}/retrieve_report_history`;\n    return this.ns2HttpService.get(url, options);\n  }\n  generateReport(pathVariable, request, options) {\n    const url = `${this.resourceUrl}/generate_report/${pathVariable}`;\n    console.log(\"options\", options);\n    return this.ns2HttpService.post(url, request, options);\n  }\n  getFavourites(options) {\n    const url = `${this.resourceUrl}/retrieve_report_favourites`;\n    return this.ns2HttpService.get(url, options);\n  }\n  updateFavourites(request, options) {\n    const url = `${this.resourceUrl}/update_report_favourites`;\n    console.log(\"request body\", request);\n    return this.ns2HttpService.post(url, request, options);\n  }\n  updateActionTaken(request, options) {\n    const url = `${this.resourceUrl}/update_report_action`;\n    console.log(\"request body\", request);\n    return this.ns2HttpService.post(url, request, options);\n  }\n}\nexports.ReportService = ReportService;\nReportService.ɵfac = function ReportService_Factory(t) {\n  return new (t || ReportService)(i0.ɵɵinject(i1.Ns2HttpService), i0.ɵɵinject(i2.ApplicationConfigService));\n};\nReportService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ReportService,\n  factory: ReportService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;;;;AAKA,MAGaA,aAAa;EAKxBC,YACUC,cAA8B,EAC9BC,wBAAkD;IADlD,mBAAc,GAAdD,cAAc;IACd,6BAAwB,GAAxBC,wBAAwB;IAL3B,gBAAW,GAAG,IAAI,CAACA,wBAAwB,CAACC,cAAc,CAAC,2BAA2B,CAAC;IAO5F;EACF;;EAEOC,iBAAiB,CAACC,OAAY;IACnC,MAAMC,GAAG,GAAE,GAAG,IAAI,CAACC,WAAW,uBAAuB;IACrD,OAAO,IAAI,CAACN,cAAc,CAACO,GAAG,CAACF,GAAG,EAAED,OAAO,CAAC;EAC9C;EAEOI,eAAe,CAACC,UAAkB,EAAEL,OAAY;IACrD,MAAMC,GAAG,GAAE,GAAG,IAAI,CAACC,WAAW,2BAA2BG,UAAU,EAAE;IACrE,OAAO,IAAI,CAACT,cAAc,CAACO,GAAG,CAACF,GAAG,EAAED,OAAO,CAAC;EAC9C;EAEOM,mBAAmB,CAACN,OAAY;IACrC,MAAMC,GAAG,GAAE,GAAG,IAAI,CAACC,WAAW,0BAA0B;IACxD,OAAO,IAAI,CAACN,cAAc,CAACO,GAAG,CAACF,GAAG,EAAED,OAAO,CAAC;EAC9C;EAEOO,cAAc,CAACC,YAAoB,EAAEC,OAAY,EAAET,OAAY;IACpE,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,WAAW,oBAAoBM,YAAY,EAAE;IACjEE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEX,OAAO,CAAC;IAC/B,OAAO,IAAI,CAACJ,cAAc,CAACgB,IAAI,CAACX,GAAG,EAAEQ,OAAO,EAAET,OAAO,CAAC;EACxD;EAEOa,aAAa,CAACb,OAAY;IAC/B,MAAMC,GAAG,GAAE,GAAG,IAAI,CAACC,WAAW,6BAA6B;IAC3D,OAAO,IAAI,CAACN,cAAc,CAACO,GAAG,CAACF,GAAG,EAAED,OAAO,CAAC;EAC9C;EAEOc,gBAAgB,CAACL,OAAY,EAAET,OAAY;IAChD,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,WAAW,2BAA2B;IAC1DQ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,OAAO,CAAC;IACpC,OAAO,IAAI,CAACb,cAAc,CAACgB,IAAI,CAACX,GAAG,EAAEQ,OAAO,EAAET,OAAO,CAAC;EACxD;EAEOe,iBAAiB,CAACN,OAAY,EAAET,OAAY;IACjD,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,WAAW,uBAAuB;IACtDQ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,OAAO,CAAC;IACpC,OAAO,IAAI,CAACb,cAAc,CAACgB,IAAI,CAACX,GAAG,EAAEQ,OAAO,EAAET,OAAO,CAAC;EACxD;;AAnDFgB;;mBAGatB,aAAa;AAAA;;SAAbA,aAAa;EAAAuB,SAAbvB,aAAa;EAAAwB,YAFZ;AAAM","names":["ReportService","constructor","ns2HttpService","applicationConfigService","getEndpointFor","getAllReportTypes","options","url","resourceUrl","get","getReportParams","reportUUID","getGeneratedReports","generateReport","pathVariable","request","console","log","post","getFavourites","updateFavourites","updateActionTaken","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\report-letter\\report\\service\\report.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportService {\r\n\r\n  public resourceUrl = this.applicationConfigService.getEndpointFor('/api/report-letter/report');\r\n\r\n\r\n  constructor(\r\n    private ns2HttpService: Ns2HttpService,\r\n    private applicationConfigService: ApplicationConfigService,\r\n  ) {\r\n    //\r\n  }\r\n\r\n  public getAllReportTypes(options: any): Observable<any>{\r\n    const url =`${this.resourceUrl}/retrieve_report_type`;      \r\n    return this.ns2HttpService.get(url, options);\r\n  }\r\n\r\n  public getReportParams(reportUUID: string, options: any): Observable<any>{\r\n    const url =`${this.resourceUrl}/retrieve_report_params/${reportUUID}`;      \r\n    return this.ns2HttpService.get(url, options);\r\n  }\r\n\r\n  public getGeneratedReports(options: any): Observable<any>{\r\n    const url =`${this.resourceUrl}/retrieve_report_history`;\r\n    return this.ns2HttpService.get(url, options);\r\n  }\r\n\r\n  public generateReport(pathVariable: string, request: any, options: any): Observable<any>{\r\n    const url = `${this.resourceUrl}/generate_report/${pathVariable}`;\r\n    console.log(\"options\", options);\r\n    return this.ns2HttpService.post(url, request, options);\r\n  }\r\n\r\n  public getFavourites(options: any): Observable<any>{\r\n    const url =`${this.resourceUrl}/retrieve_report_favourites`;\r\n    return this.ns2HttpService.get(url, options);\r\n  }\r\n  \r\n  public updateFavourites(request: any, options: any): Observable<any>{\r\n    const url = `${this.resourceUrl}/update_report_favourites`;\r\n    console.log(\"request body\", request);\r\n    return this.ns2HttpService.post(url, request, options);\r\n  }\r\n\r\n  public updateActionTaken(request: any, options: any): Observable<any>{\r\n    const url = `${this.resourceUrl}/update_report_action`;\r\n    console.log(\"request body\", request);\r\n    return this.ns2HttpService.post(url, request, options);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}