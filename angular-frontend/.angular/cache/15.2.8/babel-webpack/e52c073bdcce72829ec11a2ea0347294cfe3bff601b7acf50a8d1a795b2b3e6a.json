{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SerbRationaleAmendmentSectionComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst http_1 = require(\"@angular/common/http\");\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"../../service/se-claim.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/ng-connect\"));\nconst i4 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i5 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i6 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i7 = tslib_1.__importStar(require(\"primeng/dropdown\"));\nconst i8 = tslib_1.__importStar(require(\"primeng/inputtextarea\"));\nconst i9 = tslib_1.__importStar(require(\"primeng/accordion\"));\nconst _c0 = function () {\n  return {\n    \"max-width\": \"14em\",\n    \"width\": \"100%\"\n  };\n};\nclass SerbRationaleAmendmentSectionComponent {\n  constructor(seClaimService, ns2Http, codeService, formBuilder, toastService, dateUtilsService) {\n    this.seClaimService = seClaimService;\n    this.ns2Http = ns2Http;\n    this.codeService = codeService;\n    this.formBuilder = formBuilder;\n    this.toastService = toastService;\n    this.dateUtilsService = dateUtilsService;\n    this.selectedChange = new core_1.EventEmitter();\n    this.serbDateList = [];\n    // serbDateList: any[] = [{name: 'Pend Capture', key: 'PCA'}, {name: 'Closed (Reject)', key: 'COR'}, {name: 'Closed (Withdrawn by NSMan)', key: 'CNS'},\n    // {name:'Closed (Withdrawn by Employer)', key:'CCO'}];\n    this.serbAmendmentForm = this.formBuilder.group({\n      serbDate: new forms_1.FormControl('', null),\n      amendmentVal: new forms_1.FormControl('', null)\n    });\n  }\n  ngOnInit() {\n    console.log(\"init serb amendment\");\n  }\n  ngOnChanges(changes) {\n    if (changes.seHardCopyDetails?.currentValue) {\n      this.currHardCopyDetails = changes.seHardCopyDetails.currentValue;\n      this.retrieveSerbDateList();\n    }\n    this.serbAmendmentForm.valueChanges.subscribe(() => {\n      console.log(\"valuechange serb amendment\");\n      this.saveSEClaimRequest.serbRationaleSectionInd = true;\n    });\n  }\n  retrieveSerbDateList() {\n    let params = new http_1.HttpParams();\n    params = params.append('claimId', this.currHardCopyDetails.claimId);\n    this.seClaimService.retrieveSerbDateList({\n      params\n    }).subscribe(resp => {\n      if (resp.body.data) {\n        this.serbDateList = resp.body.data.map(x => {\n          return {\n            name: x,\n            key: x\n          };\n        });\n        if (this.serbDateList.length > 0) {\n          console.log(\"serv date us\", this.serbDateList);\n          this.serbAmendmentForm.get('serbDate').setValue(this.serbDateList[0].key);\n          this.retrieveSerbRationaleAmendment();\n        }\n      }\n    });\n  }\n  retrieveSerbRationaleAmendment() {\n    setTimeout(() => {\n      let params = new http_1.HttpParams();\n      params = params.append('claimId', this.currHardCopyDetails.claimId);\n      params = params.append('serbDate', this.serbAmendmentForm.get('serbDate').value);\n      this.seClaimService.retrieveSerbRationaleAmendment({\n        params\n      }).subscribe(resp => {\n        if (resp.body.data) {\n          this.serbAmendmentForm.get('amendmentVal').setValue(resp.body.data);\n        }\n      });\n    });\n    this.loading = false;\n  }\n  accordionClick() {\n    this.selectedChange.emit(this.selected);\n  }\n  disableAmendmentValue() {\n    return this.readOnly || this.station === 'V' || (this.station === 'A' || this.station === 'S') && !this.itemDetailsSection.hasInitialPAPItem || (this.station === 'A' || this.station === 'S') && this.itemDetailsSection.hasInitialPAPItem && this.hasConflictAppClaims;\n  }\n  populateRequestWithSerbRationaleAmendmentSectionChanges() {\n    this.saveSEClaimRequest.serbDate = this.serbAmendmentForm.get('serbDate').value;\n    this.saveSEClaimRequest.serbApprovalBasis = this.serbAmendmentForm.get('amendmentVal').value;\n  }\n}\nexports.SerbRationaleAmendmentSectionComponent = SerbRationaleAmendmentSectionComponent;\nSerbRationaleAmendmentSectionComponent.ɵfac = function SerbRationaleAmendmentSectionComponent_Factory(t) {\n  return new (t || SerbRationaleAmendmentSectionComponent)(i0.ɵɵdirectiveInject(i1.SEClaimService), i0.ɵɵdirectiveInject(i2.Ns2HttpService), i0.ɵɵdirectiveInject(i3.IcCodeService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.CustomToastService), i0.ɵɵdirectiveInject(i6.DateUtilsService));\n};\nSerbRationaleAmendmentSectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SerbRationaleAmendmentSectionComponent,\n  selectors: [[\"n2-serb-rationale-amendment-section\"]],\n  inputs: {\n    saveSEClaimRequest: \"saveSEClaimRequest\",\n    seHardCopyDetails: \"seHardCopyDetails\",\n    selected: \"selected\",\n    readOnly: \"readOnly\",\n    station: \"station\",\n    itemDetailsSection: \"itemDetailsSection\",\n    hasConflictAppClaims: \"hasConflictAppClaims\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 31,\n  vars: 8,\n  consts: [[\"header\", \"SERB Rationale for amendment\", \"multiple\", \"true\", 3, \"selected\", \"selectedChange\", \"click\"], [3, \"formGroup\"], [1, \"grid\"], [1, \"col-6\"], [1, \"row\"], [1, \"field\", \"grid\"], [\"for\", \"serbDate\", 1, \"col-auto\", \"col-form-label\"], [1, \"col-3\"], [\"id\", \"serbDate\", \"formControlName\", \"serbDate\", \"optionLabel\", \"name\", \"optionValue\", \"key\", \"placeholder\", \"Select\", 3, \"options\", \"onChange\"], [\"rows\", \"5\", \"inputId\", \"amendmentVal\", \"formControlName\", \"amendmentVal\", \"pInputTextarea\", \"\", \"maxlength\", \"500\", 1, \"inputfield\", \"w-full\", 3, \"disabled\", \"readonly\"]],\n  template: function SerbRationaleAmendmentSectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-accordionTab\", 0);\n      i0.ɵɵlistener(\"selectedChange\", function SerbRationaleAmendmentSectionComponent_Template_p_accordionTab_selectedChange_0_listener($event) {\n        return ctx.selected = $event;\n      })(\"click\", function SerbRationaleAmendmentSectionComponent_Template_p_accordionTab_click_0_listener() {\n        return ctx.accordionClick();\n      });\n      i0.ɵɵtext(1, \"\\n    \");\n      i0.ɵɵelementStart(2, \"form\", 1);\n      i0.ɵɵtext(3, \"\\n        \");\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵtext(5, \"\\n            \");\n      i0.ɵɵelementStart(6, \"div\", 3);\n      i0.ɵɵtext(7, \"\\n                \");\n      i0.ɵɵelementStart(8, \"div\", 4);\n      i0.ɵɵtext(9, \"\\n                    \");\n      i0.ɵɵelementStart(10, \"div\", 5);\n      i0.ɵɵtext(11, \"\\n                        \");\n      i0.ɵɵelementStart(12, \"label\", 6);\n      i0.ɵɵtext(13, \"SERB Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(14, \"\\n                        \");\n      i0.ɵɵelementStart(15, \"div\", 7);\n      i0.ɵɵtext(16, \"\\n                            \");\n      i0.ɵɵelementStart(17, \"p-dropdown\", 8);\n      i0.ɵɵlistener(\"onChange\", function SerbRationaleAmendmentSectionComponent_Template_p_dropdown_onChange_17_listener() {\n        return ctx.retrieveSerbRationaleAmendment();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \"\\n                        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \"\\n                    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(21, \"\\n                \");\n      i0.ɵɵelementStart(22, \"div\");\n      i0.ɵɵtext(23, \"\\n                    \");\n      i0.ɵɵelement(24, \"textarea\", 9);\n      i0.ɵɵtext(25, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(26, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(27, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(28, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(29, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"selected\", ctx.selected);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.serbAmendmentForm);\n      i0.ɵɵadvance(15);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c0));\n      i0.ɵɵproperty(\"options\", ctx.serbDateList);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"disabled\", ctx.disableAmendmentValue())(\"readonly\", ctx.disableAmendmentValue());\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.MaxLengthValidator, i4.FormGroupDirective, i4.FormControlName, i7.Dropdown, i8.InputTextarea, i9.AccordionTab],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZXJiLXJhdGlvbmFsZS1hbWVuZG1lbnQtc2VjdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvY2xhaW0vc2UtY2xhaW0vc2UtY2xhaW0tdmVyaWZpY2F0aW9uL3NlcmItcmF0aW9uYWxlLWFtZW5kbWVudC1zZWN0aW9uL3NlcmItcmF0aW9uYWxlLWFtZW5kbWVudC1zZWN0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxvTUFBb00iLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["SerbRationaleAmendmentSectionComponent","constructor","seClaimService","ns2Http","codeService","formBuilder","toastService","dateUtilsService","core_1","group","serbDate","forms_1","amendmentVal","ngOnInit","console","log","ngOnChanges","changes","seHardCopyDetails","currentValue","currHardCopyDetails","retrieveSerbDateList","serbAmendmentForm","valueChanges","subscribe","saveSEClaimRequest","serbRationaleSectionInd","params","http_1","append","claimId","resp","body","data","serbDateList","map","x","name","key","length","get","setValue","retrieveSerbRationaleAmendment","setTimeout","value","loading","accordionClick","selectedChange","emit","selected","disableAmendmentValue","readOnly","station","itemDetailsSection","hasInitialPAPItem","hasConflictAppClaims","populateRequestWithSerbRationaleAmendmentSectionChanges","serbApprovalBasis","exports","selectors","inputs","outputs","features","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\serb-rationale-amendment-section\\serb-rationale-amendment-section.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\serb-rationale-amendment-section\\serb-rationale-amendment-section.component.html"],"sourcesContent":["import { HttpParams } from '@angular/common/http';\r\nimport {AfterViewChecked, Component, EventEmitter, Input, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport {SaveSEClaimRequest} from \"app/claim/se-claim/model/save-se-claim-request.model\";\r\nimport { IcCodeService } from 'app/ng-connect';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { SEClaimService } from '../../service/se-claim.service';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\n\r\n@Component({\r\n  selector: 'n2-serb-rationale-amendment-section',\r\n  templateUrl: './serb-rationale-amendment-section.component.html',\r\n  styleUrls: ['./serb-rationale-amendment-section.component.scss']\r\n})\r\nexport class SerbRationaleAmendmentSectionComponent implements OnInit  {\r\n\r\n  @Input() saveSEClaimRequest: SaveSEClaimRequest;\r\n  @Input() seHardCopyDetails:any;\r\n\r\n  currHardCopyDetails: any;\r\n\r\n  @Input() selected:boolean;\r\n  @Output() selectedChange = new EventEmitter<boolean>();\r\n  //meant for routing from enquiry\r\n  @Input() readOnly: boolean;\r\n  @Input() station: string;\r\n  @Input() itemDetailsSection: any;\r\n  @Input() hasConflictAppClaims:boolean;\r\n\r\n  loading!: boolean;\r\n  serbDateList: any[] = [];\r\n\r\n\r\n  // serbDateList: any[] = [{name: 'Pend Capture', key: 'PCA'}, {name: 'Closed (Reject)', key: 'COR'}, {name: 'Closed (Withdrawn by NSMan)', key: 'CNS'},\r\n  // {name:'Closed (Withdrawn by Employer)', key:'CCO'}];\r\n  serbAmendmentForm: FormGroup =this.formBuilder.group({\r\n    serbDate: new FormControl('', null),\r\n    amendmentVal: new FormControl('', null)\r\n\r\n  });\r\n\r\n\r\n  constructor(\r\n    private seClaimService: SEClaimService,\r\n    private ns2Http: Ns2HttpService,\r\n    private codeService: IcCodeService,\r\n    private formBuilder: FormBuilder,\r\n    private toastService: CustomToastService,\r\n    private dateUtilsService: DateUtilsService,\r\n\r\n    ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"init serb amendment\")\r\n  }\r\n  \r\n  ngOnChanges(changes: SimpleChanges): void{\r\n    if(changes.seHardCopyDetails?.currentValue){\r\n      this.currHardCopyDetails=changes.seHardCopyDetails.currentValue;\r\n      this.retrieveSerbDateList();\r\n    }\r\n    this.serbAmendmentForm.valueChanges.subscribe(() => {\r\n      console.log(\"valuechange serb amendment\");\r\n      this.saveSEClaimRequest.serbRationaleSectionInd = true;\r\n    });\r\n  }\r\n  retrieveSerbDateList(): void{\r\n    let params = new HttpParams();\r\n    params = params.append('claimId', this.currHardCopyDetails.claimId);\r\n    this.seClaimService.retrieveSerbDateList({params}).subscribe((resp:any) => {\r\n      if (resp.body.data) {\r\n        this.serbDateList = resp.body.data.map((x:any)=>{\r\n          return{\r\n            name: x,\r\n            key: x\r\n          }}\r\n        )\r\n        if(this.serbDateList.length>0){\r\n          console.log(\"serv date us\", this.serbDateList)\r\n          this.serbAmendmentForm.get('serbDate').setValue(this.serbDateList[0].key);\r\n          this.retrieveSerbRationaleAmendment();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  retrieveSerbRationaleAmendment(): void{\r\n\r\n    setTimeout(() => {\r\n      let params = new HttpParams();\r\n      params = params.append('claimId', this.currHardCopyDetails.claimId);\r\n      params = params.append('serbDate', this.serbAmendmentForm.get('serbDate').value);\r\n      this.seClaimService.retrieveSerbRationaleAmendment({params}).subscribe((resp:any) => {\r\n      if (resp.body.data) {\r\n        this.serbAmendmentForm.get('amendmentVal').setValue(resp.body.data);\r\n      }\r\n      });\r\n    });\r\n\r\n    this.loading = false;\r\n  }\r\n\r\n  accordionClick(): void{\r\n    this.selectedChange.emit(this.selected);\r\n  }\r\n\r\n  disableAmendmentValue():boolean{\r\n    return this.readOnly || this.station === 'V' || (\r\n      (this.station === 'A' || this.station === 'S' ) && !this.itemDetailsSection.hasInitialPAPItem\r\n    ) || ((this.station === 'A' || this.station === 'S' ) && this.itemDetailsSection.hasInitialPAPItem && this.hasConflictAppClaims) \r\n\r\n  }\r\n\r\n  populateRequestWithSerbRationaleAmendmentSectionChanges(): void{\r\n    this.saveSEClaimRequest.serbDate = this.serbAmendmentForm.get('serbDate').value;\r\n    this.saveSEClaimRequest.serbApprovalBasis = this.serbAmendmentForm.get('amendmentVal').value;\r\n\r\n  }\r\n\r\n \r\n}\r\n","<p-accordionTab header=\"SERB Rationale for amendment\" multiple=\"true\" [(selected)]=\"selected\" (click) = \"accordionClick()\">\r\n    <form [formGroup]=\"serbAmendmentForm\">\r\n        <div class=\"grid\">\r\n            <div class=\"col-6\">\r\n                <div class = \"row\">\r\n                    <div class=\"field grid\">\r\n                        <label for=\"serbDate\" class=\"col-auto col-form-label\">SERB Date:</label>\r\n                        <div class=\"col-3\">\r\n                            <p-dropdown [options]=\"serbDateList\" id=\"serbDate\" formControlName=\"serbDate\" optionLabel=\"name\" optionValue=\"key\"\r\n                                placeholder=\"Select\" [style]=\"{'max-width': '14em', 'width':'100%'}\"\r\n                                (onChange)=\"retrieveSerbRationaleAmendment()\"></p-dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <textarea rows=\"5\"\r\n                    class=\"inputfield w-full\"\r\n                    inputId = \"amendmentVal\"\r\n                    formControlName=\"amendmentVal\"\r\n                    pInputTextarea\r\n                    maxlength=\"500\"  [disabled]=\"disableAmendmentValue()\"\r\n                    [readonly] = \"disableAmendmentValue()\"\r\n                    ></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</p-accordionTab>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}