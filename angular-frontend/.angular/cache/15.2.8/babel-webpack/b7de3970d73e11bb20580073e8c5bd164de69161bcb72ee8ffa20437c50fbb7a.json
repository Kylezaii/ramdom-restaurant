{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GenerateReportComponent = void 0;\nconst tslib_1 = require(\"tslib\");\n// import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nconst forms_1 = require(\"@angular/forms\");\nconst free_solid_svg_icons_1 = require(\"@fortawesome/free-solid-svg-icons\");\nconst http_1 = require(\"@angular/common/http\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"../service/report.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/shared/service/formly-map.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i5 = tslib_1.__importStar(require(\"app/shared/confirm/nsp-confirm.service\"));\nconst i6 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i7 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i8 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i9 = tslib_1.__importStar(require(\"@fortawesome/angular-fontawesome\"));\nconst i10 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i11 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/dropdown\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/confirmpopup\"));\nconst i15 = tslib_1.__importStar(require(\"@ngx-formly/core\"));\nconst i16 = tslib_1.__importStar(require(\"primeng/multiselect\"));\nconst i17 = tslib_1.__importStar(require(\"primeng/panel\"));\nfunction GenerateReportComponent_ng_template_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r4.selectedReportType.templateName);\n  }\n}\nfunction GenerateReportComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵtemplate(1, GenerateReportComponent_ng_template_15_div_1_Template, 5, 1, \"div\", 16);\n    i0.ɵɵtext(2, \"\\n                        \");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.selectedReportType);\n  }\n}\nfunction GenerateReportComponent_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2, \"\\n                                \");\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                        \");\n  }\n  if (rf & 2) {\n    const template_r5 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(template_r5.templateName);\n  }\n}\nfunction GenerateReportComponent_ng_template_45_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"div\", 27);\n    i0.ɵɵtext(2, \"\\n                                    \");\n    i0.ɵɵelementStart(3, \"span\", 28);\n    i0.ɵɵtext(4, \"Report Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                            \");\n  }\n}\nfunction GenerateReportComponent_ng_template_45_ng_template_18_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"span\", 30);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const option_r11 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(option_r11.templateName);\n  }\n}\nfunction GenerateReportComponent_ng_template_45_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"p-multiSelect\", 29);\n    i0.ɵɵlistener(\"onChange\", function GenerateReportComponent_ng_template_45_ng_template_18_Template_p_multiSelect_onChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const filter_r9 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r9($event.value));\n    });\n    i0.ɵɵtext(2, \"\\n                                    \");\n    i0.ɵɵtemplate(3, GenerateReportComponent_ng_template_45_ng_template_18_ng_template_3_Template, 4, 1, \"ng-template\", 8);\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                            \");\n  }\n  if (rf & 2) {\n    const value_r8 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", value_r8)(\"options\", ctx_r7.reportTypes);\n  }\n}\nfunction GenerateReportComponent_ng_template_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelementStart(3, \"th\", 17);\n    i0.ɵɵtext(4, \"Generation Date\\n                        \");\n    i0.ɵɵelement(5, \"p-sortIcon\", 18);\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵelement(7, \"p-columnFilter\", 19);\n    i0.ɵɵtext(8, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n                    \");\n    i0.ɵɵelementStart(10, \"th\", 20);\n    i0.ɵɵtext(11, \"Report\\n                        \");\n    i0.ɵɵelement(12, \"p-sortIcon\", 21);\n    i0.ɵɵtext(13, \"\\n                        \");\n    i0.ɵɵelementStart(14, \"p-columnFilter\", 22);\n    i0.ɵɵtext(15, \"\\n                            \");\n    i0.ɵɵtemplate(16, GenerateReportComponent_ng_template_45_ng_template_16_Template, 7, 0, \"ng-template\", 14);\n    i0.ɵɵtext(17, \"\\n                            \");\n    i0.ɵɵtemplate(18, GenerateReportComponent_ng_template_45_ng_template_18_Template, 6, 2, \"ng-template\", 23);\n    i0.ɵɵtext(19, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                    \");\n    i0.ɵɵelementStart(22, \"th\", 24);\n    i0.ɵɵtext(23, \"Status\\n                        \");\n    i0.ɵɵelement(24, \"p-sortIcon\", 25);\n    i0.ɵɵtext(25, \"\\n                        \");\n    i0.ɵɵelement(26, \"p-columnFilter\", 26);\n    i0.ɵɵtext(27, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n            \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"showMatchModes\", false)(\"showOperator\", false)(\"showAddButton\", false);\n  }\n}\nfunction GenerateReportComponent_ng_template_47_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵelement(1, \"fa-icon\", 33);\n    i0.ɵɵtext(2, \"\\n                        \");\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"icon\", ctx_r15.faCircleCheck);\n  }\n}\nfunction GenerateReportComponent_ng_template_47_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵelement(1, \"fa-icon\", 33);\n    i0.ɵɵtext(2, \"\\n                        \");\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"icon\", ctx_r16.faCircleXmark);\n  }\n}\nfunction GenerateReportComponent_ng_template_47_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵelement(1, \"fa-icon\", 34);\n    i0.ɵɵtext(2, \"\\n                        \");\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"icon\", ctx_r17.fa0)(\"border\", true);\n  }\n}\nfunction GenerateReportComponent_ng_template_47_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵelement(1, \"fa-icon\", 34);\n    i0.ɵɵtext(2, \"\\n                        \");\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"icon\", ctx_r18.faRotate)(\"border\", true);\n  }\n}\nfunction GenerateReportComponent_ng_template_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                    \");\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n                    \");\n    i0.ɵɵelementStart(10, \"td\", 31);\n    i0.ɵɵtext(11, \"\\n                        \");\n    i0.ɵɵtemplate(12, GenerateReportComponent_ng_template_47_ng_template_12_Template, 3, 1, \"ng-template\", 32);\n    i0.ɵɵtext(13, \"\\n                        \");\n    i0.ɵɵtemplate(14, GenerateReportComponent_ng_template_47_ng_template_14_Template, 3, 1, \"ng-template\", 32);\n    i0.ɵɵtext(15, \"\\n                        \");\n    i0.ɵɵtemplate(16, GenerateReportComponent_ng_template_47_ng_template_16_Template, 3, 2, \"ng-template\", 32);\n    i0.ɵɵtext(17, \"\\n                        \");\n    i0.ɵɵtemplate(18, GenerateReportComponent_ng_template_47_ng_template_18_Template, 3, 2, \"ng-template\", 32);\n    i0.ɵɵtext(19, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n            \");\n  }\n  if (rf & 2) {\n    const record_r14 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 6, record_r14.generationDate, \"dd-MM-yyyy HH:mm\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(record_r14.templateName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", record_r14.status === \"A\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", record_r14.status === \"F\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", record_r14.status === \"E\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", record_r14.status === \"I\");\n  }\n}\nconst _c0 = function () {\n  return [10, 25, 50];\n};\n// import { threadId } from 'worker_threads';\n// import { param } from 'jquery';\n// import { map } from 'rxjs';\nclass GenerateReportComponent {\n  constructor(reportService, accountService, formlyMapService, toastService, nspConfirmationService, dateUtilsService) {\n    this.reportService = reportService;\n    this.accountService = accountService;\n    this.formlyMapService = formlyMapService;\n    this.toastService = toastService;\n    this.nspConfirmationService = nspConfirmationService;\n    this.dateUtilsService = dateUtilsService;\n    // fontawesome icons\n    this.fa0 = free_solid_svg_icons_1.fa0;\n    this.faRotate = free_solid_svg_icons_1.faRotate;\n    this.faCircleXmark = free_solid_svg_icons_1.faCircleXmark;\n    this.faCircleCheck = free_solid_svg_icons_1.faCircleCheck;\n    this.dateFormat = \"DD-MM-YYYY\";\n    this.reportVariableForm = new forms_1.FormGroup({});\n    this.model = {};\n    this.fields = [];\n    this.fieldsTesting = [{\n      \"validators\": {\n        \"validation\": [{\n          \"name\": \"endDateMoreThanStartDate\",\n          \"options\": {\n            \"errorPath\": \"end_date\"\n          }\n        }]\n      },\n      \"fieldGroupClassName\": \"field grid formly-row\",\n      \"fieldGroup\": [{\n        \"template\": \"<p>Report Start Date&nbsp&nbsp</p>\",\n        \"className\": \"col-3 formly-label\"\n      }, {\n        \"key\": \"start_date\",\n        \"type\": \"quarterlyCal\",\n        \"className\": \"col-9\",\n        \"templateOptions\": {\n          \"required\": true,\n          \"placeholder\": \"Start Date\"\n        }\n      }]\n    }, {\n      \"fieldGroupClassName\": \"field grid formly-row\",\n      \"fieldGroup\": [{\n        \"template\": \"<p>Report End Date&nbsp&nbsp</p>\",\n        \"className\": \"col-3 formly-label\"\n      }, {\n        \"key\": \"end_date\",\n        \"type\": \"quarterlyCal\",\n        \"className\": \"col-9\",\n        \"templateOptions\": {\n          \"required\": true,\n          \"placeholder\": \"End Date\"\n        }\n      }]\n    }];\n    this.userGeneratedReports = [];\n  }\n  ngOnInit() {\n    this.load();\n  }\n  load() {\n    this.accountService.identity().subscribe(account => {\n      this.currentAccount = this.copyAccount(account);\n      console.log(\"account\", this.currentAccount);\n    });\n    this.retrieveGeneratedReports();\n    this.retrieveReportTypes();\n  }\n  copyAccount(account) {\n    return {\n      email: account.email,\n      firstName: account.firstName,\n      lastName: account.lastName,\n      login: account.username,\n      authorities: account.authorities,\n      groups: account.groups,\n      subjectId: account.subjectId\n    };\n  }\n  retrieveGeneratedReports() {\n    let params = new http_1.HttpParams();\n    params = params.append('createdBy', this.currentAccount.subjectId);\n    this.reportService.getGeneratedReports({\n      params\n    }).subscribe(resp => {\n      if (resp.body.data.dtoList) {\n        const dtoList = resp.body.data.dtoList;\n        for (let i = 0; i < dtoList.length; i++) {\n          dtoList[i].generationDate = this.dateUtilsService.convertUnixToDate(dtoList[i].generationDate);\n          dtoList[i].actionDte = this.dateUtilsService.convertUnixToDate(dtoList[i].actionDte);\n        }\n        console.log(\"user generated reports\", resp.body.data.dtoList);\n        this.userGeneratedReports = resp.body.data.dtoList;\n      }\n    });\n  }\n  retrieveReportTypes() {\n    this.reportService.getAllReportTypes(null).subscribe(resp => {\n      if (resp.body.data) {\n        console.log(\"all report types\", resp.body.data);\n        this.reportTypes = resp.body.data;\n      }\n    });\n  }\n  onChangeReportType() {\n    if (this.selectedReportType) {\n      this.reportService.getReportParams(this.selectedReportType.templateUUID, null).subscribe(resp => {\n        if (resp.body.data) {\n          console.log(\"report template uuid\", resp.body.data.reportTemplateUUID);\n          console.log(\"report params\", resp.body.data.reportParamObj);\n          this.fields = resp.body.data.reportParamObj;\n        }\n      });\n      this.fields = this.formlyMapService.mapOptionFields(this.fields);\n    }\n  }\n  onGenerate(event, key) {\n    console.log(\"model\", this.model);\n    this.nspConfirmationService.onConfirmPopup(event, key, null, () => {\n      const reportTemplateUUID = this.selectedReportType.templateUUID;\n      console.log(\"generating...template uuid\", this.selectedReportType.templateUUID);\n      let params = new http_1.HttpParams();\n      for (const [k, v] of Object.entries(this.model)) {\n        if (v instanceof Date) {\n          const ds = this.dateUtilsService.formatStrDate(v.toDateString(), this.dateFormat);\n          console.log(\"date string\", ds);\n          params = params.append(k, ds);\n        } else {\n          params = params.append(k, v);\n        }\n      }\n      console.log(\"http params\", params);\n      this.reportService.generateReport(reportTemplateUUID, null, {\n        params\n      }).subscribe(resp => {\n        if (resp && resp.status === 200) {\n          const reportName = this.selectedReportType.templateName;\n          this.toastService.success(reportName.concat(\" has been sent for Generation\"));\n          console.log(\"clearing form\");\n          this.selectedReportType = null;\n          this.reportVariableForm.reset();\n          this.retrieveGeneratedReports();\n        }\n      }, error => {\n        console.log(\"error is \" + String(error?.error?.error_desc));\n        this.toastService.error(\"Failed to connect to Report Generator, please try again. If the error persists, please contact the NSPAY Helpdesk\");\n      });\n    });\n  }\n}\nexports.GenerateReportComponent = GenerateReportComponent;\nGenerateReportComponent.ɵfac = function GenerateReportComponent_Factory(t) {\n  return new (t || GenerateReportComponent)(i0.ɵɵdirectiveInject(i1.ReportService), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i3.FormlyMapService), i0.ɵɵdirectiveInject(i4.CustomToastService), i0.ɵɵdirectiveInject(i5.NspConfirmationService), i0.ɵɵdirectiveInject(i6.DateUtilsService));\n};\nGenerateReportComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GenerateReportComponent,\n  selectors: [[\"n2-generate-report\"]],\n  decls: 52,\n  vars: 16,\n  consts: [[1, \"grid\"], [1, \"col-6\"], [\"header\", \"Generate Report\"], [1, \"field\", \"grid\"], [\"for\", \"selectedReportType\", 1, \"col-3\"], [1, \"col-9\"], [\"id\", \"selectedReportType\", \"optionLabel\", \"templateName\", \"filterBy\", \"templateName\", \"placeholder\", \"Select\", 3, \"options\", \"ngModel\", \"filter\", \"ngModelChange\", \"onChange\"], [\"pTemplate\", \"selectedItem\"], [\"pTemplate\", \"item\"], [3, \"formGroup\"], [3, \"model\", \"fields\", \"form\"], [\"key\", \"generateReport\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Generate\", 2, \"margin-top\", \"1em\", \"float\", \"right\", 3, \"click\"], [\"styleClass\", \"p-datatable-gridlines\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"value\", \"paginator\", \"rows\", \"rowsPerPageOptions\", \"showCurrentPageReport\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [4, \"ngIf\"], [\"scope\", \"col\", \"pSortableColumn\", \"generationDate\", 2, \"width\", \"25%\"], [\"field\", \"generationDate\"], [\"type\", \"date\", \"field\", \"generationDate\", \"display\", \"menu\"], [\"scope\", \"col\", \"pSortableColumn\", \"templateName\", 2, \"width\", \"55%\"], [\"field\", \"templateName\"], [\"type\", \"text\", \"field\", \"templateName\", \"matchMode\", \"in\", \"display\", \"menu\", 3, \"showMatchModes\", \"showOperator\", \"showAddButton\"], [\"pTemplate\", \"filter\"], [\"scope\", \"col\", \"pSortableColumn\", \"status\", 2, \"width\", \"20%\"], [\"field\", \"status\"], [\"type\", \"text\", \"field\", \"status\", \"display\", \"menu\"], [1, \"px-3\", \"pt-3\", \"pb-0\"], [1, \"font-bold\"], [\"display\", \"chip\", \"placeholder\", \"Any\", \"optionLabel\", \"templateName\", \"optionValue\", \"templateName\", 3, \"ngModel\", \"options\", \"onChange\"], [1, \"ml-1\"], [2, \"text-align\", \"center\", \"vertical-align\", \"middle\"], [3, \"ngIf\"], [3, \"icon\"], [3, \"icon\", \"border\"]],\n  template: function GenerateReportComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n    \");\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵtext(3, \"\\n        \");\n      i0.ɵɵelementStart(4, \"p-panel\", 2);\n      i0.ɵɵtext(5, \"\\n            \");\n      i0.ɵɵelementStart(6, \"div\", 3);\n      i0.ɵɵtext(7, \"\\n                \");\n      i0.ɵɵelementStart(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Report Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(10, \"\\n                \");\n      i0.ɵɵelementStart(11, \"div\", 5);\n      i0.ɵɵtext(12, \"\\n                    \");\n      i0.ɵɵelementStart(13, \"p-dropdown\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function GenerateReportComponent_Template_p_dropdown_ngModelChange_13_listener($event) {\n        return ctx.selectedReportType = $event;\n      })(\"onChange\", function GenerateReportComponent_Template_p_dropdown_onChange_13_listener() {\n        return ctx.onChangeReportType();\n      });\n      i0.ɵɵtext(14, \"\\n                        \");\n      i0.ɵɵtemplate(15, GenerateReportComponent_ng_template_15_Template, 3, 1, \"ng-template\", 7);\n      i0.ɵɵtext(16, \"\\n                        \");\n      i0.ɵɵtemplate(17, GenerateReportComponent_ng_template_17_Template, 7, 1, \"ng-template\", 8);\n      i0.ɵɵtext(18, \"\\n                    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(21, \"\\n            \");\n      i0.ɵɵelementStart(22, \"div\");\n      i0.ɵɵtext(23, \"\\n                \");\n      i0.ɵɵelementStart(24, \"form\", 9);\n      i0.ɵɵtext(25, \"\\n                    \");\n      i0.ɵɵelement(26, \"formly-form\", 10);\n      i0.ɵɵtext(27, \"\\n                    for testing\\n                    For Testing\\n                    \");\n      i0.ɵɵelement(28, \"formly-form\", 10);\n      i0.ɵɵtext(29, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(31, \"\\n            \");\n      i0.ɵɵtext(32, \"\\n            \");\n      i0.ɵɵtext(33, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \"\\n        \");\n      i0.ɵɵelement(35, \"p-confirmPopup\", 11);\n      i0.ɵɵtext(36, \"\\n        \");\n      i0.ɵɵelementStart(37, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function GenerateReportComponent_Template_button_click_37_listener($event) {\n        return ctx.onGenerate($event, \"generateReport\");\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(38, \"\\n        \");\n      i0.ɵɵtext(39, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(40, \"\\n    \");\n      i0.ɵɵelementStart(41, \"div\", 1);\n      i0.ɵɵtext(42, \"\\n        \");\n      i0.ɵɵelementStart(43, \"p-table\", 13);\n      i0.ɵɵtext(44, \"\\n            \");\n      i0.ɵɵtemplate(45, GenerateReportComponent_ng_template_45_Template, 30, 3, \"ng-template\", 14);\n      i0.ɵɵtext(46, \"\\n            \");\n      i0.ɵɵtemplate(47, GenerateReportComponent_ng_template_47_Template, 22, 9, \"ng-template\", 15);\n      i0.ɵɵtext(48, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(49, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(50, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(51, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"options\", ctx.reportTypes)(\"ngModel\", ctx.selectedReportType)(\"filter\", true);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"formGroup\", ctx.reportVariableForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"model\", ctx.model)(\"fields\", ctx.fields)(\"form\", ctx.reportVariableForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"model\", ctx.model)(\"fields\", ctx.fieldsTesting)(\"form\", ctx.reportVariableForm);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"value\", ctx.userGeneratedReports)(\"paginator\", true)(\"rows\", 10)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(15, _c0))(\"showCurrentPageReport\", true);\n    }\n  },\n  dependencies: [i7.NgIf, i8.ɵNgNoValidate, i8.NgControlStatus, i8.NgControlStatusGroup, i8.NgModel, i9.FaIconComponent, i8.FormGroupDirective, i10.PrimeTemplate, i11.ButtonDirective, i12.Table, i12.SortableColumn, i12.SortIcon, i12.ColumnFilter, i13.Dropdown, i14.ConfirmPopup, i15.FormlyForm, i16.MultiSelect, i17.Panel, i7.DatePipe],\n  styles: [\".p-panel .p-dropdown {\\n  width: 75%;\\n}\\n\\n.p-inputtext.ng-touched.ng-invalid {\\n  border-color: #e24c4c !important;\\n}\\n\\np-dropdown.ng-touched.ng-invalid > .p-dropdown {\\n  border-color: #e24c4c !important;\\n}\\n\\np-calendar.ng-touched.ng-invalid > .p-calendar > .p-inputtext {\\n  border-color: #e24c4c !important;\\n}\\n\\n.red-border > .p-calendar > .p-inputtext {\\n  border-color: #e24c4c !important;\\n}\\n\\n.p-column-filter-overlay-menu .p-column-filter-add-rule {\\n  display: flex !important;\\n}\\n\\n.p-column-filter-overlay-menu .p-column-filter-operator {\\n  display: flex !important;\\n}\\n\\n.p-column-filter-overlay-menu .p-column-filter-constraint .p-column-filter-matchmode-dropdown {\\n  display: flex !important;\\n}\\n\\n.fa-circle-check {\\n  color: var(--green-500) !important;\\n  font-size: 2em;\\n}\\n\\n.fa-circle-xmark {\\n  color: #e24c4c;\\n  font-size: 2em;\\n}\\n\\n.fa-rotate {\\n  background: var(--yellow-300) !important;\\n  color: #000000;\\n  font-size: 1.4em;\\n  border-radius: 2em;\\n}\\n\\n.fa-0 {\\n  background: var(--blue-300) !important;\\n  color: #ffffff;\\n  font-size: 1.4em;\\n  border-radius: 2em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYXRlLXJlcG9ydC5jb21wb25lbnQuc2NzcyIsIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHByb2plY3RzJTIwMlxcbnNwYXlpaWFwcFxcc3JjXFxtYWluXFx3ZWJhcHBcXGFwcFxccmVwb3J0LWxldHRlclxccmVwb3J0XFxnZW5lcmF0ZS1yZXBvcnRcXGdlbmVyYXRlLXJlcG9ydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQUE7QUNDSjs7QURFQTtFQUNJLGdDQUFBO0FDQ0o7O0FERUE7RUFDSSxnQ0FBQTtBQ0NKOztBREVBO0VBQ0ksZ0NBQUE7QUNDSjs7QURHQTtFQUNJLGdDQUFBO0FDQUo7O0FER0E7RUFDSSx3QkFBQTtBQ0FKOztBREdBO0VBQ0ksd0JBQUE7QUNBSjs7QURHQTtFQUNJLHdCQUFBO0FDQUo7O0FER0E7RUFDSSxrQ0FBQTtFQUNBLGNBQUE7QUNBSjs7QURHQTtFQUNJLGNBQUE7RUFDQSxjQUFBO0FDQUo7O0FER0E7RUFDSSx3Q0FBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FDQUo7O0FER0E7RUFDSSxzQ0FBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FDQUoiLCJmaWxlIjoiZ2VuZXJhdGUtcmVwb3J0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnAtcGFuZWwgLnAtZHJvcGRvd24ge1xyXG4gICAgd2lkdGg6IDc1JTtcclxufVxyXG5cclxuLnAtaW5wdXR0ZXh0Lm5nLXRvdWNoZWQubmctaW52YWxpZCB7XHJcbiAgICBib3JkZXItY29sb3I6ICNlMjRjNGMgIWltcG9ydGFudDtcclxufVxyXG5cclxucC1kcm9wZG93bi5uZy10b3VjaGVkLm5nLWludmFsaWQ+LnAtZHJvcGRvd24ge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjZTI0YzRjICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbnAtY2FsZW5kYXIubmctdG91Y2hlZC5uZy1pbnZhbGlkPi5wLWNhbGVuZGFyPi5wLWlucHV0dGV4dCB7XHJcbiAgICBib3JkZXItY29sb3I6ICNlMjRjNGMgIWltcG9ydGFudDtcclxufVxyXG5cclxuLy8gaWYgUmVwb3J0IEVuZCBEYXRlIGdyZWF0ZXIgdGhhbiBSZXBvcnQgU3RhcnQgRGF0ZVxyXG4ucmVkLWJvcmRlcj4ucC1jYWxlbmRhcj4ucC1pbnB1dHRleHQge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjZTI0YzRjICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5wLWNvbHVtbi1maWx0ZXItb3ZlcmxheS1tZW51IC5wLWNvbHVtbi1maWx0ZXItYWRkLXJ1bGUge1xyXG4gICAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ucC1jb2x1bW4tZmlsdGVyLW92ZXJsYXktbWVudSAucC1jb2x1bW4tZmlsdGVyLW9wZXJhdG9yIHtcclxuICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcclxufVxyXG5cclxuLnAtY29sdW1uLWZpbHRlci1vdmVybGF5LW1lbnUgLnAtY29sdW1uLWZpbHRlci1jb25zdHJhaW50IC5wLWNvbHVtbi1maWx0ZXItbWF0Y2htb2RlLWRyb3Bkb3duIHtcclxuICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmZhLWNpcmNsZS1jaGVjayB7XHJcbiAgICBjb2xvcjogdmFyKC0tZ3JlZW4tNTAwKSAhaW1wb3J0YW50O1xyXG4gICAgZm9udC1zaXplOiAyZW07XHJcbn1cclxuXHJcbi5mYS1jaXJjbGUteG1hcmsge1xyXG4gICAgY29sb3I6ICNlMjRjNGM7XHJcbiAgICBmb250LXNpemU6IDJlbTtcclxufVxyXG5cclxuLmZhLXJvdGF0ZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS15ZWxsb3ctMzAwKSAhaW1wb3J0YW50O1xyXG4gICAgY29sb3I6ICMwMDAwMDA7XHJcbiAgICBmb250LXNpemU6IDEuNGVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMmVtO1xyXG59XHJcblxyXG4uZmEtMCB7XHJcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1ibHVlLTMwMCkgIWltcG9ydGFudDtcclxuICAgIGNvbG9yOiAjZmZmZmZmO1xyXG4gICAgZm9udC1zaXplOiAxLjRlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDJlbTtcclxufSIsIi5wLXBhbmVsIC5wLWRyb3Bkb3duIHtcbiAgd2lkdGg6IDc1JTtcbn1cblxuLnAtaW5wdXR0ZXh0Lm5nLXRvdWNoZWQubmctaW52YWxpZCB7XG4gIGJvcmRlci1jb2xvcjogI2UyNGM0YyAhaW1wb3J0YW50O1xufVxuXG5wLWRyb3Bkb3duLm5nLXRvdWNoZWQubmctaW52YWxpZCA+IC5wLWRyb3Bkb3duIHtcbiAgYm9yZGVyLWNvbG9yOiAjZTI0YzRjICFpbXBvcnRhbnQ7XG59XG5cbnAtY2FsZW5kYXIubmctdG91Y2hlZC5uZy1pbnZhbGlkID4gLnAtY2FsZW5kYXIgPiAucC1pbnB1dHRleHQge1xuICBib3JkZXItY29sb3I6ICNlMjRjNGMgIWltcG9ydGFudDtcbn1cblxuLnJlZC1ib3JkZXIgPiAucC1jYWxlbmRhciA+IC5wLWlucHV0dGV4dCB7XG4gIGJvcmRlci1jb2xvcjogI2UyNGM0YyAhaW1wb3J0YW50O1xufVxuXG4ucC1jb2x1bW4tZmlsdGVyLW92ZXJsYXktbWVudSAucC1jb2x1bW4tZmlsdGVyLWFkZC1ydWxlIHtcbiAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50O1xufVxuXG4ucC1jb2x1bW4tZmlsdGVyLW92ZXJsYXktbWVudSAucC1jb2x1bW4tZmlsdGVyLW9wZXJhdG9yIHtcbiAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50O1xufVxuXG4ucC1jb2x1bW4tZmlsdGVyLW92ZXJsYXktbWVudSAucC1jb2x1bW4tZmlsdGVyLWNvbnN0cmFpbnQgLnAtY29sdW1uLWZpbHRlci1tYXRjaG1vZGUtZHJvcGRvd24ge1xuICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XG59XG5cbi5mYS1jaXJjbGUtY2hlY2sge1xuICBjb2xvcjogdmFyKC0tZ3JlZW4tNTAwKSAhaW1wb3J0YW50O1xuICBmb250LXNpemU6IDJlbTtcbn1cblxuLmZhLWNpcmNsZS14bWFyayB7XG4gIGNvbG9yOiAjZTI0YzRjO1xuICBmb250LXNpemU6IDJlbTtcbn1cblxuLmZhLXJvdGF0ZSB7XG4gIGJhY2tncm91bmQ6IHZhcigtLXllbGxvdy0zMDApICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBmb250LXNpemU6IDEuNGVtO1xuICBib3JkZXItcmFkaXVzOiAyZW07XG59XG5cbi5mYS0wIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tYmx1ZS0zMDApICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBmb250LXNpemU6IDEuNGVtO1xuICBib3JkZXItcmFkaXVzOiAyZW07XG59Il19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvcmVwb3J0LWxldHRlci9yZXBvcnQvZ2VuZXJhdGUtcmVwb3J0L2dlbmVyYXRlLXJlcG9ydC5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uL3Byb2plY3RzJTIwMi9uc3BheWlpYXBwL3NyYy9tYWluL3dlYmFwcC9hcHAvcmVwb3J0LWxldHRlci9yZXBvcnQvZ2VuZXJhdGUtcmVwb3J0L2dlbmVyYXRlLXJlcG9ydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQUE7QUNDSjs7QURFQTtFQUNJLGdDQUFBO0FDQ0o7O0FERUE7RUFDSSxnQ0FBQTtBQ0NKOztBREVBO0VBQ0ksZ0NBQUE7QUNDSjs7QURHQTtFQUNJLGdDQUFBO0FDQUo7O0FER0E7RUFDSSx3QkFBQTtBQ0FKOztBREdBO0VBQ0ksd0JBQUE7QUNBSjs7QURHQTtFQUNJLHdCQUFBO0FDQUo7O0FER0E7RUFDSSxrQ0FBQTtFQUNBLGNBQUE7QUNBSjs7QURHQTtFQUNJLGNBQUE7RUFDQSxjQUFBO0FDQUo7O0FER0E7RUFDSSx3Q0FBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FDQUo7O0FER0E7RUFDSSxzQ0FBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FDQUo7QURDQSx3aklBQXdqSSIsInNvdXJjZXNDb250ZW50IjpbIi5wLXBhbmVsIC5wLWRyb3Bkb3duIHtcclxuICAgIHdpZHRoOiA3NSU7XHJcbn1cclxuXHJcbi5wLWlucHV0dGV4dC5uZy10b3VjaGVkLm5nLWludmFsaWQge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjZTI0YzRjICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbnAtZHJvcGRvd24ubmctdG91Y2hlZC5uZy1pbnZhbGlkPi5wLWRyb3Bkb3duIHtcclxuICAgIGJvcmRlci1jb2xvcjogI2UyNGM0YyAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5wLWNhbGVuZGFyLm5nLXRvdWNoZWQubmctaW52YWxpZD4ucC1jYWxlbmRhcj4ucC1pbnB1dHRleHQge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjZTI0YzRjICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi8vIGlmIFJlcG9ydCBFbmQgRGF0ZSBncmVhdGVyIHRoYW4gUmVwb3J0IFN0YXJ0IERhdGVcclxuLnJlZC1ib3JkZXI+LnAtY2FsZW5kYXI+LnAtaW5wdXR0ZXh0IHtcclxuICAgIGJvcmRlci1jb2xvcjogI2UyNGM0YyAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ucC1jb2x1bW4tZmlsdGVyLW92ZXJsYXktbWVudSAucC1jb2x1bW4tZmlsdGVyLWFkZC1ydWxlIHtcclxuICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcclxufVxyXG5cclxuLnAtY29sdW1uLWZpbHRlci1vdmVybGF5LW1lbnUgLnAtY29sdW1uLWZpbHRlci1vcGVyYXRvciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5wLWNvbHVtbi1maWx0ZXItb3ZlcmxheS1tZW51IC5wLWNvbHVtbi1maWx0ZXItY29uc3RyYWludCAucC1jb2x1bW4tZmlsdGVyLW1hdGNobW9kZS1kcm9wZG93biB7XHJcbiAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5mYS1jaXJjbGUtY2hlY2sge1xyXG4gICAgY29sb3I6IHZhcigtLWdyZWVuLTUwMCkgIWltcG9ydGFudDtcclxuICAgIGZvbnQtc2l6ZTogMmVtO1xyXG59XHJcblxyXG4uZmEtY2lyY2xlLXhtYXJrIHtcclxuICAgIGNvbG9yOiAjZTI0YzRjO1xyXG4gICAgZm9udC1zaXplOiAyZW07XHJcbn1cclxuXHJcbi5mYS1yb3RhdGUge1xyXG4gICAgYmFja2dyb3VuZDogdmFyKC0teWVsbG93LTMwMCkgIWltcG9ydGFudDtcclxuICAgIGNvbG9yOiAjMDAwMDAwO1xyXG4gICAgZm9udC1zaXplOiAxLjRlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDJlbTtcclxufVxyXG5cclxuLmZhLTAge1xyXG4gICAgYmFja2dyb3VuZDogdmFyKC0tYmx1ZS0zMDApICFpbXBvcnRhbnQ7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIGZvbnQtc2l6ZTogMS40ZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAyZW07XHJcbn0iLCIucC1wYW5lbCAucC1kcm9wZG93biB7XG4gIHdpZHRoOiA3NSU7XG59XG5cbi5wLWlucHV0dGV4dC5uZy10b3VjaGVkLm5nLWludmFsaWQge1xuICBib3JkZXItY29sb3I6ICNlMjRjNGMgIWltcG9ydGFudDtcbn1cblxucC1kcm9wZG93bi5uZy10b3VjaGVkLm5nLWludmFsaWQgPiAucC1kcm9wZG93biB7XG4gIGJvcmRlci1jb2xvcjogI2UyNGM0YyAhaW1wb3J0YW50O1xufVxuXG5wLWNhbGVuZGFyLm5nLXRvdWNoZWQubmctaW52YWxpZCA+IC5wLWNhbGVuZGFyID4gLnAtaW5wdXR0ZXh0IHtcbiAgYm9yZGVyLWNvbG9yOiAjZTI0YzRjICFpbXBvcnRhbnQ7XG59XG5cbi5yZWQtYm9yZGVyID4gLnAtY2FsZW5kYXIgPiAucC1pbnB1dHRleHQge1xuICBib3JkZXItY29sb3I6ICNlMjRjNGMgIWltcG9ydGFudDtcbn1cblxuLnAtY29sdW1uLWZpbHRlci1vdmVybGF5LW1lbnUgLnAtY29sdW1uLWZpbHRlci1hZGQtcnVsZSB7XG4gIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcbn1cblxuLnAtY29sdW1uLWZpbHRlci1vdmVybGF5LW1lbnUgLnAtY29sdW1uLWZpbHRlci1vcGVyYXRvciB7XG4gIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcbn1cblxuLnAtY29sdW1uLWZpbHRlci1vdmVybGF5LW1lbnUgLnAtY29sdW1uLWZpbHRlci1jb25zdHJhaW50IC5wLWNvbHVtbi1maWx0ZXItbWF0Y2htb2RlLWRyb3Bkb3duIHtcbiAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50O1xufVxuXG4uZmEtY2lyY2xlLWNoZWNrIHtcbiAgY29sb3I6IHZhcigtLWdyZWVuLTUwMCkgIWltcG9ydGFudDtcbiAgZm9udC1zaXplOiAyZW07XG59XG5cbi5mYS1jaXJjbGUteG1hcmsge1xuICBjb2xvcjogI2UyNGM0YztcbiAgZm9udC1zaXplOiAyZW07XG59XG5cbi5mYS1yb3RhdGUge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS15ZWxsb3ctMzAwKSAhaW1wb3J0YW50O1xuICBjb2xvcjogIzAwMDAwMDtcbiAgZm9udC1zaXplOiAxLjRlbTtcbiAgYm9yZGVyLXJhZGl1czogMmVtO1xufVxuXG4uZmEtMCB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWJsdWUtMzAwKSAhaW1wb3J0YW50O1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgZm9udC1zaXplOiAxLjRlbTtcbiAgYm9yZGVyLXJhZGl1czogMmVtO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","GenerateReportComponent","constructor","reportService","accountService","formlyMapService","toastService","nspConfirmationService","dateUtilsService","free_solid_svg_icons_1","forms_1","ngOnInit","load","identity","subscribe","account","currentAccount","copyAccount","console","log","retrieveGeneratedReports","retrieveReportTypes","email","firstName","lastName","login","username","authorities","groups","subjectId","params","http_1","append","getGeneratedReports","resp","body","data","dtoList","i","length","generationDate","convertUnixToDate","actionDte","userGeneratedReports","getAllReportTypes","reportTypes","onChangeReportType","selectedReportType","getReportParams","templateUUID","reportTemplateUUID","reportParamObj","fields","mapOptionFields","onGenerate","event","key","model","onConfirmPopup","k","v","Object","entries","Date","ds","formatStrDate","toDateString","dateFormat","generateReport","status","reportName","templateName","success","concat","reportVariableForm","reset","error","String","error_desc","exports","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\report-letter\\report\\generate-report\\generate-report.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\report-letter\\report\\generate-report\\generate-report.component.html"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-return */\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n// import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { fa0, faRotate, faCircleXmark, faCircleCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { NspConfirmationService } from 'app/shared/confirm/nsp-confirm.service';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\nimport { ReportService } from '../service/report.service';\r\nimport { IReportType } from '../model/report.model';\r\nimport { IQueryGeneratedReport } from '../model/report.model';\r\nimport { FormlyFieldConfig } from '@ngx-formly/core';\r\nimport { FormlyMapService } from 'app/shared/service/formly-map.service';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { HttpParams } from '@angular/common/http';\r\n// import { threadId } from 'worker_threads';\r\n// import { param } from 'jquery';\r\n// import { map } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'n2-generate-report',\r\n  templateUrl: './generate-report.component.html',\r\n  styleUrls: ['./generate-report.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class GenerateReportComponent implements OnInit {\r\n\r\n  // fontawesome icons\r\n  fa0 = fa0;\r\n  faRotate = faRotate;\r\n  faCircleXmark = faCircleXmark;\r\n  faCircleCheck = faCircleCheck;\r\n  dateFormat = \"DD-MM-YYYY\";\r\n\r\n  reportVariableForm = new FormGroup({});\r\n  model: any = {};\r\n  fields: FormlyFieldConfig[] =[];\r\n\r\n  fieldsTesting:FormlyFieldConfig[] =  [ {\r\n    \"validators\" : {\r\n      \"validation\" : [ {\r\n        \"name\" : \"endDateMoreThanStartDate\",\r\n        \"options\" : {\r\n          \"errorPath\" : \"end_date\"\r\n        }\r\n      } ]\r\n    },\r\n    \"fieldGroupClassName\" : \"field grid formly-row\",\r\n    \"fieldGroup\" : [ {\r\n      \"template\" : \"<p>Report Start Date&nbsp&nbsp</p>\",\r\n      \"className\" : \"col-3 formly-label\"\r\n    }, {\r\n      \"key\" : \"start_date\",\r\n      \"type\" : \"quarterlyCal\",\r\n      \"className\" : \"col-9\",\r\n      \"templateOptions\" : {\r\n        \"required\" : true,\r\n        \"placeholder\" : \"Start Date\"\r\n      }\r\n    } ]\r\n  }, {\r\n    \"fieldGroupClassName\" : \"field grid formly-row\",\r\n    \"fieldGroup\" : [ {\r\n      \"template\" : \"<p>Report End Date&nbsp&nbsp</p>\",\r\n      \"className\" : \"col-3 formly-label\"\r\n    }, {\r\n      \"key\" : \"end_date\",\r\n      \"type\" : \"quarterlyCal\",\r\n      \"className\" : \"col-9\",\r\n      \"templateOptions\" : {\r\n        \"required\" : true,\r\n        \"placeholder\" : \"End Date\"\r\n      }\r\n    } ]\r\n  } ]\r\n  // fieldsTesting: FormlyFieldConfig[] = [\r\n  //     {\r\n       \r\n  //       fieldGroupClassName: \"field grid formly-row\",\r\n  //       fieldGroup: [\r\n  //           {\r\n  //               template: \"<p>SERB SN&nbsp&nbsp</p>\",\r\n  //               className: \"col-3 formly-label\"\r\n  //           },\r\n  //           {\r\n  //               key: \"serbSN\",\r\n  //               type: \"input\",\r\n  //               className: \"col-9\",\r\n  //               templateOptions: {\r\n  //                   \"required\": true,\r\n  //                   \"placeholder\": \"SERB SN\"\r\n  //               }\r\n  //           }\r\n  //       ]\r\n  //     },\r\n  //     {\r\n       \r\n  //       fieldGroupClassName: \"field grid formly-row\",\r\n  //       fieldGroup: [\r\n  //           {\r\n  //               template: \"<p>CASE ID&nbsp&nbsp</p>\",\r\n  //               className: \"col-3 formly-label\"\r\n  //           },\r\n  //           {\r\n  //               key: \"caseId\",\r\n  //               type: \"input\",\r\n  //               className: \"col-9\",\r\n  //               templateOptions: {\r\n  //                   \"required\": true,\r\n  //                   \"placeholder\": \"CASE ID\"\r\n  //               }\r\n  //           }\r\n  //       ]\r\n  //     },\r\n  //     {\r\n       \r\n  //       fieldGroupClassName: \"field grid formly-row\",\r\n  //       fieldGroup: [\r\n  //           {\r\n  //               template: \"<p>SE Claim Option&nbsp&nbsp</p>\",\r\n  //               className: \"col-3 formly-label\"\r\n  //           },\r\n  //           {\r\n  //               key: \"seClaimOption\",\r\n  //               type: \"input\",\r\n  //               className: \"col-9\",\r\n  //               props: {\r\n      \r\n  //               }\r\n  //           }\r\n  //       ]\r\n  //     },\r\n  //     {\r\n       \r\n  //       fieldGroupClassName: \"field grid formly-row\",\r\n  //       fieldGroup: [\r\n  //           {\r\n  //               template: \"<p>Is SV&nbsp&nbsp</p>\",\r\n  //               className: \"col-3 formly-label\"\r\n  //           },\r\n  //           {\r\n  //             key: \"isSV\",\r\n  //             type: \"checkbox\",\r\n  //             className: \"col-9\",\r\n  //             templateOptions: {\r\n  //               \"required\": true,\r\n  //             }\r\n  //           }\r\n  //       ]\r\n  //     },\r\n  //     {\r\n       \r\n  //       fieldGroupClassName: \"field grid formly-row\",\r\n  //       fieldGroup: [\r\n  //           {\r\n  //               template: \"<p>NRIC&nbsp&nbsp</p>\",\r\n  //               className: \"col-3 formly-label\"\r\n  //           },\r\n  //           {\r\n  //             key: \"claimantNRIC\",\r\n  //             type: \"input\",\r\n  //             className: \"col-9\",\r\n  //             templateOptions: {\r\n  //               \"required\": true,\r\n  //             }\r\n  //           }\r\n  //       ]\r\n  //     }\r\n  //   ];\r\n\r\n  currentAccount: any;\r\n  reportTypes: IReportType[];\r\n  selectedReportType: IReportType;\r\n  userGeneratedReports: IQueryGeneratedReport[] = [];\r\n\r\n  constructor(\r\n    private reportService: ReportService,\r\n    private accountService: AccountService,\r\n    private formlyMapService: FormlyMapService,\r\n    private toastService: CustomToastService,\r\n    private nspConfirmationService: NspConfirmationService,\r\n    public dateUtilsService: DateUtilsService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  load(): void {\r\n    this.accountService.identity().subscribe((account: any) => {\r\n      this.currentAccount = this.copyAccount(account);\r\n      console.log(\"account\", this.currentAccount);\r\n    });\r\n    this.retrieveGeneratedReports();\r\n    this.retrieveReportTypes();\r\n  }\r\n\r\n  copyAccount(account: any): any {\r\n    return {\r\n      email: account.email,\r\n      firstName: account.firstName,\r\n      lastName: account.lastName,\r\n      login: account.username,\r\n      authorities: account.authorities,\r\n      groups: account.groups,\r\n      subjectId: account.subjectId\r\n    };\r\n  }\r\n\r\n  retrieveGeneratedReports(): void {\r\n    let params = new HttpParams();\r\n    params = params.append('createdBy', this.currentAccount.subjectId);\r\n    this.reportService.getGeneratedReports({params}).subscribe(resp => {\r\n      if (resp.body.data.dtoList) {\r\n        const dtoList = resp.body.data.dtoList;\r\n        for (let i = 0; i < dtoList.length; i++) {\r\n          dtoList[i].generationDate = this.dateUtilsService.convertUnixToDate(dtoList[i].generationDate);\r\n          dtoList[i].actionDte = this.dateUtilsService.convertUnixToDate(dtoList[i].actionDte);\r\n        }\r\n        console.log(\"user generated reports\", resp.body.data.dtoList);\r\n        this.userGeneratedReports = resp.body.data.dtoList;\r\n      }\r\n    });\r\n  }\r\n\r\n  retrieveReportTypes(): void {\r\n    this.reportService.getAllReportTypes(null).subscribe(resp => {\r\n      if (resp.body.data) {\r\n        console.log(\"all report types\", resp.body.data);\r\n        this.reportTypes = resp.body.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  onChangeReportType(): void {\r\n    if (this.selectedReportType) {\r\n      this.reportService.getReportParams(this.selectedReportType.templateUUID, null).subscribe(resp => {\r\n        if (resp.body.data) {\r\n          console.log(\"report template uuid\", resp.body.data.reportTemplateUUID);\r\n          console.log(\"report params\", resp.body.data.reportParamObj);\r\n          this.fields = resp.body.data.reportParamObj;\r\n        }\r\n      });\r\n      this.fields = this.formlyMapService.mapOptionFields(this.fields);\r\n    }\r\n  }\r\n\r\n  onGenerate(event: Event, key: string): void {\r\n    console.log(\"model\", this.model);\r\n    this.nspConfirmationService.onConfirmPopup(event, key, null, () => {\r\n      const reportTemplateUUID = this.selectedReportType.templateUUID;\r\n      console.log(\"generating...template uuid\", this.selectedReportType.templateUUID);\r\n\r\n      let params = new HttpParams();\r\n      for (const [k, v] of Object.entries(this.model)) {\r\n        if (v instanceof Date) {\r\n          const ds = this.dateUtilsService.formatStrDate(v.toDateString(), this.dateFormat);\r\n          console.log(\"date string\", ds);\r\n          params = params.append(k, ds);\r\n        } else {\r\n          params = params.append(k, v as any);\r\n        }\r\n      }\r\n      console.log(\"http params\", params);\r\n\r\n      this.reportService.generateReport(reportTemplateUUID, null, {params}).subscribe(resp => {\r\n        if (resp && resp.status === 200) {\r\n          const reportName = this.selectedReportType.templateName;\r\n          this.toastService.success(reportName.concat(\" has been sent for Generation\"));\r\n          console.log(\"clearing form\");\r\n          this.selectedReportType = null;\r\n          this.reportVariableForm.reset();\r\n          this.retrieveGeneratedReports();\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(\"error is \" + String(error?.error?.error_desc));\r\n        this.toastService.error(\r\n          \"Failed to connect to Report Generator, please try again. If the error persists, please contact the NSPAY Helpdesk\");\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n\r\n// fields: FormlyFieldConfig[] = [\r\n//   {\r\n   \r\n//     fieldGroupClassName: \"field grid formly-row\",\r\n//     fieldGroup: [\r\n//         {\r\n//             template: \"<p>SERB SN&nbsp&nbsp</p>\",\r\n//             className: \"col-3 formly-label\"\r\n//         },\r\n//         {\r\n//             key: \"serbSN\",\r\n//             type: \"input\",\r\n//             className: \"col-9\",\r\n//             templateOptions: {\r\n//                 \"required\": true,\r\n//                 \"placeholder\": \"SERB SN\"\r\n//             }\r\n//         }\r\n//     ]\r\n//   },\r\n//   {\r\n   \r\n//     fieldGroupClassName: \"field grid formly-row\",\r\n//     fieldGroup: [\r\n//         {\r\n//             template: \"<p>CASE ID&nbsp&nbsp</p>\",\r\n//             className: \"col-3 formly-label\"\r\n//         },\r\n//         {\r\n//             key: \"caseId\",\r\n//             type: \"input\",\r\n//             className: \"col-9\",\r\n//             templateOptions: {\r\n//                 \"required\": true,\r\n//                 \"placeholder\": \"CASE ID\"\r\n//             }\r\n//         }\r\n//     ]\r\n//   },\r\n//   {\r\n   \r\n//     fieldGroupClassName: \"field grid formly-row\",\r\n//     fieldGroup: [\r\n//         {\r\n//             template: \"<p>SE Claim Option&nbsp&nbsp</p>\",\r\n//             className: \"col-3 formly-label\"\r\n//         },\r\n//         {\r\n//             key: \"seClaimOption\",\r\n//             type: \"input\",\r\n//             className: \"col-9\",\r\n//             props: {\r\n  \r\n//             }\r\n//         }\r\n//     ]\r\n//   },\r\n//   {\r\n   \r\n//     fieldGroupClassName: \"field grid formly-row\",\r\n//     fieldGroup: [\r\n//         {\r\n//             template: \"<p>Is SV&nbsp&nbsp</p>\",\r\n//             className: \"col-3 formly-label\"\r\n//         },\r\n//         {\r\n//           key: \"isSV\",\r\n//           type: \"checkbox\",\r\n//           className: \"col-9\",\r\n//           templateOptions: {\r\n//             \"required\": true,\r\n//           }\r\n//         }\r\n//     ]\r\n//   },\r\n//   {\r\n   \r\n//     fieldGroupClassName: \"field grid formly-row\",\r\n//     fieldGroup: [\r\n//         {\r\n//             template: \"<p>NRIC&nbsp&nbsp</p>\",\r\n//             className: \"col-3 formly-label\"\r\n//         },\r\n//         {\r\n//           key: \"claimantNRIC\",\r\n//           type: \"input\",\r\n//           className: \"col-9\",\r\n//           templateOptions: {\r\n//             \"required\": true,\r\n//           }\r\n//         }\r\n//     ]\r\n//   }\r\n// ];","<div class=\"grid\">\r\n    <div class=\"col-6\">\r\n        <p-panel header=\"Generate Report\">\r\n            <div class=\"field grid\">\r\n                <label for=\"selectedReportType\" class=\"col-3\">Report Type</label>\r\n                <div class=\"col-9\">\r\n                    <p-dropdown [options]=\"reportTypes\" id=\"selectedReportType\" [(ngModel)]=\"selectedReportType\"\r\n                        optionLabel=\"templateName\" [filter]=\"true\" filterBy=\"templateName\" placeholder=\"Select\"\r\n                        (onChange)=\"onChangeReportType()\">\r\n                        <ng-template pTemplate=\"selectedItem\">\r\n                            <div *ngIf=\"selectedReportType\">\r\n                                <div>{{selectedReportType.templateName}}</div>\r\n                            </div>\r\n                        </ng-template>\r\n                        <ng-template let-template pTemplate=\"item\">\r\n                            <div>\r\n                                <div>{{template.templateName}}</div>\r\n                            </div>\r\n                        </ng-template>\r\n                    </p-dropdown>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <form [formGroup]=\"reportVariableForm\">\r\n                    <formly-form [model]=\"model\" [fields]=\"fields\" [form]=\"reportVariableForm\"></formly-form>\r\n                    for testing\r\n                    For Testing\r\n                    <formly-form [model]=\"model\" [fields]=\"fieldsTesting\" [form]=\"reportVariableForm\"></formly-form>\r\n                </form>\r\n            </div>\r\n            <!-- to remove\r\n            {{ model | json }}-->\r\n            <!-- to remove -->\r\n        </p-panel>\r\n        <p-confirmPopup key='generateReport'></p-confirmPopup>\r\n        <button pButton type=\"button\" label=\"Generate\" (click)=\"onGenerate($event, 'generateReport')\"\r\n            style=\"margin-top: 1em; float: right;\"></button>\r\n        <!--  [disabled]=\"!selectedReportType || !reportVariableForm.valid\" -->\r\n    </div>\r\n    <div class=\"col-6\">\r\n        <p-table [value]=\"userGeneratedReports\" styleClass=\"p-datatable-gridlines\" [paginator]=\"true\" [rows]=\"10\"\r\n            [rowsPerPageOptions]=\"[10,25,50]\" [showCurrentPageReport]=\"true\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\">\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th scope=\"col\" style=\"width: 25%\" pSortableColumn=\"generationDate\">Generation Date\r\n                        <p-sortIcon field=\"generationDate\"></p-sortIcon>\r\n                        <p-columnFilter type=\"date\" field=\"generationDate\" display=\"menu\"></p-columnFilter>\r\n                    </th>\r\n                    <th scope=\"col\" style=\"width: 55%\" pSortableColumn=\"templateName\">Report\r\n                        <p-sortIcon field=\"templateName\"></p-sortIcon>\r\n                        <p-columnFilter type=\"text\" field=\"templateName\" matchMode=\"in\" display=\"menu\"\r\n                            [showMatchModes]=\"false\" [showOperator]=\"false\" [showAddButton]=\"false\">\r\n                            <ng-template pTemplate=\"header\">\r\n                                <div class=\"px-3 pt-3 pb-0\">\r\n                                    <span class=\"font-bold\">Report Type</span>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                                <p-multiSelect [ngModel]=\"value\" [options]=\"reportTypes\" display=\"chip\"\r\n                                    placeholder=\"Any\" (onChange)=\"filter($event.value)\" optionLabel=\"templateName\"\r\n                                    optionValue=\"templateName\">\r\n                                    <ng-template let-option pTemplate=\"item\">\r\n                                        <span class=\"ml-1\">{{ option.templateName }}</span>\r\n                                    </ng-template>\r\n                                </p-multiSelect>\r\n                            </ng-template>\r\n                        </p-columnFilter>\r\n                    </th>\r\n                    <th scope=\"col\" style=\"width: 20%\" pSortableColumn=\"status\">Status\r\n                        <p-sortIcon field=\"status\"></p-sortIcon>\r\n                        <p-columnFilter type=\"text\" field=\"status\" display=\"menu\"></p-columnFilter>\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-record>\r\n                <tr>\r\n                    <td>{{ record.generationDate | date:'dd-MM-yyyy HH:mm' }}</td>\r\n                    <td>{{ record.templateName }}</td>\r\n                    <td style=\"text-align: center; vertical-align: middle;\">\r\n                        <ng-template [ngIf]=\"record.status === 'A'\">\r\n                            <fa-icon [icon]=\"faCircleCheck\"></fa-icon>\r\n                        </ng-template>\r\n                        <ng-template [ngIf]=\"record.status === 'F'\">\r\n                            <fa-icon [icon]=\"faCircleXmark\"></fa-icon>\r\n                        </ng-template>\r\n                        <ng-template [ngIf]=\"record.status === 'E'\">\r\n                            <fa-icon [icon]=\"fa0\" [border]=\"true\"></fa-icon>\r\n                        </ng-template>\r\n                        <ng-template [ngIf]=\"record.status === 'I'\">\r\n                            <fa-icon [icon]=\"faRotate\" [border]=\"true\"></fa-icon>\r\n                        </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}