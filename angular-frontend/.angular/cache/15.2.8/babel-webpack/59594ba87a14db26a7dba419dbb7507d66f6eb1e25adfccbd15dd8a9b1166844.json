{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PayrollNotificationComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst forms_1 = require(\"@angular/forms\");\nconst http_1 = require(\"@angular/common/http\");\nconst common_1 = require(\"@angular/common\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"../../service/workload-inbox.service\"));\nconst i2 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i3 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i5 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i6 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i7 = tslib_1.__importStar(require(\"app/shared/confirm/nsp-confirm.service\"));\nconst i8 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i9 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i10 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i11 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/dropdown\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/dialog\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/inputtextarea\"));\nconst i15 = tslib_1.__importStar(require(\"primeng/confirmpopup\"));\nconst i16 = tslib_1.__importStar(require(\"../../../shared/pipe/default-string.pipe\"));\nconst _c0 = [\"dataTable\"];\nconst _c1 = function () {\n  return {\n    \"margin-right\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nconst _c2 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nfunction PayrollNotificationComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n            \");\n    i0.ɵɵelementStart(1, \"form\", 7);\n    i0.ɵɵtext(2, \"\\n                \");\n    i0.ɵɵelementStart(3, \"div\", 11);\n    i0.ɵɵtext(4, \"\\n                    \");\n    i0.ɵɵelementStart(5, \"div\", 12);\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵelementStart(7, \"p-button\", 13);\n    i0.ɵɵlistener(\"click\", function PayrollNotificationComponent_ng_template_4_Template_p_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(2);\n      return i0.ɵɵresetView(ctx_r6.exportCSV(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n\\n                        \");\n    i0.ɵɵelementStart(9, \"p-dropdown\", 14);\n    i0.ɵɵlistener(\"onChange\", function PayrollNotificationComponent_ng_template_4_Template_p_dropdown_onChange_9_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.applyFilter(\"claimantNRIC\", ctx_r8.captionGroup.get(\"selectedDupNric\").value));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n                    \");\n    i0.ɵɵelementStart(12, \"div\", 15);\n    i0.ɵɵtext(13, \"\\n                        \");\n    i0.ɵɵelement(14, \"p-confirmPopup\", 16);\n    i0.ɵɵtext(15, \"\\n                        \");\n    i0.ɵɵelementStart(16, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function PayrollNotificationComponent_ng_template_4_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onOpen(ctx_r9.displayInsertUpdateDialog));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                        \");\n    i0.ɵɵelementStart(18, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function PayrollNotificationComponent_ng_template_4_Template_button_click_18_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.removeWWOAction($event, \"confirmRmNoAction\", false));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n                        \");\n    i0.ɵɵelementStart(20, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function PayrollNotificationComponent_ng_template_4_Template_button_click_20_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.removeWWOAction($event, \"confirmRmNoAction\", true));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \"\\n        \");\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.captionGroup);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(17, _c1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(18, _c1));\n    i0.ɵɵproperty(\"options\", ctx_r1.nricWithMoreThanOneClaimOptions)(\"placeholder\", ctx_r1.duplicateNricPlaceHolder)(\"showClear\", true);\n    i0.ɵɵadvance(7);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(19, _c2));\n    i0.ɵɵproperty(\"disabled\", ctx_r1.selectedRows.length !== 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(20, _c2));\n    i0.ɵɵproperty(\"disabled\", ctx_r1.selectedRows.length <= 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(21, _c2));\n    i0.ɵɵproperty(\"disabled\", ctx_r1.selectedRows.length <= 0);\n  }\n}\nfunction PayrollNotificationComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n            \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                \");\n    i0.ɵɵelementStart(3, \"th\", 20);\n    i0.ɵɵtext(4, \"\\n                    \");\n    i0.ɵɵelement(5, \"p-tableHeaderCheckbox\");\n    i0.ɵɵtext(6, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n                \");\n    i0.ɵɵelementStart(8, \"th\", 21);\n    i0.ɵɵtext(9, \"SN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n                \");\n    i0.ɵɵelementStart(11, \"th\", 22);\n    i0.ɵɵtext(12, \"Rej Date\");\n    i0.ɵɵelement(13, \"p-sortIcon\", 23);\n    i0.ɵɵtext(14, \"\\n                    \");\n    i0.ɵɵelement(15, \"p-columnFilter\", 24);\n    i0.ɵɵtext(16, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                \");\n    i0.ɵɵelementStart(18, \"th\", 25);\n    i0.ɵɵtext(19, \"Type\");\n    i0.ɵɵelement(20, \"p-sortIcon\", 26);\n    i0.ɵɵtext(21, \"\\n                    \");\n    i0.ɵɵelement(22, \"p-columnFilter\", 27);\n    i0.ɵɵtext(23, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \"\\n                \");\n    i0.ɵɵelementStart(25, \"th\", 28);\n    i0.ɵɵtext(26, \"Name\");\n    i0.ɵɵelement(27, \"p-sortIcon\", 29);\n    i0.ɵɵtext(28, \"\\n                    \");\n    i0.ɵɵelement(29, \"p-columnFilter\", 30);\n    i0.ɵɵtext(30, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n                \");\n    i0.ɵɵelementStart(32, \"th\", 31);\n    i0.ɵɵtext(33, \"Start Date\");\n    i0.ɵɵelement(34, \"p-sortIcon\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(35, \"\\n                \");\n    i0.ɵɵelementStart(36, \"th\", 33);\n    i0.ɵɵtext(37, \"End Date\");\n    i0.ɵɵelement(38, \"p-sortIcon\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(39, \"\\n                \");\n    i0.ɵɵelementStart(40, \"th\", 35);\n    i0.ɵɵtext(41, \"Payment Description\");\n    i0.ɵɵelement(42, \"p-sortIcon\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(43, \"\\n                \");\n    i0.ɵɵelementStart(44, \"th\", 37);\n    i0.ɵɵtext(45, \"Status\");\n    i0.ɵɵelement(46, \"p-sortIcon\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(47, \"\\n                \");\n    i0.ɵɵelementStart(48, \"th\", 39);\n    i0.ɵɵtext(49, \"Remarks\");\n    i0.ɵɵelement(50, \"p-sortIcon\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(51, \"\\n                \");\n    i0.ɵɵelementStart(52, \"th\", 41);\n    i0.ɵɵtext(53, \"User Update\");\n    i0.ɵɵelement(54, \"p-sortIcon\", 42);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(55, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(56, \"\\n        \");\n  }\n}\nfunction PayrollNotificationComponent_ng_template_8_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const payRollNotif_r13 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                \", payRollNotif_r13.claimantName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", payRollNotif_r13.claimantNRIC, \"\\n            \");\n  }\n}\nfunction PayrollNotificationComponent_ng_template_8_td_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const payRollNotif_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                \", payRollNotif_r13.userUpdateByInit, \"\\n                \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r17.dateUtilsService.convertUnixToDateString(payRollNotif_r13.userUpdateDate, ctx_r17.dateFormat), \"\\n                \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", payRollNotif_r13.userUpdateDesc, \"\\n            \");\n  }\n}\nfunction PayrollNotificationComponent_ng_template_8_ng_template_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"td\", 46);\n    i0.ɵɵtext(2, \"\\n                    -\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n            \");\n  }\n}\nfunction PayrollNotificationComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n\\n        \");\n    i0.ɵɵelementStart(1, \"tr\", 43);\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"p-tableCheckbox\", 44);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n            \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n            \");\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n            \");\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n            \");\n    i0.ɵɵtemplate(16, PayrollNotificationComponent_ng_template_8_td_16_Template, 4, 2, \"td\", 45);\n    i0.ɵɵtext(17, \"\\n            \");\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n            \");\n    i0.ɵɵelementStart(22, \"td\");\n    i0.ɵɵtext(23);\n    i0.ɵɵpipe(24, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n            \");\n    i0.ɵɵelementStart(26, \"td\");\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n            \");\n    i0.ɵɵelementStart(29, \"td\", 46);\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n            \");\n    i0.ɵɵelementStart(32, \"td\");\n    i0.ɵɵtext(33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(34, \"\\n            \");\n    i0.ɵɵtemplate(35, PayrollNotificationComponent_ng_template_8_td_35_Template, 6, 3, \"td\", 45);\n    i0.ɵɵtext(36, \"\\n            \");\n    i0.ɵɵtemplate(37, PayrollNotificationComponent_ng_template_8_ng_template_37_Template, 4, 0, \"ng-template\", null, 47, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(39, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(40, \"\\n    \");\n  }\n  if (rf & 2) {\n    const payRollNotif_r13 = ctx.$implicit;\n    const rowIndex_r14 = ctx.rowIndex;\n    const _r18 = i0.ɵɵreference(38);\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pSelectableRow\", payRollNotif_r13);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", payRollNotif_r13);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(rowIndex_r14 + 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 14, ctx_r3.dateUtilsService.convertUnixToDateString(payRollNotif_r13.rejectedDate, ctx_r3.dateFormat)));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(payRollNotif_r13.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", payRollNotif_r13.claimantNRIC !== undefined)(\"ngIfElse\", _r18);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(20, 16, ctx_r3.dateUtilsService.convertUnixToDateString(payRollNotif_r13.paymentStartDate, ctx_r3.dateFormat)));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(24, 18, ctx_r3.dateUtilsService.convertUnixToDateString(payRollNotif_r13.paymentEndDate, ctx_r3.dateFormat)));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(payRollNotif_r13.paymentDesc);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(payRollNotif_r13.attendanceStatus);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(payRollNotif_r13.remarks);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", payRollNotif_r13.userUpdateByInit !== undefined)(\"ngIfElse\", _r18);\n  }\n}\nfunction PayrollNotificationComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"td\", 48);\n    i0.ɵɵtext(4, \"No records found.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n    \");\n  }\n}\nfunction PayrollNotificationComponent_ng_template_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"button\", 49);\n    i0.ɵɵlistener(\"click\", function PayrollNotificationComponent_ng_template_24_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.displayInsertUpdateDialog.display = false);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\n        \");\n    i0.ɵɵelementStart(3, \"button\", 50);\n    i0.ɵɵlistener(\"click\", function PayrollNotificationComponent_ng_template_24_Template_button_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.onSubmit($event, \"confirmInsertUpdate\", ctx_r24.displayInsertUpdateDialog));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n\\n    \");\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(5, _c2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c2));\n    i0.ɵɵproperty(\"disabled\", (tmp_2_0 = ctx_r5.userUpdateForm.get(\"userUpdate\")) == null ? null : tmp_2_0.hasError(\"required\"));\n  }\n}\nconst _c3 = function () {\n  return [10, 15, 20];\n};\nconst _c4 = function () {\n  return {\n    width: \"50vw\"\n  };\n};\nconst _c5 = function () {\n  return {\n    width: \"100%\"\n  };\n};\nclass PayrollNotificationComponent {\n  constructor(workloadService, primengConfig, ns2Http, toastService, formBuilder, dateUtilsService, nspConfirmService, exportUtilsService) {\n    this.workloadService = workloadService;\n    this.primengConfig = primengConfig;\n    this.ns2Http = ns2Http;\n    this.toastService = toastService;\n    this.formBuilder = formBuilder;\n    this.dateUtilsService = dateUtilsService;\n    this.nspConfirmService = nspConfirmService;\n    this.exportUtilsService = exportUtilsService;\n    this.payrollNotificationList = [];\n    this.selectedRows = [];\n    this.selectedRowsId = [];\n    this.displayInsertUpdateDialog = {\n      display: false\n    };\n    this.userUpdateForm = this.formBuilder.group({\n      userUpdate: new forms_1.FormControl('', forms_1.Validators.required)\n    });\n    this.selectAll = false;\n    this.totalRecords = 0;\n    this.cols = [];\n    this.pageData = {\n      currentPage: 0\n    };\n    this.dateFormat = \"DD-MM-YYYY (HH:mm)\";\n    this.duplicateNricPlaceHolder = \"0 Duplicates\";\n    this.pageSize = 10;\n  }\n  ngOnInit() {\n    this.captionGroup = this.formBuilder.group({\n      selectedDupNric: new forms_1.FormControl()\n    });\n    this.loading = true;\n  }\n  getPayRollNotificationData(event) {\n    this.lastTableLazyLoadEvent = event;\n    this.loading = true;\n    this.pageSize = event.rows;\n    setTimeout(() => {\n      const options = this.ns2Http.convertLazyEvent(event, this.pageData, this.pageSize);\n      this.workloadService.getPayRollNotificationData(options).subscribe(resp => {\n        if (resp.body.data) {\n          this.payrollNotificationList = resp.body.data.dtoList;\n          this.totalRecords = resp.body.data.total_no_of_elems;\n          if (resp.body.data.duplicateNrics) {\n            this.nricWithMoreThanOneClaimOptions = resp.body.data.duplicateNrics;\n          }\n          this.duplicateNricPlaceHolder = `${this.nricWithMoreThanOneClaimOptions.length} Duplicates`;\n        }\n        this.loading = false;\n      });\n    }, 0);\n    return this.payrollNotificationList;\n  }\n  applyFilter(column, filterValue) {\n    this.table.filter(filterValue, column, 'equals');\n    this.pageData.currentPage = 0;\n    this.pageSize = 10;\n  }\n  onOpen(dialog) {\n    dialog.display = true;\n  }\n  removeWWOAction(event, type, action) {\n    this.nspConfirmService.onConfirmPopup(event, type, null, () => {\n      this.onRemoveWithNoAction(action);\n    });\n  }\n  onSubmit(event, type, dialog) {\n    this.nspConfirmService.onConfirmPopup(event, type, dialog, () => {\n      const request = {\n        userUpdate: this.userUpdateForm.get('userUpdate').value,\n        userUpdateDate: this.selectedRows[0].userUpdateDate,\n        trgRejInboxId: this.selectedRows[0].trgRejInboxId\n      };\n      this.workloadService.insertUpdate(request).subscribe(resp => {\n        if (resp) {\n          if (resp.status === 200) {\n            this.toastService.success(String(resp.body.success_message));\n            this.resetDataTable();\n          }\n        }\n      }, error => {\n        console.log(\"error is\" + String(error?.error?.error_desc));\n        this.toastService.error(String(error?.error?.error_desc));\n      });\n    });\n  }\n  onRemoveWithNoAction(action) {\n    if (action) {\n      console.log(\"remove no action\");\n    } else {\n      console.log(\"remove with no action\");\n    }\n    ;\n    if (this.selectedRows) {\n      const reqList = this.selectedRows.map(x => {\n        return String(x.trgRejInboxId);\n      });\n      let params = new http_1.HttpParams();\n      params = params.append('action', action);\n      this.workloadService.removeNotifWithNoActions(reqList, {\n        params\n      }).subscribe(resp => {\n        if (resp && resp.ok) {\n          if (resp.body.data) {\n            if (resp.body.data.success) {\n              this.toastService.success(resp.body.data.success);\n            }\n            if (resp.body.data.error) {\n              this.toastService.error(resp.body.data.error);\n            }\n            this.resetDataTable();\n          }\n        }\n      }, error => {\n        console.log(\"error is\" + String(error?.error?.error_desc));\n        this.toastService.error(String(error?.error?.error_desc));\n      });\n    }\n  }\n  mapRemoveWAction(code) {\n    switch (code) {\n      case 1:\n        return \"Remove-No-Action\";\n      case 2:\n        return \"Remove-Action\";\n      default:\n        return \"Remove-No-Action\";\n    }\n  }\n  exportCSV(dataTable) {\n    this.workloadService.getPayRollNotificationData(null).subscribe(resp => {\n      if (resp.body.data) {\n        const columns = [{\n          field: 'rejectedDate',\n          header: 'Rej Date',\n          index: 1\n        }, {\n          field: 'type',\n          header: 'Type',\n          index: 2\n        }, {\n          field: 'claimantName',\n          header: 'Name',\n          index: 3\n        }, {\n          field: 'claimantNRIC',\n          header: 'NRIC',\n          index: 4\n        }, {\n          field: 'paymentStartDate',\n          header: 'Start Date',\n          index: 5\n        }, {\n          field: 'paymentEndDate',\n          header: 'End Date',\n          index: 6\n        }, {\n          field: 'paymentDesc',\n          header: 'Payment Description',\n          index: 7\n        }, {\n          field: 'attendanceStatus',\n          header: 'Status',\n          index: 8\n        }, {\n          field: 'remarks',\n          header: 'Remarks',\n          index: 9\n        }, {\n          field: 'userUpdateBy',\n          header: 'User Update By',\n          index: 10\n        }, {\n          field: 'userUpdateDate',\n          header: 'User Update Date',\n          index: 11\n        }, {\n          field: 'userUpdateDesc',\n          header: 'User Update Desc',\n          index: 12\n        }];\n        const dtoList = [];\n        resp.body.data.dtoList.forEach(data => {\n          const dto = {\n            rejectedDate: this.dateUtilsService.convertUnixToDateString(data.rejectedDate, this.dateFormat),\n            type: data.type,\n            claimantName: data.claimantName,\n            claimantNRIC: data.claimantNRIC,\n            paymentStartDate: this.dateUtilsService.convertUnixToDateString(data.paymentStartDate, this.dateFormat),\n            paymentEndDate: this.dateUtilsService.convertUnixToDateString(data.paymentEndDate, this.dateFormat),\n            attendanceStatus: data.attendanceStatus,\n            remarks: data.remarks,\n            userUpdateBy: data.userUpdateByInit,\n            userUpdateDate: this.dateUtilsService.convertUnixToDateString(data.userUpdateDate, this.dateFormat),\n            userUpdateDesc: data.userUpdateDesc\n          };\n          dtoList.push(dto);\n        });\n        this.exportUtilsService.exportCSV(dataTable, dtoList, resp.body.data.total_no_of_elems, columns, \"payroll_notification\".concat((0, common_1.formatDate)(new Date(), \"dd-MM-YYYY\", 'en-US')));\n        this.loading = false;\n      }\n    });\n  }\n  onSelectAllChange(event) {\n    const checked = event.checked;\n    if (checked) {\n      this.selectedRows = this.payrollNotificationList;\n      this.selectAll = true;\n    } else {\n      this.selectedRows = [];\n      this.selectAll = false;\n    }\n  }\n  onPage(event) {\n    console.log(\"pageevent\", event);\n    this.pageData.currentPage = event.first / event.rows;\n    this.selectAll = false;\n    this.selectedRows = [];\n  }\n  resetDataTable() {\n    this.selectAll = false;\n    this.selectedRows = [];\n    this.table.filters = {};\n    this.pageData.currentPage = 0;\n    this.pageSize = 10;\n    this.table.reset();\n  }\n  displayID() {\n    console.log(\"selected updated is \", this.selectedRows);\n  }\n}\nexports.PayrollNotificationComponent = PayrollNotificationComponent;\nPayrollNotificationComponent.ɵfac = function PayrollNotificationComponent_Factory(t) {\n  return new (t || PayrollNotificationComponent)(i0.ɵɵdirectiveInject(i1.WorkloadInboxService), i0.ɵɵdirectiveInject(i2.PrimeNGConfig), i0.ɵɵdirectiveInject(i3.Ns2HttpService), i0.ɵɵdirectiveInject(i4.CustomToastService), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.DateUtilsService), i0.ɵɵdirectiveInject(i7.NspConfirmationService), i0.ɵɵdirectiveInject(i8.ExportUtilsService));\n};\nPayrollNotificationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PayrollNotificationComponent,\n  selectors: [[\"n2-payroll-notification\"]],\n  viewQuery: function PayrollNotificationComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n    }\n  },\n  decls: 29,\n  vars: 22,\n  consts: [[\"styleClass\", \"p-datatable-gridlines p-datatable-striped\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"responsiveLayout\", \"scroll\", 3, \"value\", \"paginator\", \"rows\", \"lazy\", \"showCurrentPageReport\", \"selectAll\", \"totalRecords\", \"selection\", \"filterDelay\", \"loading\", \"rowsPerPageOptions\", \"selectAllChange\", \"onLazyLoad\", \"selectionChange\", \"onPage\"], [\"dataTable\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"header\", \"Insert User Update\", 3, \"visible\", \"draggable\", \"resizable\", \"visibleChange\"], [3, \"formGroup\"], [\"pInputTextarea\", \"\", \"formControlName\", \"userUpdate\", \"type\", \"text\", \"id\", \"userUpdate\", \"rows\", \"5\", \"cols\", \"30\"], [\"pTemplate\", \"footer\"], [\"key\", \"confirmInsertUpdate\", \"header\", \"Confirmation\", \"icon\", \"fa fa-question-circle\", \"width\", \"425\"], [1, \"grid\"], [1, \"col-6\", \"nsp-align-left\", \"flex\", \"justify-content-start\", \"align-items-center\"], [\"icon\", \"pi pi-file-o\", 3, \"click\"], [\"formControlName\", \"selectedDupNric\", 3, \"options\", \"placeholder\", \"showClear\", \"onChange\"], [1, \"col-6\", \"nsp-align-right\"], [\"key\", \"confirmRmNoAction\", \"header\", \"Confirmation\", \"icon\", \"fa fa-question-circle\", \"width\", \"425\"], [\"pButton\", \"\", \"label\", \"Insert Update\", 1, \"p-button-raised\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"label\", \"Remove with No Action\", 1, \"p-button-raised\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"label\", \"Remove with Action\", 1, \"p-button-raised\", \"p-button-success\", 3, \"disabled\", \"click\"], [\"scope\", \"col\", 2, \"width\", \"3rem\"], [\"scope\", \"col\"], [\"scope\", \"col\", \"pSortableColumn\", \"rejectedDate\"], [\"field\", \"rejectedDate\"], [\"type\", \"text\", \"field\", \"rejectedDtate\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"type\"], [\"field\", \"type\"], [\"type\", \"text\", \"field\", \"type\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"claimantNRIC\"], [\"field\", \"claimantNRIC\"], [\"type\", \"text\", \"field\", \"claimantNRIC\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"paymentStartDate\"], [\"field\", \"paymentStartDate\"], [\"scope\", \"col\", \"pSortableColumn\", \"paymentEndDate\"], [\"field\", \"paymentEndDate\"], [\"scope\", \"col\", \"pSortableColumn\", \"paymentDesc\"], [\"field\", \"paymentDesc\"], [\"scope\", \"col\", \"pSortableColumn\", \"attendanceStatus\"], [\"field\", \"attendanceStatus\"], [\"scope\", \"col\", \"pSortableColumn\", \"remarks\"], [\"field\", \"remarks\"], [\"scope\", \"col\", \"pSortableColumn\", \"userUpdate\"], [\"field\", \"userUpdate\"], [3, \"pSelectableRow\"], [3, \"value\"], [4, \"ngIf\", \"ngIfElse\"], [2, \"text-align\", \"center\"], [\"emptyCombinedField\", \"\"], [\"colspan\", \"8\"], [\"pButton\", \"\", \"label\", \"Cancel\", 1, \"p-button-danger\", 3, \"click\"], [\"pButton\", \"\", \"label\", \"Submit\", 3, \"disabled\", \"click\"]],\n  template: function PayrollNotificationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \"\\n\");\n      i0.ɵɵelementStart(1, \"p-table\", 0, 1);\n      i0.ɵɵlistener(\"selectAllChange\", function PayrollNotificationComponent_Template_p_table_selectAllChange_1_listener($event) {\n        return ctx.onSelectAllChange($event);\n      })(\"onLazyLoad\", function PayrollNotificationComponent_Template_p_table_onLazyLoad_1_listener($event) {\n        return ctx.getPayRollNotificationData($event);\n      })(\"selectionChange\", function PayrollNotificationComponent_Template_p_table_selectionChange_1_listener($event) {\n        return ctx.selectedRows = $event;\n      })(\"onPage\", function PayrollNotificationComponent_Template_p_table_onPage_1_listener($event) {\n        return ctx.onPage($event);\n      });\n      i0.ɵɵtext(3, \"\\n        \");\n      i0.ɵɵtemplate(4, PayrollNotificationComponent_ng_template_4_Template, 25, 22, \"ng-template\", 2);\n      i0.ɵɵtext(5, \"\\n\\n        \");\n      i0.ɵɵtemplate(6, PayrollNotificationComponent_ng_template_6_Template, 57, 0, \"ng-template\", 3);\n      i0.ɵɵtext(7, \"\\n    \");\n      i0.ɵɵtemplate(8, PayrollNotificationComponent_ng_template_8_Template, 41, 20, \"ng-template\", 4);\n      i0.ɵɵtext(9, \"\\n    \");\n      i0.ɵɵtemplate(10, PayrollNotificationComponent_ng_template_10_Template, 7, 0, \"ng-template\", 5);\n      i0.ɵɵtext(11, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \"\\n\\n\");\n      i0.ɵɵtext(13, \"\\n\\n\");\n      i0.ɵɵelementStart(14, \"p-dialog\", 6);\n      i0.ɵɵlistener(\"visibleChange\", function PayrollNotificationComponent_Template_p_dialog_visibleChange_14_listener($event) {\n        return ctx.displayInsertUpdateDialog.display = $event;\n      });\n      i0.ɵɵtext(15, \"\\n    \");\n      i0.ɵɵelementStart(16, \"form\", 7);\n      i0.ɵɵtext(17, \"\\n        \");\n      i0.ɵɵelementStart(18, \"h6\");\n      i0.ɵɵtext(19, \"User Update:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n\\n        \");\n      i0.ɵɵelement(21, \"textarea\", 8);\n      i0.ɵɵtext(22, \"\\n\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \"\\n    \");\n      i0.ɵɵtemplate(24, PayrollNotificationComponent_ng_template_24_Template, 5, 7, \"ng-template\", 9);\n      i0.ɵɵtext(25, \"\\n    \");\n      i0.ɵɵelement(26, \"p-confirmPopup\", 10);\n      i0.ɵɵtext(27, \"\\n\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(28, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", ctx.payrollNotificationList)(\"paginator\", true)(\"rows\", ctx.pageSize)(\"lazy\", true)(\"showCurrentPageReport\", true)(\"selectAll\", ctx.selectAll)(\"totalRecords\", ctx.totalRecords)(\"selection\", ctx.selectedRows)(\"filterDelay\", 0)(\"loading\", ctx.loading)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(19, _c3));\n      i0.ɵɵadvance(13);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(20, _c4));\n      i0.ɵɵproperty(\"visible\", ctx.displayInsertUpdateDialog.display)(\"draggable\", false)(\"resizable\", false);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.userUpdateForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(21, _c5));\n    }\n  },\n  dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i9.NgIf, i5.FormGroupDirective, i5.FormControlName, i2.PrimeTemplate, i10.ButtonDirective, i10.Button, i11.Table, i11.SortableColumn, i11.SelectableRow, i11.SortIcon, i11.TableCheckbox, i11.TableHeaderCheckbox, i11.ColumnFilter, i12.Dropdown, i13.Dialog, i14.InputTextarea, i15.ConfirmPopup, i16.DefaultStringPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXlyb2xsLW5vdGlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvd29ya2xvYWQvcGF5cm9sbC12ZXJpZmllci9wYXlyb2xsLW5vdGlmaWNhdGlvbi9wYXlyb2xsLW5vdGlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0xBQW9MIiwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ctx_r8","PayrollNotificationComponent","constructor","workloadService","primengConfig","ns2Http","toastService","formBuilder","dateUtilsService","nspConfirmService","exportUtilsService","display","group","userUpdate","forms_1","required","currentPage","ngOnInit","captionGroup","selectedDupNric","loading","getPayRollNotificationData","event","lastTableLazyLoadEvent","pageSize","rows","setTimeout","options","convertLazyEvent","pageData","subscribe","resp","body","data","payrollNotificationList","dtoList","totalRecords","total_no_of_elems","duplicateNrics","nricWithMoreThanOneClaimOptions","duplicateNricPlaceHolder","length","applyFilter","column","filterValue","table","filter","onOpen","dialog","removeWWOAction","type","action","onConfirmPopup","onRemoveWithNoAction","onSubmit","request","userUpdateForm","get","value","userUpdateDate","selectedRows","trgRejInboxId","insertUpdate","status","success","String","success_message","resetDataTable","error","console","log","error_desc","reqList","map","x","params","http_1","append","removeNotifWithNoActions","ok","mapRemoveWAction","code","exportCSV","dataTable","columns","field","header","index","forEach","dto","rejectedDate","convertUnixToDateString","dateFormat","claimantName","claimantNRIC","paymentStartDate","paymentEndDate","attendanceStatus","remarks","userUpdateBy","userUpdateByInit","userUpdateDesc","push","concat","Date","onSelectAllChange","checked","selectAll","onPage","first","filters","reset","displayID","exports","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\workload\\payroll-verifier\\payroll-notification\\payroll-notification.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\workload\\payroll-verifier\\payroll-notification\\payroll-notification.component.html"],"sourcesContent":["import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport {LazyLoadEvent, PrimeNGConfig} from 'primeng/api';\r\nimport { Table } from 'primeng/table';\r\nimport {WorkloadInboxService} from '../../service/workload-inbox.service';\r\nimport {PayrollNotification} from './payroll-notification.model';\r\nimport {CustomToastService} from 'app/layouts/service/customtoast.service';\r\nimport { NspConfirmationService } from 'app/shared/confirm/nsp-confirm.service';\r\nimport { HttpErrorResponse, HttpParams, HttpStatusCode } from '@angular/common/http';\r\nimport { ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport { formatDate } from \"@angular/common\";\r\n\r\n\r\n@Component({\r\n  selector: 'n2-payroll-notification',\r\n  templateUrl: './payroll-notification.component.html',\r\n  styleUrls: ['./payroll-notification.component.scss']\r\n})\r\nexport class PayrollNotificationComponent implements OnInit {\r\n\r\n\r\n  public payrollNotificationList: any[] = [];\r\n  public selectedRows: any[] = [];\r\n  selectedRowsId: string[] = [];\r\n  displayInsertUpdateDialog: any = {display: false};\r\n\r\n  userUpdateForm: FormGroup = this.formBuilder.group({\r\n    userUpdate: new FormControl('', Validators.required)\r\n  })\r\n\r\n  captionGroup: FormGroup;\r\n\r\n  selectAll = false;\r\n  loading!: boolean;\r\n  totalRecords = 0;\r\n  public cols: any [] = [];\r\n  pageData: {currentPage: number} = {\r\n    currentPage: 0\r\n  }\r\n  dateFormat = \"DD-MM-YYYY (HH:mm)\";\r\n  public nricWithMoreThanOneClaimOptions!: string[];\r\n  lastTableLazyLoadEvent: LazyLoadEvent;\r\n  duplicateNricPlaceHolder = \"0 Duplicates\";\r\n\r\n  pageSize = 10;\r\n  @ViewChild('dataTable') table: Table;\r\n\r\n\r\n  constructor(private workloadService: WorkloadInboxService, \r\n    private primengConfig: PrimeNGConfig,\r\n    private ns2Http: Ns2HttpService,\r\n    private toastService: CustomToastService,\r\n    private formBuilder: FormBuilder,\r\n    public dateUtilsService: DateUtilsService,\r\n    private nspConfirmService: NspConfirmationService,\r\n    private exportUtilsService: ExportUtilsService,\r\n\r\n    ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.captionGroup = this.formBuilder.group({\r\n      selectedDupNric: new FormControl(),\r\n    })\r\n    this.loading = true;\r\n  }\r\n\r\n  getPayRollNotificationData(event: LazyLoadEvent): any[] {\r\n    this.lastTableLazyLoadEvent = event;\r\n    this.loading = true;\r\n    this.pageSize = event.rows;\r\n    setTimeout(() => {\r\n      const options = this.ns2Http.convertLazyEvent(event, this.pageData, this.pageSize);\r\n      this.workloadService.getPayRollNotificationData(options).subscribe((resp: any) => {\r\n        if (resp.body.data) {\r\n          this.payrollNotificationList =  resp.body.data.dtoList;\r\n          this.totalRecords = resp.body.data.total_no_of_elems;\r\n          if (resp.body.data.duplicateNrics) {\r\n            this.nricWithMoreThanOneClaimOptions = resp.body.data.duplicateNrics;\r\n          }\r\n          this.duplicateNricPlaceHolder = `${this.nricWithMoreThanOneClaimOptions.length} Duplicates`\r\n\r\n        }\r\n        this.loading = false;\r\n\r\n      });\r\n    }, 0);\r\n    return this.payrollNotificationList;\r\n\r\n  }\r\n\r\n  applyFilter(column: string, filterValue: string): void {\r\n    this.table.filter(filterValue, column, 'equals');\r\n    this.pageData.currentPage = 0;\r\n    this.pageSize = 10;\r\n  }\r\n\r\n  onOpen(dialog: any): void {\r\n    dialog.display = true;\r\n  }\r\n\r\n  removeWWOAction(event: Event, type: string, action: boolean): void {\r\n    this.nspConfirmService.onConfirmPopup(event, type, null,\r\n      () => {\r\n        this.onRemoveWithNoAction(action);\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit(event: Event, type: string, dialog: any) {\r\n    this.nspConfirmService.onConfirmPopup(event, type, dialog,\r\n    ()=>{\r\n      const request = {\r\n        userUpdate: this.userUpdateForm.get('userUpdate').value,\r\n        userUpdateDate: this.selectedRows[0].userUpdateDate,\r\n        trgRejInboxId: this.selectedRows[0].trgRejInboxId\r\n      }\r\n      this.workloadService.insertUpdate(request).subscribe((resp:any)=> {\r\n          if(resp){\r\n            if(resp.status === 200){\r\n              this.toastService.success(String(resp.body.success_message));\r\n              this.resetDataTable();\r\n            }\r\n          }\r\n        },\r\n        (error: any) => {\r\n          console.log(\"error is\" + String(error?.error?.error_desc));\r\n          this.toastService.error(String(error?.error?.error_desc));\r\n        }\r\n      );})\r\n  }\r\n\r\n  onRemoveWithNoAction(action: boolean): void {\r\n    if(action){\r\n      console.log(\"remove no action\");\r\n    }else {\r\n      console.log(\"remove with no action\")\r\n    };\r\n    if (this.selectedRows) {\r\n      const reqList = this.selectedRows.map(x=>{\r\n        return String(x.trgRejInboxId);\r\n      })\r\n      let params = new HttpParams();\r\n      params = params.append('action',action);\r\n\r\n      this.workloadService.removeNotifWithNoActions(reqList, {params}).subscribe((resp: any) => {\r\n        if (resp && resp.ok) {\r\n          if (resp.body.data) {\r\n            if(resp.body.data.success){\r\n              this.toastService.success(resp.body.data.success);\r\n            }\r\n            if(resp.body.data.error){\r\n              this.toastService.error(resp.body.data.error);\r\n            }\r\n            this.resetDataTable();\r\n          }\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(\"error is\" + String(error?.error?.error_desc));\r\n        this.toastService.error(String(error?.error?.error_desc));\r\n      }\r\n    );}\r\n    \r\n  }\r\n\r\n  mapRemoveWAction(code: number): string{\r\n    switch(code){\r\n      case 1:\r\n        return \"Remove-No-Action\";\r\n      case 2:\r\n        return \"Remove-Action\";\r\n      default:\r\n        return \"Remove-No-Action\";\r\n    }\r\n  }\r\n\r\n  exportCSV(dataTable: Table): void{\r\n    this.workloadService.getPayRollNotificationData(null).subscribe((resp: any) => {\r\n      if (resp.body.data) {\r\n        const columns = \r\n          [\r\n            {field: 'rejectedDate', header: 'Rej Date', index: 1},\r\n            {field: 'type', header: 'Type', index: 2},\r\n            {field: 'claimantName', header: 'Name', index: 3},\r\n            {field: 'claimantNRIC', header: 'NRIC', index: 4},\r\n            {field: 'paymentStartDate', header: 'Start Date', index: 5},\r\n            {field: 'paymentEndDate', header: 'End Date', index: 6},\r\n            {field: 'paymentDesc', header: 'Payment Description', index: 7},\r\n            {field: 'attendanceStatus', header: 'Status', index: 8},\r\n            {field: 'remarks', header: 'Remarks', index: 9},\r\n            {field: 'userUpdateBy', header: 'User Update By', index: 10},\r\n            {field: 'userUpdateDate', header: 'User Update Date', index: 11},\r\n            {field: 'userUpdateDesc', header: 'User Update Desc', index: 12}\r\n          ];\r\n        const dtoList:any[] = [];\r\n        resp.body.data.dtoList.forEach((data:any)=>{\r\n          const dto = {\r\n            rejectedDate: this.dateUtilsService.convertUnixToDateString(data.rejectedDate, this.dateFormat),\r\n            type: data.type,\r\n            claimantName: data.claimantName,\r\n            claimantNRIC: data.claimantNRIC,\r\n            paymentStartDate:  this.dateUtilsService.convertUnixToDateString(data.paymentStartDate, this.dateFormat),\r\n            paymentEndDate:  this.dateUtilsService.convertUnixToDateString(data.paymentEndDate, this.dateFormat),\r\n            attendanceStatus: data.attendanceStatus,\r\n            remarks: data.remarks,\r\n            userUpdateBy: data.userUpdateByInit,\r\n            userUpdateDate: this.dateUtilsService.convertUnixToDateString(data.userUpdateDate, this.dateFormat),\r\n            userUpdateDesc: data.userUpdateDesc\r\n          }\r\n          dtoList.push(dto);\r\n          \r\n        })\r\n        this.exportUtilsService.exportCSV(dataTable, dtoList,resp.body.data.total_no_of_elems, columns, \r\n          \"payroll_notification\".concat(formatDate(new Date(),\"dd-MM-YYYY\", 'en-US')));\r\n      this.loading = false;\r\n    }});\r\n    \r\n  }\r\n\r\n  onSelectAllChange(event: any): void {\r\n    const checked = event.checked;\r\n    if (checked) {\r\n      this.selectedRows = this.payrollNotificationList;\r\n      this.selectAll = true;\r\n    } else {\r\n      this.selectedRows = [];\r\n      this.selectAll = false;\r\n    }\r\n  }\r\n\r\n  onPage(event: any): void {\r\n    console.log(\"pageevent\", event);\r\n    this.pageData.currentPage = event.first / event.rows;\r\n    this.selectAll = false;\r\n    this.selectedRows = [];\r\n  }\r\n\r\n  resetDataTable(): void {\r\n    this.selectAll = false;\r\n    this.selectedRows = [];\r\n    this.table.filters = {};\r\n    this.pageData.currentPage = 0;\r\n    this.pageSize = 10;\r\n    this.table.reset();\r\n  }\r\n\r\n  displayID(): void {\r\n    console.log(\"selected updated is \", this.selectedRows);\r\n   \r\n  }\r\n}\r\n\r\n\r\n","\r\n<p-table [value]=\"payrollNotificationList\"\r\n            [paginator]=\"true\"\r\n            [rows]=\"pageSize\"\r\n            [lazy] = \"true\"\r\n            [showCurrentPageReport]=\"true\"\r\n            [selectAll]=\"selectAll\"\r\n            (selectAllChange)=\"onSelectAllChange($event)\"\r\n            (onLazyLoad)=\"getPayRollNotificationData($event)\"\r\n            [totalRecords] = \"totalRecords\"\r\n            [(selection)] = \"selectedRows\"\r\n            [filterDelay]=\"0\"\r\n            [loading] = \"loading\"\r\n            styleClass=\"p-datatable-gridlines p-datatable-striped\"\r\n            [rowsPerPageOptions]=\"[10,15,20]\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            responsiveLayout=\"scroll\"\r\n            (onPage) = \"onPage($event)\"\r\n            #dataTable\r\n            >\r\n        <ng-template pTemplate=\"caption\">\r\n            <form [formGroup] = \"captionGroup\">\r\n                <div class=\"grid\">\r\n                    <div class = \"col-6 nsp-align-left flex justify-content-start align-items-center\">\r\n                        <p-button icon=\"pi pi-file-o\" [style]=\"{'margin-right': '.5em', 'margin-bottom': '.5em'}\"  (click) = \"exportCSV(dataTable)\"></p-button>\r\n\r\n                        <p-dropdown [options]=\"nricWithMoreThanOneClaimOptions\" [style]=\"{'margin-right': '.5em', 'margin-bottom': '.5em'}\" formControlName=\"selectedDupNric\" [placeholder]=\"duplicateNricPlaceHolder\" [showClear]=\"true\"\r\n                        (onChange)=\"applyFilter('claimantNRIC', captionGroup.get('selectedDupNric').value)\"\r\n                        ></p-dropdown>\r\n\r\n                    </div>\r\n                    <div class = \"col-6 nsp-align-right\">\r\n                        <p-confirmPopup key = \"confirmRmNoAction\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n                        <button pButton class =\"p-button-raised\" label=\"Insert Update\"  [style]=\"{'margin-left': '.5em' , 'margin-bottom': '.5em'}\"\r\n                        [disabled]=\"selectedRows.length!==1\" (click) = \"onOpen(displayInsertUpdateDialog)\"></button>\r\n                        <button pButton class =\"p-button-raised\" (click) = \"removeWWOAction($event, 'confirmRmNoAction',false)\" label=\"Remove with No Action\"  [style]=\"{'margin-left': '.5em' , 'margin-bottom': '.5em'}\"\r\n                        [disabled] = \"selectedRows.length<=0\"></button>\r\n                        <button pButton class =\"p-button-raised p-button-success\" (click) = \"removeWWOAction($event, 'confirmRmNoAction',true)\"label=\"Remove with Action\"  [style]=\"{'margin-left': '.5em' , 'margin-bottom': '.5em'}\"\r\n                        [disabled] = \"selectedRows.length<=0\"></button>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </ng-template>\r\n\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th scope=\"col\" style=\"width: 3rem\">\r\n                    <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                </th>\r\n                <th scope=\"col\">SN</th>\r\n                <th scope=\"col\" pSortableColumn = \"rejectedDate\">Rej Date<p-sortIcon field=\"rejectedDate\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"rejectedDtate\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" pSortableColumn =\"type\">Type<p-sortIcon field=\"type\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"type\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" pSortableColumn =\"claimantNRIC\">Name<p-sortIcon field=\"claimantNRIC\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"claimantNRIC\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" pSortableColumn =\"paymentStartDate\">Start Date<p-sortIcon field=\"paymentStartDate\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"paymentEndDate\">End Date<p-sortIcon field=\"paymentEndDate\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"paymentDesc\">Payment Description<p-sortIcon field=\"paymentDesc\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"attendanceStatus\">Status<p-sortIcon field=\"attendanceStatus\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"remarks\">Remarks<p-sortIcon field=\"remarks\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"userUpdate\">User Update<p-sortIcon field=\"userUpdate\"></p-sortIcon></th>\r\n            </tr>\r\n        </ng-template>\r\n    <ng-template pTemplate=\"body\" let-payRollNotif let-rowIndex = \"rowIndex\" let-columns=\"columns\">\r\n\r\n        <tr [pSelectableRow]=\"payRollNotif\">\r\n            <td><p-tableCheckbox [value]=\"payRollNotif\"></p-tableCheckbox></td>\r\n            <td>{{ rowIndex + 1}}</td>\r\n            <td>{{ dateUtilsService.convertUnixToDateString(payRollNotif.rejectedDate , dateFormat) | defaultString}}</td>\r\n            <td>{{payRollNotif.type }}</td>\r\n            <td *ngIf=\"payRollNotif.claimantNRIC!==undefined; else emptyCombinedField\">\r\n                {{payRollNotif.claimantName }} <br/> {{ payRollNotif.claimantNRIC}}\r\n            </td>\r\n            <td>{{ dateUtilsService.convertUnixToDateString(payRollNotif.paymentStartDate, dateFormat) | defaultString}}</td>\r\n            <td>{{ dateUtilsService.convertUnixToDateString(payRollNotif.paymentEndDate, dateFormat) | defaultString}}</td>\r\n            <td>{{payRollNotif.paymentDesc }}</td>\r\n            <td style=\"text-align: center;\">{{payRollNotif.attendanceStatus }}</td>\r\n            <td>{{payRollNotif.remarks }}</td>\r\n            <td *ngIf=\"payRollNotif.userUpdateByInit!==undefined; else emptyCombinedField\">\r\n                {{payRollNotif.userUpdateByInit }}\r\n                <br/> {{ dateUtilsService.convertUnixToDateString(payRollNotif.userUpdateDate, dateFormat) }}\r\n                <br/> {{ payRollNotif.userUpdateDesc }}\r\n            </td>\r\n            <ng-template #emptyCombinedField>\r\n                <td style=\"text-align: center;\">\r\n                    -\r\n                </td>\r\n            </ng-template>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n            <td colspan=\"8\">No records found.</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n\r\n<!-- <div class=\"col-md-12 nsp-align-right nsp-top-padding nsp-bottom-padding\">\r\n    <button pButton class =\"p-button-raised\" label=\"press\"  [style]=\"{'margin-left': '.5em'}\"\r\n    (click) = \"displayID()\"></button>\r\n\r\n</div> -->\r\n\r\n<p-dialog header=\"Insert User Update\"\r\n[(visible)]=\"displayInsertUpdateDialog.display\"\r\n[style]=\"{width: '50vw'}\"\r\n[draggable]=\"false\" [resizable]=\"false\"\r\n>\r\n    <form [formGroup] = \"userUpdateForm\">\r\n        <h6>User Update:</h6>\r\n\r\n        <textarea pInputTextarea  [style] = \"{width: '100%'}\"\r\n        formControlName = \"userUpdate\" type=\"text\" id=\"userUpdate\" rows=\"5\" cols=\"30\"></textarea>\r\n\r\n    </form>\r\n    <ng-template pTemplate=\"footer\">\r\n        <button pButton class =\"p-button-danger\" label=\"Cancel\"  (click)=\"displayInsertUpdateDialog.display=false\" [style]=\"{'margin-left': '.5em' , 'margin-bottom': '.5em'}\"\r\n        ></button>\r\n        <button pButton  label=\"Submit\" [disabled]=\"userUpdateForm.get('userUpdate')?.hasError('required')\" (click)=\"onSubmit($event, 'confirmInsertUpdate', displayInsertUpdateDialog)\" [style]=\"{'margin-left': '.5em' , 'margin-bottom': '.5em'}\"\r\n        ></button>\r\n\r\n    </ng-template>\r\n    <p-confirmPopup key = \"confirmInsertUpdate\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n\r\n</p-dialog>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}