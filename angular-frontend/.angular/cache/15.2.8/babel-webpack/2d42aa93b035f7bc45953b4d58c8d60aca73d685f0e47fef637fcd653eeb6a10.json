{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GenerateTokenComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/util/alert.service\"));\nconst i3 = tslib_1.__importStar(require(\"./maintain-profile.service\"));\nconst i4 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i5 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i6 = tslib_1.__importStar(require(\"@fortawesome/angular-fontawesome\"));\nconst i7 = tslib_1.__importStar(require(\"../../shared/language/translate.directive\"));\nconst i8 = tslib_1.__importStar(require(\"ngx-clipboard\"));\nfunction GenerateTokenComponent_form_0_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n          \");\n    i0.ɵɵelementStart(2, \"h5\", 12);\n    i0.ɵɵtext(3, \"Your New Personal Access Token\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n          \");\n    i0.ɵɵelementStart(5, \"div\", 13);\n    i0.ɵɵtext(6, \"\\n            \");\n    i0.ɵɵelement(7, \"textarea\", 14, 15);\n    i0.ɵɵtext(9, \"\\n            \");\n    i0.ɵɵelementStart(10, \"button\", 16);\n    i0.ɵɵtext(11, \"\\n              \");\n    i0.ɵɵelement(12, \"fa-icon\", 17);\n    i0.ɵɵtext(13, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n            \");\n    i0.ɵɵelementStart(15, \"span\", 18)(16, \"strong\");\n    i0.ɵɵtext(17, \"Token has validity period of 24 hours, please make sure you save it - you won't be able to access it again.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(18, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(8);\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"readonly\", true)(\"value\", ctx_r2.accessToken);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngxClipboard\", _r3)(\"cbContent\", ctx_r2.accessToken);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"icon\", \"clipboard\");\n  }\n}\nfunction GenerateTokenComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 1, 2);\n    i0.ɵɵlistener(\"ngSubmit\", function GenerateTokenComponent_form_0_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.generatePersonalAccessToken());\n    });\n    i0.ɵɵtext(2, \"\\n  \");\n    i0.ɵɵelementStart(3, \"div\", 3);\n    i0.ɵɵtext(4, \"\\n    \");\n    i0.ɵɵelementStart(5, \"div\", 4);\n    i0.ɵɵtext(6, \"\\n      \");\n    i0.ɵɵelementStart(7, \"div\", 5);\n    i0.ɵɵtext(8, \"\\n        \");\n    i0.ɵɵelementStart(9, \"span\", 6);\n    i0.ɵɵtext(10, \"Personal Access Token\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n      \");\n    i0.ɵɵelementStart(13, \"div\", 7);\n    i0.ɵɵtext(14, \"\\n        \");\n    i0.ɵɵtemplate(15, GenerateTokenComponent_form_0_div_15_Template, 20, 5, \"div\", 8);\n    i0.ɵɵtext(16, \"\\n\\n        \");\n    i0.ɵɵelementStart(17, \"div\", 9);\n    i0.ɵɵtext(18, \"\\n          \");\n    i0.ɵɵelementStart(19, \"button\", 10);\n    i0.ɵɵtext(20, \"\\n            \");\n    i0.ɵɵelementStart(21, \"span\", 11);\n    i0.ɵɵtext(22, \"Generate Personal Access Token\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r1 = i0.ɵɵreference(1);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.accessToken);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", _r1.form.invalid);\n  }\n}\nclass GenerateTokenComponent {\n  constructor(accountService, alertService, maintainProfileService) {\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.maintainProfileService = maintainProfileService;\n  }\n  ngOnInit() {\n    this.accountService.identity().subscribe(account => {\n      this.currentAccount = this.copyAccount(account);\n    });\n    this.initTokenVM();\n  }\n  generatePersonalAccessToken() {\n    this.maintainProfileService.createAccessToken(this.tokenVM).subscribe(response => {\n      this.accessToken = response['id_token'];\n      this.onSaveSuccess();\n    }, error => {\n      this.onSaveError(error);\n    });\n  }\n  copyAccount(account) {\n    return {\n      email: account.email,\n      firstName: account.firstName,\n      lastName: account.lastName\n    };\n  }\n  initTokenVM() {\n    this.tokenVM = {\n      expireDateAsStr: ''\n    };\n  }\n  onSaveSuccess() {\n    this.initTokenVM();\n    this.alertService.addAlert({\n      type: 'success',\n      translationKey: 'profile.messages.token.success'\n    });\n  }\n  onSaveError(error) {\n    try {\n      error.json();\n    } catch (exception) {\n      error.message = error.text();\n    }\n    this.onError(error);\n  }\n  onError(error) {\n    if (error.message) {\n      this.alertService.addAlert({\n        type: 'danger',\n        translationKey: error.message\n      });\n    } else {\n      this.alertService.addAlert({\n        type: 'danger',\n        translationKey: 'profile.messages.token.fail'\n      });\n    }\n  }\n}\nexports.GenerateTokenComponent = GenerateTokenComponent;\nGenerateTokenComponent.ɵfac = function GenerateTokenComponent_Factory(t) {\n  return new (t || GenerateTokenComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.AlertService), i0.ɵɵdirectiveInject(i3.MaintainProfileService));\n};\nGenerateTokenComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GenerateTokenComponent,\n  selectors: [[\"ic-generate-token\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[\"name\", \"generateTokenForm\", \"role\", \"form\", 3, \"ngSubmit\", 4, \"ngIf\"], [\"name\", \"generateTokenForm\", \"role\", \"form\", 3, \"ngSubmit\"], [\"generateTokenForm\", \"ngForm\"], [\"id\", \"generate-token\", 1, \"tab-pane\", 2, \"padding\", \"1.5% 0 1.5% 0\"], [1, \"card\"], [1, \"card-header\"], [\"icTranslate\", \"profile.tab.generate.token\"], [1, \"card-block\", 2, \"padding\", \"1.5%\"], [4, \"ngIf\"], [2, \"margin-top\", \"1.5%\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"disabled\"], [\"icTranslate\", \"profile.form.generate.token\"], [\"icTranslate\", \"profile.form.token.new\"], [1, \"rounded-pill\"], [\"rows\", \"2\", \"cols\", \"2\", 1, \"form-control\", \"col-md-11\", 3, \"readonly\", \"value\"], [\"token\", \"\"], [\"type\", \"button\", \"title\", \"Copy to Clipboard\", 3, \"ngxClipboard\", \"cbContent\"], [3, \"icon\"], [\"icTranslate\", \"profile.form.token.new.warning\", 1, \"text-danger\"]],\n  template: function GenerateTokenComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, GenerateTokenComponent_form_0_Template, 29, 2, \"form\", 0);\n      i0.ɵɵtext(1, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.currentAccount);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i5.NgIf, i6.FaIconComponent, i7.TranslateDirective, i8.ClipboardDirective],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","GenerateTokenComponent","constructor","accountService","alertService","maintainProfileService","ngOnInit","identity","subscribe","account","currentAccount","copyAccount","initTokenVM","generatePersonalAccessToken","createAccessToken","tokenVM","response","accessToken","onSaveSuccess","error","onSaveError","email","firstName","lastName","expireDateAsStr","addAlert","type","translationKey","json","exception","message","text","onError","exports","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\account\\profile\\generate-token.component.html","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\account\\profile\\generate-token.component.ts"],"sourcesContent":["<form\r\n  name=\"generateTokenForm\"\r\n  role=\"form\"\r\n  (ngSubmit)=\"generatePersonalAccessToken()\"\r\n  #generateTokenForm=\"ngForm\"\r\n  *ngIf=\"currentAccount\"\r\n>\r\n  <div id=\"generate-token\" class=\"tab-pane\" style=\"padding: 1.5% 0 1.5% 0\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <span icTranslate=\"profile.tab.generate.token\">Personal Access Token</span>\r\n      </div>\r\n      <div class=\"card-block\" style=\"padding: 1.5%\">\r\n        <div *ngIf=\"accessToken\">\r\n          <h5 icTranslate=\"profile.form.token.new\">Your New Personal Access Token</h5>\r\n          <div class=\"rounded-pill\">\r\n            <textarea rows=\"2\" cols=\"2\" class=\"form-control col-md-11\" [readonly]=\"true\" [value]=\"accessToken\" #token></textarea>\r\n            <button type=\"button\" [ngxClipboard]=\"token\" [cbContent]=\"accessToken\" title=\"Copy to Clipboard\">\r\n              <fa-icon [icon]=\"'clipboard'\"></fa-icon>\r\n            </button>\r\n            <span class=\"text-danger\" icTranslate=\"profile.form.token.new.warning\"\r\n              ><strong\r\n                >Token has validity period of 24 hours, please make sure you save it - you won't be able to access it again.</strong\r\n              ></span\r\n            >\r\n          </div>\r\n        </div>\r\n\r\n        <div style=\"margin-top: 1.5%\">\r\n          <button type=\"submit\" [disabled]=\"generateTokenForm.form.invalid\" class=\"btn btn-primary btn-sm\">\r\n            <span icTranslate=\"profile.form.generate.token\">Generate Personal Access Token</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { MaintainProfileService } from './maintain-profile.service';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\n\r\n@Component({\r\n  selector: 'ic-generate-token',\r\n  templateUrl: './generate-token.component.html',\r\n})\r\nexport class GenerateTokenComponent implements OnInit {\r\n  error: string | undefined;\r\n  success: string | undefined;\r\n  currentAccount: any | undefined;\r\n  tokenVM: any;\r\n  accessToken: string | undefined;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private alertService: AlertService,\r\n    private maintainProfileService: MaintainProfileService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.accountService.identity().subscribe(account => {\r\n      this.currentAccount = this.copyAccount(account);\r\n    });\r\n    this.initTokenVM();\r\n  }\r\n\r\n  generatePersonalAccessToken(): void {\r\n    this.maintainProfileService.createAccessToken(this.tokenVM).subscribe(\r\n      response => {\r\n        this.accessToken = response['id_token'];\r\n        this.onSaveSuccess();\r\n      },\r\n      (error: any) => {\r\n        this.onSaveError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  copyAccount(account: any): any {\r\n    return {\r\n      email: account.email,\r\n      firstName: account.firstName,\r\n      lastName: account.lastName,\r\n    };\r\n  }\r\n\r\n  private initTokenVM(): void {\r\n    this.tokenVM = {\r\n      expireDateAsStr: '',\r\n    };\r\n  }\r\n\r\n  private onSaveSuccess(): void {\r\n    this.initTokenVM();\r\n    this.alertService.addAlert({ type: 'success', translationKey: 'profile.messages.token.success' });\r\n  }\r\n\r\n  private onSaveError(error: any): void {\r\n    try {\r\n      error.json();\r\n    } catch (exception) {\r\n      error.message = error.text();\r\n    }\r\n    this.onError(error);\r\n  }\r\n\r\n  private onError(error: any): void {\r\n    if (error.message) {\r\n      this.alertService.addAlert({ type: 'danger', translationKey: error.message });\r\n    } else {\r\n      this.alertService.addAlert({ type: 'danger', translationKey: 'profile.messages.token.fail' });\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}