{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RemarkTruncatePipe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nclass RemarkTruncatePipe {\n  transform(value, length) {\n    const arr = value.split('|');\n    let newString = '';\n    for (const element of arr) {\n      newString = newString + element.slice(22) + \" \";\n    }\n    if (newString.length > length) {\n      return newString.substring(0, length) + \" ...\";\n    } else {\n      return newString;\n    }\n  }\n}\nexports.RemarkTruncatePipe = RemarkTruncatePipe;\nRemarkTruncatePipe.ɵfac = function RemarkTruncatePipe_Factory(t) {\n  return new (t || RemarkTruncatePipe)();\n};\nRemarkTruncatePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"remarkTruncate\",\n  type: RemarkTruncatePipe,\n  pure: true\n});","map":{"version":3,"mappings":";;;;;;;;AAEA,MAGaA,kBAAkB;EAE7BC,SAAS,CAACC,KAAa,EAAEC,MAAc;IACrC,MAAMC,GAAG,GAAGF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC;IAC5B,IAAIC,SAAS,GAAG,EAAE;IAClB,KAAK,MAAMC,OAAO,IAAIH,GAAG,EAAE;MACzBE,SAAS,GAAGA,SAAS,GAAGC,OAAO,CAACC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG;;IAGjD,IAAIF,SAAS,CAACH,MAAM,GAAGA,MAAM,EAAE;MAC7B,OAAOG,SAAS,CAACG,SAAS,CAAC,CAAC,EAAEN,MAAM,CAAC,GAAG,MAAM;KAC/C,MAAM;MACL,OAAOG,SAAS;;EAGpB;;AAlBFI;;mBAGaV,kBAAkB;AAAA;;;QAAlBA,kBAAkB;EAAAW;AAAA","names":["RemarkTruncatePipe","transform","value","length","arr","split","newString","element","slice","substring","exports","pure"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payroll\\ves\\pipe\\remark-truncate.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'remarkTruncate'\r\n})\r\nexport class RemarkTruncatePipe implements PipeTransform {\r\n\r\n  transform(value: string, length: number): string {\r\n    const arr = value.split('|');\r\n    let newString = '';\r\n    for (const element of arr) {\r\n      newString = newString + element.slice(22) + \" \";\r\n    }\r\n\r\n    if (newString.length > length) {\r\n      return newString.substring(0, length) + \" ...\";\r\n    } else {\r\n      return newString;\r\n    }\r\n\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}