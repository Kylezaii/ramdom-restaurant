{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AccessRightRequestComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@angular/core\");\nconst common_1 = require(\"@angular/common\");\nconst dynamicdialog_1 = require(\"primeng/dynamicdialog\");\nconst api_1 = require(\"primeng/api\");\nconst nspay2_constants_1 = require(\"app/nspay2.constants\");\nconst overview_enum_model_1 = require(\"../model/overview-enum.model\");\nconst view_access_right_request_component_1 = require(\"./view-access-right-request-modal/view-access-right-request.component\");\nconst create_access_right_request_component_1 = require(\"./create-access-right-request-modal/create-access-right-request.component\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"../service/access-right-request.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i3 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i4 = tslib_1.__importStar(require(\"primeng/dynamicdialog\"));\nconst i5 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i6 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i7 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i8 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i9 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i10 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i11 = tslib_1.__importStar(require(\"primeng/tooltip\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/multiselect\"));\nfunction AccessRightRequestComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function AccessRightRequestComponent_ng_template_3_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(1);\n      return i0.ɵɵresetView(ctx_r6.exportCSV(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n            \");\n    i0.ɵɵelementStart(5, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AccessRightRequestComponent_ng_template_3_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(1);\n      return i0.ɵɵresetView(ctx_r8.filterByAll(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n            \");\n    i0.ɵɵelementStart(7, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function AccessRightRequestComponent_ng_template_3_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(1);\n      return i0.ɵɵresetView(ctx_r9.filterByApprovalHistory(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n            \");\n    i0.ɵɵelementStart(9, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AccessRightRequestComponent_ng_template_3_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(1);\n      return i0.ɵɵresetView(ctx_r10.filterByPendingApproval(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n            \");\n    i0.ɵɵelementStart(11, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function AccessRightRequestComponent_ng_template_3_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.openNewRequestDialog());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n    \");\n  }\n}\nfunction AccessRightRequestComponent_ng_template_5_ng_template_52_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"span\", 37);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n                            \");\n  }\n  if (rf & 2) {\n    const option_r16 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(option_r16.name);\n  }\n}\nfunction AccessRightRequestComponent_ng_template_5_ng_template_52_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                        \");\n    i0.ɵɵelementStart(1, \"p-multiSelect\", 35);\n    i0.ɵɵlistener(\"onChange\", function AccessRightRequestComponent_ng_template_5_ng_template_52_Template_p_multiSelect_onChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const filter_r14 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r14($event.value));\n    });\n    i0.ɵɵtext(2, \"\\n                            \");\n    i0.ɵɵtemplate(3, AccessRightRequestComponent_ng_template_5_ng_template_52_ng_template_3_Template, 4, 1, \"ng-template\", 36);\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                    \");\n  }\n  if (rf & 2) {\n    const value_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", value_r13)(\"options\", ctx_r12.requestStatuses);\n  }\n}\nfunction AccessRightRequestComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"th\", 12);\n    i0.ɵɵtext(4, \"SN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n            \");\n    i0.ɵɵelementStart(6, \"th\", 13);\n    i0.ɵɵtext(7, \"\\n                Name\\n                \");\n    i0.ɵɵelement(8, \"p-columnFilter\", 14);\n    i0.ɵɵtext(9, \"\\n                \");\n    i0.ɵɵelement(10, \"p-sortIcon\", 15);\n    i0.ɵɵtext(11, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n            \");\n    i0.ɵɵelementStart(13, \"th\", 16);\n    i0.ɵɵtext(14, \"\\n                Email\\n                \");\n    i0.ɵɵelement(15, \"p-columnFilter\", 17);\n    i0.ɵɵtext(16, \"\\n                \");\n    i0.ɵɵelement(17, \"p-sortIcon\", 18);\n    i0.ɵɵtext(18, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n            \");\n    i0.ɵɵelementStart(20, \"th\", 19);\n    i0.ɵɵtext(21, \"\\n                Role\\n                \");\n    i0.ɵɵelement(22, \"p-columnFilter\", 20);\n    i0.ɵɵtext(23, \"\\n                \");\n    i0.ɵɵelement(24, \"p-sortIcon\", 21);\n    i0.ɵɵtext(25, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n            \");\n    i0.ɵɵelementStart(27, \"th\", 22);\n    i0.ɵɵtext(28, \"\\n                Optional Role\\n                \");\n    i0.ɵɵelement(29, \"p-columnFilter\", 23);\n    i0.ɵɵtext(30, \"\\n                \");\n    i0.ɵɵelement(31, \"p-sortIcon\", 24);\n    i0.ɵɵtext(32, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(33, \"\\n            \");\n    i0.ɵɵelementStart(34, \"th\", 25);\n    i0.ɵɵtext(35, \"\\n                Last Updated By\\n                \");\n    i0.ɵɵelement(36, \"p-columnFilter\", 26);\n    i0.ɵɵtext(37, \"\\n                \");\n    i0.ɵɵelement(38, \"p-sortIcon\", 27);\n    i0.ɵɵtext(39, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(40, \"\\n            \");\n    i0.ɵɵelementStart(41, \"th\", 28);\n    i0.ɵɵtext(42, \"\\n                Last Updated On\\n                \");\n    i0.ɵɵelement(43, \"p-columnFilter\", 29);\n    i0.ɵɵtext(44, \"\\n                \");\n    i0.ɵɵelement(45, \"p-sortIcon\", 30);\n    i0.ɵɵtext(46, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(47, \"\\n            \");\n    i0.ɵɵelementStart(48, \"th\", 31);\n    i0.ɵɵtext(49, \"\\n                Requests Status\\n                \");\n    i0.ɵɵelementStart(50, \"p-columnFilter\", 32);\n    i0.ɵɵtext(51, \"\\n                    \");\n    i0.ɵɵtemplate(52, AccessRightRequestComponent_ng_template_5_ng_template_52_Template, 6, 2, \"ng-template\", 33);\n    i0.ɵɵtext(53, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(54, \"\\n                \");\n    i0.ɵɵelement(55, \"p-sortIcon\", 34);\n    i0.ɵɵtext(56, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(57, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(58, \"\\n    \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(50);\n    i0.ɵɵproperty(\"showMatchModes\", false)(\"showOperator\", false)(\"showAddButton\", false);\n  }\n}\nfunction AccessRightRequestComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n            \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7, \"\\n                \");\n    i0.ɵɵelementStart(8, \"a\", 38);\n    i0.ɵɵlistener(\"click\", function AccessRightRequestComponent_ng_template_7_Template_a_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const accessRightRequest_r19 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.openViewRequestDialog(accessRightRequest_r19, ctx_r21.currentAccountMainRole));\n    });\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n            \");\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n            \");\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n            \");\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n            \");\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n            \");\n    i0.ɵɵelementStart(24, \"td\");\n    i0.ɵɵtext(25);\n    i0.ɵɵpipe(26, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \"\\n            \");\n    i0.ɵɵelementStart(28, \"td\");\n    i0.ɵɵtext(29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n    \");\n  }\n  if (rf & 2) {\n    const accessRightRequest_r19 = ctx.$implicit;\n    const i_r20 = ctx.rowIndex;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i_r20 + 1);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\\n                    \", accessRightRequest_r19.name, \"\\n                \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(accessRightRequest_r19.email);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(accessRightRequest_r19.role);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(accessRightRequest_r19.optionalRole);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(accessRightRequest_r19.requestedBy);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(26, 8, accessRightRequest_r19.requestedDt, \"dd-MM-yyyy\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r3.requestStatusEnum[accessRightRequest_r19.requestStatus]);\n  }\n}\nfunction AccessRightRequestComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n    \");\n  }\n}\nfunction AccessRightRequestComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"td\", 39);\n    i0.ɵɵtext(4, \"No records found.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n    \");\n  }\n}\nconst _c0 = function () {\n  return [10, 25, 50];\n};\nclass AccessRightRequestComponent {\n  constructor(accessRightRequestService, accountService, changeDetectorRef, datePipe, dialogService, exportUtilsService, ns2HttpService, dateUtilsService, messageService) {\n    this.accessRightRequestService = accessRightRequestService;\n    this.accountService = accountService;\n    this.changeDetectorRef = changeDetectorRef;\n    this.datePipe = datePipe;\n    this.dialogService = dialogService;\n    this.exportUtilsService = exportUtilsService;\n    this.ns2HttpService = ns2HttpService;\n    this.dateUtilsService = dateUtilsService;\n    this.messageService = messageService;\n    this.changeIndexEvent = new core_1.EventEmitter();\n    this.accountStatusEnum = overview_enum_model_1.AccountStatus;\n    this.requestStatusEnum = overview_enum_model_1.RequestStatus;\n    this.requestTypeEnum = overview_enum_model_1.RequestType;\n    this.salutationEnum = overview_enum_model_1.Salutation;\n    this.pageData = {\n      currentPage: 0\n    };\n    this.pageSize = 10;\n    // Filter\n    this.requestStatuses = [];\n  }\n  ngOnInit() {\n    this.loading = false;\n    this.loadEnums();\n    this.retrieveCurrentUser();\n  }\n  loadEnums() {\n    for (const [key, value] of Object.entries(overview_enum_model_1.RequestStatus)) {\n      this.requestStatuses.push({\n        name: value,\n        value: key\n      });\n    }\n  }\n  retrieveCurrentUser() {\n    this.accountService.identity().subscribe(account => {\n      this.currentAccount = this.copyAccount(account);\n      console.log(\"account\", this.currentAccount);\n    });\n    this.accessRightRequestService.getSubjectMainRole(this.currentAccount?.subjectId).subscribe(mainRole => {\n      this.currentAccountMainRole = mainRole.body?.data;\n    });\n  }\n  copyAccount(account) {\n    return {\n      email: account.email,\n      firstName: account.firstName,\n      lastName: account.lastName,\n      login: account.username,\n      authorities: account.authorities,\n      groups: account.groups,\n      subjectId: account.subjectId\n    };\n  }\n  loadData(event) {\n    this.withinOneYear = new Date();\n    this.withinOneYear.setFullYear(this.withinOneYear.getFullYear() - 1);\n    this.loading = true;\n    this.changeDetectorRef.detectChanges();\n    this.lazyLoadEvent = event;\n    setTimeout(() => {\n      const options = this.ns2HttpService.convertLazyEvent(event, this.pageData, this.pageSize);\n      this.accessRightRequestService.getAllRequests(options).subscribe({\n        next: res => {\n          if (res.body?.data?.content) {\n            this.accessRightRequestList = res.body.data.content;\n            this.totalRecords = res.body.data.content.totalElements;\n            console.log(\"Existing access right requests\", this.accessRightRequestList);\n          } else {\n            this.accessRightRequestList = [];\n          }\n          this.loading = false;\n        },\n        error(error) {\n          console.log(error);\n        },\n        complete: () => {\n          console.log(\"Successfully retrieved access right requests\");\n          this.loading = false;\n          this.changeDetectorRef.detectChanges();\n        }\n      });\n    }, 1000);\n  }\n  onPage(event) {\n    this.pageSize = event.rows;\n    this.pageData.currentPage = event.first / event.rows;\n  }\n  /*\r\n  TODO: Integration\r\n  */\n  openNewRequestDialog() {\n    if (this.currentAccountMainRole[nspay2_constants_1.NSPAY2_ROLES.MINDEF_VERIFIER] !== undefined) {\n      console.log(\"Opening new request dialog...\");\n      this.ref = this.dialogService.open(create_access_right_request_component_1.CreateAccessRightRequestComponent, {\n        showHeader: false,\n        width: \"50%\",\n        contentStyle: {\n          'padding': '0rem'\n        }\n      });\n    } else {\n      console.log(\"User does not have the rights to create new request\");\n    }\n    this.ref.onClose.subscribe(enabled => {\n      console.log(\"Reload table\", enabled);\n      if (enabled) {\n        this.loadData(this.lazyLoadEvent);\n      }\n    });\n  }\n  /*\r\n  TODO: Integration\r\n  */\n  openViewRequestDialog(record, currentAccountMainRole) {\n    console.log(\"Opening view request dialog...\");\n    this.ref = this.dialogService.open(view_access_right_request_component_1.ViewAccessRightRequestComponent, {\n      data: {\n        record,\n        currentAccountMainRole\n      },\n      showHeader: false,\n      width: \"50%\",\n      contentStyle: {\n        'padding': '0rem'\n      }\n    });\n    this.ref.onClose.subscribe(enabled => {\n      console.log(\"Reload table\", enabled);\n      if (enabled) {\n        this.loadData(this.lazyLoadEvent);\n      }\n    });\n  }\n  /*\r\n  TODO: - 'ALL' quick filter\r\n          - Queries system and return paginated list of access right request created or\r\n          updated within 1 year.\r\n  */\n  filterByAll(table) {\n    table.clear();\n    // table.filter(this.withinOneYear, 'requestedDt', 'after');\n  }\n\n  filterByPendingApproval(table) {\n    table.filter(\"PENDING_APPROVAL\", \"requestStatus\", \"match\");\n  }\n  /*\r\n  TODO: - 'Approval History' quick filter\r\n          - Queries system and return paginated list of access right request that are\r\n          approved within 1 year\r\n  */\n  filterByApprovalHistory(table) {\n    table.filter(\"APPROVED\", \"requestStatus\", \"match\");\n    // table.filter(this.withinOneYear, 'requestedDt', 'after');\n  }\n\n  exportCSV(dataTable) {\n    setTimeout(() => {\n      const options = this.ns2HttpService.convertLazyEvent(this.lazyLoadEvent, 0, this.totalRecords);\n      this.accessRightRequestService.getAllRequestsExport(options).subscribe({\n        next: res => {\n          if (res.body?.data?.content) {\n            const data = res.body.data.content;\n            const columns = [{\n              field: 'sn',\n              header: 'SN',\n              index: 0\n            }, {\n              field: 'id',\n              header: 'Access Right Request ID',\n              index: 1\n            }, {\n              field: 'task',\n              header: 'Task',\n              index: 2\n            }, {\n              field: 'email',\n              header: 'Email',\n              index: 3\n            }, {\n              field: 'salutation',\n              header: 'Salutation',\n              index: 4\n            }, {\n              field: 'name',\n              header: 'Name',\n              index: 5\n            }, {\n              field: 'displayName',\n              header: 'Display Name',\n              index: 6\n            }, {\n              field: 'userInitials',\n              header: 'User Initials',\n              index: 7\n            }, {\n              field: 'appt',\n              header: 'Appointment',\n              index: 8\n            }, {\n              field: 'unit',\n              header: 'Unit',\n              index: 9\n            }, {\n              field: 'contactNumber',\n              header: 'Contact Number',\n              index: 10\n            }, {\n              field: 'role',\n              header: 'Role',\n              index: 11\n            }, {\n              field: 'optionalRole',\n              header: 'Optional Role',\n              index: 12\n            }, {\n              field: 'expiredOn',\n              header: 'Expired On',\n              index: 13\n            }, {\n              field: 'disabledOn',\n              header: 'Disabled On',\n              index: 14\n            }, {\n              field: 'requestedBy',\n              header: 'Requested By',\n              index: 15\n            }, {\n              field: 'requestedOn',\n              header: 'Requested On',\n              index: 16\n            }, {\n              field: 'status',\n              header: 'Status',\n              index: 17\n            }, {\n              field: 'effectiveDteChange',\n              header: 'Effective Date Of Change',\n              index: 18\n            }];\n            const dtoList = [];\n            console.log(\"data\", data);\n            data.forEach((record, index) => {\n              const dto = {\n                sn: index + 1,\n                id: record.id,\n                task: this.requestTypeEnum[record.requestType],\n                email: record.email,\n                salutation: this.salutationEnum[record.salutation],\n                name: record.name,\n                displayName: record.displayName,\n                userInitials: record.userInitial,\n                appt: record.appt,\n                unit: record.unit,\n                contactNumber: record.phoneNum,\n                role: record.role,\n                optionalRole: record.optionalRole,\n                expiredOn: this.datePipe.transform(record.expiryDate, 'dd-MM-yyyy'),\n                disabledOn: this.datePipe.transform(record.disabledDate, 'dd-MM-yyyy'),\n                requestedBy: record.requestedBy,\n                requestedOn: this.datePipe.transform(record.requestedDt, 'dd-MM-yyyy  HH:mm:ss'),\n                status: this.accountStatusEnum[record.status],\n                effectiveDteChange: this.datePipe.transform(record.effectiveDate, 'dd-MM-yyyy')\n              };\n              dtoList.push(dto);\n            });\n            console.log(dtoList);\n            this.exportUtilsService.exportCSV(dataTable, dtoList, res.body.data.totalElements, columns, \"Access Right Request Table\");\n          }\n        },\n        error(error) {\n          console.log(error);\n        },\n        complete() {\n          console.log(\"Successfully export to CSV\");\n        }\n      });\n    }, 1000);\n  }\n}\nexports.AccessRightRequestComponent = AccessRightRequestComponent;\nAccessRightRequestComponent.ɵfac = function AccessRightRequestComponent_Factory(t) {\n  return new (t || AccessRightRequestComponent)(i0.ɵɵdirectiveInject(i1.AccessRightRequestService), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.DatePipe), i0.ɵɵdirectiveInject(i4.DialogService), i0.ɵɵdirectiveInject(i5.ExportUtilsService), i0.ɵɵdirectiveInject(i6.Ns2HttpService), i0.ɵɵdirectiveInject(i7.DateUtilsService), i0.ɵɵdirectiveInject(i8.MessageService));\n};\nAccessRightRequestComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccessRightRequestComponent,\n  selectors: [[\"n2-access-right-request\"]],\n  outputs: {\n    changeIndexEvent: \"changeIndexEvent\"\n  },\n  features: [i0.ɵɵProvidersFeature([dynamicdialog_1.DialogService, api_1.MessageService, common_1.DatePipe])],\n  decls: 14,\n  vars: 9,\n  consts: [[\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-gridlines\", 3, \"value\", \"lazy\", \"loading\", \"paginator\", \"totalRecords\", \"rows\", \"rowsPerPageOptions\", \"showCurrentPageReport\", \"onLazyLoad\", \"onPage\"], [\"dataTable\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"paginatorleft\"], [\"pTemplate\", \"emptymessage\"], [\"pButton\", \"\", \"type\", \"button\", \"icon\", \"pi pi-file-o\", \"pTooltip\", \"Export to Excel\", \"tooltipPosition\", \"bottom\", 1, \"p-button-primary\", 3, \"click\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"All\", 1, \"p-button-primary\", 3, \"click\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Approval History\", 1, \"p-button-primary\", 3, \"click\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Pending Approval\", 1, \"p-button-primary\", 3, \"click\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"New Request\", 1, \"p-button-primary\", 2, \"float\", \"right\", 3, \"click\"], [\"scope\", \"col\"], [\"scope\", \"col\", \"pSortableColumn\", \"name\"], [\"type\", \"text\", \"field\", \"name\", \"display\", \"menu\", 2, \"float\", \"right\"], [\"field\", \"name\", 2, \"float\", \"right\"], [\"scope\", \"col\", \"pSortableColumn\", \"email\"], [\"type\", \"text\", \"field\", \"email\", \"display\", \"menu\", 2, \"float\", \"right\"], [\"field\", \"email\", 2, \"float\", \"right\"], [\"scope\", \"col\", \"pSortableColumn\", \"role\"], [\"type\", \"text\", \"field\", \"role\", \"display\", \"menu\", 2, \"float\", \"right\"], [\"field\", \"role\", 2, \"float\", \"right\"], [\"scope\", \"col\", \"pSortableColumn\", \"optionalRole\"], [\"type\", \"text\", \"field\", \"optionalRole\", \"display\", \"menu\", 2, \"float\", \"right\"], [\"field\", \"optionalRole\", 2, \"float\", \"right\"], [\"scope\", \"col\", \"pSortableColumn\", \"requestedBy\"], [\"type\", \"text\", \"field\", \"requestedBy\", \"display\", \"menu\", 2, \"float\", \"right\"], [\"field\", \"requestedBy\", 2, \"float\", \"right\"], [\"scope\", \"col\", \"pSortableColumn\", \"requestedDt\"], [\"type\", \"date\", \"field\", \"requestedDt\", \"display\", \"menu\", 2, \"float\", \"right\"], [\"field\", \"requestedDt\", 2, \"float\", \"right\"], [\"scope\", \"col\", \"pSortableColumn\", \"requestStatus\"], [\"field\", \"requestStatus\", \"matchMode\", \"in\", \"display\", \"menu\", 2, \"float\", \"right\", 3, \"showMatchModes\", \"showOperator\", \"showAddButton\"], [\"pTemplate\", \"filter\"], [\"field\", \"requestStatus\", 2, \"float\", \"right\"], [\"placeholder\", \"Any\", \"optionLabel\", \"name\", \"optionValue\", \"value\", 3, \"ngModel\", \"options\", \"onChange\"], [\"pTemplate\", \"item\"], [1, \"ml-1\"], [\"href\", \"javascript:void(0)\", 3, \"click\"], [\"colspan\", \"12\"]],\n  template: function AccessRightRequestComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-table\", 0, 1);\n      i0.ɵɵlistener(\"onLazyLoad\", function AccessRightRequestComponent_Template_p_table_onLazyLoad_0_listener($event) {\n        return ctx.loadData($event);\n      })(\"onPage\", function AccessRightRequestComponent_Template_p_table_onPage_0_listener($event) {\n        return ctx.onPage($event);\n      });\n      i0.ɵɵtext(2, \"\\n    \");\n      i0.ɵɵtemplate(3, AccessRightRequestComponent_ng_template_3_Template, 14, 0, \"ng-template\", 2);\n      i0.ɵɵtext(4, \"\\n    \");\n      i0.ɵɵtemplate(5, AccessRightRequestComponent_ng_template_5_Template, 59, 3, \"ng-template\", 3);\n      i0.ɵɵtext(6, \"\\n    \");\n      i0.ɵɵtemplate(7, AccessRightRequestComponent_ng_template_7_Template, 32, 11, \"ng-template\", 4);\n      i0.ɵɵtext(8, \"\\n    \");\n      i0.ɵɵtemplate(9, AccessRightRequestComponent_ng_template_9_Template, 1, 0, \"ng-template\", 5);\n      i0.ɵɵtext(10, \"\\n    \");\n      i0.ɵɵtemplate(11, AccessRightRequestComponent_ng_template_11_Template, 7, 0, \"ng-template\", 6);\n      i0.ɵɵtext(12, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"value\", ctx.accessRightRequestList)(\"lazy\", true)(\"loading\", ctx.loading)(\"paginator\", true)(\"totalRecords\", ctx.totalRecords)(\"rows\", 10)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(8, _c0))(\"showCurrentPageReport\", true);\n    }\n  },\n  dependencies: [i9.NgControlStatus, i9.NgModel, i8.PrimeTemplate, i10.ButtonDirective, i11.Tooltip, i12.Table, i12.SortableColumn, i12.SortIcon, i12.ColumnFilter, i13.MultiSelect, i3.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhY2Nlc3MtcmlnaHQtcmVxdWVzdC5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvYWRtaW4vYWNjZXNzLWNvbnRyb2wvb3ZlcnZpZXcvYWNjZXNzLXJpZ2h0LXJlcXVlc3QvYWNjZXNzLXJpZ2h0LXJlcXVlc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLG9MQUFvTCIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AccessRightRequestComponent","constructor","accessRightRequestService","accountService","changeDetectorRef","datePipe","dialogService","exportUtilsService","ns2HttpService","dateUtilsService","messageService","core_1","overview_enum_model_1","currentPage","ngOnInit","loading","loadEnums","retrieveCurrentUser","key","value","Object","entries","requestStatuses","push","name","identity","subscribe","account","currentAccount","copyAccount","console","log","getSubjectMainRole","subjectId","mainRole","currentAccountMainRole","body","data","email","firstName","lastName","login","username","authorities","groups","loadData","event","withinOneYear","Date","setFullYear","getFullYear","detectChanges","lazyLoadEvent","setTimeout","options","convertLazyEvent","pageData","pageSize","getAllRequests","next","res","content","accessRightRequestList","totalRecords","totalElements","error","complete","onPage","rows","first","openNewRequestDialog","nspay2_constants_1","MINDEF_VERIFIER","undefined","ref","open","create_access_right_request_component_1","showHeader","width","contentStyle","onClose","enabled","openViewRequestDialog","record","view_access_right_request_component_1","filterByAll","table","clear","filterByPendingApproval","filter","filterByApprovalHistory","exportCSV","dataTable","getAllRequestsExport","columns","field","header","index","dtoList","forEach","dto","sn","id","task","requestTypeEnum","requestType","salutation","salutationEnum","displayName","userInitials","userInitial","appt","unit","contactNumber","phoneNum","role","optionalRole","expiredOn","transform","expiryDate","disabledOn","disabledDate","requestedBy","requestedOn","requestedDt","status","accountStatusEnum","effectiveDteChange","effectiveDate","exports","selectors","outputs","changeIndexEvent","features","dynamicdialog_1","api_1","common_1","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\access-control\\overview\\access-right-request\\access-right-request.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\access-control\\overview\\access-right-request\\access-right-request.component.html"],"sourcesContent":["import { Component, OnInit, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { MessageService } from 'primeng/api';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { Table } from 'primeng/table';\r\nimport { NSPAY2_ROLES } from 'app/nspay2.constants';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport { AccountStatus, RequestStatus, RequestType, Salutation } from '../model/overview-enum.model';\r\nimport { IAccessRightRequest } from '../model/access-right-request.model';\r\nimport { AccessRightRequestService } from '../service/access-right-request.service';\r\nimport { ViewAccessRightRequestComponent } from './view-access-right-request-modal/view-access-right-request.component';\r\nimport { CreateAccessRightRequestComponent } from './create-access-right-request-modal/create-access-right-request.component';\r\n\r\n@Component({\r\n  selector: 'n2-access-right-request',\r\n  templateUrl: './access-right-request.component.html',\r\n  styleUrls: ['./access-right-request.component.scss'],\r\n  providers: [DialogService, MessageService, DatePipe]\r\n})\r\n\r\nexport class AccessRightRequestComponent implements OnInit {\r\n  @Output() changeIndexEvent = new EventEmitter<number>();\r\n\r\n  // Current User\r\n  currentAccount: any;\r\n  currentAccountMainRole: any;\r\n\r\n  // Model\r\n  accessRightRequestList?: IAccessRightRequest[]\r\n  accountStatusEnum: { [key: string]: AccountStatus } = AccountStatus;\r\n  requestStatusEnum: { [key: string]: RequestStatus } = RequestStatus;\r\n  requestTypeEnum: { [key: string]: RequestType } = RequestType;\r\n  salutationEnum: { [key: string]: Salutation } = Salutation;\r\n\r\n  // Refresh access right request table\r\n  ref?: DynamicDialogRef;\r\n\r\n  // LazyLoad variables\r\n  totalRecords?: number;\r\n  loading?: boolean;\r\n  pageData: { currentPage: number } = {\r\n    currentPage: 0\r\n  }\r\n  pageSize = 10;\r\n  lazyLoadEvent: LazyLoadEvent;\r\n\r\n  // Filter\r\n  requestStatuses: any[] = [];\r\n  withinOneYear: Date;\r\n\r\n  constructor (\r\n    private accessRightRequestService: AccessRightRequestService,\r\n    private accountService: AccountService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private datePipe: DatePipe,\r\n    private dialogService: DialogService,\r\n    private exportUtilsService: ExportUtilsService,\r\n    private ns2HttpService: Ns2HttpService,\r\n    public dateUtilsService: DateUtilsService,\r\n    public messageService: MessageService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = false;\r\n    this.loadEnums();\r\n    this.retrieveCurrentUser();\r\n  }\r\n\r\n  loadEnums(): void {\r\n    for (const [key, value] of Object.entries(RequestStatus)) {\r\n      this.requestStatuses.push(\r\n        { name: value, value: key }\r\n      );\r\n    }\r\n  }\r\n\r\n  retrieveCurrentUser(): void {\r\n    this.accountService.identity().subscribe((account: any) => {\r\n      this.currentAccount = this.copyAccount(account);\r\n      console.log(\"account\", this.currentAccount);\r\n    });\r\n\r\n    this.accessRightRequestService.getSubjectMainRole(this.currentAccount?.subjectId)\r\n      .subscribe((mainRole: any) => {\r\n        this.currentAccountMainRole = mainRole.body?.data;\r\n      });\r\n  }\r\n\r\n  copyAccount(account: any): any {\r\n    return {\r\n      email: account.email,\r\n      firstName: account.firstName,\r\n      lastName: account.lastName,\r\n      login: account.username,\r\n      authorities: account.authorities,\r\n      groups: account.groups,\r\n      subjectId: account.subjectId\r\n    };\r\n  }\r\n\r\n  loadData(event: LazyLoadEvent): void {\r\n    this.withinOneYear = new Date();\r\n    this.withinOneYear.setFullYear(this.withinOneYear.getFullYear()-1);\r\n    \r\n    this.loading = true;\r\n    this.changeDetectorRef.detectChanges();\r\n    this.lazyLoadEvent = event;\r\n    setTimeout(() => {\r\n      const options = this.ns2HttpService.convertLazyEvent(event, this.pageData, this.pageSize);\r\n      this.accessRightRequestService.getAllRequests(options)\r\n        .subscribe(\r\n          {\r\n            next: (res: HttpResponse<any>) => {\r\n              if (res.body?.data?.content) {\r\n                this.accessRightRequestList = res.body.data.content;\r\n                this.totalRecords = res.body.data.content.totalElements;\r\n                console.log(\"Existing access right requests\", this.accessRightRequestList);\r\n              }\r\n              else{\r\n                this.accessRightRequestList = []\r\n              }\r\n              this.loading = false;\r\n            },\r\n            error(error: HttpErrorResponse) {\r\n              console.log(error);\r\n            },\r\n            complete: () => {\r\n              console.log(\"Successfully retrieved access right requests\");\r\n              this.loading = false;\r\n              this.changeDetectorRef.detectChanges();\r\n            }\r\n          }\r\n        )\r\n    }, 1000);\r\n  }\r\n\r\n  onPage(event: any): void {\r\n    this.pageSize = event.rows;\r\n    this.pageData.currentPage = event.first / event.rows;\r\n  }\r\n\r\n  /*\r\n  TODO: Integration\r\n  */\r\n  openNewRequestDialog(): void {\r\n    if (this.currentAccountMainRole[NSPAY2_ROLES.MINDEF_VERIFIER] !== undefined) {\r\n      console.log(\"Opening new request dialog...\");\r\n      this.ref = this.dialogService.open(CreateAccessRightRequestComponent, {\r\n        showHeader: false,\r\n        width: \"50%\",\r\n        contentStyle: {\r\n          'padding': '0rem',\r\n        }\r\n      })\r\n    } else {\r\n      console.log(\"User does not have the rights to create new request\");\r\n    }\r\n    \r\n    this.ref.onClose.subscribe((enabled: boolean) => {\r\n      console.log(\"Reload table\", enabled)\r\n      if (enabled) {\r\n        this.loadData(this.lazyLoadEvent);\r\n      }\r\n    })\r\n  }\r\n\r\n  /*\r\n  TODO: Integration\r\n  */\r\n  openViewRequestDialog(record: any, currentAccountMainRole: any): void {\r\n    console.log(\"Opening view request dialog...\");\r\n    this.ref = this.dialogService.open(ViewAccessRightRequestComponent, {\r\n      data: {\r\n        record,\r\n        currentAccountMainRole\r\n      },\r\n      showHeader: false,\r\n      width: \"50%\",\r\n      contentStyle: {\r\n        'padding': '0rem',\r\n      }\r\n    });\r\n\r\n    this.ref.onClose.subscribe((enabled: boolean) => {\r\n      console.log(\"Reload table\", enabled)\r\n      if (enabled) {\r\n        this.loadData(this.lazyLoadEvent);\r\n      }\r\n    })\r\n  }\r\n\r\n  /*\r\n  TODO: - 'ALL' quick filter\r\n          - Queries system and return paginated list of access right request created or\r\n          updated within 1 year.\r\n  */\r\n  filterByAll(table: Table): void {\r\n    table.clear();\r\n    // table.filter(this.withinOneYear, 'requestedDt', 'after');\r\n  }\r\n\r\n  filterByPendingApproval(table: Table): void {\r\n    table.filter(\"PENDING_APPROVAL\", \"requestStatus\", \"match\")\r\n  }\r\n\r\n  /*\r\n  TODO: - 'Approval History' quick filter\r\n          - Queries system and return paginated list of access right request that are\r\n          approved within 1 year\r\n  */\r\n  filterByApprovalHistory(table: Table): void {\r\n    table.filter(\"APPROVED\", \"requestStatus\", \"match\")\r\n    // table.filter(this.withinOneYear, 'requestedDt', 'after');\r\n  }\r\n\r\n  exportCSV(dataTable: Table): void {\r\n    setTimeout(() => {\r\n      const options = this.ns2HttpService.convertLazyEvent(this.lazyLoadEvent, 0, this.totalRecords);\r\n      this.accessRightRequestService.getAllRequestsExport(options)\r\n        .subscribe(\r\n          {\r\n            next: (res: HttpResponse<any>) => {\r\n              if (res.body?.data?.content){\r\n                const data = res.body.data.content\r\n                const columns = [\r\n                  { field: 'sn', header: 'SN', index: 0 },\r\n                  { field: 'id', header: 'Access Right Request ID', index: 1 },\r\n                  { field: 'task', header: 'Task', index: 2 },\r\n                  { field: 'email', header: 'Email', index: 3 },\r\n                  { field: 'salutation', header: 'Salutation', index: 4 },\r\n                  { field: 'name', header: 'Name', index: 5 },\r\n                  { field: 'displayName', header: 'Display Name', index: 6 },\r\n                  { field: 'userInitials', header: 'User Initials', index: 7 },\r\n                  { field: 'appt', header: 'Appointment', index: 8 },\r\n                  { field: 'unit', header: 'Unit', index: 9 },\r\n                  { field: 'contactNumber', header: 'Contact Number', index: 10 },\r\n                  { field: 'role', header: 'Role', index: 11 },\r\n                  { field: 'optionalRole', header: 'Optional Role', index: 12 },\r\n                  { field: 'expiredOn', header: 'Expired On', index: 13 },\r\n                  { field: 'disabledOn', header: 'Disabled On', index: 14 },\r\n                  { field: 'requestedBy', header: 'Requested By', index: 15 },\r\n                  { field: 'requestedOn', header: 'Requested On', index: 16 },\r\n                  { field: 'status', header: 'Status', index: 17 },\r\n                  { field: 'effectiveDteChange', header: 'Effective Date Of Change', index: 18 },\r\n                ];\r\n                const dtoList: any[] = [];\r\n                console.log(\"data\", data);\r\n                data.forEach((record: IAccessRightRequest, index: number) => {\r\n                  const dto = {\r\n                    sn: index + 1,\r\n                    id: record.id,\r\n                    task: this.requestTypeEnum[record.requestType],\r\n                    email: record.email,\r\n                    salutation: this.salutationEnum[record.salutation],\r\n                    name: record.name,\r\n                    displayName: record.displayName,\r\n                    userInitials: record.userInitial,\r\n                    appt: record.appt,\r\n                    unit: record.unit,\r\n                    contactNumber: record.phoneNum,\r\n                    role: record.role,\r\n                    optionalRole: record.optionalRole,\r\n                    expiredOn: this.datePipe.transform(record.expiryDate, 'dd-MM-yyyy'),\r\n                    disabledOn: this.datePipe.transform(record.disabledDate, 'dd-MM-yyyy'),\r\n                    requestedBy: record.requestedBy,\r\n                    requestedOn: this.datePipe.transform(record.requestedDt, 'dd-MM-yyyy  HH:mm:ss'),\r\n                    status: this.accountStatusEnum[record.status],\r\n                    effectiveDteChange: this.datePipe.transform(record.effectiveDate, 'dd-MM-yyyy')\r\n                  }\r\n                  dtoList.push(dto);\r\n                });\r\n                console.log(dtoList)\r\n                this.exportUtilsService.exportCSV(dataTable, dtoList, res.body.data.totalElements, columns, \"Access Right Request Table\")\r\n              }\r\n            },\r\n            error(error: HttpErrorResponse) {\r\n              console.log(error);\r\n            },\r\n            complete() {\r\n              console.log(\"Successfully export to CSV\");\r\n            }\r\n          }\r\n        )\r\n    }, 1000);\r\n  }\r\n\r\n}\r\n","<p-table #dataTable [value]=\"accessRightRequestList\" [lazy]=\"true\" (onLazyLoad)=\"loadData($event)\" [loading]=\"loading\"\r\n    [paginator]=\"true\" (onPage)=\"onPage($event)\" [totalRecords]=\"totalRecords\" [rows]=\"10\"\r\n    [rowsPerPageOptions]=\"[10,25,50]\" [showCurrentPageReport]=\"true\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-gridlines\">\r\n    <ng-template pTemplate=\"caption\">\r\n        <div>\r\n            <button pButton type=\"button\" class=\"p-button-primary\" (click)=\"exportCSV(dataTable)\" icon=\"pi pi-file-o\"\r\n                pTooltip=\"Export to Excel\" tooltipPosition=\"bottom\"></button>\r\n            <button pButton type=\"button\" class=\"p-button-primary\" (click)=\"filterByAll(dataTable)\"\r\n                label=\"All\"></button>\r\n            <button pButton type=\"button\" class=\"p-button-primary\" (click)=\"filterByApprovalHistory(dataTable)\"\r\n                label=\"Approval History\"></button>\r\n            <button pButton type=\"button\" class=\"p-button-primary\" (click)=\"filterByPendingApproval(dataTable)\"\r\n                label=\"Pending Approval\"></button>\r\n            <button pButton type=\"button\" class=\"p-button-primary\" (click)=\"openNewRequestDialog()\" style=\"float:right\"\r\n                label=\"New Request\"></button>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th scope=\"col\">SN</th>\r\n            <th scope=\"col\" pSortableColumn=\"name\">\r\n                Name\r\n                <p-columnFilter type=\"text\" field=\"name\" display=\"menu\" style=\"float:right\"></p-columnFilter>\r\n                <p-sortIcon field=\"name\" style=\"float:right\"></p-sortIcon>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"email\">\r\n                Email\r\n                <p-columnFilter type=\"text\" field=\"email\" display=\"menu\" style=\"float:right\"></p-columnFilter>\r\n                <p-sortIcon field=\"email\" style=\"float:right\"></p-sortIcon>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"role\">\r\n                Role\r\n                <p-columnFilter type=\"text\" field=\"role\" display=\"menu\" style=\"float:right\"></p-columnFilter>\r\n                <p-sortIcon field=\"role\" style=\"float:right\"></p-sortIcon>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"optionalRole\">\r\n                Optional Role\r\n                <p-columnFilter type=\"text\" field=\"optionalRole\" display=\"menu\" style=\"float:right\"></p-columnFilter>\r\n                <p-sortIcon field=\"optionalRole\" style=\"float:right\"></p-sortIcon>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"requestedBy\">\r\n                Last Updated By\r\n                <p-columnFilter type=\"text\" field=\"requestedBy\" display=\"menu\" style=\"float:right\"></p-columnFilter>\r\n                <p-sortIcon field=\"requestedBy\" style=\"float:right\"></p-sortIcon>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"requestedDt\">\r\n                Last Updated On\r\n                <p-columnFilter type=\"date\" field=\"requestedDt\" display=\"menu\" style=\"float:right\"></p-columnFilter>\r\n                <p-sortIcon field=\"requestedDt\" style=\"float:right\"></p-sortIcon>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"requestStatus\">\r\n                Requests Status\r\n                <p-columnFilter field=\"requestStatus\" matchMode=\"in\" display=\"menu\" [showMatchModes]=\"false\"\r\n                    [showOperator]=\"false\" [showAddButton]=\"false\" style=\"float:right\">\r\n                    <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                        <p-multiSelect [ngModel]=\"value\" [options]=\"requestStatuses\" placeholder=\"Any\"\r\n                            (onChange)=\"filter($event.value)\" optionLabel=\"name\" optionValue=\"value\">\r\n                            <ng-template let-option pTemplate=\"item\">\r\n                                <span class=\"ml-1\">{{option.name}}</span>\r\n                            </ng-template>\r\n                        </p-multiSelect>\r\n                    </ng-template>\r\n                </p-columnFilter>\r\n                <p-sortIcon field=\"requestStatus\" style=\"float:right\"></p-sortIcon>\r\n            </th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-accessRightRequest let-i=\"rowIndex\">\r\n        <tr>\r\n            <td>{{ i+1 }}</td>\r\n            <td>\r\n                <a href=\"javascript:void(0)\" (click)=\"openViewRequestDialog(accessRightRequest, currentAccountMainRole)\">\r\n                    {{ accessRightRequest.name }}\r\n                </a>\r\n            </td>\r\n            <td>{{ accessRightRequest.email }}</td>\r\n            <td>{{ accessRightRequest.role }}</td>\r\n            <td>{{ accessRightRequest.optionalRole }}</td>\r\n            <td>{{ accessRightRequest.requestedBy }}</td>\r\n            <td>{{ accessRightRequest.requestedDt | date:'dd-MM-yyyy' }}</td>\r\n            <td>{{ requestStatusEnum[accessRightRequest.requestStatus] }}</td>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"paginatorleft\">\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n            <td colspan=\"12\">No records found.</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}