{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmployerProfileService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/common/http\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nclass EmployerProfileService {\n  constructor(http, applicationConfigService) {\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('api/company');\n  }\n  getByCSN(csn) {\n    return this.http.get(`${this.resourceUrl}/${csn}`, {\n      observe: 'response'\n    });\n  }\n  create(employerProfile) {\n    return this.http.post(this.resourceUrl, employerProfile, {\n      observe: 'response'\n    });\n  }\n  update(employerProfile) {\n    return this.http.post(this.resourceUrl + \"/update\", employerProfile, {\n      observe: 'response'\n    });\n  }\n}\nexports.EmployerProfileService = EmployerProfileService;\nEmployerProfileService.ɵfac = function EmployerProfileService_Factory(t) {\n  return new (t || EmployerProfileService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n};\nEmployerProfileService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployerProfileService,\n  factory: EmployerProfileService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;;;;AAUA,MACaA,sBAAsB;EAGjCC,YAAsBC,IAAgB,EAAUC,wBAAkD;IAA5E,SAAI,GAAJD,IAAI;IAAsB,6BAAwB,GAAxBC,wBAAwB;IAFjE,gBAAW,GAAG,IAAI,CAACA,wBAAwB,CAACC,cAAc,CAAC,aAAa,CAAC;EAEqB;EAErGC,QAAQ,CAACC,GAAW;IAClB,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAW,GAAG,IAAI,CAACC,WAAW,IAAIF,GAAG,EAAE,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC;EACvF;EAEAC,MAAM,CAACC,eAA0B;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAW,IAAI,CAACJ,WAAW,EAAEG,eAAe,EAAE;MAACF,OAAO,EAAE;IAAU,CAAC,CAAC;EAC3F;EAEAI,MAAM,CAACF,eAA0B;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAW,IAAI,CAACJ,WAAW,GAAG,SAAS,EAAEG,eAAe,EAAE;MAACF,OAAO,EAAE;IAAU,CAAC,CAAC;EACvG;;AAhBFK;;mBACad,sBAAsB;AAAA;;SAAtBA,sBAAsB;EAAAe,SAAtBf,sBAAsB;EAAAgB,YADT;AAAM","names":["EmployerProfileService","constructor","http","applicationConfigService","getEndpointFor","getByCSN","csn","get","resourceUrl","observe","create","employerProfile","post","update","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\administration\\employer-profile\\service\\employer-profile.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {ApplicationConfigService} from 'app/core/config/application-config.service';\r\nimport {ICompany} from '../employer-profile.model';\r\n\r\n\r\nexport type EntityResponseType = HttpResponse<ICompany>;\r\nexport type EntityArrayResponseType = HttpResponse<ICompany[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EmployerProfileService {\r\n  public resourceUrl = this.applicationConfigService.getEndpointFor('api/company');\r\n\r\n  constructor(protected http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\r\n\r\n  getByCSN(csn: string): Observable<EntityResponseType> {\r\n    return this.http.get<ICompany>(`${this.resourceUrl}/${csn}`, { observe: 'response' });\r\n  }\r\n\r\n  create(employerProfile : ICompany): Observable<EntityResponseType> {\r\n    return this.http.post<ICompany>(this.resourceUrl, employerProfile, {observe: 'response'});\r\n  }\r\n\r\n  update(employerProfile : ICompany): Observable<EntityResponseType> {\r\n    return this.http.post<ICompany>(this.resourceUrl + \"/update\", employerProfile, {observe: 'response'});\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}