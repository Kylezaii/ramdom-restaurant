{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AccessRightRequestService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nclass AccessRightRequestService {\n  constructor(ns2HttpService, applicationConfigService) {\n    this.ns2HttpService = ns2HttpService;\n    this.applicationConfigService = applicationConfigService;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('api/acl');\n  }\n  getAllRequests(options) {\n    const url = `${this.resourceUrl}/requests`;\n    return this.ns2HttpService.get(url, options);\n  }\n  getAllRequestsExport(options) {\n    const url = `${this.resourceUrl}/requests/export`;\n    return this.ns2HttpService.get(url, options);\n  }\n  getRequest(id) {\n    const url = `${this.resourceUrl}/request/${id}`;\n    return this.ns2HttpService.get(url);\n  }\n  getUserByEmail(email) {\n    const url = `${this.resourceUrl}/user/${email}`;\n    return this.ns2HttpService.get(url);\n  }\n  createRequest(createRequest) {\n    const url = `${this.resourceUrl}/request/create`;\n    console.log(\"request body\", createRequest);\n    return this.ns2HttpService.post(url, createRequest);\n  }\n  approveRequest(id) {\n    const url = `${this.resourceUrl}/request/approve/${id}`;\n    return this.ns2HttpService.put(url);\n  }\n  rejectRequest(rejectRequest) {\n    const url = `${this.resourceUrl}/request/reject`;\n    console.log(\"request body\", rejectRequest);\n    return this.ns2HttpService.put(url, rejectRequest);\n  }\n  getReviewingUnits() {\n    const url = `${this.resourceUrl}/reviewing_unit`;\n    return this.ns2HttpService.get(url);\n  }\n  getSubjectOptRoleList(subjectId) {\n    const url = `${this.resourceUrl}/opt_role_list/${subjectId}`;\n    return this.ns2HttpService.get(url);\n  }\n  getSubjectMainRole(subjectId) {\n    const url = `${this.resourceUrl}/main_role/${subjectId}`;\n    return this.ns2HttpService.get(url);\n  }\n  getAllMainRole() {\n    const url = `${this.resourceUrl}/main_role_list`;\n    return this.ns2HttpService.get(url);\n  }\n  getAllOptRole() {\n    const url = `${this.resourceUrl}/opt_role_list`;\n    return this.ns2HttpService.get(url);\n  }\n}\nexports.AccessRightRequestService = AccessRightRequestService;\nAccessRightRequestService.ɵfac = function AccessRightRequestService_Factory(t) {\n  return new (t || AccessRightRequestService)(i0.ɵɵinject(i1.Ns2HttpService), i0.ɵɵinject(i2.ApplicationConfigService));\n};\nAccessRightRequestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccessRightRequestService,\n  factory: AccessRightRequestService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["AccessRightRequestService","constructor","ns2HttpService","applicationConfigService","getEndpointFor","getAllRequests","options","url","resourceUrl","get","getAllRequestsExport","getRequest","id","getUserByEmail","email","createRequest","console","log","post","approveRequest","put","rejectRequest","getReviewingUnits","getSubjectOptRoleList","subjectId","getSubjectMainRole","getAllMainRole","getAllOptRole","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\access-control\\overview\\service\\access-right-request.service.ts"],"sourcesContent":["import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccessRightRequestService{\r\n    public resourceUrl = this.applicationConfigService.getEndpointFor('api/acl');\r\n\r\n    constructor(\r\n        private ns2HttpService: Ns2HttpService,\r\n        private applicationConfigService: ApplicationConfigService\r\n    ){}\r\n\r\n    public getAllRequests(options: any): Observable<any>{\r\n        const url =`${this.resourceUrl}/requests`;\r\n        return this.ns2HttpService.get(url, options);\r\n    }\r\n\r\n    public getAllRequestsExport(options: any): Observable<any>{\r\n        const url =`${this.resourceUrl}/requests/export`;\r\n        return this.ns2HttpService.get(url, options);\r\n    }\r\n\r\n    public getRequest(id: number): Observable<any>{\r\n        const url =`${this.resourceUrl}/request/${id}`;\r\n        return this.ns2HttpService.get(url);\r\n    }\r\n\r\n    public getUserByEmail(email: string): Observable<any>{\r\n        const url = `${this.resourceUrl}/user/${email}`;\r\n        return this.ns2HttpService.get(url);\r\n    }\r\n\r\n    public createRequest(createRequest: any): Observable<any>{\r\n        const url = `${this.resourceUrl}/request/create`;\r\n        console.log(\"request body\", createRequest);\r\n        return this.ns2HttpService.post(url, createRequest);\r\n    }\r\n\r\n    public approveRequest(id: number): Observable<any>{\r\n        const url = `${this.resourceUrl}/request/approve/${id}`;\r\n        return this.ns2HttpService.put(url);\r\n    }\r\n\r\n    public rejectRequest(rejectRequest: any): Observable<any>{\r\n        const url = `${this.resourceUrl}/request/reject`;\r\n        console.log(\"request body\", rejectRequest);\r\n        return this.ns2HttpService.put(url, rejectRequest);\r\n    }\r\n\r\n    public getReviewingUnits(): Observable<any>{\r\n        const url = `${this.resourceUrl}/reviewing_unit`;\r\n        return this.ns2HttpService.get(url)\r\n    }\r\n\r\n    public getSubjectOptRoleList(subjectId:string):Observable<any>{\r\n        const url = `${this.resourceUrl}/opt_role_list/${subjectId}`;\r\n        return this.ns2HttpService.get(url)\r\n    }\r\n\r\n    public getSubjectMainRole(subjectId:string):Observable<any>{\r\n            const url = `${this.resourceUrl}/main_role/${subjectId}`;\r\n            return this.ns2HttpService.get(url)\r\n    }\r\n\r\n    public getAllMainRole():Observable<any>{\r\n        const url = `${this.resourceUrl}/main_role_list`;\r\n        return this.ns2HttpService.get(url)\r\n    }\r\n\r\n    public getAllOptRole():Observable<any>{\r\n        const url = `${this.resourceUrl}/opt_role_list`;\r\n        return this.ns2HttpService.get(url)\r\n    }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}