{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AssignClaimsComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst http_1 = require(\"@angular/common/http\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"primeng/dynamicdialog\"));\nconst i2 = tslib_1.__importStar(require(\"app/shared/confirm/nsp-confirm.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/workload/service/workload-inbox.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i5 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i6 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i7 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i8 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i9 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i10 = tslib_1.__importStar(require(\"primeng/confirmpopup\"));\nconst i11 = tslib_1.__importStar(require(\"primeng/radiobutton\"));\nfunction AssignClaimsComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelement(3, \"th\", 13);\n    i0.ɵɵtext(4, \"\\n                    \");\n    i0.ɵɵelementStart(5, \"th\", 14);\n    i0.ɵɵtext(6, \"Verifier \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n                    \");\n    i0.ɵɵelementStart(8, \"th\", 15);\n    i0.ɵɵtext(9, \"Outstanding Claims \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n                    \");\n    i0.ɵɵelementStart(11, \"th\", 15);\n    i0.ɵɵtext(12, \"Availability \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n            \");\n  }\n}\nfunction AssignClaimsComponent_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelementStart(3, \"td\", 16)(4, \"p-radioButton\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function AssignClaimsComponent_ng_template_16_Template_p_radioButton_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.selectedVerifier = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(5, \"\\n                    \");\n    i0.ɵɵelementStart(6, \"td\", 18);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                    \");\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n                    \");\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                    \");\n    i0.ɵɵtext(15, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n            \");\n  }\n  if (rf & 2) {\n    const assignClaim_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", assignClaim_r5.subjectId);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.selectedVerifier);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(assignClaim_r5.fullName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(assignClaim_r5.outstandingCnt);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(assignClaim_r5.availStatus == \"A\" ? \"Free\" : assignClaim_r5.availStatus == \"H\" ? \"Half-Day\" : null);\n  }\n}\nfunction AssignClaimsComponent_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelementStart(3, \"td\", 19);\n    i0.ɵɵtext(4, \"No records found.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n            \");\n  }\n}\nfunction AssignClaimsComponent_ng_template_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelementStart(3, \"th\", 20);\n    i0.ɵɵtext(4, \"Verifier \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                    \");\n    i0.ɵɵelementStart(6, \"th\", 21);\n    i0.ɵɵtext(7, \"Outstanding Claims \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                    \");\n    i0.ɵɵelementStart(9, \"th\", 21);\n    i0.ɵɵtext(10, \"Period of Absence \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n            \");\n  }\n}\nfunction AssignClaimsComponent_ng_template_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                    \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                    \");\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n            \");\n  }\n  if (rf & 2) {\n    const assignClaimBusy_r9 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(assignClaimBusy_r9.fullName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(assignClaimBusy_r9.outstandingCnt);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(assignClaimBusy_r9.blockedDates);\n  }\n}\nconst _c0 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nclass AssignClaimsComponent {\n  constructor(config, ref, nspConfirmService, workloadService, toastService, dateUtilsService) {\n    this.config = config;\n    this.ref = ref;\n    this.nspConfirmService = nspConfirmService;\n    this.workloadService = workloadService;\n    this.toastService = toastService;\n    this.dateUtilsService = dateUtilsService;\n    this.selectedClaimAssignees = [];\n    this.dateFormat = \"DD-MM-YYYY\";\n    this.close = false;\n  }\n  ngOnInit() {\n    setTimeout(() => {\n      const roleList = ['role-cv', 'role-ca', 'role-pv'];\n      const options = {\n        params: new http_1.HttpParams()\n      };\n      roleList.forEach(x => {\n        options.params = options.params.append('roleList', x);\n      });\n      this.workloadService.getVerifierAvailability(options).subscribe(resp => {\n        if (resp.body.data) {\n          this.assignClaimList = resp.body.data.filter(x => x.availStatus === \"H\" || x.availStatus === \"A\");\n          this.assignClaimBusyList = resp.body.data.filter(x => x.availStatus === \"B\").map(x => {\n            const dt = {\n              subjectId: x.subjectId,\n              fullName: x.fullName,\n              availStatus: x.availStatus,\n              outstandingCnt: x.outstandingCnt,\n              blockedDates: this.processBlockDates(x.blockedDates)\n            };\n            return dt;\n          });\n          console.log('buz ', this.assignClaimBusyList);\n        }\n      });\n    }, 0);\n  }\n  processBlockDates(unixDate) {\n    const unixArr = unixDate.split(\",\");\n    const unixConvArr = unixArr.map(x => {\n      const dateArr = x.split(\" - \");\n      if (dateArr[0].trim() === dateArr[1].trim()) {\n        // return this.dateUtilsService.convertUnixToDateString(+dateArr[0], this.dateFormat);\n        return dateArr[0];\n      } else {\n        return dateArr[0].concat(\" - \").concat(dateArr[1]);\n        // return this.dateUtilsService.convertUnixToDateString(+dateArr[0], this.dateFormat)\n        // .concat(\" - \").concat(this.dateUtilsService.convertUnixToDateString(+dateArr[1], this.dateFormat));\n      }\n    });\n\n    return unixConvArr.join(', ');\n  }\n  onSubmitAssignClaim(event, type) {\n    console.log(\"selectedClaimAssignees\", this.selectedVerifier);\n    this.nspConfirmService.onConfirmPopupRef(event, type, this.ref, this.selectedVerifier);\n  }\n  onCancel() {\n    this.ref.close();\n  }\n}\nexports.AssignClaimsComponent = AssignClaimsComponent;\nAssignClaimsComponent.ɵfac = function AssignClaimsComponent_Factory(t) {\n  return new (t || AssignClaimsComponent)(i0.ɵɵdirectiveInject(i1.DynamicDialogConfig), i0.ɵɵdirectiveInject(i1.DynamicDialogRef), i0.ɵɵdirectiveInject(i2.NspConfirmationService), i0.ɵɵdirectiveInject(i3.WorkloadInboxService), i0.ɵɵdirectiveInject(i4.CustomToastService), i0.ɵɵdirectiveInject(i5.DateUtilsService));\n};\nAssignClaimsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AssignClaimsComponent,\n  selectors: [[\"ic-assign-claims\"]],\n  decls: 55,\n  vars: 15,\n  consts: [[1, \"row\", \"nsp-top-padding\"], [1, \"row\"], [\"responsiveLayout\", \"scroll\", \"scrollHeight\", \"25vh\", \"styleClass\", \"p-datatable-gridlines\", 3, \"value\", \"rows\", \"responsive\", \"selection\", \"scrollable\", \"selectionChange\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"responsiveLayout\", \"scroll\", \"scrollHeight\", \"25vh\", \"styleClass\", \"p-datatable-gridlines\", 3, \"value\", \"rows\", \"responsive\", \"scrollable\"], [1, \"grid\", \"nsp-top-padding\", \"nsp-bottom-padding\"], [1, \"col-6\"], [1, \"col-6\", \"nsp-align-right\"], [\"key\", \"assignClaim\", \"header\", \"Confirmation\", \"icon\", \"fa fa-question-circle\", \"width\", \"425\"], [\"pButton\", \"\", \"label\", \"Cancel\", 1, \"p-button-danger\", 3, \"click\"], [\"pButton\", \"\", \"label\", \"Submit\", 3, \"click\"], [\"scope\", \"col\", 2, \"flex\", \"0 0 4em\"], [\"scope\", \"col\", 2, \"flex\", \"0 0 40%\"], [\"scope\", \"col\"], [2, \"flex\", \"0 0 4em\"], [\"styleClass\", \"nsp-radio-button-box\", \"name\", \"rowIndex\", 3, \"value\", \"ngModel\", \"ngModelChange\"], [2, \"flex\", \"0 0 40%\"], [\"colspan\", \"4\"], [\"scope\", \"col\", \"width\", \"40%\"], [\"scope\", \"col\", \"width\", \"30%\"]],\n  template: function AssignClaimsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \"\\n\\n\\n\");\n      i0.ɵɵelementStart(1, \"div\");\n      i0.ɵɵtext(2, \"\\n    \");\n      i0.ɵɵtext(3, \"\\n\\n    \");\n      i0.ɵɵelementStart(4, \"div\", 0);\n      i0.ɵɵtext(5, \"\\n        \");\n      i0.ɵɵelementStart(6, \"h6\");\n      i0.ɵɵtext(7, \"Please select verifier to assign selected claims to\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(9, \"\\n    \");\n      i0.ɵɵelementStart(10, \"div\", 1);\n      i0.ɵɵtext(11, \"\\n        \");\n      i0.ɵɵelementStart(12, \"p-table\", 2);\n      i0.ɵɵlistener(\"selectionChange\", function AssignClaimsComponent_Template_p_table_selectionChange_12_listener($event) {\n        return ctx.selectedClaimAssignees = $event;\n      });\n      i0.ɵɵtext(13, \"\\n            \");\n      i0.ɵɵtemplate(14, AssignClaimsComponent_ng_template_14_Template, 15, 0, \"ng-template\", 3);\n      i0.ɵɵtext(15, \"\\n            \");\n      i0.ɵɵtemplate(16, AssignClaimsComponent_ng_template_16_Template, 17, 5, \"ng-template\", 4);\n      i0.ɵɵtext(17, \"\\n            \");\n      i0.ɵɵtemplate(18, AssignClaimsComponent_ng_template_18_Template, 7, 0, \"ng-template\", 5);\n      i0.ɵɵtext(19, \"\\n\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(21, \"\\n    \");\n      i0.ɵɵelementStart(22, \"div\", 0);\n      i0.ɵɵtext(23, \"\\n        \");\n      i0.ɵɵelementStart(24, \"h6\");\n      i0.ɵɵtext(25, \"Verifier that are busy today\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(26, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(27, \"\\n    \");\n      i0.ɵɵelementStart(28, \"div\", 1);\n      i0.ɵɵtext(29, \"\\n\");\n      i0.ɵɵtext(30, \"\\n        \");\n      i0.ɵɵelementStart(31, \"p-table\", 6);\n      i0.ɵɵtext(32, \"\\n            \");\n      i0.ɵɵtemplate(33, AssignClaimsComponent_ng_template_33_Template, 13, 0, \"ng-template\", 3);\n      i0.ɵɵtext(34, \"\\n            \");\n      i0.ɵɵtemplate(35, AssignClaimsComponent_ng_template_35_Template, 13, 3, \"ng-template\", 4);\n      i0.ɵɵtext(36, \"\\n            \");\n      i0.ɵɵtext(37, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(38, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(39, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(40, \"\\n\");\n      i0.ɵɵelementStart(41, \"div\", 7);\n      i0.ɵɵtext(42, \"\\n    \");\n      i0.ɵɵelement(43, \"div\", 8);\n      i0.ɵɵtext(44, \"\\n    \");\n      i0.ɵɵelementStart(45, \"div\", 9);\n      i0.ɵɵtext(46, \"\\n        \");\n      i0.ɵɵelement(47, \"p-confirmPopup\", 10);\n      i0.ɵɵtext(48, \"\\n\\n        \");\n      i0.ɵɵelementStart(49, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function AssignClaimsComponent_Template_button_click_49_listener() {\n        return ctx.onCancel();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(50, \"\\n        \");\n      i0.ɵɵelementStart(51, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function AssignClaimsComponent_Template_button_click_51_listener($event) {\n        return ctx.onSubmitAssignClaim($event, \"assignClaim\");\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(52, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(53, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(54, \"\\n\\n\\n\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"value\", ctx.assignClaimList)(\"rows\", 5)(\"responsive\", true)(\"selection\", ctx.selectedClaimAssignees)(\"scrollable\", true);\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"value\", ctx.assignClaimBusyList)(\"rows\", 5)(\"responsive\", true)(\"scrollable\", true);\n      i0.ɵɵadvance(18);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(13, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(14, _c0));\n    }\n  },\n  dependencies: [i6.NgControlStatus, i6.NgModel, i7.PrimeTemplate, i8.ButtonDirective, i9.Table, i10.ConfirmPopup, i11.RadioButton],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhc3NpZ24tY2xhaW1zLmNvbXBvbmVudC5zY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvd29ya2xvYWQvY2xhaW0tYXBwcm92ZXIvY2xhaW0tdmVyaWZpZXItaW5ib3gvYXNzaWduLWNsYWltcy9hc3NpZ24tY2xhaW1zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSw0S0FBNEsiLCJzb3VyY2VSb290IjoiIn0= */\", \"[_nghost-%COMP%]     .p-datatable .p-datatable-thead > tr > th {\\n        position: sticky;\\n        top: 5rem;\\n    }\\n\\n    .layout-news-active   [_nghost-%COMP%]     .p-datatable tr > th {\\n        top: 7rem;\\n    }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2lnbi1jbGFpbXMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7SUFDSTtRQUVJLGdCQUFnQjtRQUNoQixTQUFTO0lBQ2I7O0lBRUE7UUFDSSxTQUFTO0lBQ2IiLCJmaWxlIjoiYXNzaWduLWNsYWltcy5jb21wb25lbnQudHMiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICA6aG9zdCA6Om5nLWRlZXAgLnAtZGF0YXRhYmxlIC5wLWRhdGF0YWJsZS10aGVhZCA+IHRyID4gdGgge1xuICAgICAgICBwb3NpdGlvbjogLXdlYmtpdC1zdGlja3k7XG4gICAgICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgICAgIHRvcDogNXJlbTtcbiAgICB9XG5cbiAgICAubGF5b3V0LW5ld3MtYWN0aXZlIDpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUgdHIgPiB0aCB7XG4gICAgICAgIHRvcDogN3JlbTtcbiAgICB9Il19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvd29ya2xvYWQvY2xhaW0tYXBwcm92ZXIvY2xhaW0tdmVyaWZpZXItaW5ib3gvYXNzaWduLWNsYWltcy9hc3NpZ24tY2xhaW1zLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQ0k7UUFFSSxnQkFBZ0I7UUFDaEIsU0FBUztJQUNiOztJQUVBO1FBQ0ksU0FBUztJQUNiO0FBQUosNG5CQUE0bkIiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICA6aG9zdCA6Om5nLWRlZXAgLnAtZGF0YXRhYmxlIC5wLWRhdGF0YWJsZS10aGVhZCA+IHRyID4gdGgge1xuICAgICAgICBwb3NpdGlvbjogLXdlYmtpdC1zdGlja3k7XG4gICAgICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgICAgIHRvcDogNXJlbTtcbiAgICB9XG5cbiAgICAubGF5b3V0LW5ld3MtYWN0aXZlIDpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUgdHIgPiB0aCB7XG4gICAgICAgIHRvcDogN3JlbTtcbiAgICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AssignClaimsComponent","constructor","config","ref","nspConfirmService","workloadService","toastService","dateUtilsService","ngOnInit","setTimeout","roleList","options","params","http_1","forEach","x","append","getVerifierAvailability","subscribe","resp","body","data","assignClaimList","filter","availStatus","assignClaimBusyList","map","dt","subjectId","fullName","outstandingCnt","blockedDates","processBlockDates","console","log","unixDate","unixArr","split","unixConvArr","dateArr","trim","concat","join","onSubmitAssignClaim","event","type","selectedVerifier","onConfirmPopupRef","onCancel","close","exports","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\workload\\claim-approver\\claim-verifier-inbox\\assign-claims\\assign-claims.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\workload\\claim-approver\\claim-verifier-inbox\\assign-claims\\assign-claims.component.html"],"sourcesContent":["import {HttpParams} from '@angular/common/http';\r\nimport {Component, OnInit} from '@angular/core';\r\nimport {DateUtilsService} from 'app/core/util/date-utils.service';\r\nimport {CustomToastService} from 'app/layouts/service/customtoast.service';\r\nimport {NspConfirmationService} from 'app/shared/confirm/nsp-confirm.service';\r\nimport {WorkloadInboxService} from 'app/workload/service/workload-inbox.service';\r\nimport {DynamicDialogConfig, DynamicDialogRef} from 'primeng/dynamicdialog';\r\nimport {AssignClaims} from './assign-claims.model';\r\n\r\n@Component({\r\n  selector: 'ic-assign-claims',\r\n  templateUrl: './assign-claims.component.html',\r\n  styleUrls: ['./assign-claims.component.scss'],\r\n  styles: [`\r\n    :host ::ng-deep .p-datatable .p-datatable-thead > tr > th {\r\n        position: -webkit-sticky;\r\n        position: sticky;\r\n        top: 5rem;\r\n    }\r\n\r\n    .layout-news-active :host ::ng-deep .p-datatable tr > th {\r\n        top: 7rem;\r\n    }`\r\n  ]\r\n})\r\nexport class AssignClaimsComponent implements OnInit {\r\n\r\n  assignClaimList!: AssignClaims[];\r\n  assignClaimBusyList!: any[];\r\n  selectedClaimAssignees: AssignClaims[] = [];\r\n  selectedVerifier: any;\r\n\r\n  dateFormat = \"DD-MM-YYYY\";\r\n\r\n\r\n  close = false;\r\n\r\n  constructor(\r\n    public config: DynamicDialogConfig,\r\n    public ref: DynamicDialogRef,\r\n    private nspConfirmService: NspConfirmationService,\r\n    private workloadService: WorkloadInboxService,\r\n    private toastService: CustomToastService,\r\n    private dateUtilsService: DateUtilsService,\r\n      ) {\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      const roleList = ['role-cv', 'role-ca', 'role-pv'];\r\n      const options = {\r\n        params: new HttpParams()\r\n      }\r\n      roleList.forEach(x=>{\r\n        options.params = options.params.append('roleList', x);\r\n      })\r\n      this.workloadService.getVerifierAvailability(options).subscribe(resp => {\r\n        if(resp.body.data){\r\n          this.assignClaimList = resp.body.data.filter(\r\n            (x:any)=>x.availStatus === \"H\" || x.availStatus === \"A\"\r\n          )\r\n          this.assignClaimBusyList = resp.body.data.filter(\r\n            (x:any)=> x.availStatus === \"B\").map((x:any)=>{\r\n              const dt = {\r\n                subjectId: x.subjectId,\r\n                fullName: x.fullName,\r\n                availStatus: x.availStatus,\r\n                outstandingCnt: x.outstandingCnt,\r\n                blockedDates: this.processBlockDates(x.blockedDates)\r\n              };\r\n            return dt;\r\n          })\r\n          console.log('buz ', this.assignClaimBusyList);\r\n        }\r\n      });\r\n    }, 0);\r\n  }\r\n\r\n  processBlockDates(unixDate: string): string {\r\n    const unixArr: string[] = unixDate.split(\",\");\r\n\r\n    const unixConvArr = unixArr.map(x=>{\r\n      const dateArr = x.split(\" - \");\r\n\r\n      if(dateArr[0].trim()===dateArr[1].trim()){\r\n        // return this.dateUtilsService.convertUnixToDateString(+dateArr[0], this.dateFormat);\r\n        return dateArr[0];\r\n\r\n      }\r\n      else{\r\n        return dateArr[0]\r\n        .concat(\" - \").concat(dateArr[1]);\r\n        // return this.dateUtilsService.convertUnixToDateString(+dateArr[0], this.dateFormat)\r\n        // .concat(\" - \").concat(this.dateUtilsService.convertUnixToDateString(+dateArr[1], this.dateFormat));\r\n      }\r\n    })\r\n    return unixConvArr.join(', ');\r\n\r\n  }\r\n\r\n  onSubmitAssignClaim(event: Event, type: any): void {\r\n    console.log(\"selectedClaimAssignees\", this.selectedVerifier);\r\n    this.nspConfirmService.onConfirmPopupRef(event, type, this.ref, this.selectedVerifier);\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.ref.close();\r\n  }\r\n\r\n}\r\n","\r\n\r\n\r\n<div>\r\n    <!-- <h2>Assign Claims</h2> -->\r\n\r\n    <div class = \"row nsp-top-padding\">\r\n        <h6>Please select verifier to assign selected claims to</h6>\r\n    </div>\r\n    <div class = \"row\">\r\n        <p-table\r\n        [value]=\"assignClaimList\"\r\n        responsiveLayout=\"scroll\"\r\n        [rows]=\"5\"\r\n        [responsive]=\"true\"\r\n        [(selection)] = \"selectedClaimAssignees\"\r\n        scrollHeight=\"25vh\"\r\n        styleClass=\"p-datatable-gridlines\"\r\n        [scrollable]=\"true\"\r\n        >\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th scope=\"col\" style=\"flex: 0 0 4em\"></th>\r\n                    <th scope=\"col\" style=\"flex: 0 0 40%\">Verifier </th>\r\n                    <th scope=\"col\" >Outstanding Claims </th>\r\n                    <th scope=\"col\" >Availability </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-assignClaim let-rowIndex=\"rowIndex\">\r\n                <tr>\r\n                    <td style=\"flex: 0 0 4em\"><p-radioButton\r\n                        styleClass=\"nsp-radio-button-box\" name=\"rowIndex\" value=\"{{ assignClaim.subjectId }}\"\r\n                        [(ngModel)]=\"selectedVerifier\"></p-radioButton></td>\r\n                    <td style=\"flex: 0 0 40%\">{{assignClaim.fullName}}</td>\r\n                    <td>{{assignClaim.outstandingCnt}}</td>\r\n                    <td>{{assignClaim.availStatus == \"A\"? 'Free': assignClaim.availStatus == \"H\" ? 'Half-Day': null }}</td>\r\n                    <!-- <td>\r\n                        <button pButton icon=\"pi pi-search\" (click)=\"selectAssignClaim(assignClaim)\"></button>\r\n                    </td> -->\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td colspan=\"4\">No records found.</td>\r\n                </tr>\r\n            </ng-template>\r\n\r\n        </p-table>\r\n    </div>\r\n    <div class = \"row nsp-top-padding\">\r\n        <h6>Verifier that are busy today</h6>\r\n    </div>\r\n    <div class = \"row\">\r\n<!-- [paginator]=\"true\"  -->\r\n        <p-table\r\n\r\n        [value]=\"assignClaimBusyList\"\r\n        responsiveLayout=\"scroll\"\r\n        [rows]=\"5\"\r\n        [responsive]=\"true\"\r\n        scrollHeight=\"25vh\"\r\n        styleClass=\"p-datatable-gridlines\"\r\n        [scrollable]=\"true\"\r\n\r\n        >\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th scope=\"col\" width=\"40%\">Verifier </th>\r\n                    <th scope=\"col\" width=\"30%\">Outstanding Claims </th>\r\n                    <th scope=\"col\" width=\"30%\">Period of Absence </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-assignClaimBusy>\r\n                <tr>\r\n                    <td>{{assignClaimBusy.fullName}}</td>\r\n                    <td>{{assignClaimBusy.outstandingCnt}}</td>\r\n                    <td>{{assignClaimBusy.blockedDates}}</td>\r\n                </tr>\r\n            </ng-template>\r\n            <!-- <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td colspan=\"3\">No records found.</td>\r\n                </tr>\r\n            </ng-template> -->\r\n        </p-table>\r\n    </div>\r\n</div>\r\n<div class = \"grid nsp-top-padding nsp-bottom-padding\">\r\n    <div class = \"col-6\"></div>\r\n    <div class = \"col-6 nsp-align-right\">\r\n        <p-confirmPopup key = \"assignClaim\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n\r\n        <button pButton class =\"p-button-danger\" label=\"Cancel\" (click) = onCancel() [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\"></button>\r\n        <button pButton  label=\"Submit\" (click) = \"onSubmitAssignClaim($event, 'assignClaim')\" [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\"></button>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}