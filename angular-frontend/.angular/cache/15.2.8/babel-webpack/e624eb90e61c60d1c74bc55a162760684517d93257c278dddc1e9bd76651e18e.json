{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toDateParser = exports.FormlyCalendarQuarterlyComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@ngx-formly/core\");\nconst rxjs_1 = require(\"rxjs\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i2 = tslib_1.__importStar(require(\"primeng/calendar\"));\nconst i3 = tslib_1.__importStar(require(\"@ngx-formly/core\"));\nclass FormlyCalendarQuarterlyComponent extends core_1.FieldType {\n  constructor() {\n    super();\n    this.minimum = this.getFirstDateOfQuarter();\n    this.maximum = new Date();\n    //  public maximum =  toDateParser(1664257896000);\n    this.onDestroy$ = new rxjs_1.Subject();\n  }\n  ngOnInit() {\n    if (this.field.validators) {\n      this.formControl.setValidators(this.field.validators.validation);\n    }\n    // this.formControl.valueChanges.pipe(\n    //   takeUntil(this.onDestroy$),\n    //   tap(v => {\n    //     this.model.expressionProperties = {\n    //       'templateOptions.disabled': v\n    //     };\n    //   }),\n    // ).subscribe();\n  }\n\n  ngOnDestroy() {\n    this.onDestroy$.next();\n    this.onDestroy$.complete();\n  }\n  dateCallbackFilter(event) {\n    console.log(\"called the\", event);\n  }\n  getFirstDateOfQuarter() {\n    const todate = new Date();\n    const quarter = Math.floor((todate.getMonth() + 3) / 3);\n    return new Date(todate.getFullYear(), quarter * 3 - 3, 1);\n  }\n}\nexports.FormlyCalendarQuarterlyComponent = FormlyCalendarQuarterlyComponent;\nFormlyCalendarQuarterlyComponent.ɵfac = function FormlyCalendarQuarterlyComponent_Factory(t) {\n  return new (t || FormlyCalendarQuarterlyComponent)();\n};\nFormlyCalendarQuarterlyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormlyCalendarQuarterlyComponent,\n  selectors: [[\"n2-formly-quarterly-calendar\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 8,\n  consts: [[\"selectionMode\", \"single\", \"dateFormat\", \"dd/mm/yy\", \"input\", \"\", \"type\", \"input\", 3, \"placeholder\", \"formlyAttributes\", \"minDate\", \"maxDate\", \"showOtherMonths\", \"formControl\", \"onSelect\"]],\n  template: function FormlyCalendarQuarterlyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"p-calendar\", 0);\n      i0.ɵɵlistener(\"onSelect\", function FormlyCalendarQuarterlyComponent_Template_p_calendar_onSelect_2_listener($event) {\n        return ctx.dateCallbackFilter($event);\n      });\n      i0.ɵɵtext(3, \"\\n   class=\\\"form-control\\\"\\n  \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(4, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"ng-dirty\", ctx.showError);\n      i0.ɵɵproperty(\"placeholder\", ctx.to.placeholder)(\"formlyAttributes\", ctx.field)(\"minDate\", ctx.minimum)(\"maxDate\", ctx.maximum)(\"showOtherMonths\", false)(\"formControl\", ctx.formControl);\n    }\n  },\n  dependencies: [i1.NgControlStatus, i1.FormControlDirective, i2.Calendar, i3.ɵFormlyAttributes],\n  encapsulation: 2\n});\nfunction toDateParser(unix) {\n  return new Date(unix);\n}\nexports.toDateParser = toDateParser;","map":{"version":3,"mappings":";;;;;;;AACA;AAEA;;;;;AAGA,MAmBaA,gCAAiC,SAAQC,gBAA0B;EAU/EC;IACE,KAAK,EAAE;IATF,YAAO,GAAI,IAAI,CAACC,qBAAqB,EAAE;IACvC,YAAO,GAAI,IAAIC,IAAI,EAAE;IAE5B;IAEA,eAAU,GAAG,IAAIC,cAAO,EAAQ;EAMhC;EAEAC,QAAQ;IACP,IAAI,IAAI,CAACC,KAAK,CAACC,UAAU,EAAE;MACzB,IAAI,CAACC,WAAW,CAACC,aAAa,CAAC,IAAI,CAACH,KAAK,CAACC,UAAU,CAACG,UAAU,CAAC;;IAElE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD;;EAEAC,WAAW;IACV,IAAI,CAACC,UAAU,CAACC,IAAI,EAAE;IACtB,IAAI,CAACD,UAAU,CAACE,QAAQ,EAAE;EAE5B;EACCC,kBAAkB,CAACC,KAAY;IAC9BC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,KAAK,CAAC;EACjC;EAEAd,qBAAqB;IACpB,MAAMiB,MAAM,GAAG,IAAIhB,IAAI,EAAE;IACzB,MAAMiB,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,MAAM,CAACI,QAAQ,EAAE,GAAG,CAAC,IAAE,CAAC,CAAC;IACrD,OAAO,IAAIpB,IAAI,CAACgB,MAAM,CAACK,WAAW,EAAE,EAAEJ,OAAO,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;EAC1D;;AA7DDK;;mBAmBa1B,gCAAgC;AAAA;;QAAhCA,gCAAgC;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MAjBhCC,2BAAK;MAChBA;MAAAA,qCASoB;MAFnBA;QAAA,OAAYC,8BAA0B;MAAA,EAAC;MAGvCD,+CACD;MAAAA,iBAAa;MACfA;;;MAXIA,eAA4B;MAA5BA,yCAA4B;MADlBA,gDAA8B;;;;;;AA+D5C,SAAgBE,YAAY,CAACC,IAAY;EAEvC,OAAO,IAAIhC,IAAI,CAACgC,IAAI,CAAC;AACvB;AAHAV","names":["FormlyCalendarQuarterlyComponent","core_1","constructor","getFirstDateOfQuarter","Date","rxjs_1","ngOnInit","field","validators","formControl","setValidators","validation","ngOnDestroy","onDestroy$","next","complete","dateCallbackFilter","event","console","log","todate","quarter","Math","floor","getMonth","getFullYear","exports","selectors","features","decls","vars","consts","template","i0","ctx","toDateParser","unix"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\shared\\component\\formly-input-field\\formly-calendar-quarterly.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FieldType, FieldTypeConfig } from '@ngx-formly/core';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { Subject, takeUntil, tap } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'n2-formly-quarterly-calendar',\r\n  template: `<div>\r\n  <p-calendar [placeholder]=\"to.placeholder\"\r\n    [class.ng-dirty]=\"showError\"  \r\n    [formlyAttributes]=\"field\"\r\n    [minDate] =\"minimum\"\r\n    [maxDate] = \"maximum\"\r\n    selectionMode = \"single\"\r\n    [showOtherMonths] = false\r\n   (onSelect)=\"dateCallbackFilter($event)\" dateFormat=\"dd/mm/yy\"  \r\n   [formControl]=\"formControl\"\r\n   input type=\"input\">\r\n   class=\"form-control\"\r\n  </p-calendar></div>\r\n`,\r\n})\r\n\r\n//custom for nspay2, otherwise use datepicker as name\r\nexport class FormlyCalendarQuarterlyComponent extends FieldType<FieldTypeConfig> implements OnInit, OnDestroy {\r\n\r\n public minimum =  this.getFirstDateOfQuarter();\r\n public maximum =  new Date();\r\n\r\n //  public maximum =  toDateParser(1664257896000);\r\n\r\n onDestroy$ = new Subject<void>();\r\n\r\n\r\n constructor(){\r\n   super();\r\n\r\n }\r\n\r\n ngOnInit() {\r\n  if (this.field.validators) {\r\n    this.formControl.setValidators(this.field.validators.validation);\r\n  }\r\n  // this.formControl.valueChanges.pipe(\r\n  //   takeUntil(this.onDestroy$),\r\n  //   tap(v => {\r\n  //     this.model.expressionProperties = {\r\n  //       'templateOptions.disabled': v\r\n  //     };\r\n  //   }),\r\n  // ).subscribe();\r\n }\r\n\r\n ngOnDestroy(): void {\r\n  this.onDestroy$.next();\r\n  this.onDestroy$.complete();\r\n\r\n}\r\n dateCallbackFilter(event: Event){\r\n  console.log(\"called the\", event);\r\n }\r\n \r\n getFirstDateOfQuarter(){\r\n  const todate = new Date();\r\n  const quarter = Math.floor((todate.getMonth() + 3)/3);\r\n  return new Date(todate.getFullYear(), quarter * 3 - 3, 1);\r\n }\r\n}\r\n\r\n\r\n\r\nexport function toDateParser(unix: number){\r\n\r\n  return new Date(unix);\r\n}"]},"metadata":{},"sourceType":"script","externalDependencies":[]}