{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PaymentService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/common/http\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nclass PaymentService {\n  constructor(http, applicationConfigService, ns2Http) {\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n    this.ns2Http = ns2Http;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('api/payment');\n  }\n  getSummaryByNric(nric) {\n    const url = `${this.resourceUrl}/summary/nsman/${nric}`;\n    return this.ns2Http.get(url);\n  }\n  getSummaryByCsn(csn) {\n    const url = `${this.resourceUrl}/summary/company/${csn}`;\n    return this.ns2Http.get(url);\n  }\n  getPayrollDetail() {\n    const url = `${this.resourceUrl}/payroll-detail`;\n    return this.ns2Http.get(url);\n  }\n}\nexports.PaymentService = PaymentService;\nPaymentService.ɵfac = function PaymentService_Factory(t) {\n  return new (t || PaymentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService), i0.ɵɵinject(i3.Ns2HttpService));\n};\nPaymentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PaymentService,\n  factory: PaymentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;;;;;AAMA,MACaA,cAAc;EAGzBC,YAAsBC,IAAgB,EAC5BC,wBAAkD,EAClDC,OAAuB;IAFX,SAAI,GAAJF,IAAI;IAChB,6BAAwB,GAAxBC,wBAAwB;IACxB,YAAO,GAAPC,OAAO;IAJV,gBAAW,GAAG,IAAI,CAACD,wBAAwB,CAACE,cAAc,CAAC,aAAa,CAAC;EAI5C;EAEpCC,gBAAgB,CAACC,IAAY;IAC3B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,WAAW,kBAAkBF,IAAI,EAAE;IACvD,OAAO,IAAI,CAACH,OAAO,CAACM,GAAG,CAACF,GAAG,CAAC;EAC9B;EAEAG,eAAe,CAACC,GAAW;IACzB,MAAMJ,GAAG,GAAG,GAAG,IAAI,CAACC,WAAW,oBAAoBG,GAAG,EAAE;IACxD,OAAO,IAAI,CAACR,OAAO,CAACM,GAAG,CAACF,GAAG,CAAC;EAC9B;EAEAK,gBAAgB;IACd,MAAML,GAAG,GAAG,GAAG,IAAI,CAACC,WAAW,iBAAiB;IAChD,OAAO,IAAI,CAACL,OAAO,CAACM,GAAG,CAACF,GAAG,CAAC;EAC9B;;AArBFM;;mBACad,cAAc;AAAA;;SAAdA,cAAc;EAAAe,SAAdf,cAAc;EAAAgB,YADD;AAAM","names":["PaymentService","constructor","http","applicationConfigService","ns2Http","getEndpointFor","getSummaryByNric","nric","url","resourceUrl","get","getSummaryByCsn","csn","getPayrollDetail","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payment\\overpayment\\service\\payment.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {ApplicationConfigService} from 'app/core/config/application-config.service';\r\nimport {Ns2HttpService} from 'app/shared/service/ns2-http.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PaymentService {\r\n  public resourceUrl = this.applicationConfigService.getEndpointFor('api/payment');\r\n\r\n  constructor(protected http: HttpClient,\r\n    private applicationConfigService: ApplicationConfigService,\r\n    private ns2Http: Ns2HttpService) {}\r\n\r\n  getSummaryByNric(nric: string): Observable<any> {\r\n    const url = `${this.resourceUrl}/summary/nsman/${nric}`;\r\n    return this.ns2Http.get(url);\r\n  }\r\n\r\n  getSummaryByCsn(csn: string): Observable<any> {\r\n    const url = `${this.resourceUrl}/summary/company/${csn}`;\r\n    return this.ns2Http.get(url);\r\n  }\r\n\r\n  getPayrollDetail(): Observable<any> {\r\n    const url = `${this.resourceUrl}/payroll-detail`;\r\n    return this.ns2Http.get(url);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}