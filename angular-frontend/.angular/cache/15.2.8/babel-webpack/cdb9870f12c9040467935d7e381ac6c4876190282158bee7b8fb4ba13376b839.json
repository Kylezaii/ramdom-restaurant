{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConfigurationService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst operators_1 = require(\"rxjs/operators\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/common/http\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nclass ConfigurationService {\n  constructor(http, applicationConfigService) {\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n  }\n  getBeans() {\n    return this.http.get(this.applicationConfigService.getEndpointFor('management/configprops')).pipe((0, operators_1.map)(configProps => Object.values(Object.values(configProps.contexts).map(context => context.beans).reduce((allBeans, contextBeans) => ({\n      ...allBeans,\n      ...contextBeans\n    })))));\n  }\n  getPropertySources() {\n    return this.http.get(this.applicationConfigService.getEndpointFor('management/env')).pipe((0, operators_1.map)(env => env.propertySources));\n  }\n}\nexports.ConfigurationService = ConfigurationService;\nConfigurationService.ɵfac = function ConfigurationService_Factory(t) {\n  return new (t || ConfigurationService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n};\nConfigurationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ConfigurationService,\n  factory: ConfigurationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;AAGA;;;;AAKA,MACaA,oBAAoB;EAC/BC,YAAoBC,IAAgB,EAAUC,wBAAkD;IAA5E,SAAI,GAAJD,IAAI;IAAsB,6BAAwB,GAAxBC,wBAAwB;EAA6B;EAEnGC,QAAQ;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAc,IAAI,CAACF,wBAAwB,CAACG,cAAc,CAAC,wBAAwB,CAAC,CAAC,CAACC,IAAI,CAC5G,mBAAG,EAACC,WAAW,IACbC,MAAM,CAACC,MAAM,CACXD,MAAM,CAACC,MAAM,CAACF,WAAW,CAACG,QAAQ,CAAC,CAChCC,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,KAAK,CAAC,CAC7BC,MAAM,CAAC,CAACC,QAAe,EAAEC,YAAmB,MAAM;MAAE,GAAGD,QAAQ;MAAE,GAAGC;IAAY,CAAE,CAAC,CAAC,CACxF,CACF,CACF;EACH;EAEAC,kBAAkB;IAChB,OAAO,IAAI,CAAChB,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,wBAAwB,CAACG,cAAc,CAAC,gBAAgB,CAAC,CAAC,CAACC,IAAI,CAAC,mBAAG,EAACY,GAAG,IAAIA,GAAG,CAACC,eAAe,CAAC,CAAC;EACjI;;AAlBFC;;mBACarB,oBAAoB;AAAA;;SAApBA,oBAAoB;EAAAsB,SAApBtB,oBAAoB;EAAAuB,YADP;AAAM","names":["ConfigurationService","constructor","http","applicationConfigService","getBeans","get","getEndpointFor","pipe","configProps","Object","values","contexts","map","context","beans","reduce","allBeans","contextBeans","getPropertySources","env","propertySources","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\configuration\\configuration.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { Bean, Beans, ConfigProps, Env, PropertySource } from './configuration.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ConfigurationService {\r\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\r\n\r\n  getBeans(): Observable<Bean[]> {\r\n    return this.http.get<ConfigProps>(this.applicationConfigService.getEndpointFor('management/configprops')).pipe(\r\n      map(configProps =>\r\n        Object.values(\r\n          Object.values(configProps.contexts)\r\n            .map(context => context.beans)\r\n            .reduce((allBeans: Beans, contextBeans: Beans) => ({ ...allBeans, ...contextBeans }))\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getPropertySources(): Observable<PropertySource[]> {\r\n    return this.http.get<Env>(this.applicationConfigService.getEndpointFor('management/env')).pipe(map(env => env.propertySources));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}