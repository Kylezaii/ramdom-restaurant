{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AppModule = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@angular/core\");\nconst common_1 = require(\"@angular/common\");\nconst http_1 = require(\"@angular/common/http\");\nconst en_1 = tslib_1.__importDefault(require(\"@angular/common/locales/en\"));\nconst platform_browser_1 = require(\"@angular/platform-browser\");\nconst service_worker_1 = require(\"@angular/service-worker\");\nconst core_2 = require(\"@ngx-translate/core\");\nconst ngx_webstorage_1 = require(\"ngx-webstorage\");\nconst dayjs_1 = tslib_1.__importDefault(require(\"dayjs\"));\nconst ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\nconst app_constants_1 = require(\"./app.constants\");\nrequire(\"./config/dayjs\");\nconst shared_module_1 = require(\"app/shared/shared.module\");\nconst app_routing_module_1 = require(\"./app-routing.module\");\nconst home_module_1 = require(\"./home/home.module\");\n// jhipster-needle-angular-add-module-import JHipster will add new module here\nconst administration_routing_module_1 = require(\"./administration/administration-routing.module\");\nconst datepicker_adapter_1 = require(\"./config/datepicker-adapter\");\nconst font_awesome_icons_1 = require(\"./config/font-awesome-icons\");\nconst index_1 = require(\"app/core/interceptor/index\");\nconst translation_config_1 = require(\"./config/translation.config\");\nconst main_component_1 = require(\"./layouts/main/main.component\");\nconst navbar_component_1 = require(\"./layouts/navbar/navbar.component\");\nconst footer_component_1 = require(\"./layouts/footer/footer.component\");\nconst page_ribbon_component_1 = require(\"./layouts/profiles/page-ribbon.component\");\nconst sidebar_component_1 = require(\"./layouts/sidebar/sidebar.component\");\nconst menu_component_1 = require(\"./layouts/sidebar/menu/menu.component\");\nconst directives_1 = require(\"./layouts/sidebar/menu/directives\");\nconst menu_item_component_1 = require(\"./layouts/sidebar/menu/components/menu-item/menu-item.component\");\nconst menu_service_1 = require(\"./layouts/sidebar/menu/services/menu-service\");\nconst global_state_1 = require(\"./layouts/sidebar/global.state\");\nconst active_menu_directive_1 = require(\"./layouts/navbar/active-menu.directive\");\nconst error_component_1 = require(\"./layouts/error/error.component\");\nconst ic_403_component_1 = require(\"./layouts/error/ic-403.component\");\nconst ic_404_component_1 = require(\"./layouts/error/ic-404.component\");\nconst ic_500_component_1 = require(\"./layouts/error/ic-500.component\");\nconst ic_502_component_1 = require(\"./layouts/error/ic-502.component\");\nconst ic_503_component_1 = require(\"./layouts/error/ic-503.component\");\nconst ic_504_component_1 = require(\"./layouts/error/ic-504.component\");\nconst animations_1 = require(\"@angular/platform-browser/animations\");\nconst environment_1 = require(\"../environments/environment\");\nconst role_service_1 = require(\"app/admin/access-control/role/role.service\");\nconst forms_1 = require(\"@angular/forms\");\nconst tag_1 = require(\"primeng/tag\");\nconst toast_1 = require(\"primeng/toast\");\nconst api_1 = require(\"primeng/api\");\nconst customtoast_service_1 = require(\"./layouts/service/customtoast.service\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nconst i2 = tslib_1.__importStar(require(\"@fortawesome/angular-fontawesome\"));\nconst i3 = tslib_1.__importStar(require(\"@ng-bootstrap/ng-bootstrap\"));\nconst i4 = tslib_1.__importStar(require(\"@ngx-translate/core\"));\nconst i5 = tslib_1.__importStar(require(\"@angular/service-worker\"));\nconst i6 = tslib_1.__importStar(require(\"ngx-webstorage\"));\nclass AppModule {\n  constructor(applicationConfigService, iconLibrary, dpConfig, translateService) {\n    applicationConfigService.setEndpointPrefix(app_constants_1.SERVER_API_URL);\n    (0, common_1.registerLocaleData)(en_1.default);\n    iconLibrary.addIcons(...font_awesome_icons_1.fontAwesomeIcons);\n    dpConfig.minDate = {\n      year: (0, dayjs_1.default)().subtract(100, 'year').year(),\n      month: 1,\n      day: 1\n    };\n    translateService.setDefaultLang('en');\n    translateService.use('en');\n  }\n}\nexports.AppModule = AppModule;\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)(i0.ɵɵinject(i1.ApplicationConfigService), i0.ɵɵinject(i2.FaIconLibrary), i0.ɵɵinject(i3.NgbDatepickerConfig), i0.ɵɵinject(i4.TranslateService));\n};\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [main_component_1.MainComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [platform_browser_1.Title, {\n    provide: core_1.LOCALE_ID,\n    useValue: 'en'\n  }, {\n    provide: ng_bootstrap_1.NgbDateAdapter,\n    useClass: datepicker_adapter_1.NgbDateDayjsAdapter\n  }, index_1.httpInterceptorProviders, global_state_1.GlobalState, menu_service_1.IcMenuService, role_service_1.RoleService, api_1.MessageService, customtoast_service_1.CustomToastService],\n  imports: [forms_1.FormsModule, platform_browser_1.BrowserModule, shared_module_1.SharedModule, home_module_1.HomeModule, tag_1.TagModule, toast_1.ToastModule,\n  // jhipster-needle-angular-add-module JHipster will add new module here\n  app_routing_module_1.AppRoutingModule, administration_routing_module_1.AdministrationRoutingModule,\n  // Set this to true to enable service worker (PWA)\n  service_worker_1.ServiceWorkerModule.register('ngsw-worker.js', {\n    enabled: false\n  }), http_1.HttpClientModule, ngx_webstorage_1.NgxWebstorageModule.forRoot({\n    prefix: 'ic',\n    separator: '-',\n    caseSensitive: true\n  }), animations_1.BrowserAnimationsModule, core_2.TranslateModule.forRoot({\n    loader: {\n      provide: core_2.TranslateLoader,\n      useFactory: translation_config_1.translatePartialLoader,\n      deps: [http_1.HttpClient]\n    },\n    missingTranslationHandler: {\n      provide: core_2.MissingTranslationHandler,\n      useFactory: translation_config_1.missingTranslationHandler\n    }\n  }), service_worker_1.ServiceWorkerModule.register('ngsw-worker.js', {\n    enabled: environment_1.environment.production,\n    // Register the ServiceWorker as soon as the app is stable\n    // or after 30 seconds (whichever comes first).\n    registrationStrategy: 'registerWhenStable:30000'\n  })]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [main_component_1.MainComponent, navbar_component_1.NavbarComponent, error_component_1.ErrorComponent, ic_403_component_1.Connect403Component, ic_404_component_1.Connect404Component, ic_500_component_1.Connect500Component, ic_502_component_1.Connect502Component, ic_503_component_1.Connect503Component, ic_504_component_1.Connect504Component, page_ribbon_component_1.PageRibbonComponent, active_menu_directive_1.ActiveMenuDirective, footer_component_1.FooterComponent, sidebar_component_1.IcSidebarComponent, menu_component_1.IcMenuComponent, directives_1.IcScrollPositionDirective, directives_1.IcSlimScrollDirective, menu_item_component_1.IcMenuItemComponent],\n    imports: [forms_1.FormsModule, platform_browser_1.BrowserModule, shared_module_1.SharedModule, home_module_1.HomeModule, tag_1.TagModule, toast_1.ToastModule,\n    // jhipster-needle-angular-add-module JHipster will add new module here\n    app_routing_module_1.AppRoutingModule, administration_routing_module_1.AdministrationRoutingModule, i5.ServiceWorkerModule, http_1.HttpClientModule, i6.NgxWebstorageModule, animations_1.BrowserAnimationsModule, i4.TranslateModule, i5.ServiceWorkerModule],\n    exports: [directives_1.IcScrollPositionDirective, directives_1.IcSlimScrollDirective, sidebar_component_1.IcSidebarComponent, menu_component_1.IcMenuComponent, menu_item_component_1.IcMenuItemComponent]\n  });\n})();","map":{"version":3,"mappings":"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","names":["require","AppModule","constructor","applicationConfigService","iconLibrary","dpConfig","translateService","setEndpointPrefix","app_constants_1","en_1","addIcons","font_awesome_icons_1","minDate","year","subtract","month","day","setDefaultLang","use","exports","bootstrap","main_component_1","platform_browser_1","provide","core_1","useValue","ng_bootstrap_1","useClass","datepicker_adapter_1","index_1","global_state_1","menu_service_1","role_service_1","api_1","customtoast_service_1","imports","forms_1","shared_module_1","home_module_1","tag_1","toast_1","app_routing_module_1","administration_routing_module_1","service_worker_1","register","enabled","http_1","ngx_webstorage_1","forRoot","prefix","separator","caseSensitive","animations_1","core_2","loader","useFactory","translation_config_1","deps","missingTranslationHandler","environment_1","production","registrationStrategy","declarations","navbar_component_1","error_component_1","ic_403_component_1","ic_404_component_1","ic_500_component_1","ic_502_component_1","ic_503_component_1","ic_504_component_1","page_ribbon_component_1","active_menu_directive_1","footer_component_1","sidebar_component_1","menu_component_1","directives_1","menu_item_component_1"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\app.module.ts"],"sourcesContent":["import { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport locale from '@angular/common/locales/en';\r\nimport { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateModule, TranslateService, TranslateLoader, MissingTranslationHandler } from '@ngx-translate/core';\r\nimport { NgxWebstorageModule } from 'ngx-webstorage';\r\nimport dayjs from 'dayjs';\r\nimport { NgbDateAdapter, NgbDatepickerConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { SERVER_API_URL } from './app.constants';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport './config/dayjs';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HomeModule } from './home/home.module';\r\n// jhipster-needle-angular-add-module-import JHipster will add new module here\r\nimport { AdministrationRoutingModule } from './administration/administration-routing.module'\r\nimport { NgbDateDayjsAdapter } from './config/datepicker-adapter';\r\nimport { fontAwesomeIcons } from './config/font-awesome-icons';\r\nimport { httpInterceptorProviders } from 'app/core/interceptor/index';\r\nimport { translatePartialLoader, missingTranslationHandler } from './config/translation.config';\r\nimport { MainComponent } from './layouts/main/main.component';\r\nimport { NavbarComponent } from './layouts/navbar/navbar.component';\r\nimport { FooterComponent } from './layouts/footer/footer.component';\r\nimport { PageRibbonComponent } from './layouts/profiles/page-ribbon.component';\r\nimport { IcSidebarComponent } from './layouts/sidebar/sidebar.component';\r\nimport { IcMenuComponent } from './layouts/sidebar/menu/menu.component';\r\nimport { IcScrollPositionDirective, IcSlimScrollDirective } from './layouts/sidebar/menu/directives';\r\nimport { IcMenuItemComponent } from './layouts/sidebar/menu/components/menu-item/menu-item.component';\r\nimport { IcMenuService } from './layouts/sidebar/menu/services/menu-service';\r\nimport { GlobalState } from './layouts/sidebar/global.state';\r\nimport { ActiveMenuDirective } from './layouts/navbar/active-menu.directive';\r\nimport { ErrorComponent } from './layouts/error/error.component';\r\nimport { Connect403Component } from './layouts/error/ic-403.component';\r\nimport { Connect404Component } from './layouts/error/ic-404.component';\r\nimport { Connect500Component } from './layouts/error/ic-500.component';\r\nimport { Connect502Component } from './layouts/error/ic-502.component';\r\nimport { Connect503Component } from './layouts/error/ic-503.component';\r\nimport { Connect504Component } from './layouts/error/ic-504.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { environment } from '../environments/environment';\r\nimport { RoleService } from 'app/admin/access-control/role/role.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TagModule } from 'primeng/tag'\r\nimport { ToastModule } from 'primeng/toast'\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomToastService } from './layouts/service/customtoast.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    SharedModule,\r\n    HomeModule,\r\n    TagModule,\r\n    ToastModule,\r\n    // jhipster-needle-angular-add-module JHipster will add new module here\r\n    AppRoutingModule,\r\n    AdministrationRoutingModule,\r\n    // Set this to true to enable service worker (PWA)\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: false }),\r\n    HttpClientModule,\r\n    NgxWebstorageModule.forRoot({ prefix: 'ic', separator: '-', caseSensitive: true }),\r\n    BrowserAnimationsModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: translatePartialLoader,\r\n        deps: [HttpClient],\r\n      },\r\n      missingTranslationHandler: {\r\n        provide: MissingTranslationHandler,\r\n        useFactory: missingTranslationHandler,\r\n      },\r\n    }),\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: environment.production,\r\n      // Register the ServiceWorker as soon as the app is stable\r\n      // or after 30 seconds (whichever comes first).\r\n      registrationStrategy: 'registerWhenStable:30000'\r\n    }),\r\n  ],\r\n  providers: [\r\n    Title,\r\n    { provide: LOCALE_ID, useValue: 'en' },\r\n    { provide: NgbDateAdapter, useClass: NgbDateDayjsAdapter },\r\n    httpInterceptorProviders,\r\n    GlobalState,\r\n    IcMenuService,\r\n    RoleService,\r\n    MessageService,\r\n    CustomToastService\r\n  ],\r\n  declarations: [\r\n    MainComponent,\r\n    NavbarComponent,\r\n    ErrorComponent,\r\n    Connect403Component,\r\n    Connect404Component,\r\n    Connect500Component,\r\n    Connect502Component,\r\n    Connect503Component,\r\n    Connect504Component,\r\n    PageRibbonComponent,\r\n    ActiveMenuDirective,\r\n    FooterComponent,\r\n    IcSidebarComponent,\r\n    IcMenuComponent,\r\n    IcScrollPositionDirective,\r\n    IcSlimScrollDirective,\r\n    IcMenuItemComponent,\r\n  ],\r\n  exports: [IcScrollPositionDirective, IcSlimScrollDirective, IcSidebarComponent, IcMenuComponent, IcMenuItemComponent],\r\n  bootstrap: [MainComponent],\r\n})\r\nexport class AppModule {\r\n  constructor(\r\n    applicationConfigService: ApplicationConfigService,\r\n    iconLibrary: FaIconLibrary,\r\n    dpConfig: NgbDatepickerConfig,\r\n    translateService: TranslateService\r\n  ) {\r\n    applicationConfigService.setEndpointPrefix(SERVER_API_URL);\r\n    registerLocaleData(locale);\r\n    iconLibrary.addIcons(...fontAwesomeIcons);\r\n    dpConfig.minDate = { year: dayjs().subtract(100, 'year').year(), month: 1, day: 1 };\r\n    translateService.setDefaultLang('en');\r\n    translateService.use('en');\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}