{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IcCodeLookupGetDescComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"../user-picker/ic-code-service\"));\nconst i2 = tslib_1.__importStar(require(\"@ngx-translate/core\"));\nconst i3 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i4 = tslib_1.__importStar(require(\"../i18n/ic-code-i18n.pipe\"));\nfunction IcCodeLookupGetDescComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 1);\n    i0.ɵɵpipe(1, \"icCodeI18n\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 1, ctx_r0.code.label), i0.ɵɵsanitizeHtml);\n  }\n}\nclass IcCodeLookupGetDescComponent {\n  constructor(codeService, translateService) {\n    this.codeService = codeService;\n    this.translateService = translateService;\n  }\n  ngOnInit() {\n    this.translateService.onLangChange.subscribe(event => {\n      this.currentLanguage = event.lang;\n    });\n  }\n  set icCodeLookupGetDesc(value) {\n    const valueAsArray = value.split(',');\n    const codeTypeBZId = valueAsArray[0];\n    const codeId = valueAsArray[1];\n    this.codeService.get(codeTypeBZId, codeId).subscribe(code => {\n      this.code = code;\n    });\n  }\n}\nexports.IcCodeLookupGetDescComponent = IcCodeLookupGetDescComponent;\nIcCodeLookupGetDescComponent.ɵfac = function IcCodeLookupGetDescComponent_Factory(t) {\n  return new (t || IcCodeLookupGetDescComponent)(i0.ɵɵdirectiveInject(i1.IcCodeService), i0.ɵɵdirectiveInject(i2.TranslateService));\n};\nIcCodeLookupGetDescComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: IcCodeLookupGetDescComponent,\n  selectors: [[\"ic-code-lookup-get-desc\"]],\n  inputs: {\n    icCodeLookupGetDesc: \"icCodeLookupGetDesc\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"innerHTML\", 4, \"ngIf\"], [3, \"innerHTML\"]],\n  template: function IcCodeLookupGetDescComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, IcCodeLookupGetDescComponent_span_0_Template, 2, 3, \"span\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.code);\n    }\n  },\n  dependencies: [i3.NgIf, i4.IcCodeI18nPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;IAMaA,0BAAgE;;;;;IAA7CA,sFAAqC;;;AAFrE,MAIaC,4BAA4B;EAIvCC,YAAoBC,WAA0B,EAAUC,gBAAkC;IAAtE,gBAAW,GAAXD,WAAW;IAAyB,qBAAgB,GAAhBC,gBAAgB;EAAqB;EAE7FC,QAAQ;IACN,IAAI,CAACD,gBAAgB,CAACE,YAAY,CAACC,SAAS,CAAEC,KAAsB,IAAI;MACtE,IAAI,CAACC,eAAe,GAAGD,KAAK,CAACE,IAAI;IACnC,CAAC,CAAC;EACJ;EAEA,IACIC,mBAAmB,CAACC,KAAa;IACnC,MAAMC,YAAY,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC;IACrC,MAAMC,YAAY,GAAGF,YAAY,CAAC,CAAC,CAAC;IACpC,MAAMG,MAAM,GAAGH,YAAY,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACV,WAAW,CAACc,GAAG,CAACF,YAAY,EAAEC,MAAM,CAAC,CAACT,SAAS,CAAEW,IAAc,IAAI;MACtE,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB,CAAC,CAAC;EACJ;;AAxBFC;;mBAIalB,4BAA4B;AAAA;;QAA5BA,4BAA4B;EAAAmB;EAAAC;IAAAV;EAAA;EAAAW;EAAAC;EAAAC;EAAAC;IAAA;MAF5BzB,+EAAgE;;;MAAzDA,+BAAU","names":["i0","IcCodeLookupGetDescComponent","constructor","codeService","translateService","ngOnInit","onLangChange","subscribe","event","currentLanguage","lang","icCodeLookupGetDesc","value","valueAsArray","split","codeTypeBZId","codeId","get","code","exports","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\ng-connect\\code-table\\ic-code-lookup-get-desc.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { CodeView, IcCodeService } from '../user-picker/ic-code-service';\r\n\r\n@Component({\r\n  selector: 'ic-code-lookup-get-desc',\r\n  template: '<span *ngIf=\"code\" [innerHTML]=\"code.label | icCodeI18n\"></span>',\r\n})\r\nexport class IcCodeLookupGetDescComponent implements OnInit {\r\n  code?: CodeView;\r\n  currentLanguage: any;\r\n\r\n  constructor(private codeService: IcCodeService, private translateService: TranslateService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this.currentLanguage = event.lang;\r\n    });\r\n  }\r\n\r\n  @Input()\r\n  set icCodeLookupGetDesc(value: string) {\r\n    const valueAsArray = value.split(',');\r\n    const codeTypeBZId = valueAsArray[0];\r\n    const codeId = valueAsArray[1];\r\n    this.codeService.get(codeTypeBZId, codeId).subscribe((code: CodeView) => {\r\n      this.code = code;\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}