{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KahRnsaService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nclass KahRnsaService {\n  constructor(ns2Http, applicationConfigService) {\n    this.ns2Http = ns2Http;\n    this.applicationConfigService = applicationConfigService;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('api/payment/kah-rnsa');\n  }\n  getSummary() {\n    const url = `${this.resourceUrl}/summary`;\n    return this.ns2Http.get(url);\n  }\n  getKahRnsaReleaseHistory(options) {\n    const url = `${this.resourceUrl}/release-history`;\n    return this.ns2Http.get(url, options);\n  }\n  release(param) {\n    const url = `${this.resourceUrl}/release`;\n    return this.ns2Http.post(url, param);\n  }\n}\nexports.KahRnsaService = KahRnsaService;\nKahRnsaService.ɵfac = function KahRnsaService_Factory(t) {\n  return new (t || KahRnsaService)(i0.ɵɵinject(i1.Ns2HttpService), i0.ɵɵinject(i2.ApplicationConfigService));\n};\nKahRnsaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: KahRnsaService,\n  factory: KahRnsaService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;;;;AAOA,MAGaA,cAAc;EAGzBC,YACUC,OAAuB,EACvBC,wBAAkD;IADlD,YAAO,GAAPD,OAAO;IACP,6BAAwB,GAAxBC,wBAAwB;IAJ3B,gBAAW,GAAG,IAAI,CAACA,wBAAwB,CAACC,cAAc,CAAC,sBAAsB,CAAC;EAMzF;EAEOC,UAAU;IACf,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,WAAW,UAAU;IACzC,OAAO,IAAI,CAACL,OAAO,CAACM,GAAG,CAACF,GAAG,CAAC;EAC9B;EAEOG,wBAAwB,CAACC,OAAa;IAC3C,MAAMJ,GAAG,GAAG,GAAG,IAAI,CAACC,WAAW,kBAAkB;IACjD,OAAO,IAAI,CAACL,OAAO,CAACM,GAAG,CAACF,GAAG,EAAEI,OAAO,CAAC;EACvC;EAEOC,OAAO,CAACC,KAAsB;IACnC,MAAMN,GAAG,GAAG,GAAG,IAAI,CAACC,WAAW,UAAU;IACzC,OAAO,IAAI,CAACL,OAAO,CAACW,IAAI,CAACP,GAAG,EAAEM,KAAK,CAAC;EACtC;;AAzBFE;;mBAGad,cAAc;AAAA;;SAAdA,cAAc;EAAAe,SAAdf,cAAc;EAAAgB,YAFb;AAAM","names":["KahRnsaService","constructor","ns2Http","applicationConfigService","getEndpointFor","getSummary","url","resourceUrl","get","getKahRnsaReleaseHistory","options","release","param","post","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payment\\bankfile-stop-payment\\stop-payment\\service\\kah-rnsa.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport {Observable} from \"rxjs\";\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { IReleaseKahRnsa } from '../model/kah-rnsa-release-record.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KahRnsaService {\r\n  public resourceUrl = this.applicationConfigService.getEndpointFor('api/payment/kah-rnsa');\r\n\r\n  constructor(\r\n    private ns2Http: Ns2HttpService,\r\n    private applicationConfigService: ApplicationConfigService\r\n  ) {\r\n  }\r\n\r\n  public getSummary(): Observable<any> {\r\n    const url = `${this.resourceUrl}/summary`;\r\n    return this.ns2Http.get(url);\r\n  }\r\n\r\n  public getKahRnsaReleaseHistory(options?: any): Observable<any> {\r\n    const url = `${this.resourceUrl}/release-history`;\r\n    return this.ns2Http.get(url, options);\r\n  }\r\n\r\n  public release(param: IReleaseKahRnsa): Observable<any> {\r\n    const url = `${this.resourceUrl}/release`;\r\n    return this.ns2Http.post(url, param);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}