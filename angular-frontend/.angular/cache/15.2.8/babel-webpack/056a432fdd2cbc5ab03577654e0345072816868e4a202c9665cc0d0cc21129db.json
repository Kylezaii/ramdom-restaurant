{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PasswordComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst forms_1 = require(\"@angular/forms\");\nconst crypto_js_1 = require(\"crypto-js\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"./password.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/core/auth/encrypt.service\"));\nconst i4 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i5 = tslib_1.__importStar(require(\"ngx-webstorage\"));\nconst i6 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i7 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i8 = tslib_1.__importStar(require(\"@fortawesome/angular-fontawesome\"));\nconst i9 = tslib_1.__importStar(require(\"../../shared/language/translate.directive\"));\nconst i10 = tslib_1.__importStar(require(\"./password-strength-bar/password-strength-bar.component\"));\nconst i11 = tslib_1.__importStar(require(\"@ngx-translate/core\"));\nfunction PasswordComponent_div_4_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"Password changed!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordComponent_div_4_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"strong\");\n    i0.ɵɵtext(2, \"An error has occurred!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" The password could not be changed.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordComponent_div_4_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \"\\n        The password and its confirmation do not match!\\n      \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordComponent_div_4_div_26_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 30);\n    i0.ɵɵtext(1, \"\\n              Your password is required.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordComponent_div_4_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, PasswordComponent_div_4_div_26_small_2_Template, 2, 0, \"small\", 29);\n    i0.ɵɵtext(3, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r5.passwordForm.get(\"currentPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n  }\n}\nfunction PasswordComponent_div_4_div_37_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 30);\n    i0.ɵɵtext(1, \"\\n              Your password is required.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordComponent_div_4_div_37_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 34);\n    i0.ɵɵtext(1, \"\\n              Your password is required to be at least 8 characters.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordComponent_div_4_div_37_small_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 35);\n    i0.ɵɵtext(1, \"\\n              Your password cannot be longer than 50 characters.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordComponent_div_4_div_37_small_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 36);\n    i0.ɵɵtext(1, \"\\n              Password not strong,should be Upper case/Lower case/Digits/Special Characters combination.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordComponent_div_4_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, PasswordComponent_div_4_div_37_small_2_Template, 2, 0, \"small\", 29);\n    i0.ɵɵtext(3, \"\\n\\n            \");\n    i0.ɵɵtemplate(4, PasswordComponent_div_4_div_37_small_4_Template, 2, 0, \"small\", 31);\n    i0.ɵɵtext(5, \"\\n\\n            \");\n    i0.ɵɵtemplate(6, PasswordComponent_div_4_div_37_small_6_Template, 2, 0, \"small\", 32);\n    i0.ɵɵtext(7, \"\\n\\n            \");\n    i0.ɵɵtemplate(8, PasswordComponent_div_4_div_37_small_8_Template, 2, 0, \"small\", 33);\n    i0.ɵɵtext(9, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r6.passwordForm.get(\"newPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r6.passwordForm.get(\"newPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.minlength);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r6.passwordForm.get(\"newPassword\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.maxlength);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx_r6.passwordForm.get(\"newPassword\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors.pattern);\n  }\n}\nfunction PasswordComponent_div_4_div_50_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 40);\n    i0.ɵɵtext(1, \"\\n              Your confirmation password is required.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordComponent_div_4_div_50_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 41);\n    i0.ɵɵtext(1, \"\\n              Your confirmation password is required to be at least 8 characters.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordComponent_div_4_div_50_small_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 42);\n    i0.ɵɵtext(1, \"\\n              Your confirmation password cannot be longer than 50 characters.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordComponent_div_4_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, PasswordComponent_div_4_div_50_small_2_Template, 2, 0, \"small\", 37);\n    i0.ɵɵtext(3, \"\\n\\n            \");\n    i0.ɵɵtemplate(4, PasswordComponent_div_4_div_50_small_4_Template, 2, 0, \"small\", 38);\n    i0.ɵɵtext(5, \"\\n\\n            \");\n    i0.ɵɵtemplate(6, PasswordComponent_div_4_div_50_small_6_Template, 2, 0, \"small\", 39);\n    i0.ɵɵtext(7, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r7.passwordForm.get(\"confirmPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r7.passwordForm.get(\"confirmPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.minlength);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r7.passwordForm.get(\"confirmPassword\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.maxlength);\n  }\n}\nfunction PasswordComponent_div_4_div_61_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 45);\n    i0.ɵɵtext(1, \"\\n              Your password recall question is required to be at least 8 characters.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordComponent_div_4_div_61_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 46);\n    i0.ɵɵtext(1, \"\\n              Your password recall question cannot be longer than 50 characters.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordComponent_div_4_div_61_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, PasswordComponent_div_4_div_61_small_2_Template, 2, 0, \"small\", 43);\n    i0.ɵɵtext(3, \"\\n\\n            \");\n    i0.ɵɵtemplate(4, PasswordComponent_div_4_div_61_small_4_Template, 2, 0, \"small\", 44);\n    i0.ɵɵtext(5, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r8.passwordForm.get(\"recallQuestion\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.minlength);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r8.passwordForm.get(\"recallQuestion\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.maxlength);\n  }\n}\nfunction PasswordComponent_div_4_div_72_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 49);\n    i0.ɵɵtext(1, \"\\n              Your password recall answer is required to be at least 8 characters.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordComponent_div_4_div_72_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 50);\n    i0.ɵɵtext(1, \"\\n              Your password recall answer cannot be longer than 50 characters.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordComponent_div_4_div_72_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, PasswordComponent_div_4_div_72_small_2_Template, 2, 0, \"small\", 47);\n    i0.ɵɵtext(3, \"\\n\\n            \");\n    i0.ɵɵtemplate(4, PasswordComponent_div_4_div_72_small_4_Template, 2, 0, \"small\", 48);\n    i0.ɵɵtext(5, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r9.passwordForm.get(\"recallAnswer\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.minlength);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r9.passwordForm.get(\"recallQuestion\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.maxlength);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    username: a0\n  };\n};\nfunction PasswordComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtext(1, \"\\n      \");\n    i0.ɵɵelementStart(2, \"h2\", 3);\n    i0.ɵɵtext(3, \"\\n        Password for [\");\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"]\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n\\n      \");\n    i0.ɵɵtemplate(8, PasswordComponent_div_4_div_8_Template, 5, 0, \"div\", 4);\n    i0.ɵɵtext(9, \"\\n\\n      \");\n    i0.ɵɵtemplate(10, PasswordComponent_div_4_div_10_Template, 4, 0, \"div\", 5);\n    i0.ɵɵtext(11, \"\\n\\n      \");\n    i0.ɵɵelement(12, \"p\", 6);\n    i0.ɵɵtext(13, \"\\n\\n      \");\n    i0.ɵɵtemplate(14, PasswordComponent_div_4_div_14_Template, 2, 0, \"div\", 7);\n    i0.ɵɵtext(15, \"\\n\\n      \");\n    i0.ɵɵelementStart(16, \"form\", 8);\n    i0.ɵɵlistener(\"ngSubmit\", function PasswordComponent_div_4_Template_form_ngSubmit_16_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.changePassword());\n    });\n    i0.ɵɵtext(17, \"\\n        \");\n    i0.ɵɵelementStart(18, \"div\", 9);\n    i0.ɵɵtext(19, \"\\n          \");\n    i0.ɵɵelementStart(20, \"label\", 10);\n    i0.ɵɵtext(21, \"Current password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n          \");\n    i0.ɵɵelement(23, \"input\", 11);\n    i0.ɵɵpipe(24, \"translate\");\n    i0.ɵɵtext(25, \"\\n\\n          \");\n    i0.ɵɵtemplate(26, PasswordComponent_div_4_div_26_Template, 4, 1, \"div\", 12);\n    i0.ɵɵtext(27, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n\\n        \");\n    i0.ɵɵelementStart(29, \"div\", 9);\n    i0.ɵɵtext(30, \"\\n          \");\n    i0.ɵɵelementStart(31, \"label\", 13);\n    i0.ɵɵtext(32, \"New password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(33, \"\\n          \");\n    i0.ɵɵelement(34, \"input\", 14);\n    i0.ɵɵpipe(35, \"translate\");\n    i0.ɵɵtext(36, \"\\n\\n          \");\n    i0.ɵɵtemplate(37, PasswordComponent_div_4_div_37_Template, 10, 4, \"div\", 12);\n    i0.ɵɵtext(38, \"\\n\\n          \");\n    i0.ɵɵelement(39, \"ic-password-strength-bar\", 15);\n    i0.ɵɵtext(40, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(41, \"\\n\\n        \");\n    i0.ɵɵelementStart(42, \"div\", 9);\n    i0.ɵɵtext(43, \"\\n          \");\n    i0.ɵɵelementStart(44, \"label\", 16);\n    i0.ɵɵtext(45, \"New password confirmation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(46, \"\\n          \");\n    i0.ɵɵelement(47, \"input\", 17);\n    i0.ɵɵpipe(48, \"translate\");\n    i0.ɵɵtext(49, \"\\n\\n          \");\n    i0.ɵɵtemplate(50, PasswordComponent_div_4_div_50_Template, 8, 3, \"div\", 12);\n    i0.ɵɵtext(51, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(52, \"\\n\\n        \");\n    i0.ɵɵelementStart(53, \"div\", 9);\n    i0.ɵɵtext(54, \"\\n          \");\n    i0.ɵɵelementStart(55, \"label\", 18);\n    i0.ɵɵtext(56, \"Password Recovery Question\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(57, \"\\n          \");\n    i0.ɵɵelement(58, \"input\", 19);\n    i0.ɵɵpipe(59, \"translate\");\n    i0.ɵɵtext(60, \"\\n\\n          \");\n    i0.ɵɵtemplate(61, PasswordComponent_div_4_div_61_Template, 6, 2, \"div\", 12);\n    i0.ɵɵtext(62, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(63, \"\\n\\n        \");\n    i0.ɵɵelementStart(64, \"div\", 9);\n    i0.ɵɵtext(65, \"\\n          \");\n    i0.ɵɵelementStart(66, \"label\", 20);\n    i0.ɵɵtext(67, \"Answer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(68, \"\\n          \");\n    i0.ɵɵelement(69, \"input\", 21);\n    i0.ɵɵpipe(70, \"translate\");\n    i0.ɵɵtext(71, \"\\n\\n          \");\n    i0.ɵɵtemplate(72, PasswordComponent_div_4_div_72_Template, 6, 2, \"div\", 12);\n    i0.ɵɵtext(73, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(74, \"\\n\\n        \");\n    i0.ɵɵelementStart(75, \"button\", 22);\n    i0.ɵɵtext(76, \"\\n          Save\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(77, \"\\n        \");\n    i0.ɵɵelementStart(78, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function PasswordComponent_div_4_Template_button_click_78_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.cancel());\n    });\n    i0.ɵɵtext(79, \"\\n          \");\n    i0.ɵɵelement(80, \"fa-icon\", 24);\n    i0.ɵɵtext(81, \"\\u00A0\");\n    i0.ɵɵelementStart(82, \"span\", 25);\n    i0.ɵɵtext(83, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(84, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(85, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(86, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const account_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction1(29, _c0, account_r1.username));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(account_r1.username);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.success);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.error);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.doNotMatch);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.passwordForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(24, 19, \"global.form.currentpassword.placeholder\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passwordForm.get(\"currentPassword\").invalid && (ctx_r0.passwordForm.get(\"currentPassword\").dirty || ctx_r0.passwordForm.get(\"currentPassword\").touched));\n    i0.ɵɵadvance(8);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(35, 21, \"global.form.newpassword.placeholder\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passwordForm.get(\"newPassword\").invalid && (ctx_r0.passwordForm.get(\"newPassword\").dirty || ctx_r0.passwordForm.get(\"newPassword\").touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"passwordToCheck\", ctx_r0.passwordForm.get(\"newPassword\").value);\n    i0.ɵɵadvance(8);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(48, 23, \"global.form.confirmpassword.placeholder\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passwordForm.get(\"confirmPassword\").invalid && (ctx_r0.passwordForm.get(\"confirmPassword\").dirty || ctx_r0.passwordForm.get(\"confirmPassword\").touched));\n    i0.ɵɵadvance(8);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(59, 25, \"password.form.pwdrecallquestion.placeholder\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passwordForm.get(\"recallQuestion\").invalid && (ctx_r0.passwordForm.get(\"recallQuestion\").dirty || ctx_r0.passwordForm.get(\"recallQuestion\").touched));\n    i0.ɵɵadvance(8);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(70, 27, \"password.form.pwdrecallanswer.placeholder\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passwordForm.get(\"recallAnswer\").invalid && (ctx_r0.passwordForm.get(\"recallAnswer\").dirty || ctx_r0.passwordForm.get(\"recallAnswer\").touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.passwordForm.invalid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"icon\", \"ban\");\n  }\n}\nclass PasswordComponent {\n  constructor(passwordService, accountService, encryptService, fb, $localStorage, router) {\n    this.passwordService = passwordService;\n    this.accountService = accountService;\n    this.encryptService = encryptService;\n    this.fb = fb;\n    this.$localStorage = $localStorage;\n    this.router = router;\n    this.doNotMatch = false;\n    this.recallAnswerRequired = false;\n    this.error = false;\n    this.success = false;\n    const minPasswordLength = this.$localStorage.retrieve('minPasswordLength');\n    const maxPasswordLength = this.$localStorage.retrieve('maxPasswordLength');\n    const passwordRule = this.$localStorage.retrieve('passwordRule');\n    this.passwordForm = this.fb.group({\n      currentPassword: ['', [forms_1.Validators.required]],\n      newPassword: ['', [forms_1.Validators.required, forms_1.Validators.minLength(minPasswordLength), forms_1.Validators.maxLength(maxPasswordLength), forms_1.Validators.pattern(passwordRule)]],\n      confirmPassword: ['', [forms_1.Validators.required, forms_1.Validators.minLength(minPasswordLength), forms_1.Validators.maxLength(maxPasswordLength)]],\n      recallQuestion: ['', [forms_1.Validators.minLength(8), forms_1.Validators.maxLength(50)]],\n      recallAnswer: ['', [forms_1.Validators.minLength(8), forms_1.Validators.maxLength(50)]]\n    });\n  }\n  ngOnInit() {\n    this.account$ = this.accountService.identity();\n  }\n  changePassword() {\n    this.error = false;\n    this.success = false;\n    this.doNotMatch = false;\n    if (this.passwordForm.get(['newPassword']).value !== this.passwordForm.get(['confirmPassword']).value) {\n      this.doNotMatch = true;\n    } else if (this.passwordForm.get(['recallQuestion']).value !== '' && this.passwordForm.get(['recallAnswer']).value === '') {\n      this.recallAnswerRequired = true;\n    } else {\n      this.passwordService.save(this.createAccountForm()).subscribe(() => this.success = true, error => {\n        this.error = true;\n        this.errorMsg = error.headers.get('error');\n        document.getElementById('pwdChangeErrorMsg').innerHTML = this.errorMsg;\n        const alert = 'block';\n        document.getElementById('pwdChangeErrorMsg').style.display = alert;\n      });\n    }\n  }\n  cancel() {\n    this.router.navigate(['account/profile']);\n  }\n  createAccountForm() {\n    const secretKey = crypto_js_1.lib.WordArray.random(8).toString();\n    const initialValue = crypto_js_1.lib.WordArray.random(8).toString();\n    return {\n      oldPassword: this.encryptService.encryptProfile(this.passwordForm.get(['currentPassword']).value, secretKey, initialValue),\n      newPassword: this.encryptService.encryptProfile(this.passwordForm.get(['newPassword']).value, secretKey, initialValue),\n      newPassword2: this.encryptService.encryptProfile(this.passwordForm.get(['confirmPassword']).value, secretKey, initialValue),\n      recallQuestion: this.encryptService.encryptProfile(this.passwordForm.get(['recallQuestion']).value, secretKey, initialValue),\n      recallAnswer: this.encryptService.encryptProfile(this.passwordForm.get(['recallAnswer']).value, secretKey, initialValue),\n      key: secretKey,\n      iv: initialValue\n    };\n  }\n}\nexports.PasswordComponent = PasswordComponent;\nPasswordComponent.ɵfac = function PasswordComponent_Factory(t) {\n  return new (t || PasswordComponent)(i0.ɵɵdirectiveInject(i1.PasswordService), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i3.EncryptService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.LocalStorageService), i0.ɵɵdirectiveInject(i6.Router));\n};\nPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PasswordComponent,\n  selectors: [[\"ic-password\"]],\n  decls: 9,\n  vars: 3,\n  consts: [[1, \"row\", \"justify-content-center\"], [\"class\", \"col-md-8\", 4, \"ngIf\"], [1, \"col-md-8\"], [\"icTranslate\", \"password.title\", 3, \"translateValues\"], [\"class\", \"alert alert-success\", \"icTranslate\", \"password.messages.success\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"id\", \"pwdChangeErrorMsg\", 1, \"alert-dismissible\", \"alert-danger\", \"alert\", 2, \"display\", \"none\"], [\"class\", \"alert alert-danger\", \"icTranslate\", \"global.messages.error.dontmatch\", 4, \"ngIf\"], [\"name\", \"form\", \"role\", \"form\", \"method\", \"POST\", 3, \"formGroup\", \"ngSubmit\"], [1, \"rounded-pill\"], [\"for\", \"currentPassword\", \"icTranslate\", \"global.form.currentpassword.label\", 1, \"form-control-label\"], [\"type\", \"password\", \"id\", \"currentPassword\", \"name\", \"currentPassword\", \"formControlName\", \"currentPassword\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"placeholder\"], [4, \"ngIf\"], [\"for\", \"newPassword\", \"icTranslate\", \"global.form.newpassword.label\", 1, \"form-control-label\"], [\"type\", \"password\", \"id\", \"newPassword\", \"name\", \"newPassword\", \"formControlName\", \"newPassword\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"placeholder\"], [3, \"passwordToCheck\"], [\"for\", \"confirmPassword\", \"icTranslate\", \"global.form.confirmpassword.label\", 1, \"form-control-label\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"placeholder\"], [\"for\", \"recallQuestion\", \"icTranslate\", \"password.form.pwdrecallquestion\", 1, \"form-control-label\"], [\"type\", \"text\", \"id\", \"recallQuestion\", \"name\", \"recallQuestion\", \"formControlName\", \"recallQuestion\", 1, \"form-control\", 3, \"placeholder\"], [\"for\", \"recallAnswer\", \"icTranslate\", \"password.form.pwdrecallanswer\", 1, \"form-control-label\"], [\"type\", \"text\", \"id\", \"recallAnswer\", \"name\", \"recallAnswer\", \"formControlName\", \"recallAnswer\", 1, \"form-control\", 3, \"placeholder\"], [\"type\", \"submit\", \"icTranslate\", \"password.form.button\", 1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"], [3, \"icon\"], [\"icTranslate\", \"password.form.cancel\"], [\"icTranslate\", \"password.messages.success\", 1, \"alert\", \"alert-success\"], [1, \"alert\", \"alert-danger\"], [\"icTranslate\", \"global.messages.error.dontmatch\", 1, \"alert\", \"alert-danger\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"global.messages.validate.newpassword.required\", 4, \"ngIf\"], [\"icTranslate\", \"global.messages.validate.newpassword.required\", 1, \"form-text\", \"text-danger\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"password.messages.validate.newpassword.minlength\", 4, \"ngIf\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"global.messages.validate.newpassword.maxlength\", 4, \"ngIf\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"password.messages.validate.newpwd.pattern\", 4, \"ngIf\"], [\"icTranslate\", \"password.messages.validate.newpassword.minlength\", 1, \"form-text\", \"text-danger\"], [\"icTranslate\", \"global.messages.validate.newpassword.maxlength\", 1, \"form-text\", \"text-danger\"], [\"icTranslate\", \"password.messages.validate.newpwd.pattern\", 1, \"form-text\", \"text-danger\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"global.messages.validate.confirmpassword.required\", 4, \"ngIf\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"password.messages.validate.confirmpwd.minlength\", 4, \"ngIf\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"global.messages.validate.confirmpassword.maxlength\", 4, \"ngIf\"], [\"icTranslate\", \"global.messages.validate.confirmpassword.required\", 1, \"form-text\", \"text-danger\"], [\"icTranslate\", \"password.messages.validate.confirmpwd.minlength\", 1, \"form-text\", \"text-danger\"], [\"icTranslate\", \"global.messages.validate.confirmpassword.maxlength\", 1, \"form-text\", \"text-danger\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"password.messages.validate.pwdrecallquestion.minlength\", 4, \"ngIf\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"password.messages.validate.pwdrecallquestion.maxlength\", 4, \"ngIf\"], [\"icTranslate\", \"password.messages.validate.pwdrecallquestion.minlength\", 1, \"form-text\", \"text-danger\"], [\"icTranslate\", \"password.messages.validate.pwdrecallquestion.maxlength\", 1, \"form-text\", \"text-danger\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"password.messages.validate.pwdrecallanswer.minlength\", 4, \"ngIf\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"password.messages.validate.pwdrecallanswer.maxlength\", 4, \"ngIf\"], [\"icTranslate\", \"password.messages.validate.pwdrecallanswer.minlength\", 1, \"form-text\", \"text-danger\"], [\"icTranslate\", \"password.messages.validate.pwdrecallanswer.maxlength\", 1, \"form-text\", \"text-danger\"]],\n  template: function PasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"div\", 0);\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵtemplate(4, PasswordComponent_div_4_Template, 87, 31, \"div\", 1);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵtext(6, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 1, ctx.account$));\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i7.NgIf, i8.FaIconComponent, i4.FormGroupDirective, i4.FormControlName, i9.TranslateDirective, i10.PasswordStrengthBarComponent, i7.AsyncPipe, i11.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","PasswordComponent","constructor","passwordService","accountService","encryptService","fb","$localStorage","router","minPasswordLength","retrieve","maxPasswordLength","passwordRule","passwordForm","group","currentPassword","forms_1","required","newPassword","minLength","maxLength","pattern","confirmPassword","recallQuestion","recallAnswer","ngOnInit","account$","identity","changePassword","error","success","doNotMatch","get","value","recallAnswerRequired","save","createAccountForm","subscribe","errorMsg","headers","document","getElementById","innerHTML","alert","style","display","cancel","navigate","secretKey","crypto_js_1","WordArray","random","toString","initialValue","oldPassword","encryptProfile","newPassword2","key","iv","exports","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\account\\password\\password.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\account\\password\\password.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { Account } from 'app/core/auth/account.model';\r\nimport { PasswordService } from './password.service';\r\nimport { EncryptService } from 'app/core/auth/encrypt.service';\r\nimport { lib } from 'crypto-js';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\n\r\n@Component({\r\n  selector: 'ic-password',\r\n  templateUrl: './password.component.html',\r\n})\r\nexport class PasswordComponent implements OnInit {\r\n  doNotMatch = false;\r\n  recallAnswerRequired = false;\r\n  error = false;\r\n  errorMsg: any;\r\n  success = false;\r\n  account$?: Observable<Account | null>;\r\n  passwordForm: any;\r\n\r\n  constructor(\r\n    private passwordService: PasswordService,\r\n    private accountService: AccountService,\r\n    private encryptService: EncryptService,\r\n    private fb: FormBuilder,\r\n    private $localStorage: LocalStorageService,\r\n    private router: Router\r\n  ) {\r\n    const minPasswordLength = this.$localStorage.retrieve('minPasswordLength');\r\n    const maxPasswordLength = this.$localStorage.retrieve('maxPasswordLength');\r\n    const passwordRule = this.$localStorage.retrieve('passwordRule');\r\n\r\n    this.passwordForm = this.fb.group({\r\n      currentPassword: ['', [Validators.required]],\r\n      newPassword: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(minPasswordLength),\r\n          Validators.maxLength(maxPasswordLength),\r\n          Validators.pattern(passwordRule),\r\n        ],\r\n      ],\r\n      confirmPassword: ['', [Validators.required, Validators.minLength(minPasswordLength), Validators.maxLength(maxPasswordLength)]],\r\n      recallQuestion: ['', [Validators.minLength(8), Validators.maxLength(50)]],\r\n      recallAnswer: ['', [Validators.minLength(8), Validators.maxLength(50)]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.account$ = this.accountService.identity();\r\n  }\r\n\r\n  changePassword(): void {\r\n    this.error = false;\r\n    this.success = false;\r\n    this.doNotMatch = false;\r\n\r\n    if (this.passwordForm.get(['newPassword'])!.value !== this.passwordForm.get(['confirmPassword'])!.value) {\r\n      this.doNotMatch = true;\r\n    } else if (this.passwordForm.get(['recallQuestion'])!.value !== '' && this.passwordForm.get(['recallAnswer'])!.value === '') {\r\n      this.recallAnswerRequired = true;\r\n    } else {\r\n      this.passwordService.save(this.createAccountForm()).subscribe(\r\n        () => (this.success = true),\r\n        error => {\r\n          this.error = true;\r\n          this.errorMsg = error.headers.get('error');\r\n          document.getElementById('pwdChangeErrorMsg')!.innerHTML = this.errorMsg;\r\n          const alert = 'block';\r\n          document.getElementById('pwdChangeErrorMsg')!.style.display = alert;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  cancel(): void {\r\n    this.router.navigate(['account/profile']);\r\n  }\r\n\r\n  private createAccountForm(): any {\r\n    const secretKey = lib.WordArray.random(8).toString();\r\n    const initialValue = lib.WordArray.random(8).toString();\r\n\r\n    return {\r\n      oldPassword: this.encryptService.encryptProfile(this.passwordForm.get(['currentPassword'])!.value, secretKey, initialValue),\r\n      newPassword: this.encryptService.encryptProfile(this.passwordForm.get(['newPassword'])!.value, secretKey, initialValue),\r\n      newPassword2: this.encryptService.encryptProfile(this.passwordForm.get(['confirmPassword'])!.value, secretKey, initialValue),\r\n      recallQuestion: this.encryptService.encryptProfile(this.passwordForm.get(['recallQuestion'])!.value, secretKey, initialValue),\r\n      recallAnswer: this.encryptService.encryptProfile(this.passwordForm.get(['recallAnswer'])!.value, secretKey, initialValue),\r\n      key: secretKey,\r\n      iv: initialValue,\r\n    };\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-md-8\" *ngIf=\"account$ | async as account\">\r\n      <h2 icTranslate=\"password.title\" [translateValues]=\"{ username: account.username }\">\r\n        Password for [<strong>{{ account.username }}</strong\r\n        >]\r\n      </h2>\r\n\r\n      <div class=\"alert alert-success\" *ngIf=\"success\" icTranslate=\"password.messages.success\">\r\n        <strong>Password changed!</strong>\r\n      </div>\r\n\r\n      <div class=\"alert alert-danger\" *ngIf=\"error\"><strong>An error has occurred!</strong> The password could not be changed.</div>\r\n\r\n      <p style=\"display: none\" id=\"pwdChangeErrorMsg\" class=\"alert-dismissible alert-danger alert\"></p>\r\n\r\n      <div class=\"alert alert-danger\" *ngIf=\"doNotMatch\" icTranslate=\"global.messages.error.dontmatch\">\r\n        The password and its confirmation do not match!\r\n      </div>\r\n\r\n      <form name=\"form\" role=\"form\" method=\"POST\" (ngSubmit)=\"changePassword()\" [formGroup]=\"passwordForm\">\r\n        <div class=\"rounded-pill\">\r\n          <label class=\"form-control-label\" for=\"currentPassword\" icTranslate=\"global.form.currentpassword.label\">Current password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"currentPassword\"\r\n            name=\"currentPassword\"\r\n            placeholder=\"{{ 'global.form.currentpassword.placeholder' | translate }}\"\r\n            formControlName=\"currentPassword\"\r\n            autocomplete=\"off\"\r\n          />\r\n\r\n          <div\r\n            *ngIf=\"\r\n              passwordForm.get('currentPassword')!.invalid &&\r\n              (passwordForm.get('currentPassword')!.dirty || passwordForm.get('currentPassword')!.touched)\r\n            \"\r\n          >\r\n            <small\r\n              class=\"form-text text-danger\"\r\n              *ngIf=\"passwordForm.get('currentPassword')?.errors?.required\"\r\n              icTranslate=\"global.messages.validate.newpassword.required\"\r\n            >\r\n              Your password is required.\r\n            </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"rounded-pill\">\r\n          <label class=\"form-control-label\" for=\"newPassword\" icTranslate=\"global.form.newpassword.label\">New password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"newPassword\"\r\n            name=\"newPassword\"\r\n            placeholder=\"{{ 'global.form.newpassword.placeholder' | translate }}\"\r\n            formControlName=\"newPassword\"\r\n            autocomplete=\"off\"\r\n          />\r\n\r\n          <div\r\n            *ngIf=\"\r\n              passwordForm.get('newPassword')!.invalid &&\r\n              (passwordForm.get('newPassword')!.dirty || passwordForm.get('newPassword')!.touched)\r\n            \"\r\n          >\r\n            <small\r\n              class=\"form-text text-danger\"\r\n              *ngIf=\"passwordForm.get('newPassword')?.errors?.required\"\r\n              icTranslate=\"global.messages.validate.newpassword.required\"\r\n            >\r\n              Your password is required.\r\n            </small>\r\n\r\n            <small\r\n              class=\"form-text text-danger\"\r\n              *ngIf=\"passwordForm.get('newPassword')?.errors?.minlength\"\r\n              icTranslate=\"password.messages.validate.newpassword.minlength\"\r\n            >\r\n              Your password is required to be at least 8 characters.\r\n            </small>\r\n\r\n            <small\r\n              class=\"form-text text-danger\"\r\n              *ngIf=\"passwordForm.get('newPassword')?.errors?.maxlength\"\r\n              icTranslate=\"global.messages.validate.newpassword.maxlength\"\r\n            >\r\n              Your password cannot be longer than 50 characters.\r\n            </small>\r\n\r\n            <small\r\n              class=\"form-text text-danger\"\r\n              *ngIf=\"passwordForm.get('newPassword')?.errors?.pattern\"\r\n              icTranslate=\"password.messages.validate.newpwd.pattern\"\r\n            >\r\n              Password not strong,should be Upper case/Lower case/Digits/Special Characters combination.\r\n            </small>\r\n          </div>\r\n\r\n          <ic-password-strength-bar [passwordToCheck]=\"passwordForm.get('newPassword')!.value\"></ic-password-strength-bar>\r\n        </div>\r\n\r\n        <div class=\"rounded-pill\">\r\n          <label class=\"form-control-label\" for=\"confirmPassword\" icTranslate=\"global.form.confirmpassword.label\"\r\n            >New password confirmation</label\r\n          >\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            placeholder=\"{{ 'global.form.confirmpassword.placeholder' | translate }}\"\r\n            formControlName=\"confirmPassword\"\r\n            autocomplete=\"off\"\r\n          />\r\n\r\n          <div\r\n            *ngIf=\"\r\n              passwordForm.get('confirmPassword')!.invalid &&\r\n              (passwordForm.get('confirmPassword')!.dirty || passwordForm.get('confirmPassword')!.touched)\r\n            \"\r\n          >\r\n            <small\r\n              class=\"form-text text-danger\"\r\n              *ngIf=\"passwordForm.get('confirmPassword')?.errors?.required\"\r\n              icTranslate=\"global.messages.validate.confirmpassword.required\"\r\n            >\r\n              Your confirmation password is required.\r\n            </small>\r\n\r\n            <small\r\n              class=\"form-text text-danger\"\r\n              *ngIf=\"passwordForm.get('confirmPassword')?.errors?.minlength\"\r\n              icTranslate=\"password.messages.validate.confirmpwd.minlength\"\r\n            >\r\n              Your confirmation password is required to be at least 8 characters.\r\n            </small>\r\n\r\n            <small\r\n              class=\"form-text text-danger\"\r\n              *ngIf=\"passwordForm.get('confirmPassword')?.errors?.maxlength\"\r\n              icTranslate=\"global.messages.validate.confirmpassword.maxlength\"\r\n            >\r\n              Your confirmation password cannot be longer than 50 characters.\r\n            </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"rounded-pill\">\r\n          <label class=\"form-control-label\" for=\"recallQuestion\" icTranslate=\"password.form.pwdrecallquestion\"\r\n            >Password Recovery Question</label\r\n          >\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"recallQuestion\"\r\n            name=\"recallQuestion\"\r\n            placeholder=\"{{ 'password.form.pwdrecallquestion.placeholder' | translate }}\"\r\n            formControlName=\"recallQuestion\"\r\n          />\r\n\r\n          <div\r\n            *ngIf=\"\r\n              passwordForm.get('recallQuestion')!.invalid &&\r\n              (passwordForm.get('recallQuestion')!.dirty || passwordForm.get('recallQuestion')!.touched)\r\n            \"\r\n          >\r\n            <small\r\n              class=\"form-text text-danger\"\r\n              *ngIf=\"passwordForm.get('recallQuestion')?.errors?.minlength\"\r\n              icTranslate=\"password.messages.validate.pwdrecallquestion.minlength\"\r\n            >\r\n              Your password recall question is required to be at least 8 characters.\r\n            </small>\r\n\r\n            <small\r\n              class=\"form-text text-danger\"\r\n              *ngIf=\"passwordForm.get('recallQuestion')?.errors?.maxlength\"\r\n              icTranslate=\"password.messages.validate.pwdrecallquestion.maxlength\"\r\n            >\r\n              Your password recall question cannot be longer than 50 characters.\r\n            </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"rounded-pill\">\r\n          <label class=\"form-control-label\" for=\"recallAnswer\" icTranslate=\"password.form.pwdrecallanswer\">Answer</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"recallAnswer\"\r\n            name=\"recallAnswer\"\r\n            placeholder=\"{{ 'password.form.pwdrecallanswer.placeholder' | translate }}\"\r\n            formControlName=\"recallAnswer\"\r\n          />\r\n\r\n          <div\r\n            *ngIf=\"\r\n              passwordForm.get('recallAnswer')!.invalid &&\r\n              (passwordForm.get('recallAnswer')!.dirty || passwordForm.get('recallAnswer')!.touched)\r\n            \"\r\n          >\r\n            <small\r\n              class=\"form-text text-danger\"\r\n              *ngIf=\"passwordForm.get('recallAnswer')?.errors?.minlength\"\r\n              icTranslate=\"password.messages.validate.pwdrecallanswer.minlength\"\r\n            >\r\n              Your password recall answer is required to be at least 8 characters.\r\n            </small>\r\n\r\n            <small\r\n              class=\"form-text text-danger\"\r\n              *ngIf=\"passwordForm.get('recallQuestion')?.errors?.maxlength\"\r\n              icTranslate=\"password.messages.validate.pwdrecallanswer.maxlength\"\r\n            >\r\n              Your password recall answer cannot be longer than 50 characters.\r\n            </small>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" [disabled]=\"passwordForm.invalid\" class=\"btn btn-primary btn-sm\" icTranslate=\"password.form.button\">\r\n          Save\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"cancel()\">\r\n          <fa-icon [icon]=\"'ban'\"></fa-icon>&nbsp;<span icTranslate=\"password.form.cancel\">Cancel</span>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}