{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PayrollBlackOutService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/common/http\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nclass PayrollBlackOutService {\n  constructor(http, applicationConfigService) {\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('api/payroll-black-out');\n  }\n  get() {\n    return this.http.get(this.resourceUrl, {\n      observe: 'response'\n    });\n  }\n  getCurrent() {\n    return this.http.get(this.resourceUrl + \"/current\", {\n      observe: 'response'\n    });\n  }\n  createUpdate(requestList) {\n    return this.http.post(this.resourceUrl + \"/create-update\", requestList, {\n      observe: 'response'\n    });\n  }\n}\nexports.PayrollBlackOutService = PayrollBlackOutService;\nPayrollBlackOutService.ɵfac = function PayrollBlackOutService_Factory(t) {\n  return new (t || PayrollBlackOutService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n};\nPayrollBlackOutService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PayrollBlackOutService,\n  factory: PayrollBlackOutService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;;;;AASA,MACaA,sBAAsB;EAGjCC,YAAsBC,IAAgB,EAAUC,wBAAkD;IAA5E,SAAI,GAAJD,IAAI;IAAsB,6BAAwB,GAAxBC,wBAAwB;IAFjE,gBAAW,GAAG,IAAI,CAACA,wBAAwB,CAACC,cAAc,CAAC,uBAAuB,CAAC;EAEW;EAErGC,GAAG;IACD,OAAO,IAAI,CAACH,IAAI,CAACG,GAAG,CAAc,IAAI,CAACC,WAAW,EAAE;MAAEC,OAAO,EAAE;IAAU,CAAE,CAAC;EAC9E;EAEAC,UAAU;IACR,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAc,IAAI,CAACC,WAAW,GAAG,UAAU,EAAE;MAAEC,OAAO,EAAE;IAAU,CAAE,CAAC;EAC3F;EAEAE,YAAY,CAACC,WAA0B;IACrC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAc,IAAI,CAACL,WAAW,GAAG,gBAAgB,EAAEI,WAAW,EAAE;MAAEH,OAAO,EAAE;IAAU,CAAE,CAAC;EAC/G;;AAhBFK;;mBACaZ,sBAAsB;AAAA;;SAAtBA,sBAAsB;EAAAa,SAAtBb,sBAAsB;EAAAc,YADT;AAAM","names":["PayrollBlackOutService","constructor","http","applicationConfigService","getEndpointFor","get","resourceUrl","observe","getCurrent","createUpdate","requestList","post","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\administration\\black-out-date\\payroll-black-out\\service\\payroll-black-out.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {IAdmPayroll} from '../payroll-black-out.model';\r\nimport {ApplicationConfigService} from 'app/core/config/application-config.service';\r\n\r\nexport type EntityResponseType = HttpResponse<IAdmPayroll>;\r\nexport type EntityArrayResponseType = HttpResponse<IAdmPayroll[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PayrollBlackOutService {\r\n  public resourceUrl = this.applicationConfigService.getEndpointFor('api/payroll-black-out');\r\n\r\n  constructor(protected http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\r\n\r\n  get(): Observable<EntityResponseType> {\r\n    return this.http.get<IAdmPayroll>(this.resourceUrl, { observe: 'response' });\r\n  }\r\n\r\n  getCurrent(): Observable<EntityResponseType> {\r\n    return this.http.get<IAdmPayroll>(this.resourceUrl + \"/current\", { observe: 'response' });\r\n  }\r\n\r\n  createUpdate(requestList: IAdmPayroll[]): Observable<EntityResponseType> {\r\n    return this.http.post<IAdmPayroll>(this.resourceUrl + \"/create-update\", requestList, { observe: 'response' });\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}