{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GlobalState = void 0;\nconst tslib_1 = require(\"tslib\");\nconst rxjs_1 = require(\"rxjs\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nclass GlobalState {\n  constructor() {\n    this._data = new rxjs_1.Subject();\n    this._dataStream$ = this._data.asObservable();\n    this._subscriptions = new Map();\n    this._dataStream$.subscribe(data => this._onEvent(data));\n  }\n  notifyDataChanged(event, value) {\n    const current = this._data.event;\n    if (current !== value) {\n      this._data.event = value;\n      this._data.next({\n        event,\n        data: this._data.event\n      });\n    }\n  }\n  subscribe(event, callback) {\n    const subscribers = this._subscriptions.get(event) ?? [];\n    subscribers.push(callback);\n    this._subscriptions.set(event, subscribers);\n  }\n  _onEvent(data) {\n    const subscribers = this._subscriptions.get(data['event']) ?? [];\n    subscribers.forEach(callback => {\n      callback.call(null, data['data']);\n    });\n  }\n}\nexports.GlobalState = GlobalState;\nGlobalState.ɵfac = function GlobalState_Factory(t) {\n  return new (t || GlobalState)();\n};\nGlobalState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GlobalState,\n  factory: GlobalState.ɵfac\n});","map":{"version":3,"mappings":";;;;;;;AAEA;;AAEA,MACaA,WAAW;EAKtBC;IAJQ,UAAK,GAAG,IAAIC,cAAO,EAAU;IAC7B,iBAAY,GAAG,IAAI,CAACC,KAAK,CAACC,YAAY,EAAE;IACxC,mBAAc,GAAiC,IAAIC,GAAG,EAA2B;IAGvF,IAAI,CAACC,YAAY,CAACC,SAAS,CAACC,IAAI,IAAI,IAAI,CAACC,QAAQ,CAACD,IAAI,CAAC,CAAC;EAC1D;EAEAE,iBAAiB,CAACC,KAAa,EAAEC,KAAU;IACzC,MAAMC,OAAO,GAAI,IAAI,CAACV,KAAa,CAACQ,KAAK;IACzC,IAAIE,OAAO,KAAKD,KAAK,EAAE;MACpB,IAAI,CAACT,KAAa,CAACQ,KAAK,GAAGC,KAAK;MACjC,IAAI,CAACT,KAAK,CAACW,IAAI,CAAC;QACdH,KAAK;QACLH,IAAI,EAAG,IAAI,CAACL,KAAa,CAACQ;OAC3B,CAAC;;EAEN;EAEAJ,SAAS,CAACI,KAAa,EAAEI,QAAkB;IACzC,MAAMC,WAAW,GAAG,IAAI,CAACC,cAAc,CAACC,GAAG,CAACP,KAAK,CAAC,IAAI,EAAE;IACxDK,WAAW,CAACG,IAAI,CAACJ,QAAQ,CAAC;IAE1B,IAAI,CAACE,cAAc,CAACG,GAAG,CAACT,KAAK,EAAEK,WAAW,CAAC;EAC7C;EAEAP,QAAQ,CAACD,IAAS;IAChB,MAAMQ,WAAW,GAAG,IAAI,CAACC,cAAc,CAACC,GAAG,CAACV,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;IAEhEQ,WAAW,CAACK,OAAO,CAACN,QAAQ,IAAG;MAC7BA,QAAQ,CAACO,IAAI,CAAC,IAAI,EAAEd,IAAI,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC,CAAC;EACJ;;AAlCFe;;mBACavB,WAAW;AAAA;;SAAXA,WAAW;EAAAwB,SAAXxB,WAAW;AAAA","names":["GlobalState","constructor","rxjs_1","_data","asObservable","Map","_dataStream$","subscribe","data","_onEvent","notifyDataChanged","event","value","current","next","callback","subscribers","_subscriptions","get","push","set","forEach","call","exports","factory"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\layouts\\sidebar\\global.state.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class GlobalState {\r\n  private _data = new Subject<Object>();\r\n  private _dataStream$ = this._data.asObservable();\r\n  private _subscriptions: Map<string, Array<Function>> = new Map<string, Array<Function>>();\r\n\r\n  constructor() {\r\n    this._dataStream$.subscribe(data => this._onEvent(data));\r\n  }\r\n\r\n  notifyDataChanged(event: string, value: any): void {\r\n    const current = (this._data as any).event;\r\n    if (current !== value) {\r\n      (this._data as any).event = value;\r\n      this._data.next({\r\n        event,\r\n        data: (this._data as any).event,\r\n      });\r\n    }\r\n  }\r\n\r\n  subscribe(event: string, callback: Function): void {\r\n    const subscribers = this._subscriptions.get(event) ?? [];\r\n    subscribers.push(callback);\r\n\r\n    this._subscriptions.set(event, subscribers);\r\n  }\r\n\r\n  _onEvent(data: any): void {\r\n    const subscribers = this._subscriptions.get(data['event']) ?? [];\r\n\r\n    subscribers.forEach(callback => {\r\n      callback.call(null, data['data']);\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}