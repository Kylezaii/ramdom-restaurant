{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.viewPayrollDetailService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nconst i2 = tslib_1.__importStar(require(\"@angular/common/http\"));\nconst i3 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nclass viewPayrollDetailService {\n  constructor(applicationConfigService, http, ns2Http) {\n    this.applicationConfigService = applicationConfigService;\n    this.http = http;\n    this.ns2Http = ns2Http;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('/api/payroll/payroll');\n    this.infoResourceUrl = this.applicationConfigService.getEndpointFor('api/common/nsman');\n  }\n  getRequests(options) {\n    return this.http.get(`./assets/mock/payroll/payroll-award-data.json`);\n  }\n  getAwardsDetail(nric) {\n    const url = \"assets/mock/payroll/payroll-award-data.json\";\n    return this.http.get(url, {\n      observe: 'response'\n    });\n  }\n  getPayrollDetailByID(id) {\n    const url = `${this.resourceUrl}/${id}`;\n    return this.ns2Http.get(url);\n  }\n  getAmendmentHistoryByID(id) {\n    const url = `${this.resourceUrl}/${id}/history`;\n    return this.ns2Http.get(url);\n  }\n  updatePayrollByID(ids, request) {\n    const url = `${this.resourceUrl}/amendment/detail`;\n    return this.ns2Http.post(url, request, {\n      params: {\n        id: ids\n      }\n    });\n  }\n  getPaymodeByID(id) {\n    const url = `${this.resourceUrl}/${id}/pay-mode`;\n    return this.ns2Http.get(url);\n  }\n  getRemarksByID(id, options) {\n    const url = `${this.resourceUrl}/${id}/remarks`;\n    return this.ns2Http.get(url, options);\n  }\n  updatePaycomponentByID(ids, request) {\n    const url = `${this.resourceUrl}/amendment/pay-component`;\n    return this.ns2Http.post(url, request, {\n      params: {\n        id: ids\n      }\n    });\n  }\n  updatePaymodeByID(ids, request) {\n    const url = `${this.resourceUrl}/amendment/pay-mode`;\n    return this.ns2Http.post(url, request, {\n      params: {\n        id: ids\n      }\n    });\n  }\n  getNsmenInformationByNRIC(nric) {\n    const url = `${this.infoResourceUrl}/${nric}`;\n    return this.ns2Http.get(url);\n  }\n}\nexports.viewPayrollDetailService = viewPayrollDetailService;\nviewPayrollDetailService.ɵfac = function viewPayrollDetailService_Factory(t) {\n  return new (t || viewPayrollDetailService)(i0.ɵɵinject(i1.ApplicationConfigService), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i3.Ns2HttpService));\n};\nviewPayrollDetailService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: viewPayrollDetailService,\n  factory: viewPayrollDetailService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;;;;;AAYA,MACaA,wBAAwB;EAIjCC,YACYC,wBAAkD,EAChDC,IAAe,EACjBC,OAAuB;IAFvB,6BAAwB,GAAxBF,wBAAwB;IACtB,SAAI,GAAJC,IAAI;IACN,YAAO,GAAPC,OAAO;IANZ,gBAAW,GAAG,IAAI,CAACF,wBAAwB,CAACG,cAAc,CAAC,sBAAsB,CAAC;IAClF,oBAAe,GAAG,IAAI,CAACH,wBAAwB,CAACG,cAAc,CAAC,kBAAkB,CAAC;EAKpD;EAErCC,WAAW,CAACC,OAAa;IACrB,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,+CAA+C,CAAC;EACzE;EAEAC,eAAe,CAACC,IAAY;IACxB,MAAMC,GAAG,GAAG,6CAA6C;IACzD,OAAO,IAAI,CAACR,IAAI,CAACK,GAAG,CAAyBG,GAAG,EAAE;MAAEC,OAAO,EAAE;IAAU,CAAE,CAAC;EAC9E;EAEOC,oBAAoB,CAACC,EAAU;IAClC,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACI,WAAW,IAAID,EAAE,EAAE;IACvC,OAAO,IAAI,CAACV,OAAO,CAACI,GAAG,CAACG,GAAG,CAAC;EAChC;EAEOK,uBAAuB,CAACF,EAAU;IACrC,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACI,WAAW,IAAID,EAAE,UAAU;IAC/C,OAAO,IAAI,CAACV,OAAO,CAACI,GAAG,CAACG,GAAG,CAAC;EAChC;EAEOM,iBAAiB,CAACC,GAAW,EAACC,OAAY;IAC7C,MAAMR,GAAG,GAAG,GAAG,IAAI,CAACI,WAAW,mBAAmB;IAClD,OAAO,IAAI,CAACX,OAAO,CAACgB,IAAI,CAACT,GAAG,EAACQ,OAAO,EAAC;MAAEE,MAAM,EAAE;QAACP,EAAE,EAAGI;MAAG;IAAC,CAAC,CAAC;EAC/D;EAEOI,cAAc,CAACR,EAAU;IAC5B,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACI,WAAW,IAAID,EAAE,WAAW;IAChD,OAAO,IAAI,CAACV,OAAO,CAACI,GAAG,CAACG,GAAG,CAAC;EAChC;EAEOY,cAAc,CAACT,EAAU,EAAEP,OAAY;IAC1C,MAAMI,GAAG,GAAG,GAAG,IAAI,CAACI,WAAW,IAAID,EAAE,UAAU;IAC/C,OAAO,IAAI,CAACV,OAAO,CAACI,GAAG,CAACG,GAAG,EAAEJ,OAAO,CAAC;EACzC;EAEOiB,sBAAsB,CAACN,GAAW,EAACC,OAAY;IAClD,MAAMR,GAAG,GAAG,GAAG,IAAI,CAACI,WAAW,0BAA0B;IACzD,OAAO,IAAI,CAACX,OAAO,CAACgB,IAAI,CAACT,GAAG,EAACQ,OAAO,EAAC;MAAEE,MAAM,EAAE;QAACP,EAAE,EAAGI;MAAG;IAAC,CAAC,CAAC;EAC/D;EAEOO,iBAAiB,CAACP,GAAW,EAACC,OAAY;IAC7C,MAAMR,GAAG,GAAG,GAAG,IAAI,CAACI,WAAW,qBAAqB;IACpD,OAAO,IAAI,CAACX,OAAO,CAACgB,IAAI,CAACT,GAAG,EAACQ,OAAO,EAAC;MAAEE,MAAM,EAAE;QAACP,EAAE,EAAGI;MAAG;IAAC,CAAC,CAAC;EAC/D;EAEOQ,yBAAyB,CAAChB,IAAW;IACxC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACgB,eAAe,IAAIjB,IAAI,EAAE;IAC7C,OAAO,IAAI,CAACN,OAAO,CAACI,GAAG,CAACG,GAAG,CAAC;EAChC;;AAzDJiB;;mBACa5B,wBAAwB;AAAA;;SAAxBA,wBAAwB;EAAA6B,SAAxB7B,wBAAwB;EAAA8B,YADX;AAAM","names":["viewPayrollDetailService","constructor","applicationConfigService","http","ns2Http","getEndpointFor","getRequests","options","get","getAwardsDetail","nric","url","observe","getPayrollDetailByID","id","resourceUrl","getAmendmentHistoryByID","updatePayrollByID","ids","request","post","params","getPaymodeByID","getRemarksByID","updatePaycomponentByID","updatePaymodeByID","getNsmenInformationByNRIC","infoResourceUrl","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payroll\\payroll\\service\\view-payroll-detail.service.ts"],"sourcesContent":["\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IPayrollRecordDetail } from '../model/view-payroll-detail.model';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\n\r\nexport type EntityResponseType = HttpResponse<IPayrollRecordDetail>;\r\nexport type EntityArrayResponseType = HttpResponse<IPayrollRecordDetail[]>;\r\n\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class viewPayrollDetailService{\r\n    public resourceUrl = this.applicationConfigService.getEndpointFor('/api/payroll/payroll');\r\n    public infoResourceUrl = this.applicationConfigService.getEndpointFor('api/common/nsman');\r\n\r\n    constructor(\r\n        private applicationConfigService: ApplicationConfigService,\r\n        protected http:HttpClient,\r\n        private ns2Http: Ns2HttpService){}\r\n\r\n    getRequests(options?: any): Observable<any>{\r\n        return this.http.get(`./assets/mock/payroll/payroll-award-data.json`)\r\n    }\r\n\r\n    getAwardsDetail(nric: string): Observable<any> {\r\n        const url = \"assets/mock/payroll/payroll-award-data.json\";\r\n        return this.http.get<IPayrollRecordDetail[]>(url, { observe: 'response' });\r\n    }\r\n\r\n    public getPayrollDetailByID(id: string): Observable<any>{\r\n        const url = `${this.resourceUrl}/${id}`;\r\n        return this.ns2Http.get(url);\r\n    }\r\n\r\n    public getAmendmentHistoryByID(id: string): Observable<any>{\r\n        const url = `${this.resourceUrl}/${id}/history`;\r\n        return this.ns2Http.get(url);\r\n    }\r\n\r\n    public updatePayrollByID(ids: string,request: any): Observable<any>{\r\n        const url = `${this.resourceUrl}/amendment/detail`; \r\n        return this.ns2Http.post(url,request,{ params: {id : ids}});\r\n    }\r\n\r\n    public getPaymodeByID(id: string): Observable<any>{\r\n        const url = `${this.resourceUrl}/${id}/pay-mode`;\r\n        return this.ns2Http.get(url);\r\n    }\r\n    \r\n    public getRemarksByID(id: string, options: any): Observable<any>{\r\n        const url = `${this.resourceUrl}/${id}/remarks`;\r\n        return this.ns2Http.get(url, options);\r\n    }\r\n    \r\n    public updatePaycomponentByID(ids: string,request: any): Observable<any>{\r\n        const url = `${this.resourceUrl}/amendment/pay-component`; \r\n        return this.ns2Http.post(url,request,{ params: {id : ids}});\r\n    }\r\n\r\n    public updatePaymodeByID(ids: string,request: any): Observable<any>{\r\n        const url = `${this.resourceUrl}/amendment/pay-mode`; \r\n        return this.ns2Http.post(url,request,{ params: {id : ids}});\r\n    }\r\n\r\n    public getNsmenInformationByNRIC(nric:string):Observable<any>{\r\n        const url = `${this.infoResourceUrl}/${nric}`;\r\n        return this.ns2Http.get(url);\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"script","externalDependencies":[]}