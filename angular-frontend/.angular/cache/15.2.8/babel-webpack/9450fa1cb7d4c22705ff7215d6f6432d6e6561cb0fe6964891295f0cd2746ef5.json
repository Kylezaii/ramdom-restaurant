{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CurrentAccessComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@angular/common\");\nconst core_1 = require(\"@angular/core\");\nconst dynamicdialog_1 = require(\"primeng/dynamicdialog\");\nconst nspay2_constants_1 = require(\"app/nspay2.constants\");\nconst view_current_access_component_1 = require(\"./view-current-access-modal/view-current-access.component\");\nconst overview_enum_model_1 = require(\"../model/overview-enum.model\");\nconst account_status_pipe_1 = require(\"../pipe/account-status.pipe\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"../service/current-access.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i3 = tslib_1.__importStar(require(\"primeng/dynamicdialog\"));\nconst i4 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i5 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i6 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i7 = tslib_1.__importStar(require(\"../pipe/account-status.pipe\"));\nconst i8 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i9 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i10 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i11 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/tooltip\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/table\"));\nfunction CurrentAccessComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"p-button\", 6);\n    i0.ɵɵlistener(\"click\", function CurrentAccessComponent_ng_template_3_Template_p_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(1);\n      return i0.ɵɵresetView(ctx_r5.exportCSV(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n    \");\n  }\n}\nfunction CurrentAccessComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"th\", 7);\n    i0.ɵɵtext(4, \"SN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n            \");\n    i0.ɵɵelementStart(6, \"th\", 8);\n    i0.ɵɵtext(7, \"\\n                Name\\n                \");\n    i0.ɵɵelement(8, \"p-sortIcon\", 9);\n    i0.ɵɵtext(9, \"\\n                \");\n    i0.ɵɵelement(10, \"p-columnFilter\", 10);\n    i0.ɵɵtext(11, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n            \");\n    i0.ɵɵelementStart(13, \"th\", 11);\n    i0.ɵɵtext(14, \"\\n                Email\\n                \");\n    i0.ɵɵelement(15, \"p-sortIcon\", 12);\n    i0.ɵɵtext(16, \"\\n                \");\n    i0.ɵɵelement(17, \"p-columnFilter\", 13);\n    i0.ɵɵtext(18, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n            \");\n    i0.ɵɵelementStart(20, \"th\", 14);\n    i0.ɵɵtext(21, \"\\n                Role\\n                \");\n    i0.ɵɵelement(22, \"p-sortIcon\", 15);\n    i0.ɵɵtext(23, \"\\n                \");\n    i0.ɵɵelement(24, \"p-columnFilter\", 16);\n    i0.ɵɵtext(25, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n            \");\n    i0.ɵɵelementStart(27, \"th\", 17);\n    i0.ɵɵtext(28, \"\\n                Optional Role\\n                \");\n    i0.ɵɵelement(29, \"p-sortIcon\", 18);\n    i0.ɵɵtext(30, \"\\n                \");\n    i0.ɵɵelement(31, \"p-columnFilter\", 19);\n    i0.ɵɵtext(32, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(33, \"\\n            \");\n    i0.ɵɵelementStart(34, \"th\", 20);\n    i0.ɵɵtext(35, \"\\n                Status\\n                \");\n    i0.ɵɵelement(36, \"p-sortIcon\", 21);\n    i0.ɵɵtext(37, \"\\n                \");\n    i0.ɵɵelement(38, \"p-columnFilter\", 22);\n    i0.ɵɵtext(39, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(40, \"\\n            \");\n    i0.ɵɵelementStart(41, \"th\", 23);\n    i0.ɵɵtext(42, \"\\n                Last Updated By\\n                \");\n    i0.ɵɵelement(43, \"p-sortIcon\", 24);\n    i0.ɵɵtext(44, \"\\n                \");\n    i0.ɵɵelement(45, \"p-columnFilter\", 25);\n    i0.ɵɵtext(46, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(47, \"\\n            \");\n    i0.ɵɵelementStart(48, \"th\", 26);\n    i0.ɵɵtext(49, \"\\n                Last Updated On\\n                \");\n    i0.ɵɵelement(50, \"p-sortIcon\", 27);\n    i0.ɵɵtext(51, \"\\n                \");\n    i0.ɵɵelement(52, \"p-columnFilter\", 28);\n    i0.ɵɵtext(53, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(54, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(55, \"\\n    \");\n  }\n}\nfunction CurrentAccessComponent_ng_template_7_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n            \");\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \"\\n                \");\n    i0.ɵɵelementStart(7, \"a\", 30);\n    i0.ɵɵlistener(\"click\", function CurrentAccessComponent_ng_template_7_tr_1_Template_a_click_7_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const record_r7 = i0.ɵɵnextContext().$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.openCurrentAccessDialog(record_r7));\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n            \");\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n            \");\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n            \");\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n            \");\n    i0.ɵɵelementStart(20, \"td\");\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n            \");\n    i0.ɵɵelementStart(23, \"td\");\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n            \");\n    i0.ɵɵelementStart(26, \"td\");\n    i0.ɵɵtext(27);\n    i0.ɵɵpipe(28, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    const i_r8 = ctx_r13.rowIndex;\n    const record_r7 = ctx_r13.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i_r8 + 1);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\\n                    \", record_r7.name, \"\\n                \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(record_r7.email);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(record_r7.role);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(record_r7.optionalRole);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r9.accountStatusEnum[record_r7.status]);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(record_r7.updatedBy);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(28, 8, record_r7.updatedDt, \"dd-MM-yyyy\"));\n  }\n}\nfunction CurrentAccessComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵtemplate(1, CurrentAccessComponent_ng_template_7_tr_1_Template, 30, 11, \"tr\", 29);\n    i0.ɵɵtext(2, \"\\n    \");\n  }\n  if (rf & 2) {\n    const record_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", record_r7.logicalDel == 0);\n  }\n}\nfunction CurrentAccessComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"td\", 31);\n    i0.ɵɵtext(4, \"No records found.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n    \");\n  }\n}\nconst _c0 = function () {\n  return [10, 25, 50];\n};\nclass CurrentAccessComponent {\n  constructor(currentAccessService, ns2HttpService, dialogService, exportUtilsService, toastService, datePipe, accountStatusPipe, dateUtilsService, accountService, changeDetectorRef) {\n    this.currentAccessService = currentAccessService;\n    this.ns2HttpService = ns2HttpService;\n    this.dialogService = dialogService;\n    this.exportUtilsService = exportUtilsService;\n    this.toastService = toastService;\n    this.datePipe = datePipe;\n    this.accountStatusPipe = accountStatusPipe;\n    this.dateUtilsService = dateUtilsService;\n    this.accountService = accountService;\n    this.changeDetectorRef = changeDetectorRef;\n    this.changeIndexEvent = new core_1.EventEmitter();\n    this.accountStatusEnum = overview_enum_model_1.AccountStatus;\n    this.requestStatusEnum = overview_enum_model_1.RequestStatus;\n    this.salutationEnum = overview_enum_model_1.Salutation;\n    this.pageData = {\n      currentPage: 0\n    };\n    this.pageSize = 10;\n  }\n  ngOnInit() {\n    this.loading = false;\n    this.retrieveCurrentUser();\n  }\n  retrieveCurrentUser() {\n    this.accountService.identity().subscribe(account => {\n      this.currentAccount = this.copyAccount(account);\n      console.log(\"account\", this.currentAccount);\n    });\n    this.currentAccessService.getUserMainRole(this.currentAccount?.subjectId).subscribe(mainRole => {\n      this.userMainRole = mainRole.body?.data;\n      console.log(\"user main role is\", this.userMainRole);\n    });\n  }\n  copyAccount(account) {\n    return {\n      email: account.email,\n      firstName: account.firstName,\n      lastName: account.lastName,\n      login: account.username,\n      authorities: account.authorities,\n      groups: account.groups,\n      subjectId: account.subjectId\n    };\n  }\n  loadData(event) {\n    this.loading = true;\n    this.changeDetectorRef.detectChanges();\n    this.lazyLoadEvent = event;\n    setTimeout(() => {\n      const options = this.ns2HttpService.convertLazyEvent(event, this.pageData, this.pageSize);\n      this.currentAccessService.getCurrentAccessList(options).subscribe({\n        next: res => {\n          if (res.body?.data?.content) {\n            this.currentAccess = res.body.data.content;\n            this.totalRecords = res.body.data.content.totalElements;\n            console.log(\"Current access\", this.currentAccess);\n          } else {\n            this.currentAccess = [];\n          }\n          this.loading = false;\n        },\n        error(error) {\n          console.log(error);\n        },\n        complete: () => {\n          console.log(\"Successfully retrieved current access\");\n          this.loading = false;\n          this.changeDetectorRef.detectChanges();\n        }\n      });\n    }, 1000);\n  }\n  onPage(event) {\n    this.pageSize = event.rows;\n    this.pageData.currentPage = event.first / event.rows;\n  }\n  openCurrentAccessDialog(currentAccess) {\n    console.log(\"Selected view current access\", currentAccess);\n    // enable or disable button\n    let isApprover = false;\n    if (this.userMainRole[nspay2_constants_1.NSPAY2_ROLES.MINDEF_APPROVER] !== undefined && this.accountStatusEnum[currentAccess.status] === overview_enum_model_1.AccountStatus.D) {\n      isApprover = true;\n    }\n    this.ref = this.dialogService.open(view_current_access_component_1.ViewCurrentAccessComponent, {\n      showHeader: false,\n      width: \"50%\",\n      contentStyle: {\n        'padding': '0rem'\n      },\n      data: {\n        selectedCurrentAccess: currentAccess,\n        isEnabled: isApprover\n      }\n    });\n    this.ref.onClose.subscribe(enabled => {\n      if (enabled) {\n        this.loadData(this.lazyLoadEvent);\n        // call the loadData method of AccessRightRequestComponent\n        this.changeActiveIndex(1);\n      }\n    });\n  }\n  changeActiveIndex(index) {\n    this.changeIndexEvent.emit(index);\n  }\n  exportCSV(dataTable) {\n    const options = this.ns2HttpService.convertLazyEvent(this.lazyLoadEvent, 0, this.totalRecords);\n    setTimeout(() => {\n      this.currentAccessService.getCurrentAccessListExport(options).subscribe({\n        next: res => {\n          this.datePipe;\n          if (res.body?.data?.content) {\n            const data = res.body.data.content;\n            const columns = [{\n              field: 'sn',\n              header: 'SN',\n              index: 0\n            }, {\n              field: 'email',\n              header: 'Email',\n              index: 1\n            }, {\n              field: 'salutation',\n              header: 'Salutation',\n              index: 2\n            }, {\n              field: 'name',\n              header: 'Name',\n              index: 3\n            }, {\n              field: 'displayName',\n              header: 'Display Name',\n              index: 4\n            }, {\n              field: 'userInitials',\n              header: 'User Initials',\n              index: 5\n            }, {\n              field: 'appt',\n              header: 'Appointment',\n              index: 6\n            }, {\n              field: 'unit',\n              header: 'Unit',\n              index: 7\n            }, {\n              field: 'contactNumber',\n              header: 'Contact Number',\n              index: 8\n            }, {\n              field: 'role',\n              header: 'Role',\n              index: 9\n            }, {\n              field: 'optionalRole',\n              header: 'Optional Role',\n              index: 10\n            }, {\n              field: 'expiredOn',\n              header: 'Expired On',\n              index: 11\n            }, {\n              field: 'disabledOn',\n              header: 'Disabled On',\n              index: 12\n            }, {\n              field: 'deletedFlag',\n              header: 'Deleted Flag',\n              index: 13\n            }, {\n              field: 'deletedOn',\n              header: 'Deleted On',\n              index: 14\n            }, {\n              field: 'createdOn',\n              header: 'Created On',\n              index: 15\n            }, {\n              field: 'createdBy',\n              header: 'Created By',\n              index: 16\n            }, {\n              field: 'lastUpdatedOn',\n              header: 'Last Updated On',\n              index: 17\n            }, {\n              field: 'lastUpdatedBy',\n              header: 'Last Updated By',\n              index: 18\n            }, {\n              field: 'status',\n              header: 'Status',\n              index: 19\n            }];\n            const dtoList = [];\n            console.log(\"data\", data);\n            data.forEach((record, index) => {\n              const dto = {\n                sn: index + 1,\n                email: record.email,\n                salutation: this.salutationEnum[record.salutation],\n                name: record.name,\n                displayName: record.displayName,\n                userInitials: record.userInitial,\n                appt: record.appt,\n                unit: record.unit,\n                contactNumber: record.phoneNum,\n                role: record.role,\n                optionalRole: record.optionalRole,\n                expiredOn: this.datePipe.transform(record.expiryDate, 'dd-MM-yyyy'),\n                disabledOn: this.datePipe.transform(record.disabledDate, 'dd-MM-yyyy'),\n                deletedFlag: record.logicalDel,\n                deletedOn: this.datePipe.transform(record.deletedDate, 'dd-MM-yyyy'),\n                createdOn: this.datePipe.transform(record.createdDt, 'dd-MM-yyyy HH:mm:ss'),\n                createdBy: record.createdBy,\n                lastUpdatedOn: this.datePipe.transform(record.updatedDt, 'dd-MM-yyyy HH:mm:ss'),\n                lastUpdatedBy: record.updatedBy,\n                status: this.accountStatusPipe.transform(record.status, record.logicalDel)\n              };\n              dtoList.push(dto);\n            });\n            console.log(dtoList);\n            this.exportUtilsService.exportCSV(dataTable, dtoList, res.body.data.totalElements, columns, \"Current Access Table\");\n          }\n        },\n        error: error => {\n          console.log(error);\n          this.toastService.error(error.error?.error_desc);\n        },\n        complete() {\n          console.log(\" Current Access exportCSV() Completed\");\n        }\n      });\n    }, 1000);\n  }\n}\nexports.CurrentAccessComponent = CurrentAccessComponent;\nCurrentAccessComponent.ɵfac = function CurrentAccessComponent_Factory(t) {\n  return new (t || CurrentAccessComponent)(i0.ɵɵdirectiveInject(i1.CurrentAccessService), i0.ɵɵdirectiveInject(i2.Ns2HttpService), i0.ɵɵdirectiveInject(i3.DialogService), i0.ɵɵdirectiveInject(i4.ExportUtilsService), i0.ɵɵdirectiveInject(i5.CustomToastService), i0.ɵɵdirectiveInject(i6.DatePipe), i0.ɵɵdirectiveInject(i7.AccountStatusPipe), i0.ɵɵdirectiveInject(i8.DateUtilsService), i0.ɵɵdirectiveInject(i9.AccountService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nCurrentAccessComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CurrentAccessComponent,\n  selectors: [[\"n2-current-access\"]],\n  outputs: {\n    changeIndexEvent: \"changeIndexEvent\"\n  },\n  features: [i0.ɵɵProvidersFeature([dynamicdialog_1.DialogService, common_1.DatePipe, account_status_pipe_1.AccountStatusPipe])],\n  decls: 12,\n  vars: 9,\n  consts: [[\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-gridlines\", 3, \"value\", \"lazy\", \"loading\", \"paginator\", \"totalRecords\", \"rows\", \"rowsPerPageOptions\", \"showCurrentPageReport\", \"onLazyLoad\", \"onPage\"], [\"dataTable\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"icon\", \"pi pi-file-o\", \"pTooltip\", \"Export to Excel\", \"tooltipPosition\", \"bottom\", 3, \"click\"], [\"scope\", \"col\"], [\"scope\", \"col\", \"pSortableColumn\", \"firstName\"], [\"field\", \"firstName\", 2, \"float\", \"right\"], [\"type\", \"text\", \"field\", \"firstName\", \"display\", \"menu\", 2, \"float\", \"right\"], [\"scope\", \"col\", \"pSortableColumn\", \"email\"], [\"field\", \"email\", 2, \"float\", \"right\"], [\"type\", \"text\", \"field\", \"email\", \"display\", \"menu\", 2, \"float\", \"right\"], [\"scope\", \"col\", \"pSortableColumn\", \"role\"], [\"field\", \"role\", 2, \"float\", \"right\"], [\"type\", \"text\", \"field\", \"role\", \"display\", \"menu\", 2, \"float\", \"right\"], [\"scope\", \"col\", \"pSortableColumn\", \"optionalRole\"], [\"field\", \"optionalRole\", 2, \"float\", \"right\"], [\"type\", \"text\", \"field\", \"optionalRole\", \"display\", \"menu\", 2, \"float\", \"right\"], [\"scope\", \"col\", \"pSortableColumn\", \"status\"], [\"field\", \"status\", 2, \"float\", \"right\"], [\"type\", \"text\", \"field\", \"status\", \"display\", \"menu\", 2, \"float\", \"right\"], [\"scope\", \"col\", \"pSortableColumn\", \"updatedBy\"], [\"field\", \"updatedBy\", 2, \"float\", \"right\"], [\"type\", \"text\", \"field\", \"updatedBy\", \"display\", \"menu\", 2, \"float\", \"right\"], [\"scope\", \"col\", \"pSortableColumn\", \"updatedDt\"], [\"field\", \"updatedDt\", 2, \"float\", \"right\"], [\"type\", \"date\", \"field\", \"updatedDt\", \"display\", \"menu\", 2, \"float\", \"right\"], [4, \"ngIf\"], [\"href\", \"javascript:void(0)\", 3, \"click\"], [\"colspan\", \"12\"]],\n  template: function CurrentAccessComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-table\", 0, 1);\n      i0.ɵɵlistener(\"onLazyLoad\", function CurrentAccessComponent_Template_p_table_onLazyLoad_0_listener($event) {\n        return ctx.loadData($event);\n      })(\"onPage\", function CurrentAccessComponent_Template_p_table_onPage_0_listener($event) {\n        return ctx.onPage($event);\n      });\n      i0.ɵɵtext(2, \"\\n    \");\n      i0.ɵɵtemplate(3, CurrentAccessComponent_ng_template_3_Template, 6, 0, \"ng-template\", 2);\n      i0.ɵɵtext(4, \"\\n    \");\n      i0.ɵɵtemplate(5, CurrentAccessComponent_ng_template_5_Template, 56, 0, \"ng-template\", 3);\n      i0.ɵɵtext(6, \"\\n    \");\n      i0.ɵɵtemplate(7, CurrentAccessComponent_ng_template_7_Template, 3, 1, \"ng-template\", 4);\n      i0.ɵɵtext(8, \"\\n    \");\n      i0.ɵɵtemplate(9, CurrentAccessComponent_ng_template_9_Template, 7, 0, \"ng-template\", 5);\n      i0.ɵɵtext(10, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(11, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"value\", ctx.currentAccess)(\"lazy\", true)(\"loading\", ctx.loading)(\"paginator\", true)(\"totalRecords\", ctx.totalRecords)(\"rows\", 10)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(8, _c0))(\"showCurrentPageReport\", true);\n    }\n  },\n  dependencies: [i6.NgIf, i10.PrimeTemplate, i11.Button, i12.Tooltip, i13.Table, i13.SortableColumn, i13.SortIcon, i13.ColumnFilter, i6.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjdXJyZW50LWFjY2Vzcy5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvYWRtaW4vYWNjZXNzLWNvbnRyb2wvb3ZlcnZpZXcvY3VycmVudC1hY2Nlc3MvY3VycmVudC1hY2Nlc3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLDRLQUE0SyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","CurrentAccessComponent","constructor","currentAccessService","ns2HttpService","dialogService","exportUtilsService","toastService","datePipe","accountStatusPipe","dateUtilsService","accountService","changeDetectorRef","core_1","overview_enum_model_1","currentPage","ngOnInit","loading","retrieveCurrentUser","identity","subscribe","account","currentAccount","copyAccount","console","log","getUserMainRole","subjectId","mainRole","userMainRole","body","data","email","firstName","lastName","login","username","authorities","groups","loadData","event","detectChanges","lazyLoadEvent","setTimeout","options","convertLazyEvent","pageData","pageSize","getCurrentAccessList","next","res","content","currentAccess","totalRecords","totalElements","error","complete","onPage","rows","first","openCurrentAccessDialog","isApprover","nspay2_constants_1","MINDEF_APPROVER","undefined","accountStatusEnum","status","D","ref","open","view_current_access_component_1","showHeader","width","contentStyle","selectedCurrentAccess","isEnabled","onClose","enabled","changeActiveIndex","index","changeIndexEvent","emit","exportCSV","dataTable","getCurrentAccessListExport","columns","field","header","dtoList","forEach","record","dto","sn","salutation","salutationEnum","name","displayName","userInitials","userInitial","appt","unit","contactNumber","phoneNum","role","optionalRole","expiredOn","transform","expiryDate","disabledOn","disabledDate","deletedFlag","logicalDel","deletedOn","deletedDate","createdOn","createdDt","createdBy","lastUpdatedOn","updatedDt","lastUpdatedBy","updatedBy","push","error_desc","exports","selectors","outputs","features","dynamicdialog_1","common_1","account_status_pipe_1","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\access-control\\overview\\current-access\\current-access.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\access-control\\overview\\current-access\\current-access.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Component, OnInit, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport { Table } from 'primeng/table';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { NSPAY2_ROLES } from 'app/nspay2.constants';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\nimport { CurrentAccessService } from '../service/current-access.service';\r\nimport { AccessRightRequestComponent } from '../access-right-request/access-right-request.component';\r\nimport { ViewCurrentAccessComponent } from './view-current-access-modal/view-current-access.component';\r\nimport { ICurrentAccess } from '../model/current-access.model';\r\nimport { AccountStatus, RequestStatus, Salutation } from '../model/overview-enum.model';\r\nimport { AccountStatusPipe } from '../pipe/account-status.pipe';\r\n\r\n@Component({\r\n  selector: 'n2-current-access',\r\n  templateUrl: './current-access.component.html',\r\n  styleUrls: ['./current-access.component.scss'],\r\n  providers: [DialogService, DatePipe, AccountStatusPipe]\r\n})\r\n\r\nexport class CurrentAccessComponent implements OnInit {\r\n\r\n  @Output() changeIndexEvent = new EventEmitter<number>();\r\n\r\n  // Current User\r\n  currentAccount: any;\r\n  userMainRole: any;\r\n\r\n   // Model\r\n  currentAccess?: ICurrentAccess[];\r\n  accountStatusEnum: { [key: string]: AccountStatus } = AccountStatus;\r\n  requestStatusEnum: { [key: string]: RequestStatus } = RequestStatus;\r\n  salutationEnum: { [key: string]: Salutation } = Salutation;\r\n \r\n  // Lazy Loading\r\n  totalRecords?: number;\r\n  loading?: boolean;\r\n  ref?: DynamicDialogRef;\r\n  lazyLoadEvent: LazyLoadEvent;\r\n\r\n  pageData: { currentPage: number } = {\r\n    currentPage: 0\r\n  }\r\n  pageSize = 10;\r\n\r\n  constructor(\r\n    private currentAccessService: CurrentAccessService,\r\n    private ns2HttpService: Ns2HttpService,\r\n    private dialogService: DialogService,\r\n    private exportUtilsService: ExportUtilsService,\r\n    private toastService: CustomToastService,\r\n    private datePipe: DatePipe,\r\n    private accountStatusPipe: AccountStatusPipe,\r\n    public dateUtilsService: DateUtilsService,\r\n    private accountService: AccountService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = false;\r\n    this.retrieveCurrentUser();\r\n  }\r\n\r\n  retrieveCurrentUser(): void {\r\n    this.accountService.identity().subscribe((account: any) => {\r\n      this.currentAccount = this.copyAccount(account);\r\n      console.log(\"account\", this.currentAccount);\r\n    });\r\n\r\n    this.currentAccessService.getUserMainRole(this.currentAccount?.subjectId)\r\n      .subscribe((mainRole: any) => {\r\n        this.userMainRole = mainRole.body?.data;\r\n        console.log(\"user main role is\", this.userMainRole)\r\n      });\r\n  }\r\n\r\n  copyAccount(account: any): any {\r\n    return {\r\n      email: account.email,\r\n      firstName: account.firstName,\r\n      lastName: account.lastName,\r\n      login: account.username,\r\n      authorities: account.authorities,\r\n      groups: account.groups,\r\n      subjectId: account.subjectId\r\n    };\r\n  }\r\n\r\n  loadData(event: LazyLoadEvent): void {\r\n    this.loading = true;\r\n    this.changeDetectorRef.detectChanges();\r\n    this.lazyLoadEvent = event;\r\n    setTimeout(() => {\r\n      const options = this.ns2HttpService.convertLazyEvent(event, this.pageData, this.pageSize);\r\n      this.currentAccessService.getCurrentAccessList(options)\r\n        .subscribe(\r\n          {\r\n            next: (res: HttpResponse<any>) => {\r\n              if (res.body?.data?.content) {\r\n                this.currentAccess = res.body.data.content;\r\n                this.totalRecords = res.body.data.content.totalElements;\r\n                console.log(\"Current access\", this.currentAccess);\r\n              }\r\n              else {\r\n                this.currentAccess = []\r\n              }\r\n              this.loading = false;\r\n            },\r\n            error(error: HttpErrorResponse) {\r\n              console.log(error);\r\n            },\r\n            complete:() => {\r\n              console.log(\"Successfully retrieved current access\");\r\n              this.loading = false;\r\n              this.changeDetectorRef.detectChanges();\r\n            }\r\n          }\r\n        )\r\n    }, 1000);\r\n  }\r\n\r\n  onPage(event: any): void {\r\n    this.pageSize = event.rows;\r\n    this.pageData.currentPage = event.first / event.rows;\r\n  }\r\n  \r\n  openCurrentAccessDialog(currentAccess: ICurrentAccess) {\r\n    console.log(\"Selected view current access\", currentAccess)\r\n    \r\n    // enable or disable button\r\n    let isApprover = false;\r\n    if (this.userMainRole[NSPAY2_ROLES.MINDEF_APPROVER] !== undefined && \r\n      this.accountStatusEnum[currentAccess.status] === AccountStatus.D) {\r\n      isApprover = true;\r\n    }\r\n\r\n    this.ref = this.dialogService.open(ViewCurrentAccessComponent, {\r\n      showHeader: false,\r\n      width: \"50%\",\r\n      contentStyle: {\r\n        'padding': '0rem',\r\n      },\r\n      data: {\r\n        selectedCurrentAccess: currentAccess,\r\n        isEnabled: isApprover\r\n      }\r\n    });\r\n\r\n    this.ref.onClose.subscribe((enabled: boolean) => {\r\n      if (enabled) {\r\n        this.loadData(this.lazyLoadEvent);\r\n        // call the loadData method of AccessRightRequestComponent\r\n        this.changeActiveIndex(1);\r\n      }\r\n    })\r\n  }\r\n\r\n  changeActiveIndex(index: number): void {\r\n    this.changeIndexEvent.emit(index)\r\n  }\r\n\r\n  exportCSV(dataTable: Table): void {\r\n    const options = this.ns2HttpService.convertLazyEvent(this.lazyLoadEvent, 0, this.totalRecords);\r\n    setTimeout(() => {\r\n      this.currentAccessService.getCurrentAccessListExport(options)\r\n        .subscribe(\r\n          {\r\n            next: (res: HttpResponse<any>) => {\r\n              this.datePipe\r\n              if (res.body?.data?.content){\r\n                const data = res.body.data.content\r\n                const columns = [\r\n                  { field: 'sn', header: 'SN', index: 0 },\r\n                  { field: 'email', header: 'Email', index: 1 },\r\n                  { field: 'salutation', header: 'Salutation', index: 2 },\r\n                  { field: 'name', header: 'Name', index: 3 },\r\n                  { field: 'displayName', header: 'Display Name', index: 4 },\r\n                  { field: 'userInitials', header: 'User Initials', index: 5 },\r\n                  { field: 'appt', header: 'Appointment', index: 6 },\r\n                  { field: 'unit', header: 'Unit', index: 7 },\r\n                  { field: 'contactNumber', header: 'Contact Number', index: 8 },\r\n                  { field: 'role', header: 'Role', index: 9 },\r\n                  { field: 'optionalRole', header: 'Optional Role', index: 10 },\r\n                  { field: 'expiredOn', header: 'Expired On', index: 11 },\r\n                  { field: 'disabledOn', header: 'Disabled On', index: 12 },\r\n                  { field: 'deletedFlag', header: 'Deleted Flag', index: 13 },\r\n                  { field: 'deletedOn', header: 'Deleted On', index: 14 },\r\n                  { field: 'createdOn', header: 'Created On', index: 15 },\r\n                  { field: 'createdBy', header: 'Created By', index: 16 },\r\n                  { field: 'lastUpdatedOn', header: 'Last Updated On', index: 17 },\r\n                  { field: 'lastUpdatedBy', header: 'Last Updated By', index: 18 },\r\n                  { field: 'status', header: 'Status', index: 19 }\r\n                ];\r\n                const dtoList: any[] = [];\r\n                console.log(\"data\", data);\r\n                data.forEach((record: ICurrentAccess, index: number) => {\r\n                  const dto = {\r\n                    sn: index + 1,\r\n                    email: record.email,\r\n                    salutation: this.salutationEnum[record.salutation],\r\n                    name: record.name,\r\n                    displayName: record.displayName,\r\n                    userInitials: record.userInitial,\r\n                    appt: record.appt,\r\n                    unit: record.unit,\r\n                    contactNumber: record.phoneNum,\r\n                    role: record.role,\r\n                    optionalRole: record.optionalRole,\r\n                    expiredOn: this.datePipe.transform(record.expiryDate, 'dd-MM-yyyy'),\r\n                    disabledOn: this.datePipe.transform(record.disabledDate, 'dd-MM-yyyy'),\r\n                    deletedFlag: record.logicalDel,\r\n                    deletedOn: this.datePipe.transform(record.deletedDate, 'dd-MM-yyyy'),\r\n                    createdOn: this.datePipe.transform(record.createdDt, 'dd-MM-yyyy HH:mm:ss'),\r\n                    createdBy: record.createdBy,\r\n                    lastUpdatedOn: this.datePipe.transform(record.updatedDt, 'dd-MM-yyyy HH:mm:ss'),\r\n                    lastUpdatedBy: record.updatedBy,\r\n                    status: this.accountStatusPipe.transform(record.status, record.logicalDel)\r\n                  }\r\n                  dtoList.push(dto);\r\n                });\r\n                console.log(dtoList)\r\n                this.exportUtilsService.exportCSV(dataTable, dtoList, res.body.data.totalElements, columns, \"Current Access Table\")\r\n              }\r\n            },\r\n            error: (error: HttpErrorResponse) => {\r\n              console.log(error);\r\n              this.toastService.error(error.error?.error_desc)\r\n            },\r\n            complete() {\r\n              console.log(\" Current Access exportCSV() Completed\");\r\n            }\r\n          }\r\n        )\r\n    }, 1000);\r\n  }\r\n\r\n}\r\n","<p-table #dataTable [value]=\"currentAccess\" [lazy]=\"true\" (onLazyLoad)=\"loadData($event)\" [loading]=\"loading\"\r\n    (onPage)=\"onPage($event)\" [paginator]=\"true\" [totalRecords]=\"totalRecords\" [rows]=\"10\"\r\n    [rowsPerPageOptions]=\"[10,25,50]\" [showCurrentPageReport]=\"true\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n    styleClass=\"p-datatable-gridlines\">\r\n    <ng-template pTemplate=\"caption\">\r\n        <div>\r\n            <p-button icon=\"pi pi-file-o\" pTooltip=\"Export to Excel\" tooltipPosition=\"bottom\" (click)=\"exportCSV(dataTable)\"></p-button>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th scope=\"col\">SN</th>\r\n            <th scope=\"col\" pSortableColumn=\"firstName\">\r\n                Name\r\n                <p-sortIcon field=\"firstName\" style=\"float:right\"></p-sortIcon>\r\n                <p-columnFilter type=\"text\" field=\"firstName\" display=\"menu\" style=\"float:right\"></p-columnFilter>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"email\">\r\n                Email\r\n                <p-sortIcon field=\"email\" style=\"float:right\"></p-sortIcon>\r\n                <p-columnFilter type=\"text\" field=\"email\" display=\"menu\" style=\"float:right\"></p-columnFilter>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"role\">\r\n                Role\r\n                <p-sortIcon field=\"role\" style=\"float:right\"></p-sortIcon>\r\n                <p-columnFilter type=\"text\" field=\"role\" display=\"menu\" style=\"float:right\"></p-columnFilter>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"optionalRole\">\r\n                Optional Role\r\n                <p-sortIcon field=\"optionalRole\" style=\"float:right\"></p-sortIcon>\r\n                <p-columnFilter type=\"text\" field=\"optionalRole\" display=\"menu\" style=\"float:right\"></p-columnFilter>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"status\">\r\n                Status\r\n                <p-sortIcon field=\"status\" style=\"float:right\"></p-sortIcon>\r\n                <p-columnFilter type=\"text\" field=\"status\" display=\"menu\" style=\"float:right\"></p-columnFilter>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"updatedBy\">\r\n                Last Updated By\r\n                <p-sortIcon field=\"updatedBy\" style=\"float:right\"></p-sortIcon>\r\n                <p-columnFilter type=\"text\" field=\"updatedBy\" display=\"menu\" style=\"float:right\"></p-columnFilter>\r\n            </th>\r\n            <th scope=\"col\" pSortableColumn=\"updatedDt\">\r\n                Last Updated On\r\n                <p-sortIcon field=\"updatedDt\" style=\"float:right\"></p-sortIcon>\r\n                <p-columnFilter type=\"date\" field=\"updatedDt\" display=\"menu\" style=\"float:right\" ></p-columnFilter>\r\n            </th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-record let-i=\"rowIndex\">\r\n        <tr *ngIf=\"record.logicalDel == 0\">\r\n            <td>{{ i+1 }}</td>\r\n            <td>\r\n                <a href=\"javascript:void(0)\" (click)=\"openCurrentAccessDialog(record)\">\r\n                    {{ record.name }}\r\n                </a>\r\n            </td>\r\n            <td>{{ record.email }}</td>\r\n            <td>{{ record.role }}</td>\r\n            <td>{{ record.optionalRole }}</td>\r\n            <td>{{ accountStatusEnum[record.status] }}</td>\r\n            <td>{{ record.updatedBy }}</td>\r\n            <td>{{ record.updatedDt | date:'dd-MM-yyyy' }}</td>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n            <td colspan=\"12\">No records found.</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}