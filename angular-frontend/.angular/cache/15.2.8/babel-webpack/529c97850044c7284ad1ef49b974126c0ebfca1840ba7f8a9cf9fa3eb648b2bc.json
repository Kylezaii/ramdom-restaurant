{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TranslateDirective = void 0;\nconst tslib_1 = require(\"tslib\");\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst translation_config_1 = require(\"app/config/translation.config\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@ngx-translate/core\"));\n/**\r\n * A wrapper directive on top of the translate pipe as the inbuilt translate directive from ngx-translate is too verbose and buggy\r\n */\nclass TranslateDirective {\n  constructor(el, translateService) {\n    this.el = el;\n    this.translateService = translateService;\n    this.directiveDestroyed = new rxjs_1.Subject();\n  }\n  ngOnInit() {\n    this.translateService.onLangChange.pipe((0, operators_1.takeUntil)(this.directiveDestroyed)).subscribe(() => {\n      this.getTranslation();\n    });\n  }\n  ngOnChanges() {\n    this.getTranslation();\n  }\n  ngOnDestroy() {\n    this.directiveDestroyed.next();\n    this.directiveDestroyed.complete();\n  }\n  getTranslation() {\n    this.translateService.get(this.icTranslate, this.translateValues).pipe((0, operators_1.takeUntil)(this.directiveDestroyed)).subscribe(value => {\n      this.el.nativeElement.innerHTML = value;\n    }, () => `${translation_config_1.translationNotFoundMessage}[${this.icTranslate}]`);\n  }\n}\nexports.TranslateDirective = TranslateDirective;\nTranslateDirective.ɵfac = function TranslateDirective_Factory(t) {\n  return new (t || TranslateDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.TranslateService));\n};\nTranslateDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: TranslateDirective,\n  selectors: [[\"\", \"icTranslate\", \"\"]],\n  inputs: {\n    icTranslate: \"icTranslate\",\n    translateValues: \"translateValues\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});","map":{"version":3,"mappings":";;;;;;;AAEA;AACA;AAEA;;;AAEA;;;AAGA,MAGaA,kBAAkB;EAM7BC,YAAoBC,EAAc,EAAUC,gBAAkC;IAA1D,OAAE,GAAFD,EAAE;IAAsB,qBAAgB,GAAhBC,gBAAgB;IAF3C,uBAAkB,GAAG,IAAIC,cAAO,EAAQ;EAEwB;EAEjFC,QAAQ;IACN,IAAI,CAACF,gBAAgB,CAACG,YAAY,CAACC,IAAI,CAAC,yBAAS,EAAC,IAAI,CAACC,kBAAkB,CAAC,CAAC,CAACC,SAAS,CAAC,MAAK;MACzF,IAAI,CAACC,cAAc,EAAE;IACvB,CAAC,CAAC;EACJ;EAEAC,WAAW;IACT,IAAI,CAACD,cAAc,EAAE;EACvB;EAEAE,WAAW;IACT,IAAI,CAACJ,kBAAkB,CAACK,IAAI,EAAE;IAC9B,IAAI,CAACL,kBAAkB,CAACM,QAAQ,EAAE;EACpC;EAEQJ,cAAc;IACpB,IAAI,CAACP,gBAAgB,CAClBY,GAAG,CAAC,IAAI,CAACC,WAAW,EAAE,IAAI,CAACC,eAAe,CAAC,CAC3CV,IAAI,CAAC,yBAAS,EAAC,IAAI,CAACC,kBAAkB,CAAC,CAAC,CACxCC,SAAS,CACRS,KAAK,IAAG;MACN,IAAI,CAAChB,EAAE,CAACiB,aAAa,CAACC,SAAS,GAAGF,KAAK;IACzC,CAAC,EACD,MAAM,GAAGG,+CAA0B,IAAI,IAAI,CAACL,WAAW,GAAG,CAC3D;EACL;;AApCFM;;mBAGatB,kBAAkB;AAAA;;QAAlBA,kBAAkB;EAAAuB;EAAAC;IAAAR;IAAAC;EAAA;EAAAQ;AAAA","names":["TranslateDirective","constructor","el","translateService","rxjs_1","ngOnInit","onLangChange","pipe","directiveDestroyed","subscribe","getTranslation","ngOnChanges","ngOnDestroy","next","complete","get","icTranslate","translateValues","value","nativeElement","innerHTML","translation_config_1","exports","selectors","inputs","features"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\shared\\language\\translate.directive.ts"],"sourcesContent":["import { Input, Directive, ElementRef, OnChanges, OnInit, OnDestroy } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { translationNotFoundMessage } from 'app/config/translation.config';\r\n\r\n/**\r\n * A wrapper directive on top of the translate pipe as the inbuilt translate directive from ngx-translate is too verbose and buggy\r\n */\r\n@Directive({\r\n  selector: '[icTranslate]',\r\n})\r\nexport class TranslateDirective implements OnChanges, OnInit, OnDestroy {\r\n  @Input() icTranslate!: string;\r\n  @Input() translateValues?: { [key: string]: unknown };\r\n\r\n  private readonly directiveDestroyed = new Subject<void>();\r\n\r\n  constructor(private el: ElementRef, private translateService: TranslateService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.translateService.onLangChange.pipe(takeUntil(this.directiveDestroyed)).subscribe(() => {\r\n      this.getTranslation();\r\n    });\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.getTranslation();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.directiveDestroyed.next();\r\n    this.directiveDestroyed.complete();\r\n  }\r\n\r\n  private getTranslation(): void {\r\n    this.translateService\r\n      .get(this.icTranslate, this.translateValues)\r\n      .pipe(takeUntil(this.directiveDestroyed))\r\n      .subscribe(\r\n        value => {\r\n          this.el.nativeElement.innerHTML = value;\r\n        },\r\n        () => `${translationNotFoundMessage}[${this.icTranslate}]`\r\n      );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}