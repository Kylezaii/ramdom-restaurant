{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClaimSectionComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst http_1 = require(\"@angular/common/http\");\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst date_validator_directive_1 = require(\"app/shared/validator/date-validator.directive\");\nconst moment_1 = tslib_1.__importDefault(require(\"moment\"));\nconst claim_json_1 = tslib_1.__importDefault(require(\"../../../../../i18n/en/claim.json\"));\nconst common_validator_directive_1 = require(\"app/shared/validator/common-validator.directive\");\nconst nspapp_constants_1 = require(\"app/shared/constants/nspapp.constants\");\nconst nspay2_constants_1 = require(\"app/nspay2.constants\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/claim/se-claim/service/se-claim.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i5 = tslib_1.__importStar(require(\"app/claim/service/claim.service\"));\nconst i6 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i7 = tslib_1.__importStar(require(\"primeng/dynamicdialog\"));\nconst i8 = tslib_1.__importStar(require(\"app/ng-connect\"));\nconst i9 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i10 = tslib_1.__importStar(require(\"app/administration/black-out-date/public-holiday/service/public-holiday.service\"));\nconst i11 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i12 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i15 = tslib_1.__importStar(require(\"primeng/dropdown\"));\nconst i16 = tslib_1.__importStar(require(\"primeng/inputtext\"));\nconst i17 = tslib_1.__importStar(require(\"primeng/calendar\"));\nconst i18 = tslib_1.__importStar(require(\"../../../../shared/language/translate.directive\"));\nconst i19 = tslib_1.__importStar(require(\"app/claim/pop-up/view-supporting-doc/claim-supp-doc/claim-supp-doc.component\"));\nconst i20 = tslib_1.__importStar(require(\"primeng/accordion\"));\nconst _c0 = [\"claimSuppDoc\"];\nconst _c1 = function () {\n  return {\n    \"max-width\": \"14em\"\n  };\n};\nfunction ClaimSectionComponent_ng_template_5_p_calendar_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-calendar\", 40);\n    i0.ɵɵlistener(\"onSelect\", function ClaimSectionComponent_ng_template_5_p_calendar_10_Template_p_calendar_onSelect_0_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r36 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r36.onSelectStartDate());\n    })(\"click\", function ClaimSectionComponent_ng_template_5_p_calendar_10_Template_p_calendar_click_0_listener($event) {\n      return $event.stopPropagation();\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c1));\n    i0.ɵɵproperty(\"showIcon\", false)(\"inputStyleClass\", ctx_r21.outsideCurYr ? \"warning-date\" : null);\n  }\n}\nconst _c2 = function () {\n  return {\n    field: \"Start Date\"\n  };\n};\nfunction ClaimSectionComponent_ng_template_5_small_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"small\", 41);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c2));\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    dateYear: a0\n  };\n};\nfunction ClaimSectionComponent_ng_template_5_small_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"small\", 42);\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction1(1, _c3, ctx_r23.claimForm == null ? null : ctx_r23.claimForm.get(\"trgStartDte\").value.getFullYear()));\n  }\n}\nfunction ClaimSectionComponent_ng_template_5_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\"\\n                            \", ctx_r25.dateUtilsService.convertDateToStr(ctx_r25.claimForm.get(\"trgStartDte\").value, ctx_r25.dateFormat), \" \\n                        \");\n  }\n}\nfunction ClaimSectionComponent_ng_template_5_label_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" (\", ctx_r26.getDay(ctx_r26.claimForm.get(\"trgStartDte\").value), \") \");\n  }\n}\nfunction ClaimSectionComponent_ng_template_5_p_calendar_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-calendar\", 43);\n    i0.ɵɵlistener(\"onSelect\", function ClaimSectionComponent_ng_template_5_p_calendar_31_Template_p_calendar_onSelect_0_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r39 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r39.onSelectStartDate());\n    })(\"click\", function ClaimSectionComponent_ng_template_5_p_calendar_31_Template_p_calendar_click_0_listener($event) {\n      return $event.stopPropagation();\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c1));\n    i0.ɵɵproperty(\"showIcon\", false)(\"inputStyleClass\", ctx_r27.outsideCurYr ? \"warning-date\" : null);\n  }\n}\nconst _c4 = function () {\n  return {\n    field: \"End Date\"\n  };\n};\nfunction ClaimSectionComponent_ng_template_5_small_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 41);\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c4));\n  }\n}\nfunction ClaimSectionComponent_ng_template_5_small_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"small\", 42);\n  }\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction1(1, _c3, ctx_r29.claimForm == null ? null : ctx_r29.claimForm.get(\"trgEndDte\").value.getFullYear()));\n  }\n}\nfunction ClaimSectionComponent_ng_template_5_ng_template_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\"\\n                            \", ctx_r31.dateUtilsService.convertDateToStr(ctx_r31.claimForm.get(\"trgEndDte\").value, ctx_r31.dateFormat), \" \\n                        \");\n  }\n}\nfunction ClaimSectionComponent_ng_template_5_label_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" (\", ctx_r32.getDay(ctx_r32.claimForm.get(\"trgEndDte\").value), \") \");\n  }\n}\nconst _c5 = function () {\n  return {\n    \"flex-basis\": \"100px\"\n  };\n};\nconst _c6 = function () {\n  return {\n    endField: \"End Date\",\n    startField: \"Start Date\"\n  };\n};\nfunction ClaimSectionComponent_ng_template_5_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelement(2, \"label\", 27);\n    i0.ɵɵtext(3, \"\\n                        \");\n    i0.ɵɵelementStart(4, \"div\", 8);\n    i0.ɵɵtext(5, \"\\n                            \");\n    i0.ɵɵelementStart(6, \"small\", 45);\n    i0.ɵɵtext(7, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c5));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(4, _c6));\n  }\n}\nfunction ClaimSectionComponent_ng_template_5_div_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵelement(2, \"label\", 27);\n    i0.ɵɵtext(3, \"\\n                    \");\n    i0.ɵɵelementStart(4, \"div\", 8);\n    i0.ɵɵtext(5, \"\\n                        \");\n    i0.ɵɵelement(6, \"small\", 46);\n    i0.ɵɵtext(7, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(2, _c5));\n  }\n}\nconst _c7 = function () {\n  return {\n    \"margin-left\": \"0.5em\"\n  };\n};\nfunction ClaimSectionComponent_ng_template_5_div_60_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n              \");\n    i0.ɵɵtext(2, \"\\n              \");\n    i0.ɵɵelementStart(3, \"a\", 47);\n    i0.ɵɵlistener(\"click\", function ClaimSectionComponent_ng_template_5_div_60_Template_a_click_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r45);\n      const overlappingClaims_r42 = restoredCtx.$implicit;\n      const ctx_r44 = i0.ɵɵnextContext(2);\n      ctx_r44.popUpEnquiryClaim(overlappingClaims_r42.claimId, overlappingClaims_r42.claimType);\n      return i0.ɵɵresetView($event.stopPropagation());\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"slice\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const overlappingClaims_r42 = ctx.$implicit;\n    const i_r43 = ctx.index;\n    const ctx_r35 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(9, _c7));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\"\\n                \", overlappingClaims_r42.caseId, \"(\", (overlappingClaims_r42 == null ? null : overlappingClaims_r42.coyName == null ? null : overlappingClaims_r42.coyName.length) > 15 ? i0.ɵɵpipeBind3(5, 5, overlappingClaims_r42.coyName, 0, 15) + \"...\" : overlappingClaims_r42.coyName, \")\", i_r43 < (ctx_r35.seHardCopyDetails == null ? null : ctx_r35.seHardCopyDetails.overlappingClaimList.length) - 1 ? \",\" : \"\", \"\\n              \");\n  }\n}\nconst _c8 = function () {\n  return {\n    \"margin-left\": \"0em\",\n    \"align-items\": \"center\",\n    \"display\": \"flex\"\n  };\n};\nfunction ClaimSectionComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n            \");\n    i0.ɵɵelementStart(1, \"div\", 25);\n    i0.ɵɵtext(2, \"\\n                \");\n    i0.ɵɵelementStart(3, \"div\", 26);\n    i0.ɵɵtext(4, \"\\n                    \");\n    i0.ɵɵelementStart(5, \"label\", 27);\n    i0.ɵɵtext(6, \"Trg Period:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n                    \");\n    i0.ɵɵelementStart(8, \"div\", 28);\n    i0.ɵɵtext(9, \"\\n                        \");\n    i0.ɵɵtemplate(10, ClaimSectionComponent_ng_template_5_p_calendar_10_Template, 1, 5, \"p-calendar\", 29);\n    i0.ɵɵtext(11, \"\\n                        \");\n    i0.ɵɵtext(12, \"\\n                        \");\n    i0.ɵɵtemplate(13, ClaimSectionComponent_ng_template_5_small_13_Template, 1, 2, \"small\", 12);\n    i0.ɵɵtext(14, \"\\n                        \");\n    i0.ɵɵtemplate(15, ClaimSectionComponent_ng_template_5_small_15_Template, 1, 3, \"small\", 30);\n    i0.ɵɵtext(16, \"\\n                        \");\n    i0.ɵɵtemplate(17, ClaimSectionComponent_ng_template_5_ng_template_17_Template, 1, 1, \"ng-template\", null, 31, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(19, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n                    \");\n    i0.ɵɵelementStart(21, \"div\", 32);\n    i0.ɵɵtext(22, \"\\n                        \");\n    i0.ɵɵtemplate(23, ClaimSectionComponent_ng_template_5_label_23_Template, 2, 1, \"label\", 33);\n    i0.ɵɵtext(24, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n                    \");\n    i0.ɵɵelementStart(26, \"div\", 34);\n    i0.ɵɵtext(27, \"to\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n                    \");\n    i0.ɵɵelementStart(29, \"div\", 28);\n    i0.ɵɵtext(30, \"\\n                        \");\n    i0.ɵɵtemplate(31, ClaimSectionComponent_ng_template_5_p_calendar_31_Template, 1, 5, \"p-calendar\", 35);\n    i0.ɵɵtext(32, \"\\n                        \");\n    i0.ɵɵtemplate(33, ClaimSectionComponent_ng_template_5_small_33_Template, 2, 2, \"small\", 12);\n    i0.ɵɵtext(34, \"\\n                        \");\n    i0.ɵɵtemplate(35, ClaimSectionComponent_ng_template_5_small_35_Template, 1, 3, \"small\", 30);\n    i0.ɵɵtext(36, \"\\n                \\n                        \");\n    i0.ɵɵtemplate(37, ClaimSectionComponent_ng_template_5_ng_template_37_Template, 1, 1, \"ng-template\", null, 36, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(39, \"\\n                        \");\n    i0.ɵɵtext(40, \"\\n                      \\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(41, \"\\n                    \");\n    i0.ɵɵelementStart(42, \"div\", 32);\n    i0.ɵɵtext(43, \"\\n                        \");\n    i0.ɵɵtemplate(44, ClaimSectionComponent_ng_template_5_label_44_Template, 2, 1, \"label\", 33);\n    i0.ɵɵtext(45, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(46, \"\\n\\n                    \");\n    i0.ɵɵelement(47, \"div\", 34);\n    i0.ɵɵtext(48, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(49, \"\\n                \");\n    i0.ɵɵtemplate(50, ClaimSectionComponent_ng_template_5_div_50_Template, 10, 5, \"div\", 37);\n    i0.ɵɵtext(51, \"\\n                \");\n    i0.ɵɵtemplate(52, ClaimSectionComponent_ng_template_5_div_52_Template, 9, 3, \"div\", 37);\n    i0.ɵɵtext(53, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(54, \"\\n             \\n\\n\\n\\n          \");\n    i0.ɵɵelementStart(55, \"div\", 38);\n    i0.ɵɵtext(56, \"\\n            \");\n    i0.ɵɵelementStart(57, \"span\");\n    i0.ɵɵtext(58, \"Overlapping Claims: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(59, \"\\n            \");\n    i0.ɵɵtemplate(60, ClaimSectionComponent_ng_template_5_div_60_Template, 7, 10, \"div\", 39);\n    i0.ɵɵtext(61, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(62, \"\\n        \");\n  }\n  if (rf & 2) {\n    const _r24 = i0.ɵɵreference(18);\n    const _r30 = i0.ɵɵreference(38);\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_4_0;\n    let tmp_5_0;\n    let tmp_10_0;\n    let tmp_11_0;\n    let tmp_14_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.outsideCurYr ? \"warning-date\" : null);\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(20, _c5));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.hasHistoricalPendApproval && ctx_r0.hasValidAuthorityAndStation() && !ctx_r0.readOnly)(\"ngIfElse\", _r24);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.claimForm == null ? null : (tmp_4_0 = ctx_r0.claimForm.get(\"trgStartDte\")) == null ? null : tmp_4_0.hasError(\"required\")) && (ctx_r0.claimForm == null ? null : (tmp_4_0 = ctx_r0.claimForm.get(\"trgStartDte\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.claimForm == null ? null : (tmp_5_0 = ctx_r0.claimForm.get(\"trgStartDte\")) == null ? null : tmp_5_0.hasError(\"noHoliday\")) && (ctx_r0.claimForm == null ? null : (tmp_5_0 = ctx_r0.claimForm.get(\"trgStartDte\")) == null ? null : tmp_5_0.touched));\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(21, _c8));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.claimForm.get(\"trgStartDte\").value);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.hasHistoricalPendApproval && ctx_r0.hasValidAuthorityAndStation() && !ctx_r0.readOnly)(\"ngIfElse\", _r30);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.claimForm == null ? null : (tmp_10_0 = ctx_r0.claimForm.get(\"trgEndDte\")) == null ? null : tmp_10_0.hasError(\"required\")) && (ctx_r0.claimForm == null ? null : (tmp_10_0 = ctx_r0.claimForm.get(\"trgEndDte\")) == null ? null : tmp_10_0.touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.claimForm == null ? null : (tmp_11_0 = ctx_r0.claimForm.get(\"trgEndDte\")) == null ? null : tmp_11_0.hasError(\"noHoliday\")) && (ctx_r0.claimForm == null ? null : (tmp_11_0 = ctx_r0.claimForm.get(\"trgEndDte\")) == null ? null : tmp_11_0.touched));\n    i0.ɵɵadvance(7);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(22, _c8));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.claimForm.get(\"trgEndDte\").value);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.claimForm == null ? null : ctx_r0.claimForm.errors == null ? null : ctx_r0.claimForm.errors[\"invalidDateLessThan\"]) && ((ctx_r0.claimForm == null ? null : (tmp_14_0 = ctx_r0.claimForm.get(\"trgStartDte\")) == null ? null : tmp_14_0.touched) || (ctx_r0.claimForm == null ? null : (tmp_14_0 = ctx_r0.claimForm.get(\"trgEndDte\")) == null ? null : tmp_14_0.touched)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.claimForm == null ? null : ctx_r0.claimForm.errors == null ? null : ctx_r0.claimForm.errors[\"invalidDateRangeMoreThan\"]);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.seHardCopyDetails == null ? null : ctx_r0.seHardCopyDetails.overlappingClaimList);\n  }\n}\nconst _c9 = function () {\n  return {\n    field: \"Work Hour Start Time\"\n  };\n};\nfunction ClaimSectionComponent_div_14_div_5_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 55);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c9));\n  }\n}\nfunction ClaimSectionComponent_div_14_div_5_small_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 41);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c9));\n  }\n}\nconst _c10 = function () {\n  return {\n    \"max-width\": \"100%\"\n  };\n};\nfunction ClaimSectionComponent_div_14_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r57 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"input\", 53);\n    i0.ɵɵlistener(\"beforeinput\", function ClaimSectionComponent_div_14_div_5_Template_input_beforeinput_2_listener($event) {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r56 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r56.onBeforeInput($event));\n    })(\"blur\", function ClaimSectionComponent_div_14_div_5_Template_input_blur_2_listener($event) {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r58 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r58.onBlur($event, \"workStartTime\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n                            \");\n    i0.ɵɵtemplate(4, ClaimSectionComponent_div_14_div_5_small_4_Template, 2, 2, \"small\", 54);\n    i0.ɵɵtext(5, \"\\n                            \");\n    i0.ɵɵtemplate(6, ClaimSectionComponent_div_14_div_5_small_6_Template, 2, 2, \"small\", 12);\n    i0.ɵɵtext(7, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext(2);\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c10));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r46.claimForm.get(\"workStartTime\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx_r46.claimForm.get(\"workStartTime\")) == null ? null : tmp_1_0.hasError(\"invalidTime\")));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r46.claimForm.get(\"workStartTime\")) == null ? null : tmp_2_0.touched) && ctx_r46.isEmpty((tmp_2_0 = ctx_r46.claimForm.get(\"workStartTime\")) == null ? null : tmp_2_0.value));\n  }\n}\nconst _c11 = function () {\n  return {\n    \"align-items\": \"center\",\n    \"display\": \"flex\"\n  };\n};\nfunction ClaimSectionComponent_div_14_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                        \");\n    i0.ɵɵelementStart(1, \"div\", 32);\n    i0.ɵɵtext(2, \"\\n                            \");\n    i0.ɵɵelementStart(3, \"label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                    \");\n  }\n  if (rf & 2) {\n    const ctx_r48 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c11));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r48.claimForm.get(\"workStartTime\").value, \" \");\n  }\n}\nfunction ClaimSectionComponent_div_14_label_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r49 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                            (\", ctx_r49.formatTime(ctx_r49.claimForm.get(\"workStartTime\").value), \")\\n                        \");\n  }\n}\nconst _c12 = function () {\n  return {\n    field: \"Work Hour End Time\"\n  };\n};\nfunction ClaimSectionComponent_div_14_div_18_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 55);\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c12));\n  }\n}\nfunction ClaimSectionComponent_div_14_div_18_small_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 41);\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c12));\n  }\n}\nfunction ClaimSectionComponent_div_14_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r62 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementStart(2, \"input\", 56);\n    i0.ɵɵlistener(\"beforeinput\", function ClaimSectionComponent_div_14_div_18_Template_input_beforeinput_2_listener($event) {\n      i0.ɵɵrestoreView(_r62);\n      const ctx_r61 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r61.onBeforeInput($event));\n    })(\"blur\", function ClaimSectionComponent_div_14_div_18_Template_input_blur_2_listener($event) {\n      i0.ɵɵrestoreView(_r62);\n      const ctx_r63 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r63.onBlur($event, \"workEndTime\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n                        \");\n    i0.ɵɵtemplate(4, ClaimSectionComponent_div_14_div_18_small_4_Template, 2, 2, \"small\", 54);\n    i0.ɵɵtext(5, \"\\n                        \");\n    i0.ɵɵtemplate(6, ClaimSectionComponent_div_14_div_18_small_6_Template, 2, 2, \"small\", 12);\n    i0.ɵɵtext(7, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r50 = i0.ɵɵnextContext(2);\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c10));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r50.claimForm.get(\"workEndTime\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx_r50.claimForm.get(\"workEndTime\")) == null ? null : tmp_1_0.hasError(\"invalidTime\")));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r50.claimForm.get(\"workEndTime\")) == null ? null : tmp_2_0.touched) && ctx_r50.isEmpty((tmp_2_0 = ctx_r50.claimForm.get(\"workEndTime\")) == null ? null : tmp_2_0.value));\n  }\n}\nfunction ClaimSectionComponent_div_14_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                        \");\n    i0.ɵɵelementStart(1, \"div\", 32);\n    i0.ɵɵtext(2, \"\\n                            \");\n    i0.ɵɵelementStart(3, \"label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                    \");\n  }\n  if (rf & 2) {\n    const ctx_r52 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c11));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r52.claimForm.get(\"workEndTime\").value, \" \");\n  }\n}\nfunction ClaimSectionComponent_div_14_label_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r53 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                            (\", ctx_r53.formatTime(ctx_r53.claimForm.get(\"workEndTime\").value), \")\\n                        \");\n  }\n}\nconst _c13 = function () {\n  return {\n    \"margin-right\": \"2em\",\n    \"align-items\": \"center\",\n    \"display\": \"flex\"\n  };\n};\nfunction ClaimSectionComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵelementStart(2, \"label\", 48);\n    i0.ɵɵtext(3, \"Work Hour:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                    \");\n    i0.ɵɵtemplate(5, ClaimSectionComponent_div_14_div_5_Template, 8, 5, \"div\", 49);\n    i0.ɵɵtext(6, \"\\n                    \");\n    i0.ɵɵtemplate(7, ClaimSectionComponent_div_14_ng_template_7_Template, 7, 4, \"ng-template\", null, 50, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(9, \"\\n                    \");\n    i0.ɵɵelementStart(10, \"div\", 51);\n    i0.ɵɵtext(11, \"\\n                        \");\n    i0.ɵɵtemplate(12, ClaimSectionComponent_div_14_label_12_Template, 2, 1, \"label\", 33);\n    i0.ɵɵtext(13, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                    \");\n    i0.ɵɵelementStart(15, \"div\", 32);\n    i0.ɵɵtext(16, \"to\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                    \");\n    i0.ɵɵtemplate(18, ClaimSectionComponent_div_14_div_18_Template, 8, 5, \"div\", 49);\n    i0.ɵɵtext(19, \"\\n                    \");\n    i0.ɵɵtemplate(20, ClaimSectionComponent_div_14_ng_template_20_Template, 7, 4, \"ng-template\", null, 52, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(22, \"\\n                    \");\n    i0.ɵɵelementStart(23, \"div\", 51);\n    i0.ɵɵtext(24, \"\\n                        \");\n    i0.ɵɵtemplate(25, ClaimSectionComponent_div_14_label_25_Template, 2, 1, \"label\", 33);\n    i0.ɵɵtext(26, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r47 = i0.ɵɵreference(8);\n    const _r51 = i0.ɵɵreference(21);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.readOnly)(\"ngIfElse\", _r47);\n    i0.ɵɵadvance(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(12, _c8));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.claimForm.get(\"workStartTime\").value && ctx_r1.claimForm.get(\"workStartTime\").valid);\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(13, _c13));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.readOnly)(\"ngIfElse\", _r51);\n    i0.ɵɵadvance(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(14, _c8));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.claimForm.get(\"workEndTime\").value && ctx_r1.claimForm.get(\"workEndTime\").valid);\n  }\n}\nconst _c14 = function () {\n  return {\n    endField: \"Work Hour Start\",\n    startField: \"Work Hour End\"\n  };\n};\nfunction ClaimSectionComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵelement(2, \"div\", 57);\n    i0.ɵɵtext(3, \"\\n                    \");\n    i0.ɵɵelementStart(4, \"div\", 8);\n    i0.ɵɵtext(5, \"\\n                        \");\n    i0.ɵɵelement(6, \"small\", 58);\n    i0.ɵɵtext(7, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c14));\n  }\n}\nconst _c15 = function () {\n  return {\n    \"max-width\": \"14em\",\n    \"width\": \"100%\"\n  };\n};\nfunction ClaimSectionComponent_p_dropdown_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-dropdown\", 59);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c15));\n    i0.ɵɵproperty(\"options\", ctx_r3.occupationList)(\"autoDisplayFirst\", false);\n  }\n}\nconst _c16 = function () {\n  return {\n    field: \"Occupation\"\n  };\n};\nfunction ClaimSectionComponent_small_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 41);\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c16));\n  }\n}\nfunction ClaimSectionComponent_ng_template_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵtextInterpolate1(\"\\n                            \", ctx_r6.getOccupationDesc(ctx_r6.occupationList, ctx_r6.claimForm == null ? null : (tmp_0_0 = ctx_r6.claimForm.get(\"occupation\")) == null ? null : tmp_0_0.value), \"\\n                        \");\n  }\n}\nfunction ClaimSectionComponent_ng_container_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ClaimSectionComponent_ng_template_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                    \");\n  }\n}\nfunction ClaimSectionComponent_ng_template_49_div_1_small_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 63);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClaimSectionComponent_ng_template_49_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelement(2, \"input\", 61);\n    i0.ɵɵtext(3, \"\\n                            \");\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵtemplate(5, ClaimSectionComponent_ng_template_49_div_1_small_5_Template, 2, 0, \"small\", 62);\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r64 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r64.claimForm.get(\"otherOccupDesc\").hasError(\"required\"));\n  }\n}\nfunction ClaimSectionComponent_ng_template_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                        \");\n    i0.ɵɵtemplate(1, ClaimSectionComponent_ng_template_49_div_1_Template, 7, 1, \"div\", 60);\n    i0.ɵɵtext(2, \"\\n                    \");\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    const _r12 = i0.ɵɵreference(53);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.hasValidAuthorityAndStation() && !ctx_r11.readOnly)(\"ngIfElse\", _r12);\n  }\n}\nfunction ClaimSectionComponent_ng_template_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\"\\n                        \", ctx_r13.claimForm.get(\"otherOccupDesc\").value, \"\\n                    \");\n  }\n}\nfunction ClaimSectionComponent_div_57_input_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r71 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 67);\n    i0.ɵɵlistener(\"blur\", function ClaimSectionComponent_div_57_input_7_Template_input_blur_0_listener() {\n      i0.ɵɵrestoreView(_r71);\n      const ctx_r70 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r70.setUpperCase(\"company\"));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(2, _c15));\n  }\n}\nconst _c17 = function () {\n  return {\n    field: \"Company\"\n  };\n};\nfunction ClaimSectionComponent_div_57_small_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"small\", 41);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c17));\n  }\n}\nfunction ClaimSectionComponent_div_57_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r69 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵtextInterpolate1(\"\\n                            \", ctx_r69.claimForm == null ? null : (tmp_0_0 = ctx_r69.claimForm.get(\"company\")) == null ? null : tmp_0_0.value, \"\\n                        \");\n  }\n}\nfunction ClaimSectionComponent_div_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵelementStart(2, \"label\", 64);\n    i0.ɵɵtext(3, \"Company:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                    \");\n    i0.ɵɵelementStart(5, \"div\", 10);\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵtemplate(7, ClaimSectionComponent_div_57_input_7_Template, 1, 3, \"input\", 65);\n    i0.ɵɵtext(8, \"\\n                        \");\n    i0.ɵɵtemplate(9, ClaimSectionComponent_div_57_small_9_Template, 1, 2, \"small\", 12);\n    i0.ɵɵtext(10, \"\\n                        \");\n    i0.ɵɵtemplate(11, ClaimSectionComponent_div_57_ng_template_11_Template, 1, 1, \"ng-template\", null, 66, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(13, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r68 = i0.ɵɵreference(12);\n    const ctx_r14 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r14.hasHistoricalPendApproval && ctx_r14.hasValidAuthorityAndStation() && !ctx_r14.readOnly)(\"ngIfElse\", _r68);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r14.claimForm == null ? null : (tmp_2_0 = ctx_r14.claimForm.get(\"company\")) == null ? null : tmp_2_0.hasError(\"required\")) && (ctx_r14.claimForm == null ? null : (tmp_2_0 = ctx_r14.claimForm.get(\"company\")) == null ? null : tmp_2_0.touched));\n  }\n}\nfunction ClaimSectionComponent_p_calendar_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-calendar\", 68);\n  }\n  if (rf & 2) {\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c1));\n    i0.ɵɵproperty(\"showIcon\", false);\n  }\n}\nconst _c18 = function () {\n  return {\n    field: \"Commencement Date\"\n  };\n};\nfunction ClaimSectionComponent_small_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"small\", 41);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c18));\n  }\n}\nfunction ClaimSectionComponent_ng_template_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵtextInterpolate1(\"\\n                            \", ctx_r18.dateUtilsService.convertDateToStr(ctx_r18.claimForm == null ? null : (tmp_0_0 = ctx_r18.claimForm.get(\"commencementDte\")) == null ? null : tmp_0_0.value, ctx_r18.dateFormat), \"\\n                        \");\n  }\n}\nconst _c19 = function () {\n  return {\n    \"width\": \"100%\",\n    \"display\": \"flex\"\n  };\n};\nfunction ClaimSectionComponent_div_75_p_calendar_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-calendar\", 72);\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r72 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"showIcon\", false)(\"inputStyle\", i0.ɵɵpureFunction0(5, _c19))(\"minDate\", ctx_r72.minRestDate)(\"maxDate\", ctx_r72.maxRestDate)(\"readonlyInput\", true);\n  }\n}\nconst _c20 = function () {\n  return {\n    field: \"Rest Day\"\n  };\n};\nfunction ClaimSectionComponent_div_75_small_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"small\", 41);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c20));\n  }\n}\nfunction ClaimSectionComponent_div_75_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r75 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵtextInterpolate1(\"\\n                            \", ctx_r75.getDateArrayLabel(ctx_r75.claimForm == null ? null : (tmp_0_0 = ctx_r75.claimForm.get(\"restDay\")) == null ? null : tmp_0_0.value), \"\\n                        \");\n  }\n}\nfunction ClaimSectionComponent_div_75_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵelementStart(2, \"label\", 69);\n    i0.ɵɵtext(3, \"Rest Day:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                    \");\n    i0.ɵɵelementStart(5, \"div\", 10);\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵtemplate(7, ClaimSectionComponent_div_75_p_calendar_7_Template, 2, 6, \"p-calendar\", 70);\n    i0.ɵɵtext(8, \"\\n                        \");\n    i0.ɵɵtemplate(9, ClaimSectionComponent_div_75_small_9_Template, 1, 2, \"small\", 12);\n    i0.ɵɵtext(10, \"\\n                        \");\n    i0.ɵɵtemplate(11, ClaimSectionComponent_div_75_ng_template_11_Template, 1, 1, \"ng-template\", null, 71, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(13, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r74 = i0.ɵɵreference(12);\n    const ctx_r19 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r19.hasValidAuthorityAndStation() && !ctx_r19.readOnly)(\"ngIfElse\", _r74);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r19.claimForm == null ? null : (tmp_2_0 = ctx_r19.claimForm.get(\"restDay\")) == null ? null : tmp_2_0.hasError(\"required\"));\n  }\n}\nclass ClaimSectionComponent {\n  constructor(formBuilder, dateUtilsService, seClaimService, toastService, claimService, route, dialogService, codeService, ns2Http, router, publicHolidayService, accountService) {\n    this.formBuilder = formBuilder;\n    this.dateUtilsService = dateUtilsService;\n    this.seClaimService = seClaimService;\n    this.toastService = toastService;\n    this.claimService = claimService;\n    this.route = route;\n    this.dialogService = dialogService;\n    this.codeService = codeService;\n    this.ns2Http = ns2Http;\n    this.router = router;\n    this.publicHolidayService = publicHolidayService;\n    this.accountService = accountService;\n    this.seHardCopyDetails = {};\n    this.selectedChange = new core_1.EventEmitter();\n    this.hasHistoricalPendApproval = false;\n    this.PEND_APPROVAL_STATUS = \"PAP\";\n    this.currHardCopyDetails = {};\n    this.selectedRows = [];\n    this.selectAll = false;\n    this.totalRecords = 0;\n    this.outsideCurYr = false;\n    this.suppDocList = [];\n    this.pageData = {\n      currentPage: 0\n    };\n    this.pageSize = 10;\n    this.dateFormat = \"DD-MM-YYYY\";\n    this.SOLE_PROP_PARTNER_CODES = ['10', '20', '30', '40', '50', '60', '70', '80', '90'];\n    this.minRestDate = new Date();\n    this.maxRestDate = new Date();\n    this.altSaturdayList = [];\n    this.trgStartDteEvent = new core_1.EventEmitter();\n    this.claimForm = this.formBuilder.group({\n      trgStartDte: new forms_1.FormControl('', forms_1.Validators.required),\n      trgEndDte: new forms_1.FormControl('', forms_1.Validators.required),\n      workStartTime: new forms_1.FormControl('0001', null),\n      workEndTime: new forms_1.FormControl('2359', null),\n      occupation: new forms_1.FormControl('', forms_1.Validators.required),\n      otherOccupDesc: new forms_1.FormControl('', null),\n      company: new forms_1.FormControl('', [forms_1.Validators.required]),\n      restDay: new forms_1.FormControl([], null),\n      commencementDte: new forms_1.FormControl(null, forms_1.Validators.required),\n      suppDocFilesFormArray: this.formBuilder.array([])\n    }, {\n      validators: [date_validator_directive_1.DateValidator.dateLessThan('trgStartDte', 'trgEndDte'), date_validator_directive_1.DateValidator.dateRangeMoreThan('trgStartDte', 'trgEndDte', 60), common_validator_directive_1.CommonValidator.mustNotEqualValidator('workStartTime', 'workEndTime')]\n    });\n    this.overlappingClaims = \"\";\n    this.claimOption = \"\";\n    this.saveClaimSectionEvent = new core_1.EventEmitter();\n    this.claimJson = claim_json_1.default;\n  }\n  ngOnInit() {\n    this.claimSuppDoc.mainView = false;\n  }\n  //always checks for changes including start\n  ngAfterViewChecked() {\n    const claimItemList = this.itemDetailsSection?.itemForm?.get('otherSEItemArr');\n    if (this.currHardCopyDetails?.headerDto?.claimOption !== '2') {\n      if (claimItemList?.length > 0) {\n        if (claimItemList?.controls.filter(x => x.get('formulaCode').value === '15a').length > 0) {\n          this.claimForm.get('restDay').setValidators([forms_1.Validators.required]);\n          this.claimForm.get('restDay').updateValueAndValidity();\n        } else {\n          this.claimForm.get('restDay').clearValidators();\n          this.claimForm.get('restDay').updateValueAndValidity();\n        }\n      }\n    }\n  }\n  get suppDocFilesFormArray() {\n    return this.claimForm?.get('suppDocFilesFormArray');\n  }\n  isNotEmpty(obj) {\n    return obj !== undefined && obj !== null && obj !== \"\";\n  }\n  setConditionalValidationForOtherOccupDesc() {\n    if (this.isNotEmpty(this.claimForm.get('occupation').value) && this.claimForm.get('occupation')?.value === '990') {\n      this.claimForm.get('otherOccupDesc')?.setValidators([forms_1.Validators.required]);\n      this.claimForm.get('otherOccupDesc').markAsTouched();\n    } else {\n      this.claimForm.controls['otherOccupDesc'].setValidators(null);\n      this.claimForm.controls['otherOccupDesc'].setErrors(null);\n    }\n  }\n  // getSuppDocFilesData(event: any):void{\n  //   this.lastTableLazyLoadEvent = event;\n  //   this.loading = true;\n  //   this.pageSize = event.rows;\n  //   if(this.currHardCopyDetails?.headerDto?.caseId){\n  //     setTimeout(() => {\n  //     //if there is caseId, fetch from db instead\n  //     const options = this.ns2Http.convertLazyEvent(event, this.pageData, this.pageSize);\n  //     options.params = options.params.append('caseId', this.currHardCopyDetails?.headerDto?.caseId);\n  //     this.claimService.retrieveSuppDoc(options).subscribe(resp => {\n  //       if (resp.body.data) {\n  //         this.suppDocList = resp.body.data.dtoList;\n  //         this.totalRecords = this.suppDocList.length;\n  //       }\n  //     });\n  //   });\n  //   }\n  //   this.loading = false;\n  // }\n  getDay(date) {\n    return (0, moment_1.default)(date).format('ddd');\n  }\n  formatTime(time) {\n    let rslt = \"\";\n    if ((0, moment_1.default)(time, ['HH:mm']).isValid()) {\n      rslt = (0, moment_1.default)(time, ['HH:mm']).format('hh:mm A');\n    }\n    return rslt;\n  }\n  loadCodes(codeType, codeId) {\n    this.codeService.get(codeType, codeId).subscribe(code => {\n      this.claimOption = code?.label['en-US'];\n    });\n  }\n  ngOnChanges(changes) {\n    console.log(\"changes from claim section\", changes);\n    if (changes['seHardCopyDetails']?.currentValue) {\n      this.retrieveOccupationList();\n      this.currHardCopyDetails = changes['seHardCopyDetails'].currentValue;\n      this.loadCodes('claim_option_long', this.currHardCopyDetails?.headerDto?.claimOption);\n      console.log('seHard inside', this.currHardCopyDetails);\n      this.patchFormValues();\n      // this.claimForm.valueChanges.subscribe(() => {\n      //   console.log(\"valuechange claim\");\n      //   this.saveSEClaimRequest.claimSectionInd = true;\n      // });\n      this.params = {\n        nric: this.seHardCopyDetails?.headerDto?.nsManNric,\n        name: this.seHardCopyDetails?.headerDto?.nsManName,\n        caseId: this.seHardCopyDetails?.headerDto?.caseId,\n        claimId: this.seHardCopyDetails?.claimId\n      };\n      console.log(\"the params\", this.params);\n      this.subscribeToClaimFormChanges();\n      this.getByItemStatusHistorical();\n      //initialize restday\n      // this.initRestDay();\n    }\n  }\n\n  subscribeToClaimFormChanges() {\n    this.setConditionalValidationForWorkHour();\n    this.claimForm.valueChanges.subscribe(change => {\n      this.setConditionalValidationForOtherOccupDesc();\n      this.onBlurTrgStartEndDt();\n      this.saveSEClaimRequest.claimSectionInd = true;\n    });\n    this.claimForm.get('trgStartDte').valueChanges.subscribe(x => {\n      if (this.claimForm.get('trgStartDte').value) {\n        const year = this.claimForm.get('trgStartDte').value?.getFullYear();\n        this.validateHasHoliday(year, this.claimForm.get('trgStartDte'));\n        this.setConditionalValidationForWorkHour();\n        console.log(\"trg start date has been changed\", this.currHardCopyDetails.trgStartDte);\n        this.currHardCopyDetails.trgStartDte = this.dateUtilsService.convertDateToStr(x, this.dateFormat);\n        this.initRestDay();\n      }\n    });\n    this.claimForm.get('trgEndDte').valueChanges.subscribe(x => {\n      if (this.claimForm.get('trgEndDte').value) {\n        const year = this.claimForm.get('trgEndDte').value?.getFullYear();\n        this.validateHasHoliday(year, this.claimForm.get('trgEndDte'));\n        this.setConditionalValidationForWorkHour();\n        this.currHardCopyDetails.trgEndDte = this.dateUtilsService.convertDateToStr(x, this.dateFormat);\n        this.initRestDay();\n      }\n    });\n    this.claimForm.get('commencementDte').valueChanges.subscribe(x => {\n      console.log(\"commence changes\", x);\n      this.currHardCopyDetails.commencementDte = this.dateUtilsService.convertDateToStr(x, this.dateFormat);\n    });\n    this.claimForm.get('occupation').valueChanges.subscribe(x => {\n      this.currHardCopyDetails.occupationCode = x;\n    });\n    this.claimForm.get('otherOccupDesc').valueChanges.subscribe(x => {\n      this.currHardCopyDetails.otherOccupationDesc = x;\n    });\n    this.claimForm.get('company').valueChanges.subscribe(x => {\n      this.currHardCopyDetails.coyName = x;\n    });\n    this.claimForm.get('workStartTime').valueChanges.subscribe(x => {\n      this.currHardCopyDetails.workStartTime = x;\n    });\n    this.claimForm.get('workEndTime').valueChanges.subscribe(x => {\n      this.currHardCopyDetails.workEndTime = x;\n    });\n    this.claimForm.get('restDay').valueChanges.subscribe(x => {\n      this.currHardCopyDetails.restDayList = x?.map(ea => {\n        return this.dateUtilsService.convertDateToStr(ea, \"DD-MM-YYYY\");\n      });\n    });\n  }\n  initRestDay() {\n    this.minRestDate = (0, moment_1.default)(this.claimForm.get('trgStartDte').value).startOf('month').toDate();\n    console.log(\"the min rest\", this.minRestDate);\n    this.maxRestDate = (0, moment_1.default)(this.claimForm.get('trgEndDte').value).endOf('month').toDate();\n  }\n  // setConditionalValidationForWorkHour(): void{\n  //   if(!this.isEmpty(this.claimForm.get('trgStartDte').value) && !this.isEmpty(this.claimForm.get('trgEndDte').value)\n  //     && this.dateUtilsService.isEquals(this.claimForm.get('trgStartDte')?.value, this.claimForm.get('trgEndDte')?.value)){\n  //       this.claimForm.get('workStartTime')?.setValidators([Validators.required,TimeValidator.wrkHourValidator()]);\n  //         this.claimForm.get('workEndTime')?.setValidators([Validators.required,TimeValidator.wrkHourValidator()]);\n  //         this.claimForm.get('workStartTime').markAsTouched();\n  //         this.claimForm.get('workEndTime').markAsTouched();\n  //         this.claimForm.addValidators([\n  //             CommonValidator.mustNotEqualValidator('workStartTime', 'workEndTime'),\n  //           ]\n  //         );\n  //   } else {\n  //     this.claimForm.controls['workStartTime'].clearValidators();\n  //     this.claimForm.controls['workEndTime'].clearValidators();\n  //     delete this.claimForm.errors['mustNotEqual'];\n  //     this.claimForm.removeValidators(CommonValidator.mustNotEqualValidator('workStartTime', 'workEndTime'));\n  //   }\n  // }\n  setConditionalValidationForWorkHour() {\n    if (this.isTrgSameDay()) {\n      console.log('IS TRG SAME DAY');\n      this.claimForm.get('workStartTime').setValidators([forms_1.Validators.required]);\n      this.claimForm.get('workStartTime').updateValueAndValidity();\n      this.claimForm.get('workEndTime').setValidators([forms_1.Validators.required]);\n      this.claimForm.get('workEndTime').updateValueAndValidity();\n    } else {\n      this.claimForm.get('workStartTime').clearValidators();\n      this.claimForm.get('workStartTime').setValue(null);\n      this.claimForm.get('workStartTime').updateValueAndValidity();\n      this.claimForm.get('workEndTime').clearValidators();\n      this.claimForm.get('workEndTime').setValue(null);\n      this.claimForm.get('workEndTime').updateValueAndValidity();\n    }\n  }\n  isTrgSameDay() {\n    return (0, moment_1.default)(this.claimForm?.get('trgStartDte').value).format('YYYY-MM-DD') === (0, moment_1.default)(this.claimForm?.get('trgEndDte').value).format('YYYY-MM-DD') ? true : false;\n  }\n  isEmpty(input) {\n    return input === null || input === undefined || input === \"\";\n  }\n  isNewPolicy() {\n    const claimStart = this.claimForm.get('trgStartDte').value;\n    const newPolicyDate = this.dateUtilsService.convertStrToDate(nspapp_constants_1.NSPAppConstants.CLAIM_NEW_POLICY_CUT_OFF_DATE, \"DD-MM-YYYY\");\n    return !this.dateUtilsService.isBefore(claimStart, newPolicyDate);\n  }\n  retrieveOccupationList() {\n    this.claimService.retrieveOccupationList(null).subscribe(resp => {\n      if (resp.body.data) {\n        this.occupationList = [];\n        for (const [k, v] of Object.entries(resp.body.data)) {\n          this.occupationList.push({\n            key: k,\n            value: v\n          });\n        }\n        this.claimForm.get('occupation').setValue(this.currHardCopyDetails.occupationCode);\n      }\n    }, error => {\n      console.log(\"error is\" + String(error?.error?.error_desc));\n      this.toastService.error(String(error?.error?.error_desc));\n    });\n  }\n  getOccupationDesc(list, key) {\n    if (key) {\n      return String(list?.find(x => String(x.key) === key)?.value);\n    } else return '';\n  }\n  validateHasHoliday(year, ctrl) {\n    let params = new http_1.HttpParams();\n    params = params.append('year', year);\n    this.publicHolidayService.getHolidayByYear({\n      params\n    }).subscribe(resp => {\n      console.log(\"holiday is\", resp);\n      if (!resp.ok || resp.body.length <= 0) {\n        ctrl.setErrors({\n          'noHoliday': true\n        });\n      }\n    }, error => {\n      console.log(\"error is\" + String(error?.error?.error_desc));\n      this.toastService.error(String(error?.error?.error_desc));\n    });\n  }\n  padLeft(text, padChar, size) {\n    return (String(padChar).repeat(size) + text).substr(size * -1, size);\n  }\n  onBeforeInput(event) {\n    if (event.inputType === \"insertText\" || event.inputType === \"insertFromPaste\") {\n      return /^\\d+$/.test(event.data);\n    }\n    return true;\n  }\n  onBlur(event, controlName) {\n    console.log(event.target.value);\n    if (event.target.value) {\n      this.claimForm.get(controlName).setValue(this.padLeft(event.target.value, \"0\", 4));\n    }\n  }\n  setUpperCase(ctrlName) {\n    this.claimForm?.get(ctrlName)?.setValue(this.claimForm?.get(ctrlName).value.toUpperCase());\n  }\n  saveClaimSection() {\n    //construct save claim section payload\n    // add logic to updated by for claim section if other accordion has been changed\n    const dto = {\n      trgStartDte: this.claimForm.get('trgStartDte')?.value,\n      trgEndDte: this.claimForm.get('trgEndDte')?.value,\n      workStartTime: this.claimForm.get('workStartTime')?.value,\n      workEndTime: this.claimForm.get('workEndTime')?.value,\n      occupationCode: this.claimForm.get('occupation')?.value,\n      otherOccupDesc: this.claimForm.get('otherOccupDesc')?.value,\n      company: this.claimForm.get('company')?.value,\n      restDay: this.claimForm.get('restDay')?.value,\n      commencementDte: this.claimForm.get('commencementDte')?.value\n    };\n    this.saveClaimSectionEvent.emit(dto);\n  }\n  populateRequestWithClaimSectionChanges() {\n    this.saveSEClaimRequest.trgStartDate = this.dateUtilsService.convertDateToStr(this.claimForm.get('trgStartDte').value, \"DD-MM-YYYY\");\n    this.saveSEClaimRequest.trgEndDate = this.dateUtilsService.convertDateToStr(this.claimForm.get('trgEndDte').value, \"DD-MM-YYYY\");\n    this.saveSEClaimRequest.hrWorkStart = this.claimForm.get('workStartTime').value;\n    this.saveSEClaimRequest.hrWorkEnd = this.claimForm.get('workEndTime').value;\n    //TODO: iterate Rest Date to convert to Date[]\n    //this.saveSEClaimRequest.restDayList = this.\n    if (this.claimForm.get('restDay').value.length > 0) {\n      this.saveSEClaimRequest.restDayList = this.claimForm.get('restDay').value.map(x => {\n        return this.dateUtilsService.convertDateToStr(x, \"DD-MM-YYYY\");\n      });\n    }\n    this.saveSEClaimRequest.occupationCode = this.claimForm.get('occupation').value;\n    this.saveSEClaimRequest.otherOccupationDescription = this.claimForm.get('otherOccupDesc').value;\n    this.saveSEClaimRequest.companyName = this.claimForm.get('company').value;\n    this.saveSEClaimRequest.dateCommence = this.dateUtilsService.convertDateToStr(this.claimForm.get('commencementDte').value, \"DD-MM-YYYY\");\n  }\n  getByItemStatusHistorical() {\n    let params = new http_1.HttpParams();\n    params = params.append(\"itemStatus\", this.PEND_APPROVAL_STATUS);\n    params = params.append(\"claimId\", this.seHardCopyDetails?.claimId);\n    this.claimService.getByItemStatusHistorical({\n      params\n    }).subscribe(resp => {\n      if (resp.status === 200 && resp.body.data) {\n        this.hasHistoricalPendApproval = resp.body.data;\n      }\n    }, error => {\n      console.log(\"error is\" + String(error?.error?.error_desc));\n      this.toastService.error(String(error?.error?.error_desc));\n    });\n  }\n  // onChangeRestDay(): void{\n  //   this.restDayEvent.emit(this.claimForm.get('restDay').value);\n  // }\n  onBlurTrgStartEndDt() {\n    this.outsideCurYr = this.fallOutsideCurrentYr(this.claimForm?.get('trgStartDte')?.value) || this.fallOutsideCurrentYr(this.claimForm?.get('trgEndDte')?.value);\n  }\n  onSelectStartDate() {\n    console.log(\"bluring date, \", this.currHardCopyDetails.trgStartDte);\n    this.outsideCurYr = this.fallOutsideCurrentYr(this.claimForm?.get('trgStartDte')?.value) || this.fallOutsideCurrentYr(this.claimForm?.get('trgEndDte')?.value);\n    this.trgStartDteEvent.emit(this.currHardCopyDetails.trgStartDte);\n  }\n  fallOutsideCurrentYr(date) {\n    const curYr = new Date().getFullYear();\n    const inputDate = new Date(date);\n    if (inputDate.getFullYear() < curYr || inputDate.getFullYear() > curYr) {\n      return true;\n    } else return false;\n  }\n  download() {\n    console.log(\"text\");\n  }\n  downloadAll() {\n    console.log(\"text\");\n  }\n  popSuppDoc() {\n    const params2 = {\n      nric: this.seHardCopyDetails?.headerDto?.nsManNric,\n      name: this.seHardCopyDetails?.headerDto?.nsManName,\n      caseId: this.seHardCopyDetails?.headerDto?.caseId,\n      claimId: this.seHardCopyDetails?.claimId\n    };\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/se-claim/view-supporting-doc'], {\n      queryParams: params2\n    }));\n    console.log(url);\n    window.open(url, \"viewSupportingDoc\", 'location=0,menubar=0,status=0,height=1000, width=1500');\n  }\n  onSelectAllChange(event) {\n    const checked = event.checked;\n    if (checked) {\n      this.selectedRows = this.suppDocFilesFormArray.controls;\n      this.selectAll = true;\n    } else {\n      this.selectedRows = [];\n      this.selectAll = false;\n    }\n  }\n  patchFormValues() {\n    if (this.currHardCopyDetails.trgStartDte) {\n      this.claimForm.get('trgStartDte').setValue(this.dateUtilsService.convertStrToDate(this.currHardCopyDetails?.trgStartDte, this.dateFormat));\n    }\n    if (this.currHardCopyDetails.trgEndDte) {\n      this.claimForm.get('trgEndDte').setValue(this.dateUtilsService.convertStrToDate(this.currHardCopyDetails?.trgEndDte, this.dateFormat));\n    }\n    if (this.currHardCopyDetails.trgStartDte && this.currHardCopyDetails.trgEndDte) {\n      this.initRestDay();\n      if (this.currHardCopyDetails.restDayList && this.currHardCopyDetails.restDayList.length > 0) {\n        console.log(\"the fetchedd rest  day list\", this.currHardCopyDetails.restDayList);\n        const restDayList = [];\n        this.currHardCopyDetails.restDayList.forEach(rd => {\n          restDayList.push(this.dateUtilsService.convertStrToDate(rd, \"DD-MM-YYYY\"));\n        });\n        this.claimForm.get('restDay').setValue(restDayList);\n      }\n    }\n    if (this.currHardCopyDetails.commencementDte) {\n      this.claimForm.get('commencementDte').setValue(this.dateUtilsService.convertStrToDate(this.currHardCopyDetails?.commencementDte, this.dateFormat));\n    }\n    if (this.occupationList) {\n      this.claimForm.get('occupation').setValue(this.currHardCopyDetails.occupationCode);\n    }\n    this.claimForm.get('otherOccupDesc').setValue(this.currHardCopyDetails?.otherOccupationDesc);\n    this.claimForm.get('company').setValue(this.currHardCopyDetails?.coyName);\n    this.claimForm.get('workStartTime').setValue(this.currHardCopyDetails?.workStartTime);\n    this.claimForm.get('workEndTime').setValue(this.currHardCopyDetails?.workEndTime);\n    this.claimForm.updateValueAndValidity();\n    console.log(\"the claim form\", this.claimForm.controls);\n  }\n  accordionClick() {\n    this.selectedChange.emit(this.selected);\n  }\n  popUpEnquiryClaim(claimId, claimType) {\n    const params2 = {\n      claimId\n    };\n    // TODO: after enquiry version of the page is done, uncomment and put in the real route\n    // if(claimType === \"S\"){\n    //   const url = this.router.serializeUrl(this.router.createUrlTree(['claim/se-claim/view-latest-owner'],{queryParams: params2}));\n    //   window.open(url, \"enquireSEClaim\", 'location=0,menubar=0,status=0,height=1000, width=1500');\n    // } else if (claimType === \"E\") {\n    //   const url = this.router.serializeUrl(this.router.createUrlTree(['claim/se-claim/view-latest-owner'],{queryParams: params2}));\n    //   window.open(url, \"enquireECClaim\", 'location=0,menubar=0,status=0,height=1000, width=1500');\n    // }\n  }\n\n  isLongPeriod() {\n    if (this.claimForm.get('trgStartDte').value && this.claimForm.get('trgEndDte').value) {\n      const diffDays = this.dateUtilsService.getDaysBetween(this.claimForm.get('trgStartDte').value, this.claimForm.get('trgEndDte').value);\n      return diffDays > 30 && diffDays < 60;\n    } else return false;\n  }\n  isLateClaim() {\n    if (this.claimForm.get('trgStartDte').value) {\n      const claimStart = this.claimForm.get('trgStartDte')?.value;\n      const dateNow = new Date();\n      const threshold = new Date(dateNow.getFullYear() - 1, dateNow.getMonth(), dateNow.getDay());\n      return claimStart < threshold;\n    } else return false;\n  }\n  workHourStartMoreThanEnd() {\n    if (this.claimForm.get('workStartTime').value && this.claimForm.get('workEndTime').value) {\n      return this.claimForm.get('workStartTime').value > this.claimForm.get('workEndTime').value;\n    } else return false;\n  }\n  tester() {\n    console.log(\"claim form\", this.claimForm);\n    console.log(\"occ list form\", this.occupationList);\n    const claimItemList = this.itemDetailsSection.itemForm?.get('otherSEItemArr');\n    // let itxItem = null;\n    if (claimItemList.length > 0) {\n      console.log(\"internally\", claimItemList);\n    }\n  }\n  getDateArrayLabel(dateArr) {\n    if (dateArr) {\n      return dateArr.map(ea => {\n        return this.dateUtilsService.convertDateToStr(ea, this.dateFormat);\n      }).join(\",\");\n    } else return '';\n  }\n  //allows input on need basis\n  hasValidAuthorityAndStation() {\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_VERIFIER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_VERIFICATION) {\n      return true;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_CERTIFICATION) {\n      return false;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_APPROVAL) {\n      return false;\n    }\n    return false;\n  }\n}\nexports.ClaimSectionComponent = ClaimSectionComponent;\nClaimSectionComponent.ɵfac = function ClaimSectionComponent_Factory(t) {\n  return new (t || ClaimSectionComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DateUtilsService), i0.ɵɵdirectiveInject(i3.SEClaimService), i0.ɵɵdirectiveInject(i4.CustomToastService), i0.ɵɵdirectiveInject(i5.ClaimService), i0.ɵɵdirectiveInject(i6.ActivatedRoute), i0.ɵɵdirectiveInject(i7.DialogService), i0.ɵɵdirectiveInject(i8.IcCodeService), i0.ɵɵdirectiveInject(i9.Ns2HttpService), i0.ɵɵdirectiveInject(i6.Router), i0.ɵɵdirectiveInject(i10.PublicHolidayService), i0.ɵɵdirectiveInject(i11.AccountService));\n};\nClaimSectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClaimSectionComponent,\n  selectors: [[\"n2-claim-section\"]],\n  viewQuery: function ClaimSectionComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.claimSuppDoc = _t.first);\n    }\n  },\n  inputs: {\n    seHardCopyDetails: \"seHardCopyDetails\",\n    saveSEClaimRequest: \"saveSEClaimRequest\",\n    station: \"station\",\n    selected: \"selected\",\n    itemDetailsSection: \"itemDetailsSection\",\n    readOnly: \"readOnly\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    trgStartDteEvent: \"trgStartDteEvent\",\n    saveClaimSectionEvent: \"saveClaimSectionEvent\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 90,\n  vars: 18,\n  consts: [[3, \"formGroup\"], [\"multiple\", \"true\", 3, \"selected\", \"selectedChange\", \"click\"], [\"pTemplate\", \"header\"], [1, \"grid\"], [1, \"col-6\"], [\"class\", \"field grid\", 4, \"ngIf\"], [1, \"field\", \"grid\"], [\"for\", \"claimOption\", 1, \"col-2\", \"col-form-label\"], [1, \"col\"], [\"for\", \"occupation\", 1, \"col-2\", \"col-form-label\"], [1, \"col-3\"], [\"id\", \"occupation\", \"formControlName\", \"occupation\", \"optionLabel\", \"value\", \"optionValue\", \"key\", 3, \"options\", \"autoDisplayFirst\", \"style\", 4, \"ngIf\", \"ngIfElse\"], [\"class\", \"p-error\", \"icTranslate\", \"nspay2App.claim.validation.CLM-V001\", 3, \"translateValues\", 4, \"ngIf\"], [\"labelOccupation\", \"\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"emptyOtherOccupDesc\", \"\"], [\"otherOccupDesc\", \"\"], [\"labelOtherOccupDesc\", \"\"], [\"for\", \"commencementDte\", 1, \"col-2\", \"col-form-label\"], [1, \"col-3\", \"input-group\"], [\"id\", \"commencementDte\", \"dateFormat\", \"dd-mm-yy\", \"formControlName\", \"commencementDte\", \"appendTo\", \"body\", \"position\", \"center\", 3, \"showIcon\", \"style\", 4, \"ngIf\", \"ngIfElse\"], [\"labelCommencementDte\", \"\"], [3, \"params\"], [\"claimSuppDoc\", \"\"], [\"pButton\", \"\", \"label\", \"TESTER\", 3, \"click\"], [1, \"grid\", \"col-5\", 2, \"margin\", \"0\", \"padding\", \"0\", 3, \"ngClass\"], [1, \"grid\", \"col-12\", 2, \"margin\", \"0\", \"padding\", \"0\"], [1, \"flex\", \"col-1\", \"align-items-center\", \"pl-1\"], [1, \"flex\", \"col-2\", \"align-items-center\", \"justify-content-center\", \"flex-grow-1\", \"flex-wrap\", \"py-0\", \"input-group\"], [\"id\", \"trgStartDte\", \"dateFormat\", \"dd-mm-yy\", \"formControlName\", \"trgStartDte\", \"appendTo\", \"body\", \"position\", \"center\", 3, \"showIcon\", \"style\", \"inputStyleClass\", \"onSelect\", \"click\", 4, \"ngIf\", \"ngIfElse\"], [\"class\", \"p-error\", \"icTranslate\", \"nspay2App.claim.validation.CLM-V007\", 3, \"translateValues\", 4, \"ngIf\"], [\"labelTrgStartDte\", \"\"], [1, \"col-1\"], [4, \"ngIf\"], [1, \"flex\", \"col-1\", \"align-items-center\", \"justify-content-center\"], [\"id\", \"trgEndDte\", \"dateFormat\", \"dd-mm-yy\", \"formControlName\", \"trgEndDte\", \"appendTo\", \"body\", \"position\", \"center\", 3, \"showIcon\", \"style\", \"inputStyleClass\", \"onSelect\", \"click\", 4, \"ngIf\", \"ngIfElse\"], [\"labelTrgEndDte\", \"\"], [\"class\", \"grid col-12\", 4, \"ngIf\"], [1, \"grid\", \"col-7\", \"align-items-center\", 2, \"margin\", \"0\", \"padding\", \"0\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"trgStartDte\", \"dateFormat\", \"dd-mm-yy\", \"formControlName\", \"trgStartDte\", \"appendTo\", \"body\", \"position\", \"center\", 3, \"showIcon\", \"inputStyleClass\", \"onSelect\", \"click\"], [\"icTranslate\", \"nspay2App.claim.validation.CLM-V001\", 1, \"p-error\", 3, \"translateValues\"], [\"icTranslate\", \"nspay2App.claim.validation.CLM-V007\", 1, \"p-error\", 3, \"translateValues\"], [\"id\", \"trgEndDte\", \"dateFormat\", \"dd-mm-yy\", \"formControlName\", \"trgEndDte\", \"appendTo\", \"body\", \"position\", \"center\", 3, \"showIcon\", \"inputStyleClass\", \"onSelect\", \"click\"], [1, \"grid\", \"col-12\"], [\"icTranslate\", \"nspay2App.claim.validation.CLM-V004\", 1, \"p-error\", 3, \"translateValues\"], [\"icTranslate\", \"nspay2App.claim.validation.CLM-V013\", 1, \"p-error\"], [\"href\", \"javascript:\", 3, \"click\"], [\"for\", \"workStartTime\", 1, \"col-2\", \"col-form-label\"], [\"class\", \"col-2\", 4, \"ngIf\", \"ngIfElse\"], [\"labelWorkStartTime\", \"\"], [1, \"col-2\"], [\"labelWorkEndTime\", \"\"], [\"type\", \"input\", \"pInputText\", \"\", \"formControlName\", \"workStartTime\", \"maxlength\", \"4\", 3, \"beforeinput\", \"blur\"], [\"class\", \"p-error\", \"icTranslate\", \"nspay2App.claim.validation.CLM-V002\", 3, \"translateValues\", 4, \"ngIf\"], [\"icTranslate\", \"nspay2App.claim.validation.CLM-V002\", 1, \"p-error\", 3, \"translateValues\"], [\"type\", \"input\", \"pInputText\", \"\", \"formControlName\", \"workEndTime\", \"maxlength\", \"4\", 3, \"beforeinput\", \"blur\"], [1, \"col-2\", \"col-form-label\"], [\"icTranslate\", \"nspay2App.claim.validation.CLM-V005\", 1, \"p-error\", 3, \"translateValues\"], [\"id\", \"occupation\", \"formControlName\", \"occupation\", \"optionLabel\", \"value\", \"optionValue\", \"key\", 3, \"options\", \"autoDisplayFirst\"], [\"class\", \"col-3\", 4, \"ngIf\", \"ngIfElse\"], [\"type\", \"text\", \"pInputText\", \"\", \"formControlName\", \"otherOccupDesc\", \"id\", \"otherOccupDesc\", \"placeholder\", \"Others Description\", \"maxlength\", \"60\"], [\"class\", \"p-error\", \"icTranslate\", \"nspay2App.claim.validation.CLM-V017\", 4, \"ngIf\"], [\"icTranslate\", \"nspay2App.claim.validation.CLM-V017\", 1, \"p-error\"], [\"for\", \"company\", 1, \"col-2\", \"col-form-label\"], [\"type\", \"text\", \"pInputText\", \"\", \"formControlName\", \"company\", \"id\", \"company\", \"maxlength\", \"80\", 3, \"style\", \"blur\", 4, \"ngIf\", \"ngIfElse\"], [\"labelCompany\", \"\"], [\"type\", \"text\", \"pInputText\", \"\", \"formControlName\", \"company\", \"id\", \"company\", \"maxlength\", \"80\", 3, \"blur\"], [\"id\", \"commencementDte\", \"dateFormat\", \"dd-mm-yy\", \"formControlName\", \"commencementDte\", \"appendTo\", \"body\", \"position\", \"center\", 3, \"showIcon\"], [\"for\", \"restDay\", 1, \"col-2\", \"col-form-label\"], [\"id\", \"restDay\", \"dateFormat\", \"dd-mm-yy\", \"appendTo\", \"body\", \"formControlName\", \"restDay\", \"selectionMode\", \"multiple\", 3, \"showIcon\", \"inputStyle\", \"minDate\", \"maxDate\", \"readonlyInput\", 4, \"ngIf\", \"ngIfElse\"], [\"labelRestDay\", \"\"], [\"id\", \"restDay\", \"dateFormat\", \"dd-mm-yy\", \"appendTo\", \"body\", \"formControlName\", \"restDay\", \"selectionMode\", \"multiple\", 3, \"showIcon\", \"inputStyle\", \"minDate\", \"maxDate\", \"readonlyInput\"]],\n  template: function ClaimSectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \"\\n\\n\");\n      i0.ɵɵelementStart(1, \"form\", 0);\n      i0.ɵɵtext(2, \"\\n    \");\n      i0.ɵɵelementStart(3, \"p-accordionTab\", 1);\n      i0.ɵɵlistener(\"selectedChange\", function ClaimSectionComponent_Template_p_accordionTab_selectedChange_3_listener($event) {\n        return ctx.selected = $event;\n      })(\"click\", function ClaimSectionComponent_Template_p_accordionTab_click_3_listener() {\n        return ctx.accordionClick();\n      });\n      i0.ɵɵtext(4, \"\\n        \");\n      i0.ɵɵtemplate(5, ClaimSectionComponent_ng_template_5_Template, 63, 23, \"ng-template\", 2);\n      i0.ɵɵtext(6, \"\\n        \");\n      i0.ɵɵtext(7, \"\\n        \");\n      i0.ɵɵtext(8, \"\\n\\n\\n        \");\n      i0.ɵɵelementStart(9, \"div\", 3);\n      i0.ɵɵtext(10, \"\\n            \");\n      i0.ɵɵtext(11, \"\\n            \");\n      i0.ɵɵelementStart(12, \"div\", 4);\n      i0.ɵɵtext(13, \"\\n                \");\n      i0.ɵɵtemplate(14, ClaimSectionComponent_div_14_Template, 28, 15, \"div\", 5);\n      i0.ɵɵtext(15, \"\\n                \");\n      i0.ɵɵtemplate(16, ClaimSectionComponent_div_16_Template, 9, 2, \"div\", 5);\n      i0.ɵɵtext(17, \"\\n                \");\n      i0.ɵɵelementStart(18, \"div\", 6);\n      i0.ɵɵtext(19, \"\\n                    \");\n      i0.ɵɵelementStart(20, \"label\", 7);\n      i0.ɵɵtext(21, \"Claim Option:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(22, \"\\n                    \");\n      i0.ɵɵelementStart(23, \"div\", 8);\n      i0.ɵɵtext(24);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(26, \"\\n                \");\n      i0.ɵɵelementStart(27, \"div\", 6);\n      i0.ɵɵtext(28, \"\\n                    \");\n      i0.ɵɵelementStart(29, \"label\", 9);\n      i0.ɵɵtext(30, \"Occupation:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(31, \"\\n                    \");\n      i0.ɵɵelementStart(32, \"div\", 10);\n      i0.ɵɵtext(33, \"\\n                        \");\n      i0.ɵɵtemplate(34, ClaimSectionComponent_p_dropdown_34_Template, 1, 5, \"p-dropdown\", 11);\n      i0.ɵɵtext(35, \"\\n                            \");\n      i0.ɵɵelement(36, \"div\");\n      i0.ɵɵtext(37, \"\\n                            \");\n      i0.ɵɵtemplate(38, ClaimSectionComponent_small_38_Template, 2, 2, \"small\", 12);\n      i0.ɵɵtext(39, \"\\n                        \");\n      i0.ɵɵtemplate(40, ClaimSectionComponent_ng_template_40_Template, 1, 1, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtext(42, \"\\n                    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(43, \"\\n                    \");\n      i0.ɵɵtemplate(44, ClaimSectionComponent_ng_container_44_Template, 2, 0, \"ng-container\", 14);\n      i0.ɵɵtext(45, \"\\n                    \");\n      i0.ɵɵtemplate(46, ClaimSectionComponent_ng_template_46_Template, 1, 0, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtext(48, \"\\n                    \");\n      i0.ɵɵtemplate(49, ClaimSectionComponent_ng_template_49_Template, 3, 2, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtext(51, \"\\n                    \");\n      i0.ɵɵtemplate(52, ClaimSectionComponent_ng_template_52_Template, 1, 1, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtext(54, \"\\n                    \\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(55, \"\\n                \");\n      i0.ɵɵtext(56, \"\\n                \");\n      i0.ɵɵtemplate(57, ClaimSectionComponent_div_57_Template, 15, 3, \"div\", 5);\n      i0.ɵɵtext(58, \"\\n                \");\n      i0.ɵɵelementStart(59, \"div\", 6);\n      i0.ɵɵtext(60, \"\\n                    \");\n      i0.ɵɵelementStart(61, \"label\", 18);\n      i0.ɵɵtext(62, \"Commencement Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(63, \"\\n                    \");\n      i0.ɵɵelementStart(64, \"div\", 19);\n      i0.ɵɵtext(65, \"\\n                        \");\n      i0.ɵɵtemplate(66, ClaimSectionComponent_p_calendar_66_Template, 1, 4, \"p-calendar\", 20);\n      i0.ɵɵtext(67, \"\\n                        \");\n      i0.ɵɵtemplate(68, ClaimSectionComponent_small_68_Template, 1, 2, \"small\", 12);\n      i0.ɵɵtext(69, \"\\n                        \");\n      i0.ɵɵtemplate(70, ClaimSectionComponent_ng_template_70_Template, 1, 1, \"ng-template\", null, 21, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtext(72, \"\\n                    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(73, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(74, \"\\n                \");\n      i0.ɵɵtemplate(75, ClaimSectionComponent_div_75_Template, 15, 3, \"div\", 5);\n      i0.ɵɵtext(76, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(77, \"\\n           \\n\\n             \");\n      i0.ɵɵtext(78, \"\\n             \");\n      i0.ɵɵelementStart(79, \"div\", 4);\n      i0.ɵɵtext(80, \"\\n                \");\n      i0.ɵɵelement(81, \"n2-claim-supp-doc\", 22, 23);\n      i0.ɵɵtext(83, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(84, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(85, \"\\n        \");\n      i0.ɵɵelementStart(86, \"button\", 24);\n      i0.ɵɵlistener(\"click\", function ClaimSectionComponent_Template_button_click_86_listener() {\n        return ctx.tester();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(87, \"\\n\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(88, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(89, \"\\n\");\n    }\n    if (rf & 2) {\n      const _r5 = i0.ɵɵreference(41);\n      const _r8 = i0.ɵɵreference(47);\n      const _r10 = i0.ɵɵreference(50);\n      const _r17 = i0.ɵɵreference(71);\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_8_0;\n      let tmp_9_0;\n      let tmp_15_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.claimForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"selected\", true)(\"selected\", ctx.selected);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ctx.dateUtilsService.isEquals((tmp_3_0 = ctx.claimForm.get(\"trgStartDte\")) == null ? null : tmp_3_0.value, (tmp_3_0 = ctx.claimForm.get(\"trgEndDte\")) == null ? null : tmp_3_0.value));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (ctx.claimForm == null ? null : ctx.claimForm.errors == null ? null : ctx.claimForm.errors[\"mustNotEqual\"]) && !ctx.isEmpty((tmp_4_0 = ctx.claimForm.get(\"workStartTime\")) == null ? null : tmp_4_0.value) && !ctx.isEmpty((tmp_4_0 = ctx.claimForm.get(\"workEndTime\")) == null ? null : tmp_4_0.value));\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate1(\"\\n                       \", ctx.claimOption, \"\\n                    \");\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasValidAuthorityAndStation() && !ctx.readOnly)(\"ngIfElse\", _r5);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_8_0 = ctx.claimForm.get(\"occupation\")) == null ? null : tmp_8_0.hasError(\"required\")) && ((tmp_8_0 = ctx.claimForm.get(\"occupation\")) == null ? null : tmp_8_0.touched));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_9_0 = ctx.claimForm.get(\"occupation\")) == null ? null : tmp_9_0.value) !== \"990\")(\"ngIfThen\", _r8)(\"ngIfElse\", _r10);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngIf\", (ctx.currHardCopyDetails == null ? null : ctx.currHardCopyDetails.headerDto == null ? null : ctx.currHardCopyDetails.headerDto.claimOption) !== \"1\" || (ctx.currHardCopyDetails == null ? null : ctx.currHardCopyDetails.headerDto == null ? null : ctx.currHardCopyDetails.headerDto.claimOption) !== \"3\" || (ctx.currHardCopyDetails == null ? null : ctx.currHardCopyDetails.headerDto == null ? null : ctx.currHardCopyDetails.headerDto.claimOption) !== \"2\" && !ctx.isNewPolicy());\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasValidAuthorityAndStation() && !ctx.readOnly)(\"ngIfElse\", _r17);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (ctx.claimForm == null ? null : (tmp_15_0 = ctx.claimForm.get(\"commencementDte\")) == null ? null : tmp_15_0.hasError(\"required\")) && (ctx.claimForm == null ? null : (tmp_15_0 = ctx.claimForm.get(\"commencementDte\")) == null ? null : tmp_15_0.touched));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", (ctx.currHardCopyDetails == null ? null : ctx.currHardCopyDetails.headerDto == null ? null : ctx.currHardCopyDetails.headerDto.claimOption) !== \"2\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"params\", ctx.params);\n    }\n  },\n  dependencies: [i12.NgClass, i12.NgForOf, i12.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i13.PrimeTemplate, i14.ButtonDirective, i15.Dropdown, i16.InputText, i17.Calendar, i18.TranslateDirective, i19.ClaimSuppDocComponent, i20.AccordionTab, i12.SlicePipe],\n  styles: [\"[_nghost-%COMP%]     .warning-date {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsYWltLXNlY3Rpb24uY29tcG9uZW50LnNjc3MiLCIuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxccHJvamVjdHMlMjAyXFxuc3BheWlpYXBwXFxzcmNcXG1haW5cXHdlYmFwcFxcYXBwXFxjbGFpbVxcc2UtY2xhaW1cXHNlLWNsYWltLXZlcmlmaWNhdGlvblxcY2xhaW0tc2VjdGlvblxcY2xhaW0tc2VjdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7QUNDRiIsImZpbGUiOiJjbGFpbS1zZWN0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwICAud2FybmluZy1kYXRle1xyXG4gIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcblxyXG4iLCI6aG9zdCA6Om5nLWRlZXAgLndhcm5pbmctZGF0ZSB7XG4gIGNvbG9yOiByZWQ7XG59Il19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvY2xhaW0vc2UtY2xhaW0vc2UtY2xhaW0tdmVyaWZpY2F0aW9uL2NsYWltLXNlY3Rpb24vY2xhaW0tc2VjdGlvbi5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uL3Byb2plY3RzJTIwMi9uc3BheWlpYXBwL3NyYy9tYWluL3dlYmFwcC9hcHAvY2xhaW0vc2UtY2xhaW0vc2UtY2xhaW0tdmVyaWZpY2F0aW9uL2NsYWltLXNlY3Rpb24vY2xhaW0tc2VjdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7QUNDRjtBRENBLGdwQkFBZ3BCIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwICAud2FybmluZy1kYXRle1xyXG4gIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcblxyXG4iLCI6aG9zdCA6Om5nLWRlZXAgLndhcm5pbmctZGF0ZSB7XG4gIGNvbG9yOiByZWQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","$event","ctx_r44","ClaimSectionComponent","constructor","formBuilder","dateUtilsService","seClaimService","toastService","claimService","route","dialogService","codeService","ns2Http","router","publicHolidayService","accountService","core_1","currentPage","Date","group","trgStartDte","forms_1","required","trgEndDte","workStartTime","workEndTime","occupation","otherOccupDesc","company","restDay","commencementDte","suppDocFilesFormArray","array","validators","date_validator_directive_1","dateLessThan","dateRangeMoreThan","common_validator_directive_1","mustNotEqualValidator","claimJson","claim_json_1","ngOnInit","claimSuppDoc","mainView","ngAfterViewChecked","claimItemList","itemDetailsSection","itemForm","get","currHardCopyDetails","headerDto","claimOption","length","controls","filter","x","value","claimForm","setValidators","updateValueAndValidity","clearValidators","isNotEmpty","obj","undefined","setConditionalValidationForOtherOccupDesc","markAsTouched","setErrors","getDay","date","format","formatTime","time","rslt","isValid","loadCodes","codeType","codeId","subscribe","code","label","ngOnChanges","changes","console","log","currentValue","retrieveOccupationList","patchFormValues","params","nric","seHardCopyDetails","nsManNric","name","nsManName","caseId","claimId","subscribeToClaimFormChanges","getByItemStatusHistorical","setConditionalValidationForWorkHour","valueChanges","change","onBlurTrgStartEndDt","saveSEClaimRequest","claimSectionInd","year","getFullYear","validateHasHoliday","convertDateToStr","dateFormat","initRestDay","occupationCode","otherOccupationDesc","coyName","restDayList","map","ea","minRestDate","startOf","toDate","maxRestDate","endOf","isTrgSameDay","setValue","isEmpty","input","isNewPolicy","claimStart","newPolicyDate","convertStrToDate","nspapp_constants_1","CLAIM_NEW_POLICY_CUT_OFF_DATE","isBefore","resp","body","data","occupationList","k","v","Object","entries","push","key","error","String","error_desc","getOccupationDesc","list","find","ctrl","http_1","append","getHolidayByYear","ok","padLeft","text","padChar","size","repeat","substr","onBeforeInput","event","inputType","test","onBlur","controlName","target","setUpperCase","ctrlName","toUpperCase","saveClaimSection","dto","saveClaimSectionEvent","emit","populateRequestWithClaimSectionChanges","trgStartDate","trgEndDate","hrWorkStart","hrWorkEnd","otherOccupationDescription","companyName","dateCommence","PEND_APPROVAL_STATUS","status","hasHistoricalPendApproval","outsideCurYr","fallOutsideCurrentYr","onSelectStartDate","trgStartDteEvent","curYr","inputDate","download","downloadAll","popSuppDoc","params2","url","serializeUrl","createUrlTree","queryParams","window","open","onSelectAllChange","checked","selectedRows","selectAll","forEach","rd","accordionClick","selectedChange","selected","popUpEnquiryClaim","claimType","isLongPeriod","diffDays","getDaysBetween","isLateClaim","dateNow","threshold","getMonth","workHourStartMoreThanEnd","tester","getDateArrayLabel","dateArr","join","hasValidAuthorityAndStation","hasAnyAuthority","nspay2_constants_1","CLAIMS_VERIFIER","station","STATION_VERIFICATION","CLAIMS_APPROVER","STATION_CERTIFICATION","STATION_APPROVAL","exports","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\claim-section\\claim-section.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\claim-section\\claim-section.component.html"],"sourcesContent":["import { HttpParams } from '@angular/common/http';\r\nimport { AfterViewChecked, AfterViewInit, Component, EventEmitter, Input, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SEClaimService } from 'app/claim/se-claim/service/se-claim.service';\r\nimport { ClaimService } from 'app/claim/service/claim.service';\r\nimport { ViewRemarksComponent } from 'app/claim/pop-up/view-remarks/view-remarks.component';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\nimport { CodeView, IcCodeService } from 'app/ng-connect';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { DateValidator } from 'app/shared/validator/date-validator.directive';\r\nimport { TimeValidator } from 'app/shared/validator/time.directive';\r\nimport moment from 'moment';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport {SaveSEClaimRequest} from \"app/claim/se-claim/model/save-se-claim-request.model\";\r\nimport { ClaimSuppDocComponent } from 'app/claim/pop-up/view-supporting-doc/claim-supp-doc/claim-supp-doc.component';\r\nimport { PublicHolidayService } from 'app/administration/black-out-date/public-holiday/service/public-holiday.service';\r\nimport claim from '../../../../../i18n/en/claim.json';\r\nimport { CommonValidator } from 'app/shared/validator/common-validator.directive';\r\nimport { NSPAppConstants } from 'app/shared/constants/nspapp.constants';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { NSPAY2_ROLES, NSPAY2_STATION } from 'app/nspay2.constants';\r\n\r\n@Component({\r\n  selector: 'n2-claim-section',\r\n  templateUrl: './claim-section.component.html',\r\n  styleUrls: ['./claim-section.component.scss']\r\n})\r\nexport class ClaimSectionComponent implements OnInit, AfterViewChecked {\r\n\r\n  @Input() seHardCopyDetails:any = {};\r\n  @Input() saveSEClaimRequest: SaveSEClaimRequest;\r\n  @Input() station: string;\r\n\r\n  @Input() selected:boolean;\r\n  @Output() selectedChange = new EventEmitter<boolean>();\r\n  @Input() itemDetailsSection: any;\r\n  //meant for routing from enquiry\r\n  @Input() readOnly: boolean;\r\n  params: any;\r\n  claimJson: any;\r\n\r\n  hasHistoricalPendApproval = false;\r\n  readonly PEND_APPROVAL_STATUS = \"PAP\";\r\n  currHardCopyDetails: any = {};\r\n  occupationList: any[];\r\n  loading!: boolean;\r\n  public selectedRows: any[] = [];\r\n  selectAll = false;\r\n  totalRecords = 0;\r\n  outsideCurYr = false;\r\n  suppDocList: any[] = [];\r\n  lastTableLazyLoadEvent: LazyLoadEvent;\r\n  pageData: { currentPage: number } = {\r\n    currentPage: 0\r\n  }\r\n  pageSize = 10;\r\n  dateFormat = \"DD-MM-YYYY\";\r\n  SOLE_PROP_PARTNER_CODES = [\r\n    '10', '20', '30', '40', '50', '60', '70', '80', '90'\r\n  ]\r\n  minRestDate: Date = new Date();\r\n  maxRestDate: Date = new Date();\r\n  altSaturdayList: Date[]=[];\r\n\r\n\r\n  @Output() trgStartDteEvent: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n\r\n  claimForm: FormGroup = this.formBuilder.group({\r\n    trgStartDte: new FormControl('', Validators.required),\r\n    trgEndDte: new FormControl('', Validators.required),\r\n    workStartTime: new FormControl('0001', null),\r\n    workEndTime: new FormControl('2359', null),\r\n    occupation:  new FormControl('', Validators.required),\r\n    otherOccupDesc: new FormControl('', null),\r\n    company: new FormControl('', [Validators.required]),\r\n    restDay: new FormControl([], null), //conditional required if formula contains  any 15a in item details section\r\n    commencementDte: new FormControl(null, Validators.required),\r\n    suppDocFilesFormArray: this.formBuilder.array([]),\r\n  }, { validators:[\r\n    DateValidator.dateLessThan('trgStartDte', 'trgEndDte'),\r\n    DateValidator.dateRangeMoreThan('trgStartDte', 'trgEndDte', 60),\r\n    CommonValidator.mustNotEqualValidator('workStartTime', 'workEndTime')\r\n  ]});\r\n\r\n  overlappingClaims = \"\";\r\n  claimOption = \"\";\r\n\r\n  @Output()  saveClaimSectionEvent: EventEmitter<any> = new EventEmitter<any>();\r\n  @ViewChild('claimSuppDoc', {static: true})\r\n  private claimSuppDoc!: ClaimSuppDocComponent;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    public dateUtilsService: DateUtilsService,\r\n    private seClaimService: SEClaimService,\r\n    private toastService: CustomToastService,\r\n    private claimService: ClaimService,\r\n    private route: ActivatedRoute,\r\n    private dialogService: DialogService,\r\n    private codeService: IcCodeService,\r\n    private ns2Http: Ns2HttpService,\r\n    private router: Router,\r\n    private publicHolidayService: PublicHolidayService,\r\n    public accountService: AccountService\r\n  ) {\r\n    this.claimJson = claim;\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.claimSuppDoc.mainView=false;\r\n  }\r\n\r\n  //always checks for changes including start\r\n  ngAfterViewChecked(): void {\r\n    const claimItemList = this.itemDetailsSection?.itemForm?.get('otherSEItemArr') as FormArray;\r\n    if(this.currHardCopyDetails?.headerDto?.claimOption!=='2'){\r\n      if(claimItemList?.length>0){\r\n        if(claimItemList?.controls.filter(x=> x.get('formulaCode').value === '15a').length>0){\r\n          this.claimForm.get('restDay').setValidators([Validators.required]);\r\n          this.claimForm.get('restDay').updateValueAndValidity();\r\n        }else{\r\n          this.claimForm.get('restDay').clearValidators();\r\n          this.claimForm.get('restDay').updateValueAndValidity();\r\n        }\r\n      }\r\n    }\r\n   \r\n  }\r\n\r\n  get suppDocFilesFormArray(): FormArray {\r\n    return this.claimForm?.get('suppDocFilesFormArray') as FormArray\r\n  }\r\n\r\n  isNotEmpty(obj: any): boolean{\r\n    return obj!==undefined && obj!==null && obj!==\"\";\r\n  }\r\n\r\n  setConditionalValidationForOtherOccupDesc(): void{\r\n    if(this.isNotEmpty(this.claimForm.get('occupation').value)\r\n      && this.claimForm.get('occupation')?.value==='990'){\r\n        this.claimForm.get('otherOccupDesc')?.setValidators([Validators.required]);\r\n        this.claimForm.get('otherOccupDesc').markAsTouched();\r\n\r\n    } else {\r\n      this.claimForm.controls['otherOccupDesc'].setValidators(null);\r\n      this.claimForm.controls['otherOccupDesc'].setErrors(null);\r\n    }\r\n  }\r\n\r\n  // getSuppDocFilesData(event: any):void{\r\n  //   this.lastTableLazyLoadEvent = event;\r\n  //   this.loading = true;\r\n  //   this.pageSize = event.rows;\r\n  //   if(this.currHardCopyDetails?.headerDto?.caseId){\r\n  //     setTimeout(() => {\r\n  //     //if there is caseId, fetch from db instead\r\n  //     const options = this.ns2Http.convertLazyEvent(event, this.pageData, this.pageSize);\r\n  //     options.params = options.params.append('caseId', this.currHardCopyDetails?.headerDto?.caseId);\r\n  //     this.claimService.retrieveSuppDoc(options).subscribe(resp => {\r\n  //       if (resp.body.data) {\r\n  //         this.suppDocList = resp.body.data.dtoList;\r\n  //         this.totalRecords = this.suppDocList.length;\r\n  //       }\r\n  //     });\r\n  //   });\r\n  //   }\r\n  //   this.loading = false;\r\n  // }\r\n\r\n  \r\n\r\n\r\n  getDay(date: Date): string{\r\n    return moment(date).format('ddd');\r\n  }\r\n\r\n  formatTime(time: any): string {\r\n    let rslt = \"\";\r\n    if(moment(time,['HH:mm']).isValid()){\r\n      rslt =moment(time,['HH:mm']).format('hh:mm A');\r\n    }\r\n    return rslt;\r\n  }\r\n\r\n  loadCodes(codeType: string, codeId: string): void {\r\n    this.codeService.get(codeType, codeId)\r\n    .subscribe((code: CodeView) => {\r\n      this.claimOption = code?.label['en-US'] as string;\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void{\r\n    console.log(\"changes from claim section\", changes);\r\n    if(changes['seHardCopyDetails']?.currentValue) {\r\n      this.retrieveOccupationList();\r\n\r\n      this.currHardCopyDetails=changes['seHardCopyDetails'].currentValue;\r\n      this.loadCodes('claim_option_long',this.currHardCopyDetails?.headerDto?.claimOption);\r\n      console.log('seHard inside', this.currHardCopyDetails);\r\n      this.patchFormValues();\r\n      // this.claimForm.valueChanges.subscribe(() => {\r\n      //   console.log(\"valuechange claim\");\r\n      //   this.saveSEClaimRequest.claimSectionInd = true;\r\n      // });\r\n      this.params = {\r\n        nric: this.seHardCopyDetails?.headerDto?.nsManNric,\r\n        name: this.seHardCopyDetails?.headerDto?.nsManName,\r\n        caseId: this.seHardCopyDetails?.headerDto?.caseId,\r\n        claimId: this.seHardCopyDetails?.claimId\r\n      }\r\n      console.log(\"the params\", this.params)\r\n      this.subscribeToClaimFormChanges();\r\n      this.getByItemStatusHistorical();\r\n\r\n      //initialize restday\r\n      // this.initRestDay();\r\n\r\n    }\r\n  }\r\n\r\n  \r\n  \r\n\r\n  subscribeToClaimFormChanges() {\r\n    this.setConditionalValidationForWorkHour();\r\n    this.claimForm.valueChanges.subscribe((change:any)=>{\r\n     \r\n      this.setConditionalValidationForOtherOccupDesc();\r\n      this.onBlurTrgStartEndDt();\r\n      this.saveSEClaimRequest.claimSectionInd = true;\r\n\r\n    })\r\n    this.claimForm.get('trgStartDte').valueChanges.subscribe(x => {\r\n      if(this.claimForm.get('trgStartDte').value){\r\n        const year = (this.claimForm.get('trgStartDte').value as Date)?.getFullYear();\r\n        this.validateHasHoliday(year, (this.claimForm.get('trgStartDte')));\r\n        this.setConditionalValidationForWorkHour();\r\n        console.log(\"trg start date has been changed\", this.currHardCopyDetails.trgStartDte)\r\n        this.currHardCopyDetails.trgStartDte = this.dateUtilsService.convertDateToStr(x, this.dateFormat)\r\n        this.initRestDay();\r\n\r\n      }\r\n    });\r\n\r\n    this.claimForm.get('trgEndDte').valueChanges.subscribe(x => {\r\n      if(this.claimForm.get('trgEndDte').value){\r\n        const year = (this.claimForm.get('trgEndDte').value as Date)?.getFullYear();\r\n        this.validateHasHoliday(year, (this.claimForm.get('trgEndDte')));\r\n        this.setConditionalValidationForWorkHour();\r\n        this.currHardCopyDetails.trgEndDte = this.dateUtilsService.convertDateToStr(x, this.dateFormat);\r\n        this.initRestDay();\r\n\r\n      }\r\n\r\n    \r\n    });\r\n\r\n    this.claimForm.get('commencementDte').valueChanges.subscribe(x => {\r\n      console.log(\"commence changes\", x);\r\n      this.currHardCopyDetails.commencementDte = this.dateUtilsService.convertDateToStr(x, this.dateFormat)\r\n    });\r\n\r\n    this.claimForm.get('occupation').valueChanges.subscribe(x => {\r\n      this.currHardCopyDetails.occupationCode = x\r\n    });\r\n    this.claimForm.get('otherOccupDesc').valueChanges.subscribe(x => {\r\n      this.currHardCopyDetails.otherOccupationDesc = x\r\n    });\r\n    this.claimForm.get('company').valueChanges.subscribe(x => {\r\n      this.currHardCopyDetails.coyName = x\r\n    });\r\n    this.claimForm.get('workStartTime').valueChanges.subscribe(x => {\r\n      this.currHardCopyDetails.workStartTime = x\r\n    });\r\n    this.claimForm.get('workEndTime').valueChanges.subscribe(x => {\r\n      this.currHardCopyDetails.workEndTime = x\r\n    });\r\n    (this.claimForm.get('restDay')).valueChanges.subscribe(x => {\r\n      this.currHardCopyDetails.restDayList = x?.map((ea: Date)=>{\r\n        return this.dateUtilsService.convertDateToStr(ea, \"DD-MM-YYYY\");\r\n      })\r\n    });\r\n   \r\n  }\r\n\r\n  initRestDay(): void{\r\n    this.minRestDate = (moment(this.claimForm.get('trgStartDte').value).startOf('month').toDate());\r\n    console.log(\"the min rest\",  this.minRestDate)\r\n    this.maxRestDate = (moment(this.claimForm.get('trgEndDte').value).endOf('month').toDate());\r\n\r\n  }\r\n\r\n  // setConditionalValidationForWorkHour(): void{\r\n  //   if(!this.isEmpty(this.claimForm.get('trgStartDte').value) && !this.isEmpty(this.claimForm.get('trgEndDte').value)\r\n  //     && this.dateUtilsService.isEquals(this.claimForm.get('trgStartDte')?.value, this.claimForm.get('trgEndDte')?.value)){\r\n  //       this.claimForm.get('workStartTime')?.setValidators([Validators.required,TimeValidator.wrkHourValidator()]);\r\n  //         this.claimForm.get('workEndTime')?.setValidators([Validators.required,TimeValidator.wrkHourValidator()]);\r\n  //         this.claimForm.get('workStartTime').markAsTouched();\r\n  //         this.claimForm.get('workEndTime').markAsTouched();\r\n  //         this.claimForm.addValidators([\r\n  //             CommonValidator.mustNotEqualValidator('workStartTime', 'workEndTime'),\r\n  //           ]\r\n  //         );\r\n  //   } else {\r\n  //     this.claimForm.controls['workStartTime'].clearValidators();\r\n  //     this.claimForm.controls['workEndTime'].clearValidators();\r\n  //     delete this.claimForm.errors['mustNotEqual'];\r\n  //     this.claimForm.removeValidators(CommonValidator.mustNotEqualValidator('workStartTime', 'workEndTime'));\r\n\r\n  //   }\r\n  // }\r\n\r\n  setConditionalValidationForWorkHour(): void{\r\n    if (this.isTrgSameDay()) {    \r\n      console.log('IS TRG SAME DAY');\r\n      this.claimForm.get('workStartTime').setValidators([Validators.required]);\r\n      this.claimForm.get('workStartTime').updateValueAndValidity();\r\n      this.claimForm.get('workEndTime').setValidators([Validators.required]);\r\n      this.claimForm.get('workEndTime').updateValueAndValidity();\r\n\r\n    }else{\r\n      this.claimForm.get('workStartTime').clearValidators();\r\n      this.claimForm.get('workStartTime').setValue(null);\r\n      this.claimForm.get('workStartTime').updateValueAndValidity();\r\n      this.claimForm.get('workEndTime').clearValidators();\r\n      this.claimForm.get('workEndTime').setValue(null);\r\n      this.claimForm.get('workEndTime').updateValueAndValidity();\r\n\r\n    }\r\n  }\r\n\r\n  isTrgSameDay(): boolean{\r\n    return moment(this.claimForm?.get('trgStartDte').value).format('YYYY-MM-DD') === moment(this.claimForm?.get('trgEndDte').value).format('YYYY-MM-DD') ? true : false;\r\n\r\n}\r\n\r\n  isEmpty(input: string):boolean{\r\n    return input===null || input===undefined || input === \"\";\r\n  }\r\n\r\n  isNewPolicy(): boolean{\r\n    const claimStart =  this.claimForm.get('trgStartDte').value;\r\n    const newPolicyDate = this.dateUtilsService.convertStrToDate(NSPAppConstants.CLAIM_NEW_POLICY_CUT_OFF_DATE, \"DD-MM-YYYY\");\r\n    return !this.dateUtilsService.isBefore(claimStart, newPolicyDate);\r\n  }\r\n\r\n  retrieveOccupationList(): void{\r\n    this.claimService.retrieveOccupationList(null).subscribe(resp => {\r\n      if (resp.body.data) {\r\n        this.occupationList = [];\r\n        for (const [k, v] of Object.entries(resp.body.data)) {\r\n          this.occupationList.push({\r\n            key: k,\r\n            value: v\r\n          });\r\n        }\r\n        this.claimForm.get('occupation').setValue(this.currHardCopyDetails.occupationCode);\r\n\r\n      }\r\n      },\r\n      (error: any) => {\r\n        console.log(\"error is\" + String(error?.error?.error_desc));\r\n        this.toastService.error(String(error?.error?.error_desc));\r\n      }\r\n    );\r\n  }\r\n\r\n  getOccupationDesc(list: any[],key: string): string{\r\n    if(key){\r\n      return String(list?.find((x:any)=> String(x.key) === key)?.value);\r\n    }else return '';\r\n  }\r\n\r\n  validateHasHoliday(year: number, ctrl: AbstractControl): void{\r\n    let params = new HttpParams();\r\n    params = params.append('year',year);\r\n    this.publicHolidayService.getHolidayByYear({params}).subscribe(resp => {\r\n      console.log(\"holiday is\", resp)\r\n      if (!resp.ok ||  resp.body.length<=0){\r\n        ctrl.setErrors({'noHoliday': true});\r\n      }\r\n\r\n      },\r\n      (error: any) => {\r\n        console.log(\"error is\" + String(error?.error?.error_desc));\r\n        this.toastService.error(String(error?.error?.error_desc));\r\n      }\r\n    );\r\n  }\r\n\r\n  padLeft(text: string, padChar: string, size: number): string {\r\n    return (String(padChar).repeat(size) + text).substr(size * -1, size);\r\n  }\r\n  \r\n  onBeforeInput(event: InputEvent): boolean{\r\n    if(event.inputType === \"insertText\" || event.inputType === \"insertFromPaste\") {\r\n      return /^\\d+$/.test(event.data);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onBlur(event: any, controlName: string): void{\r\n    console.log(event.target.value);\r\n    if(event.target.value) {\r\n      this.claimForm.get(controlName).setValue(this.padLeft(event.target.value, \"0\", 4));\r\n    }\r\n  }\r\n\r\n  setUpperCase(ctrlName: string):void{\r\n    this.claimForm?.get(ctrlName)?.setValue(this.claimForm?.get(ctrlName).value.toUpperCase());\r\n  }\r\n\r\n  saveClaimSection(): void{\r\n    //construct save claim section payload\r\n    // add logic to updated by for claim section if other accordion has been changed\r\n    const dto = {\r\n      trgStartDte: this.claimForm.get('trgStartDte')?.value,\r\n      trgEndDte: this.claimForm.get('trgEndDte')?.value,\r\n      workStartTime: this.claimForm.get('workStartTime')?.value,\r\n      workEndTime: this.claimForm.get('workEndTime')?.value,\r\n      occupationCode: this.claimForm.get('occupation')?.value,\r\n      otherOccupDesc: this.claimForm.get('otherOccupDesc')?.value,\r\n      company: this.claimForm.get('company')?.value,\r\n      restDay: this.claimForm.get('restDay')?.value,\r\n      commencementDte: this.claimForm.get('commencementDte')?.value,\r\n    };\r\n    this.saveClaimSectionEvent.emit(dto);\r\n  }\r\n\r\n  populateRequestWithClaimSectionChanges(): void {\r\n    this.saveSEClaimRequest.trgStartDate = this.dateUtilsService.convertDateToStr(this.claimForm.get('trgStartDte').value, \"DD-MM-YYYY\");\r\n    this.saveSEClaimRequest.trgEndDate = this.dateUtilsService.convertDateToStr(this.claimForm.get('trgEndDte').value, \"DD-MM-YYYY\")\r\n    this.saveSEClaimRequest.hrWorkStart = this.claimForm.get('workStartTime').value;\r\n    this.saveSEClaimRequest.hrWorkEnd = this.claimForm.get('workEndTime').value;\r\n\r\n    //TODO: iterate Rest Date to convert to Date[]\r\n    //this.saveSEClaimRequest.restDayList = this.\r\n    if((this.claimForm.get('restDay').value as Date[]).length>0){\r\n      this.saveSEClaimRequest.restDayList = (this.claimForm.get('restDay').value as Date[]).map((x:Date)=>{\r\n        return this.dateUtilsService.convertDateToStr(x, \"DD-MM-YYYY\");\r\n      });\r\n    }\r\n  \r\n\r\n    this.saveSEClaimRequest.occupationCode = this.claimForm.get('occupation').value;\r\n    this.saveSEClaimRequest.otherOccupationDescription = this.claimForm.get('otherOccupDesc').value;\r\n    this.saveSEClaimRequest.companyName = this.claimForm.get('company').value;\r\n    this.saveSEClaimRequest.dateCommence = this.dateUtilsService.convertDateToStr(this.claimForm.get('commencementDte').value, \"DD-MM-YYYY\");\r\n  }\r\n\r\n  getByItemStatusHistorical(): void{\r\n    let params = new HttpParams();\r\n    params = params.append(\"itemStatus\", this.PEND_APPROVAL_STATUS);\r\n    params = params.append(\"claimId\", this.seHardCopyDetails?.claimId);\r\n\r\n    this.claimService.getByItemStatusHistorical({params}).subscribe((resp:any) => {\r\n      if(resp.status === 200 && resp.body.data){\r\n\r\n        this.hasHistoricalPendApproval = resp.body.data;\r\n       \r\n    }},\r\n    (error: any) => {\r\n      console.log(\"error is\" + String(error?.error?.error_desc));\r\n      this.toastService.error(String(error?.error?.error_desc));\r\n    });\r\n  }\r\n\r\n  // onChangeRestDay(): void{\r\n  //   this.restDayEvent.emit(this.claimForm.get('restDay').value);\r\n  // }\r\n\r\n\r\n  onBlurTrgStartEndDt(): void{\r\n    this.outsideCurYr =  this.fallOutsideCurrentYr(this.claimForm?.get('trgStartDte')?.value)||\r\n    this.fallOutsideCurrentYr(this.claimForm?.get('trgEndDte')?.value);\r\n  }\r\n\r\n  onSelectStartDate(): void{\r\n    console.log(\"bluring date, \", this.currHardCopyDetails.trgStartDte)\r\n    this.outsideCurYr =  this.fallOutsideCurrentYr(this.claimForm?.get('trgStartDte')?.value)||\r\n    this.fallOutsideCurrentYr(this.claimForm?.get('trgEndDte')?.value);\r\n    this.trgStartDteEvent.emit(this.currHardCopyDetails.trgStartDte);\r\n  }\r\n\r\n  fallOutsideCurrentYr(date: any): boolean{\r\n    const curYr = new Date().getFullYear();\r\n    const inputDate = new Date(date);\r\n    if(inputDate.getFullYear()< curYr || inputDate.getFullYear()> curYr){\r\n      return true;\r\n    }else return false;\r\n  }\r\n\r\n\r\n  download(): void{\r\n    console.log(\"text\")\r\n  }\r\n\r\n  downloadAll(): void{\r\n    console.log(\"text\")\r\n  }\r\n\r\n  popSuppDoc(): void{\r\n    const params2 = {\r\n      nric: this.seHardCopyDetails?.headerDto?.nsManNric,\r\n      name: this.seHardCopyDetails?.headerDto?.nsManName,\r\n      caseId: this.seHardCopyDetails?.headerDto?.caseId,\r\n      claimId: this.seHardCopyDetails?.claimId\r\n    }\r\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/se-claim/view-supporting-doc'],{queryParams: params2}));\r\n    console.log(url);\r\n    window.open(url, \"viewSupportingDoc\", 'location=0,menubar=0,status=0,height=1000, width=1500');\r\n  }\r\n\r\n  onSelectAllChange(event: any): void {\r\n    const checked = event.checked;\r\n    if (checked) {\r\n      this.selectedRows = this.suppDocFilesFormArray.controls;\r\n      this.selectAll = true;\r\n    } else {\r\n      this.selectedRows = [];\r\n      this.selectAll = false;\r\n    }\r\n  }\r\n\r\n  patchFormValues():void{\r\n    if(this.currHardCopyDetails.trgStartDte){\r\n      this.claimForm.get('trgStartDte').setValue(this.dateUtilsService.convertStrToDate(this.currHardCopyDetails?.trgStartDte, this.dateFormat));\r\n    }\r\n    if(this.currHardCopyDetails.trgEndDte){\r\n      this.claimForm.get('trgEndDte').setValue(this.dateUtilsService.convertStrToDate(this.currHardCopyDetails?.trgEndDte, this.dateFormat));\r\n    }\r\n    if(this.currHardCopyDetails.trgStartDte && this.currHardCopyDetails.trgEndDte){\r\n      this.initRestDay();\r\n      if(this.currHardCopyDetails.restDayList && this.currHardCopyDetails.restDayList.length>0){\r\n        console.log(\"the fetchedd rest  day list\", this.currHardCopyDetails.restDayList);\r\n        const restDayList:Date[] = [];\r\n        this.currHardCopyDetails.restDayList.forEach( (rd:any)=>{\r\n          restDayList.push(this.dateUtilsService.convertStrToDate(rd, \"DD-MM-YYYY\"));\r\n        })\r\n        this.claimForm.get('restDay').setValue(restDayList);\r\n\r\n      }\r\n    }\r\n\r\n    if(this.currHardCopyDetails.commencementDte){\r\n      this.claimForm.get('commencementDte').setValue(this.dateUtilsService.convertStrToDate(this.currHardCopyDetails?.commencementDte, this.dateFormat));\r\n    }\r\n    if(this.occupationList){\r\n      this.claimForm.get('occupation').setValue(this.currHardCopyDetails.occupationCode);\r\n    }\r\n    this.claimForm.get('otherOccupDesc').setValue(this.currHardCopyDetails?.otherOccupationDesc);\r\n    this.claimForm.get('company').setValue(this.currHardCopyDetails?.coyName);\r\n    this.claimForm.get('workStartTime').setValue(this.currHardCopyDetails?.workStartTime);\r\n    this.claimForm.get('workEndTime').setValue(this.currHardCopyDetails?.workEndTime);\r\n    this.claimForm.updateValueAndValidity();\r\n    console.log(\"the claim form\", this.claimForm.controls);\r\n\r\n  }\r\n\r\n  accordionClick(): void{\r\n    this.selectedChange.emit(this.selected);\r\n  }\r\n\r\n  popUpEnquiryClaim(claimId: string, claimType: string): void{\r\n\r\n    const params2 = {\r\n      claimId\r\n    }\r\n    // TODO: after enquiry version of the page is done, uncomment and put in the real route\r\n    // if(claimType === \"S\"){\r\n    //   const url = this.router.serializeUrl(this.router.createUrlTree(['claim/se-claim/view-latest-owner'],{queryParams: params2}));\r\n    //   window.open(url, \"enquireSEClaim\", 'location=0,menubar=0,status=0,height=1000, width=1500');\r\n    // } else if (claimType === \"E\") {\r\n    //   const url = this.router.serializeUrl(this.router.createUrlTree(['claim/se-claim/view-latest-owner'],{queryParams: params2}));\r\n    //   window.open(url, \"enquireECClaim\", 'location=0,menubar=0,status=0,height=1000, width=1500');\r\n    // }\r\n  }\r\n  \r\n  isLongPeriod():boolean{\r\n    if(this.claimForm.get('trgStartDte').value && this.claimForm.get('trgEndDte').value){\r\n      const diffDays = this.dateUtilsService.getDaysBetween((this.claimForm.get('trgStartDte').value as Date),(this.claimForm.get('trgEndDte').value as Date));\r\n      return diffDays>30 && diffDays<60;\r\n    }else return false;\r\n  }\r\n\r\n  isLateClaim(): boolean {\r\n    if (this.claimForm.get('trgStartDte').value) {\r\n      const claimStart = this.claimForm.get('trgStartDte')?.value;\r\n      const dateNow = new Date();\r\n      const threshold = new Date(dateNow.getFullYear() - 1, dateNow.getMonth(), dateNow.getDay());\r\n      return claimStart < threshold;\r\n    } else return false;\r\n  }\r\n\r\n  workHourStartMoreThanEnd() {\r\n    if (this.claimForm.get('workStartTime').value && this.claimForm.get('workEndTime').value){\r\n        return this.claimForm.get('workStartTime').value > this.claimForm.get('workEndTime').value;\r\n    } else return false;\r\n  }\r\n\r\n  tester(): void{\r\n    console.log(\"claim form\", this.claimForm);\r\n    console.log(\"occ list form\", this.occupationList);\r\n\r\n    const claimItemList = this.itemDetailsSection.itemForm?.get('otherSEItemArr') as FormArray;\r\n    // let itxItem = null;\r\n    if(claimItemList.length>0){\r\n      console.log(\"internally\", claimItemList)\r\n     }\r\n  }\r\n\r\n  getDateArrayLabel(dateArr: Date[]): string{\r\n    if(dateArr){\r\n      return dateArr.map(ea=> {\r\n        return this.dateUtilsService.convertDateToStr(ea, this.dateFormat);\r\n      }).join(\",\");\r\n    }else return '';\r\n    \r\n  }\r\n\r\n  //allows input on need basis\r\n  hasValidAuthorityAndStation(): boolean{\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_VERIFIER) && \r\n      this.station === NSPAY2_STATION.STATION_VERIFICATION){\r\n        return true;\r\n      }\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) && \r\n    this.station === NSPAY2_STATION.STATION_CERTIFICATION) {\r\n      return false;\r\n    }\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) && \r\n    this.station === NSPAY2_STATION.STATION_APPROVAL) {\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n   \r\n\r\n}\r\n","<!-- <p-messages severity=\"warn\" *ngIf = isLongPeriod()>\r\n    <ng-template key=\"CLM-W003\" pTemplate >\r\n        <div class=\"ml-2\">{{ claimJson.nspay2App.claim.warning['CLM-W003'] }}</div>\r\n    </ng-template>\r\n</p-messages>\r\n<p-messages severity=\"warn\" *ngIf = \"dateUtilsService.isAfter(claimForm?.get('commencementDte').value, claimForm?.get('trgStartDte').value)\">\r\n    <ng-template key=\"CLM-W001\" pTemplate >\r\n        <div class=\"ml-2\">{{ claimJson.nspay2App.claim.warning['CLM-W001'] }}</div>\r\n    </ng-template>\r\n</p-messages>\r\n<p-messages severity=\"warn\" *ngIf = \"SOLE_PROP_PARTNER_CODES.includes(claimForm?.get('occupation').value)\">\r\n    <ng-template key=\"CLM-W009\" pTemplate >\r\n        <div class=\"ml-2\">{{ claimJson.nspay2App.claim.warning['CLM-W009'] }}</div>\r\n    </ng-template>\r\n</p-messages> -->\r\n\r\n<form [formGroup]=\"claimForm\" >\r\n    <p-accordionTab [selected]=\"true\" multiple=\"true\" [(selected)]=\"selected\" (click) = \"accordionClick()\">\r\n        <ng-template pTemplate=\"header\" >\r\n            <div class = \"grid col-5\" style = \"margin: 0; padding:0\" [ngClass]=\"this.outsideCurYr? 'warning-date' : null\">\r\n                <div class = \"grid col-12\" style = \"margin: 0; padding:0\">\r\n                    <label class = \"flex col-1 align-items-center pl-1\" [style] = \"{'flex-basis':'100px'}\">Trg Period:</label>\r\n                    <div class=\"flex col-2 align-items-center justify-content-center flex-grow-1 flex-wrap py-0 input-group\">\r\n                        <p-calendar [showIcon]=\"false\" id=\"trgStartDte\"\r\n                        dateFormat=\"dd-mm-yy\"\r\n                        formControlName = \"trgStartDte\" appendTo=\"body\"\r\n                        position='center'\r\n                        [style]=\"{'max-width': '14em'}\"\r\n                        (onSelect)=\"onSelectStartDate()\"\r\n                        [inputStyleClass] = \"this.outsideCurYr? 'warning-date' : null\"\r\n                        (click)=\"$event.stopPropagation()\"\r\n                        *ngIf = \"!hasHistoricalPendApproval && this.hasValidAuthorityAndStation() && !readOnly; else labelTrgStartDte\"\r\n                        ></p-calendar>\r\n                        <!-- <label class= \"ml-2\"  *ngIf = \"this.claimForm.get('trgStartDte').valid\"> ({{this.claimForm.get('trgStartDte').value? this.getDay(claimForm.get('trgStartDte').value): \"   \"}}) </label> -->\r\n                        <small *ngIf=\"claimForm?.get('trgStartDte')?.hasError('required') && claimForm?.get('trgStartDte')?.touched\"\r\n                        class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V001\"\r\n                        [translateValues]=\"{ field: 'Start Date' }\"></small>\r\n                        <small *ngIf=\"claimForm?.get('trgStartDte')?.hasError('noHoliday') && claimForm?.get('trgStartDte')?.touched\"\r\n                        class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V007\"\r\n                        [translateValues]=\"{ dateYear: (claimForm?.get('trgStartDte').value).getFullYear() }\"></small>\r\n                        <ng-template #labelTrgStartDte>\r\n                            {{ dateUtilsService.convertDateToStr(this.claimForm.get('trgStartDte').value, dateFormat) }} \r\n                        </ng-template>\r\n                    </div>\r\n                    <div class=\"col-1\" [style]=\"{'margin-left':'0em','align-items': 'center', 'display':'flex'}\">\r\n                        <label *ngIf=\"claimForm.get('trgStartDte').value\" > ({{this.getDay(claimForm.get('trgStartDte').value)}}) </label>\r\n                    </div>\r\n                    <div class=\"flex col-1 align-items-center justify-content-center\">to</div>\r\n                    <div class=\"flex col-2 align-items-center justify-content-center flex-grow-1 flex-wrap py-0 input-group\">\r\n                        <p-calendar [showIcon]=\"false\" id=\"trgEndDte\"\r\n                        dateFormat=\"dd-mm-yy\"\r\n                        formControlName = \"trgEndDte\" appendTo=\"body\"\r\n                        position='center'\r\n                        [style]=\"{'max-width': '14em'}\"\r\n                        (onSelect)=\"onSelectStartDate()\"\r\n                        [inputStyleClass] = \"this.outsideCurYr? 'warning-date' : null\"\r\n                        (click)=\"$event.stopPropagation()\"\r\n                        *ngIf = \"!hasHistoricalPendApproval  && this.hasValidAuthorityAndStation() && !readOnly; else labelTrgEndDte\"\r\n                        ></p-calendar>\r\n                        <small *ngIf=\r\n                        \"claimForm?.get('trgEndDte')?.hasError('required') && claimForm?.get('trgEndDte')?.touched\"\r\n                        class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V001\"\r\n                        [translateValues]=\"{ field: 'End Date' }\">\r\n                        </small>\r\n                        <small *ngIf=\"claimForm?.get('trgEndDte')?.hasError('noHoliday') && claimForm?.get('trgEndDte')?.touched\"\r\n                        class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V007\"\r\n                        [translateValues]=\"{ dateYear: (claimForm?.get('trgEndDte').value).getFullYear() }\"></small>\r\n                \r\n                        <ng-template #labelTrgEndDte>\r\n                            {{ dateUtilsService.convertDateToStr(this.claimForm.get('trgEndDte').value, dateFormat)  }} \r\n                        </ng-template>\r\n                        <!-- <label class= \"ml-2\" *ngIf = \"this.claimForm.get('trgEndDte').valid\"> ({{this.claimForm.get('trgEndDte').value? this.getDay(claimForm.get('trgEndDte').value) : \"   \"}}) </label> -->\r\n                      \r\n                    </div>\r\n                    <div class=\"col-1\"   [style]=\"{'margin-left':'0em','align-items': 'center', 'display':'flex'}\">\r\n                        <label *ngIf=\"claimForm.get('trgEndDte').value\"> ({{this.getDay(claimForm.get('trgEndDte').value)}}) </label>\r\n                    </div>\r\n\r\n                    <div class=\"flex col-1 align-items-center justify-content-center\"></div>\r\n                </div>\r\n                <div class = \"grid col-12\"*ngIf = \"claimForm?.errors?.['invalidDateLessThan'] &&  (claimForm?.get('trgStartDte')?.touched ||claimForm?.get('trgEndDte')?.touched)\">\r\n                        <label class = \"flex col-1 align-items-center pl-1\" [style] = \"{'flex-basis':'100px'}\"></label>\r\n                        <div class = \"col\">\r\n                            <small \r\n                            class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V004\"\r\n                            [translateValues]=\"{ endField: 'End Date', startField : 'Start Date' }\">\r\n                        </small>\r\n                        </div>\r\n                </div>\r\n                <div class = \"grid col-12\" *ngIf = \"claimForm?.errors?.['invalidDateRangeMoreThan']\">\r\n                    <label class = \"flex col-1 align-items-center pl-1\" [style] = \"{'flex-basis':'100px'}\"></label>\r\n                    <div class = \"col\">\r\n                        <small \r\n                        class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V013\"></small>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n             \r\n\r\n\r\n\r\n          <div class = \"grid col-7 align-items-center\"\r\n               style = \"margin: 0; padding:0\">\r\n            <span>Overlapping Claims: </span>\r\n            <div *ngFor =\"let overlappingClaims of this.seHardCopyDetails?.overlappingClaimList; let i = index\" >\r\n              <!--TODO: When enquiry is out, need to link to that page-->\r\n              <a href=\"javascript:\" [style] = \"{'margin-left':'0.5em'}\" (click) = \"popUpEnquiryClaim(overlappingClaims.claimId, overlappingClaims.claimType); $event.stopPropagation();\">\r\n                {{overlappingClaims.caseId}}({{(overlappingClaims?.coyName?.length>15)? (overlappingClaims.coyName | slice:0:15)+'...':(overlappingClaims.coyName)}}){{i < this.seHardCopyDetails?.overlappingClaimList.length - 1? \",\":\"\"}}\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <!-- warning type  -->\r\n        <!-- <p-messages severity=\"warn\" *ngIf = isLongPeriod()>\r\n            <ng-template key=\"CLM-W003\" pTemplate >\r\n                <div class=\"ml-2\">{{ claimJson.nspay2App.claim.warning['CLM-W003'] }}</div>\r\n            </ng-template>\r\n        </p-messages>\r\n        <p-messages severity=\"warn\" *ngIf = \"dateUtilsService.isAfter(claimForm?.get('commencementDte').value, claimForm?.get('trgStartDte').value)\">\r\n            <ng-template key=\"CLM-W001\" pTemplate >\r\n                <div class=\"ml-2\">{{ claimJson.nspay2App.claim.warning['CLM-W001'] }}</div>\r\n            </ng-template>\r\n        </p-messages> -->\r\n\r\n\r\n        <div class=\"grid\">\r\n            <!-- Left side -->\r\n            <div class=\"col-6\">\r\n                <div class=\"field grid\" *ngIf=\"this.dateUtilsService.isEquals(claimForm.get('trgStartDte')?.value,claimForm.get('trgEndDte')?.value)\">\r\n                    <label for=\"workStartTime\" class=\"col-2 col-form-label\">Work Hour:</label>\r\n                    <div class=\"col-2\" *ngIf = \"!readOnly; else labelWorkStartTime\" >\r\n                            <input  type=\"input\" pInputText formControlName = \"workStartTime\" [style]=\"{'max-width': '100%'}\"\r\n                            maxlength=\"4\" (beforeinput)=\"onBeforeInput($event)\" (blur) = \"onBlur($event,'workStartTime')\"\r\n                           >\r\n                            <small *ngIf=\"claimForm.get('workStartTime')?.touched && claimForm.get('workStartTime')?.hasError('invalidTime')\"\r\n                                class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V002\"\r\n                                [translateValues]=\"{ field: 'Work Hour Start Time' }\">\r\n                            </small>\r\n                            <small *ngIf=\"claimForm.get('workStartTime')?.touched && isEmpty(claimForm.get('workStartTime')?.value)\"\r\n                                class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V001\"\r\n                                [translateValues]=\"{ field: 'Work Hour Start Time' }\">\r\n                            </small>\r\n                    </div>\r\n                    <ng-template #labelWorkStartTime>\r\n                        <div class=\"col-1\" [style]=\"{'align-items': 'center', 'display':'flex'}\">\r\n                            <label>{{ claimForm.get('workStartTime').value }} </label>\r\n                        </div>\r\n                    </ng-template>\r\n                    <div class=\"col-2\" [style]=\"{'margin-left':'0em','align-items': 'center', 'display':'flex'}\">\r\n                        <label *ngIf=\"claimForm.get('workStartTime').value && claimForm.get('workStartTime').valid\" >\r\n                            ({{ this.formatTime(claimForm.get('workStartTime').value)}})\r\n                        </label>\r\n                    </div>\r\n                    <div class=\"col-1\" [style]=\"{'margin-right':'2em','align-items': 'center', 'display':'flex'}\">to</div>\r\n                    <div class=\"col-2\" *ngIf = \"!readOnly; else labelWorkEndTime\" >\r\n                        <input type=\"input\" pInputText formControlName = \"workEndTime\" [style]=\"{'max-width': '100%'}\"\r\n                        maxlength=\"4\" (beforeinput)=\"onBeforeInput($event)\" (blur) = \"onBlur($event,'workEndTime')\">\r\n                        <small *ngIf=\"claimForm.get('workEndTime')?.touched && claimForm.get('workEndTime')?.hasError('invalidTime')\"\r\n                            class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V002\"\r\n                            [translateValues]=\"{ field: 'Work Hour End Time' }\">\r\n                        </small>\r\n                        <small *ngIf=\"claimForm.get('workEndTime')?.touched && isEmpty(claimForm.get('workEndTime')?.value)\"\r\n                            class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V001\"\r\n                            [translateValues]=\"{ field: 'Work Hour End Time' }\">\r\n                        </small>\r\n                    </div>\r\n                    <ng-template #labelWorkEndTime>\r\n                        <div  class=\"col-1\" [style]=\"{'align-items': 'center', 'display':'flex'}\">\r\n                            <label>{{ claimForm.get('workEndTime').value }} </label>\r\n                        </div>\r\n                    </ng-template>\r\n                    <div class=\"col-2\" [style]=\"{'margin-left':'0em','align-items': 'center', 'display':'flex'}\">\r\n                        <label *ngIf=\"claimForm.get('workEndTime').value && claimForm.get('workEndTime').valid\" >\r\n                            ({{ this.formatTime(claimForm.get('workEndTime').value)}})\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div class = \"field grid\" *ngIf = \"claimForm?.errors?.['mustNotEqual'] && !isEmpty(claimForm.get('workStartTime')?.value)\r\n                && !isEmpty(claimForm.get('workEndTime')?.value)\">\r\n                    <div class=\"col-2 col-form-label\"></div>\r\n                    <div class=\"col\">\r\n                        <small \r\n                        class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V005\"\r\n                        [translateValues]=\"{ endField: 'Work Hour Start', startField : 'Work Hour End' }\"></small>\r\n                    </div>\r\n                </div>\r\n                <div class = \"field grid\">\r\n                    <label for=\"claimOption\" class=\"col-2 col-form-label\">Claim Option:</label>\r\n                    <div class=\"col\">\r\n                       {{ claimOption }}\r\n                    </div>\r\n                </div>\r\n                <div class=\"field grid\">\r\n                    <label for=\"occupation\" class=\"col-2 col-form-label\">Occupation:</label>\r\n                    <div class=\"col-3\">\r\n                        <p-dropdown *ngIf= \"this.hasValidAuthorityAndStation() && !readOnly; else labelOccupation\" [options]=\"occupationList\" id=\"occupation\" formControlName=\"occupation\" optionLabel=\"value\" optionValue=\"key\" [autoDisplayFirst] = false\r\n                             [style]=\"{'max-width': '14em', 'width':'100%'}\"></p-dropdown>\r\n                            <div></div>\r\n                            <small *ngIf=\"claimForm.get('occupation')?.hasError('required') && claimForm.get('occupation')?.touched\"\r\n                            class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V001\"\r\n                            [translateValues]=\"{ field: 'Occupation' }\">\r\n                        </small>\r\n                        <ng-template #labelOccupation>\r\n                            {{ getOccupationDesc(occupationList, claimForm?.get('occupation')?.value)\r\n                                 }}\r\n                        </ng-template>\r\n                    </div>\r\n                    <ng-container *ngIf=\"claimForm.get('occupation')?.value!=='990'; then emptyOtherOccupDesc; else otherOccupDesc\">\r\n                    </ng-container>\r\n                    <ng-template #emptyOtherOccupDesc>\r\n                    </ng-template>\r\n                    <ng-template #otherOccupDesc>\r\n                        <div class=\"col-3\" *ngIf = \"this.hasValidAuthorityAndStation() && !readOnly ; else labelOtherOccupDesc\">\r\n                            <input type=\"text\"  pInputText formControlName=\"otherOccupDesc\" id=\"otherOccupDesc\" placeholder=\"Others Description\"\r\n                            maxlength=\"60\"\r\n                            />\r\n                            <!-- for conditional validators remove istouched criteria, since it needs to fail the form regardless -->\r\n                            <small *ngIf=\"claimForm.get('otherOccupDesc').hasError('required')\"\r\n                                class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V017\">\r\n                            </small>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template #labelOtherOccupDesc>\r\n                        {{ claimForm.get('otherOccupDesc').value }}\r\n                    </ng-template>\r\n                    \r\n                </div>\r\n                <!-- display if old policy + itx / ave and rep only \r\n                Default to Label, will change to InputText if no items in claim have gone to pend approval before-->\r\n                <div class=\"field grid\" *ngIf=\"currHardCopyDetails?.headerDto?.claimOption!=='1' || currHardCopyDetails?.headerDto?.claimOption!=='3' \r\n                || (currHardCopyDetails?.headerDto?.claimOption!=='2' && !isNewPolicy())\">\r\n                    <label for=\"company\" class=\"col-2 col-form-label\">Company:</label>\r\n                    <div class=\"col-3\">\r\n                        <input type=\"text\" pInputText formControlName=\"company\" id=\"company\" maxlength=\"80\"\r\n                        (blur)=\"setUpperCase('company')\" [style]=\"{'max-width': '14em', 'width':'100%'}\" \r\n                        *ngIf = \"!hasHistoricalPendApproval && this.hasValidAuthorityAndStation() && !readOnly; else labelCompany\"/>\r\n                        <small *ngIf=\"claimForm?.get('company')?.hasError('required') && claimForm?.get('company')?.touched\"\r\n                        class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V001\"\r\n                        [translateValues]=\"{ field: 'Company' }\" ></small>\r\n                        <ng-template #labelCompany>\r\n                            {{ claimForm?.get('company')?.value }}\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field grid\">\r\n                    <label for=\"commencementDte\" class=\"col-2 col-form-label\">Commencement Date:</label>\r\n                    <div class=\"col-3 input-group\">\r\n                        <p-calendar [showIcon]=\"false\" id=\"commencementDte\"\r\n                        dateFormat=\"dd-mm-yy\"\r\n                        formControlName = \"commencementDte\" appendTo=\"body\"\r\n                        position='center'\r\n                        [style]=\"{'max-width': '14em'}\"\r\n                        *ngIf = \"this.hasValidAuthorityAndStation() && !readOnly; else labelCommencementDte\"\r\n                        ></p-calendar>\r\n                        <small *ngIf=\"claimForm?.get('commencementDte')?.hasError('required') && claimForm?.get('commencementDte')?.touched\"\r\n                        class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V001\"\r\n                        [translateValues]=\"{ field: 'Commencement Date' }\"></small>\r\n                        <ng-template #labelCommencementDte>\r\n                            {{ dateUtilsService.convertDateToStr(claimForm?.get('commencementDte')?.value, dateFormat) }}\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field grid\" *ngIf=\"currHardCopyDetails?.headerDto?.claimOption!=='2'\">\r\n                    <label for=\"restDay\" class=\"col-2 col-form-label\">Rest Day:</label>\r\n                    <div class=\"col-3\">\r\n                        <p-calendar [showIcon]=\"false\" id=\"restDay\"\r\n                            dateFormat=\"dd-mm-yy\" appendTo=\"body\"\r\n                            formControlName=\"restDay\"\r\n                            [inputStyle]=\"{'width': '100%', 'display':'flex'}\"\r\n                            selectionMode=\"multiple\"\r\n                            [minDate]=\"minRestDate\"\r\n                            [maxDate]=\"maxRestDate\"\r\n                            [readonlyInput]=\"true\"\r\n                            *ngIf = \"this.hasValidAuthorityAndStation() && !readOnly; else labelRestDay\">\r\n                        </p-calendar>\r\n                        <small *ngIf=\"claimForm?.get('restDay')?.hasError('required') \"\r\n                        class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V001\"\r\n                        [translateValues]=\"{ field: 'Rest Day' }\"></small>\r\n                        <ng-template #labelRestDay>\r\n                            {{ getDateArrayLabel(claimForm?.get('restDay')?.value) }}\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n\r\n             <!-- Right side -->\r\n             <div class=\"col-6\"  >\r\n                <n2-claim-supp-doc [params]=\"this.params\" #claimSuppDoc></n2-claim-supp-doc>\r\n            </div>\r\n        </div>\r\n        <button pButton label=\"TESTER\" (click)=\"tester()\"></button>\r\n\r\n    </p-accordionTab>\r\n</form>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}