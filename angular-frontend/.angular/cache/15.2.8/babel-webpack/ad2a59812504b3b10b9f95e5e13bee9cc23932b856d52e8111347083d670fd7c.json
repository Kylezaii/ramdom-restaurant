{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PasswordResetFinishComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst forms_1 = require(\"@angular/forms\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"./password-reset-finish.service\"));\nconst i2 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i3 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i4 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i5 = tslib_1.__importStar(require(\"../../../shared/language/translate.directive\"));\nconst i6 = tslib_1.__importStar(require(\"../../password/password-strength-bar/password-strength-bar.component\"));\nconst i7 = tslib_1.__importStar(require(\"@ngx-translate/core\"));\nconst _c0 = [\"newPassword\"];\nfunction PasswordResetFinishComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"The password reset key is missing.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordResetFinishComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"span\", 11);\n    i0.ɵɵtext(3, \"Choose a new password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordResetFinishComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"span\", 13);\n    i0.ɵɵtext(3, \"Your password couldn't be reset. Remember a password request is only valid for 24 hours.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordResetFinishComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"span\", 15)(3, \"strong\");\n    i0.ɵɵtext(4, \"Your password has been reset.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \" Please \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n        \");\n    i0.ɵɵelementStart(7, \"a\", 16);\n    i0.ɵɵlistener(\"click\", function PasswordResetFinishComponent_div_15_Template_a_click_7_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.login());\n    });\n    i0.ɵɵtext(8, \"sign in\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \".\\n      \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordResetFinishComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \"\\n        The password and its confirmation do not match!\\n      \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordResetFinishComponent_div_19_div_13_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 30);\n    i0.ɵɵtext(1, \"\\n                Your password is required.\\n              \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordResetFinishComponent_div_19_div_13_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 31);\n    i0.ɵɵtext(1, \"\\n                Your password is required to be at least 8 characters.\\n              \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordResetFinishComponent_div_19_div_13_small_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 32);\n    i0.ɵɵtext(1, \"\\n                Your password cannot be longer than 50 characters.\\n              \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordResetFinishComponent_div_19_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n              \");\n    i0.ɵɵtemplate(2, PasswordResetFinishComponent_div_19_div_13_small_2_Template, 2, 0, \"small\", 27);\n    i0.ɵɵtext(3, \"\\n\\n              \");\n    i0.ɵɵtemplate(4, PasswordResetFinishComponent_div_19_div_13_small_4_Template, 2, 0, \"small\", 28);\n    i0.ɵɵtext(5, \"\\n\\n              \");\n    i0.ɵɵtemplate(6, PasswordResetFinishComponent_div_19_div_13_small_6_Template, 2, 0, \"small\", 29);\n    i0.ɵɵtext(7, \"\\n            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r9.passwordForm.get(\"newPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r9.passwordForm.get(\"newPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.minlength);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r9.passwordForm.get(\"newPassword\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.maxlength);\n  }\n}\nfunction PasswordResetFinishComponent_div_19_div_26_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 36);\n    i0.ɵɵtext(1, \"\\n                Your password confirmation is required.\\n              \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordResetFinishComponent_div_19_div_26_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 37);\n    i0.ɵɵtext(1, \"\\n                Your password confirmation is required to be at least 4 characters.\\n              \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordResetFinishComponent_div_19_div_26_small_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 38);\n    i0.ɵɵtext(1, \"\\n                Your password confirmation cannot be longer than 50 characters.\\n              \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordResetFinishComponent_div_19_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n              \");\n    i0.ɵɵtemplate(2, PasswordResetFinishComponent_div_19_div_26_small_2_Template, 2, 0, \"small\", 33);\n    i0.ɵɵtext(3, \"\\n\\n              \");\n    i0.ɵɵtemplate(4, PasswordResetFinishComponent_div_19_div_26_small_4_Template, 2, 0, \"small\", 34);\n    i0.ɵɵtext(5, \"\\n\\n              \");\n    i0.ɵɵtemplate(6, PasswordResetFinishComponent_div_19_div_26_small_6_Template, 2, 0, \"small\", 35);\n    i0.ɵɵtext(7, \"\\n            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r10.passwordForm.get(\"confirmPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r10.passwordForm.get(\"confirmPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.minlength);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r10.passwordForm.get(\"confirmPassword\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.maxlength);\n  }\n}\nfunction PasswordResetFinishComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"form\", 18);\n    i0.ɵɵlistener(\"ngSubmit\", function PasswordResetFinishComponent_div_19_Template_form_ngSubmit_2_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.finishReset());\n    });\n    i0.ɵɵtext(3, \"\\n          \");\n    i0.ɵɵelementStart(4, \"div\", 19);\n    i0.ɵɵtext(5, \"\\n            \");\n    i0.ɵɵelementStart(6, \"label\", 20);\n    i0.ɵɵtext(7, \"New password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n            \");\n    i0.ɵɵelement(9, \"input\", 21, 22);\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵtext(12, \"\\n\\n            \");\n    i0.ɵɵtemplate(13, PasswordResetFinishComponent_div_19_div_13_Template, 8, 3, \"div\", 8);\n    i0.ɵɵtext(14, \"\\n\\n            \");\n    i0.ɵɵelement(15, \"ic-password-strength-bar\", 23);\n    i0.ɵɵtext(16, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n\\n          \");\n    i0.ɵɵelementStart(18, \"div\", 19);\n    i0.ɵɵtext(19, \"\\n            \");\n    i0.ɵɵelementStart(20, \"label\", 24);\n    i0.ɵɵtext(21, \"New password confirmation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n            \");\n    i0.ɵɵelement(23, \"input\", 25);\n    i0.ɵɵpipe(24, \"translate\");\n    i0.ɵɵtext(25, \"\\n\\n            \");\n    i0.ɵɵtemplate(26, PasswordResetFinishComponent_div_19_div_26_Template, 8, 3, \"div\", 8);\n    i0.ɵɵtext(27, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n\\n          \");\n    i0.ɵɵelementStart(29, \"button\", 26);\n    i0.ɵɵtext(30, \"\\n            Reset Password\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(32, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r5.passwordForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(11, 7, \"password.form.newpassword.placeholder\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.passwordForm.get(\"newPassword\").invalid && (ctx_r5.passwordForm.get(\"newPassword\").dirty || ctx_r5.passwordForm.get(\"newPassword\").touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"passwordToCheck\", ctx_r5.passwordForm.get(\"newPassword\").value);\n    i0.ɵɵadvance(8);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(24, 9, \"password.form.confirmpassword.placeholder\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.passwordForm.get(\"confirmPassword\").invalid && (ctx_r5.passwordForm.get(\"confirmPassword\").dirty || ctx_r5.passwordForm.get(\"confirmPassword\").touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r5.passwordForm.invalid);\n  }\n}\nclass PasswordResetFinishComponent {\n  constructor(passwordResetFinishService, router, route, fb) {\n    this.passwordResetFinishService = passwordResetFinishService;\n    this.router = router;\n    this.route = route;\n    this.fb = fb;\n    this.initialized = false;\n    this.doNotMatch = false;\n    this.error = false;\n    this.success = false;\n    this.pass = '';\n    this.passwordForm = this.fb.group({\n      newPassword: ['', [forms_1.Validators.required, forms_1.Validators.minLength(8), forms_1.Validators.maxLength(50)]],\n      confirmPassword: ['', [forms_1.Validators.required, forms_1.Validators.minLength(8), forms_1.Validators.maxLength(50)]]\n    });\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['key']) {\n        this.pass = params['key'];\n      }\n      this.initialized = true;\n    });\n  }\n  ngAfterViewInit() {\n    if (this.newPassword) {\n      this.newPassword.nativeElement.focus();\n    }\n  }\n  finishReset() {\n    this.doNotMatch = false;\n    this.error = false;\n    const newPassword = this.passwordForm.get(['newPassword']).value;\n    const confirmPassword = this.passwordForm.get(['confirmPassword']).value;\n    if (newPassword !== confirmPassword) {\n      this.doNotMatch = true;\n    } else {\n      this.passwordResetFinishService.save(this.pass, newPassword).subscribe(() => this.success = true, () => this.error = true);\n    }\n  }\n  login() {\n    this.router.navigate(['/login']);\n  }\n}\nexports.PasswordResetFinishComponent = PasswordResetFinishComponent;\nPasswordResetFinishComponent.ɵfac = function PasswordResetFinishComponent_Factory(t) {\n  return new (t || PasswordResetFinishComponent)(i0.ɵɵdirectiveInject(i1.PasswordResetFinishService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nPasswordResetFinishComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PasswordResetFinishComponent,\n  selectors: [[\"ic-password-reset-finish\"]],\n  viewQuery: function PasswordResetFinishComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.newPassword = _t.first);\n    }\n  },\n  decls: 24,\n  vars: 6,\n  consts: [[1, \"row\", \"justify-content-center\"], [1, \"col-md-4\"], [\"icTranslate\", \"reset.finish.title\"], [\"class\", \"alert alert-danger\", \"icTranslate\", \"reset.finish.messages.keymissing\", 4, \"ngIf\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", \"icTranslate\", \"global.messages.error.dontmatch\", 4, \"ngIf\"], [4, \"ngIf\"], [\"icTranslate\", \"reset.finish.messages.keymissing\", 1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-warning\"], [\"icTranslate\", \"reset.finish.messages.info\"], [1, \"alert\", \"alert-danger\"], [\"icTranslate\", \"reset.finish.messages.error\"], [1, \"alert\", \"alert-success\"], [\"icTranslate\", \"reset.finish.messages.success\"], [\"icTranslate\", \"global.messages.info.authenticated.link\", 1, \"alert-link\", 3, \"click\"], [\"icTranslate\", \"global.messages.error.dontmatch\", 1, \"alert\", \"alert-danger\"], [\"name\", \"form\", \"role\", \"form\", \"method\", \"POST\", 3, \"formGroup\", \"ngSubmit\"], [1, \"rounded-pill\"], [\"for\", \"newPassword\", \"icTranslate\", \"password.form.newpassword.label\", 1, \"form-control-label\"], [\"type\", \"password\", \"id\", \"newPassword\", \"name\", \"newPassword\", \"formControlName\", \"newPassword\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"placeholder\"], [\"newPassword\", \"\"], [3, \"passwordToCheck\"], [\"for\", \"confirmPassword\", \"icTranslate\", \"password.form.confirmpassword.label\", 1, \"form-control-label\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"placeholder\"], [\"type\", \"submit\", \"icTranslate\", \"reset.finish.form.button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"password.messages.validate.newpassword.required\", 4, \"ngIf\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"password.messages.validate.newpassword.minlength\", 4, \"ngIf\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"password.messages.validate.newpassword.maxlength\", 4, \"ngIf\"], [\"icTranslate\", \"password.messages.validate.newpassword.required\", 1, \"form-text\", \"text-danger\"], [\"icTranslate\", \"password.messages.validate.newpassword.minlength\", 1, \"form-text\", \"text-danger\"], [\"icTranslate\", \"password.messages.validate.newpassword.maxlength\", 1, \"form-text\", \"text-danger\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"password.messages.validate.confirmpassword.required\", 4, \"ngIf\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"password.messages.validate.confirmpassword.minlength\", 4, \"ngIf\"], [\"class\", \"form-text text-danger\", \"icTranslate\", \"password.messages.validate.confirmpassword.maxlength\", 4, \"ngIf\"], [\"icTranslate\", \"password.messages.validate.confirmpassword.required\", 1, \"form-text\", \"text-danger\"], [\"icTranslate\", \"password.messages.validate.confirmpassword.minlength\", 1, \"form-text\", \"text-danger\"], [\"icTranslate\", \"password.messages.validate.confirmpassword.maxlength\", 1, \"form-text\", \"text-danger\"]],\n  template: function PasswordResetFinishComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"div\", 0);\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵelementStart(4, \"div\", 1);\n      i0.ɵɵtext(5, \"\\n      \");\n      i0.ɵɵelementStart(6, \"h1\", 2);\n      i0.ɵɵtext(7, \"Reset password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \"\\n\\n      \");\n      i0.ɵɵtemplate(9, PasswordResetFinishComponent_div_9_Template, 5, 0, \"div\", 3);\n      i0.ɵɵtext(10, \"\\n\\n      \");\n      i0.ɵɵtemplate(11, PasswordResetFinishComponent_div_11_Template, 5, 0, \"div\", 4);\n      i0.ɵɵtext(12, \"\\n\\n      \");\n      i0.ɵɵtemplate(13, PasswordResetFinishComponent_div_13_Template, 5, 0, \"div\", 5);\n      i0.ɵɵtext(14, \"\\n\\n      \");\n      i0.ɵɵtemplate(15, PasswordResetFinishComponent_div_15_Template, 10, 0, \"div\", 6);\n      i0.ɵɵtext(16, \"\\n\\n      \");\n      i0.ɵɵtemplate(17, PasswordResetFinishComponent_div_17_Template, 2, 0, \"div\", 7);\n      i0.ɵɵtext(18, \"\\n\\n      \");\n      i0.ɵɵtemplate(19, PasswordResetFinishComponent_div_19_Template, 33, 11, \"div\", 8);\n      i0.ɵɵtext(20, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(21, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(22, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.initialized && !ctx.pass);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.pass && !ctx.success);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.success);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.doNotMatch);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.pass && !ctx.success);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i4.NgIf, i3.FormGroupDirective, i3.FormControlName, i5.TranslateDirective, i6.PasswordStrengthBarComponent, i7.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","PasswordResetFinishComponent","constructor","passwordResetFinishService","router","route","fb","group","newPassword","forms_1","required","minLength","maxLength","confirmPassword","ngOnInit","queryParams","subscribe","params","pass","initialized","ngAfterViewInit","nativeElement","focus","finishReset","doNotMatch","error","passwordForm","get","value","save","success","login","navigate","exports","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\account\\password-reset\\finish\\password-reset-finish.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\account\\password-reset\\finish\\password-reset-finish.component.html"],"sourcesContent":["import { Component, OnInit, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { PasswordResetFinishService } from './password-reset-finish.service';\r\n\r\n@Component({\r\n  selector: 'ic-password-reset-finish',\r\n  templateUrl: './password-reset-finish.component.html',\r\n})\r\nexport class PasswordResetFinishComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('newPassword', { static: false })\r\n  newPassword?: ElementRef;\r\n\r\n  initialized = false;\r\n  doNotMatch = false;\r\n  error = false;\r\n  success = false;\r\n  pass = '';\r\n\r\n  passwordForm = this.fb.group({\r\n    newPassword: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(50)]],\r\n    confirmPassword: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(50)]],\r\n  });\r\n\r\n  constructor(\r\n    private passwordResetFinishService: PasswordResetFinishService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['key']) {\r\n        this.pass = params['key'];\r\n      }\r\n      this.initialized = true;\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.newPassword) {\r\n      this.newPassword.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  finishReset(): void {\r\n    this.doNotMatch = false;\r\n    this.error = false;\r\n\r\n    const newPassword = this.passwordForm.get(['newPassword'])!.value;\r\n    const confirmPassword = this.passwordForm.get(['confirmPassword'])!.value;\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      this.doNotMatch = true;\r\n    } else {\r\n      this.passwordResetFinishService.save(this.pass, newPassword).subscribe(\r\n        () => (this.success = true),\r\n        () => (this.error = true)\r\n      );\r\n    }\r\n  }\r\n\r\n  login(): void {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-md-4\">\r\n      <h1 icTranslate=\"reset.finish.title\">Reset password</h1>\r\n\r\n      <div class=\"alert alert-danger\" icTranslate=\"reset.finish.messages.keymissing\" *ngIf=\"initialized && !pass\">\r\n        <strong>The password reset key is missing.</strong>\r\n      </div>\r\n\r\n      <div class=\"alert alert-warning\" *ngIf=\"pass && !success\">\r\n        <span icTranslate=\"reset.finish.messages.info\">Choose a new password</span>\r\n      </div>\r\n\r\n      <div class=\"alert alert-danger\" *ngIf=\"error\">\r\n        <span icTranslate=\"reset.finish.messages.error\"\r\n          >Your password couldn't be reset. Remember a password request is only valid for 24 hours.</span\r\n        >\r\n      </div>\r\n\r\n      <div class=\"alert alert-success\" *ngIf=\"success\">\r\n        <span icTranslate=\"reset.finish.messages.success\"><strong>Your password has been reset.</strong> Please </span>\r\n        <a class=\"alert-link\" (click)=\"login()\" icTranslate=\"global.messages.info.authenticated.link\">sign in</a>.\r\n      </div>\r\n\r\n      <div class=\"alert alert-danger\" *ngIf=\"doNotMatch\" icTranslate=\"global.messages.error.dontmatch\">\r\n        The password and its confirmation do not match!\r\n      </div>\r\n\r\n      <div *ngIf=\"pass && !success\">\r\n        <form name=\"form\" role=\"form\" (ngSubmit)=\"finishReset()\" method=\"POST\" [formGroup]=\"passwordForm\">\r\n          <div class=\"rounded-pill\">\r\n            <label class=\"form-control-label\" for=\"newPassword\" icTranslate=\"password.form.newpassword.label\">New password</label>\r\n            <input\r\n              type=\"password\"\r\n              class=\"form-control\"\r\n              id=\"newPassword\"\r\n              name=\"newPassword\"\r\n              placeholder=\"{{ 'password.form.newpassword.placeholder' | translate }}\"\r\n              formControlName=\"newPassword\"\r\n              #newPassword\r\n              autocomplete=\"off\"\r\n            />\r\n\r\n            <div\r\n              *ngIf=\"\r\n                passwordForm.get('newPassword')!.invalid &&\r\n                (passwordForm.get('newPassword')!.dirty || passwordForm.get('newPassword')!.touched)\r\n              \"\r\n            >\r\n              <small\r\n                class=\"form-text text-danger\"\r\n                *ngIf=\"passwordForm.get('newPassword')?.errors?.required\"\r\n                icTranslate=\"password.messages.validate.newpassword.required\"\r\n              >\r\n                Your password is required.\r\n              </small>\r\n\r\n              <small\r\n                class=\"form-text text-danger\"\r\n                *ngIf=\"passwordForm.get('newPassword')?.errors?.minlength\"\r\n                icTranslate=\"password.messages.validate.newpassword.minlength\"\r\n              >\r\n                Your password is required to be at least 8 characters.\r\n              </small>\r\n\r\n              <small\r\n                class=\"form-text text-danger\"\r\n                *ngIf=\"passwordForm.get('newPassword')?.errors?.maxlength\"\r\n                icTranslate=\"password.messages.validate.newpassword.maxlength\"\r\n              >\r\n                Your password cannot be longer than 50 characters.\r\n              </small>\r\n            </div>\r\n\r\n            <ic-password-strength-bar [passwordToCheck]=\"passwordForm.get('newPassword')!.value\"></ic-password-strength-bar>\r\n          </div>\r\n\r\n          <div class=\"rounded-pill\">\r\n            <label class=\"form-control-label\" for=\"confirmPassword\" icTranslate=\"password.form.confirmpassword.label\"\r\n              >New password confirmation</label\r\n            >\r\n            <input\r\n              type=\"password\"\r\n              class=\"form-control\"\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              placeholder=\"{{ 'password.form.confirmpassword.placeholder' | translate }}\"\r\n              formControlName=\"confirmPassword\"\r\n              autocomplete=\"off\"\r\n            />\r\n\r\n            <div\r\n              *ngIf=\"\r\n                passwordForm.get('confirmPassword')!.invalid &&\r\n                (passwordForm.get('confirmPassword')!.dirty || passwordForm.get('confirmPassword')!.touched)\r\n              \"\r\n            >\r\n              <small\r\n                class=\"form-text text-danger\"\r\n                *ngIf=\"passwordForm.get('confirmPassword')?.errors?.required\"\r\n                icTranslate=\"password.messages.validate.confirmpassword.required\"\r\n              >\r\n                Your password confirmation is required.\r\n              </small>\r\n\r\n              <small\r\n                class=\"form-text text-danger\"\r\n                *ngIf=\"passwordForm.get('confirmPassword')?.errors?.minlength\"\r\n                icTranslate=\"password.messages.validate.confirmpassword.minlength\"\r\n              >\r\n                Your password confirmation is required to be at least 4 characters.\r\n              </small>\r\n\r\n              <small\r\n                class=\"form-text text-danger\"\r\n                *ngIf=\"passwordForm.get('confirmPassword')?.errors?.maxlength\"\r\n                icTranslate=\"password.messages.validate.confirmpassword.maxlength\"\r\n              >\r\n                Your password confirmation cannot be longer than 50 characters.\r\n              </small>\r\n            </div>\r\n          </div>\r\n\r\n          <button type=\"submit\" [disabled]=\"passwordForm.invalid\" class=\"btn btn-primary\" icTranslate=\"reset.finish.form.button\">\r\n            Reset Password\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}