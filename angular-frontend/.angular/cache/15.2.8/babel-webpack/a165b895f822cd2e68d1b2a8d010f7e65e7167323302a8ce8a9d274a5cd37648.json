{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StopPaymentFileUploadComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst forms_1 = require(\"@angular/forms\");\nconst fileupload2_directive_1 = require(\"app/shared/validator/fileupload2.directive\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i2 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i3 = tslib_1.__importStar(require(\"primeng/inputtextarea\"));\nconst i4 = tslib_1.__importStar(require(\"../../../../shared/component/file-upload/file-upload.component\"));\nconst _c0 = [\"fileUpload\"];\nclass StopPaymentFileUploadComponent {\n  constructor(messageService) {\n    this.messageService = messageService;\n    this.fileUploadFileLimit = 1;\n    this.maxRemarksChar = 200; // max num of chars\n    this.batchFileForm = new forms_1.FormGroup({\n      file: new forms_1.FormControl([], forms_1.Validators.compose([fileupload2_directive_1.FileUploadValidator2.maxFileLimit(this.fileUploadFileLimit), fileupload2_directive_1.FileUploadValidator2.allowableExtension(\".txt\")])),\n      remarks: new forms_1.FormControl(\"\", [forms_1.Validators.required, forms_1.Validators.maxLength(this.maxRemarksChar)])\n    });\n  }\n  ngOnInit() {\n    //\n  }\n  get batchFileFormGroup() {\n    return this.batchFileForm;\n  }\n  getVerifiedFiles() {\n    return this.n2FileUpload.verifiedFiles;\n  }\n  cancel() {\n    this.n2FileUpload.onClose();\n  }\n  clearAndReset() {\n    this.n2FileUpload.clearAndReset();\n  }\n}\nexports.StopPaymentFileUploadComponent = StopPaymentFileUploadComponent;\nStopPaymentFileUploadComponent.ɵfac = function StopPaymentFileUploadComponent_Factory(t) {\n  return new (t || StopPaymentFileUploadComponent)(i0.ɵɵdirectiveInject(i1.MessageService));\n};\nStopPaymentFileUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StopPaymentFileUploadComponent,\n  selectors: [[\"n2-stop-payment-file-upload\"]],\n  viewQuery: function StopPaymentFileUploadComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.n2FileUpload = _t.first);\n    }\n  },\n  decls: 16,\n  vars: 5,\n  consts: [[3, \"formGroup\"], [\"formControlName\", \"file\", 3, \"externalFileLimit\"], [\"fileUpload\", \"\"], [1, \"flex\"], [\"formControlName\", \"remarks\", \"pInputTextarea\", \"\", 1, \"flex-auto\", 3, \"maxLength\"]],\n  template: function StopPaymentFileUploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelement(2, \"n2-file-upload\", 1, 2);\n      i0.ɵɵtext(4, \"\\n\\n  \");\n      i0.ɵɵelementStart(5, \"h5\");\n      i0.ɵɵtext(6, \"Remarks\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \"\\n  \");\n      i0.ɵɵelementStart(8, \"div\", 3);\n      i0.ɵɵtext(9, \"\\n    \");\n      i0.ɵɵelement(10, \"textarea\", 4);\n      i0.ɵɵtext(11, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \"\\n  \");\n      i0.ɵɵelementStart(13, \"span\");\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \"\\n\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      let tmp_3_0;\n      i0.ɵɵproperty(\"formGroup\", ctx.batchFileForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"externalFileLimit\", ctx.fileUploadFileLimit);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"maxLength\", ctx.maxRemarksChar);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate2(\"Characters left: \", ctx.maxRemarksChar - ((tmp_3_0 = ctx.batchFileForm.get(\"remarks\")) == null ? null : tmp_3_0.value == null ? null : tmp_3_0.value.length), \" of \", ctx.maxRemarksChar, \"\");\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.InputTextarea, i4.FileUploadComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdG9wLXBheW1lbnQtZmlsZS11cGxvYWQuY29tcG9uZW50LnNjc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvcGF5bWVudC9iYW5rZmlsZS1zdG9wLXBheW1lbnQvc3RvcC1wYXltZW50L3N0b3AtcGF5bWVudC1maWxlLXVwbG9hZC9zdG9wLXBheW1lbnQtZmlsZS11cGxvYWQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLDRMQUE0TCIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;AACA;AAEA;;;;;;;AAGA,MAKaA,8BAA8B;EAiBzCC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAflC,wBAAmB,GAAG,CAAC;IACvB,mBAAc,GAAG,GAAG,CAAC,CAAC;IAGtB,kBAAa,GAAG,IAAIC,iBAAS,CAAC;MAC5BC,IAAI,EAAE,IAAID,mBAAW,CAAC,EAAE,EAAEA,kBAAU,CAACE,OAAO,CAAC,CAC3CC,4CAAoB,CAACC,YAAY,CAAC,IAAI,CAACC,mBAAmB,CAAC,EAC3DF,4CAAoB,CAACG,kBAAkB,CAAC,MAAM,CAAC,CAChD,CAAC,CAAC;MACHC,OAAO,EAAE,IAAIP,mBAAW,CAAC,EAAE,EAAE,CAACA,kBAAU,CAACQ,QAAQ,EAAER,kBAAU,CAACS,SAAS,CAAC,IAAI,CAACC,cAAc,CAAC,CAAC;KAC9F,CAAC;EAMF;EAEAC,QAAQ;IACN;EAAA;EAGF,IAAIC,kBAAkB;IACpB,OAAO,IAAI,CAACC,aAAa;EAC3B;EAEAC,gBAAgB;IACd,OAAO,IAAI,CAACC,YAAY,CAACC,aAAa;EACxC;EAEAC,MAAM;IACJ,IAAI,CAACF,YAAY,CAACG,OAAO,EAAE;EAC7B;EAEAC,aAAa;IACX,IAAI,CAACJ,YAAY,CAACI,aAAa,EAAE;EACnC;;AA3CFC;;mBAKavB,8BAA8B;AAAA;;QAA9BA,8BAA8B;EAAAwB;EAAAC;IAAA;;;;;;;;;;;;;MCX3CC,+BAAkC;MAChCA;MAAAA,uCAA8G;MAE9GA;MAAAA,0BAAI;MAAAA,uBAAO;MAAAA,iBAAK;MAChBA;MAAAA,8BAAkB;MAChBA;MAAAA,+BAA6G;MAC/GA;MAAAA,iBAAM;MACNA;MAAAA,6BAAM;MAAAA,aAAuG;MAAAA,iBAAO;MACtHA;MAAAA,iBAAO;;;;MARDA,6CAA2B;MACoBA,eAAyC;MAAzCA,2DAAyC;MAIrBA,eAA4B;MAA5BA,8CAA4B;MAE7FA,eAAuG;MAAvGA,oNAAuG","names":["StopPaymentFileUploadComponent","constructor","messageService","forms_1","file","compose","fileupload2_directive_1","maxFileLimit","fileUploadFileLimit","allowableExtension","remarks","required","maxLength","maxRemarksChar","ngOnInit","batchFileFormGroup","batchFileForm","getVerifiedFiles","n2FileUpload","verifiedFiles","cancel","onClose","clearAndReset","exports","selectors","viewQuery","i0"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payment\\bankfile-stop-payment\\stop-payment\\stop-payment-file-upload\\stop-payment-file-upload.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payment\\bankfile-stop-payment\\stop-payment\\stop-payment-file-upload\\stop-payment-file-upload.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { FileUploadComponent } from 'app/shared/component/file-upload/file-upload.component';\r\nimport { FileUploadValidator2 } from 'app/shared/validator/fileupload2.directive';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'n2-stop-payment-file-upload',\r\n  templateUrl: './stop-payment-file-upload.component.html',\r\n  styleUrls: ['./stop-payment-file-upload.component.scss']\r\n})\r\nexport class StopPaymentFileUploadComponent implements OnInit {\r\n\r\n  fileUploadFileLimit = 1;\r\n  maxRemarksChar = 200; // max num of chars\r\n  remarksValue: string;\r\n\r\n  batchFileForm = new FormGroup({\r\n    file: new FormControl([], Validators.compose([\r\n      FileUploadValidator2.maxFileLimit(this.fileUploadFileLimit),\r\n      FileUploadValidator2.allowableExtension(\".txt\")\r\n    ])),\r\n    remarks: new FormControl(\"\", [Validators.required, Validators.maxLength(this.maxRemarksChar)]),\r\n  });\r\n\r\n  @ViewChild(\"fileUpload\")\r\n  private n2FileUpload: FileUploadComponent;\r\n\r\n  constructor(private messageService: MessageService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //\r\n  }\r\n  \r\n  get batchFileFormGroup(): FormGroup {\r\n    return this.batchFileForm;\r\n  }\r\n\r\n  getVerifiedFiles(): any[] {\r\n    return this.n2FileUpload.verifiedFiles;\r\n  }\r\n\r\n  cancel(): void {\r\n    this.n2FileUpload.onClose();\r\n  }\r\n\r\n  clearAndReset(): void {\r\n    this.n2FileUpload.clearAndReset();\r\n  }\r\n}\r\n","<form [formGroup]=\"batchFileForm\">\r\n  <n2-file-upload #fileUpload formControlName=\"file\" [externalFileLimit]=\"fileUploadFileLimit\"></n2-file-upload>\r\n\r\n  <h5>Remarks</h5>\r\n  <div class='flex'>\r\n    <textarea formControlName=\"remarks\" class='flex-auto' pInputTextarea [maxLength]='maxRemarksChar'></textarea>\r\n  </div>\r\n  <span>Characters left: {{maxRemarksChar - batchFileForm.get('remarks')?.value?.length}} of {{maxRemarksChar}}</span>\r\n</form>"]},"metadata":{},"sourceType":"script","externalDependencies":[]}