{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SortDirective = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@angular/core\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nclass SortDirective {\n  constructor() {\n    this.predicateChange = new core_1.EventEmitter();\n    this.ascendingChange = new core_1.EventEmitter();\n  }\n  get predicate() {\n    return this._predicate;\n  }\n  set predicate(predicate) {\n    this._predicate = predicate;\n    this.predicateChange.emit(predicate);\n  }\n  get ascending() {\n    return this._ascending;\n  }\n  set ascending(ascending) {\n    this._ascending = ascending;\n    this.ascendingChange.emit(ascending);\n  }\n  sort(field) {\n    if (String(this.predicate) !== '_score') {\n      this.ascending = field !== this.predicate ? true : !this.ascending;\n      this.predicate = field;\n      this.predicateChange.emit(field);\n      this.ascendingChange.emit(this.ascending);\n      this.callback?.();\n    }\n  }\n}\nexports.SortDirective = SortDirective;\nSortDirective.ɵfac = function SortDirective_Factory(t) {\n  return new (t || SortDirective)();\n};\nSortDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: SortDirective,\n  selectors: [[\"\", \"icSort\", \"\"]],\n  inputs: {\n    predicate: \"predicate\",\n    ascending: \"ascending\",\n    callback: \"callback\"\n  },\n  outputs: {\n    predicateChange: \"predicateChange\",\n    ascendingChange: \"ascendingChange\"\n  }\n});","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA,MAGaA,aAAa;EAH1BC;IAwBY,oBAAe,GAAG,IAAIC,mBAAY,EAAK;IACvC,oBAAe,GAAG,IAAIA,mBAAY,EAAW;;EArBvD,IACIC,SAAS;IACX,OAAO,IAAI,CAACC,UAAU;EACxB;EACA,IAAID,SAAS,CAACA,SAAwB;IACpC,IAAI,CAACC,UAAU,GAAGD,SAAS;IAC3B,IAAI,CAACE,eAAe,CAACC,IAAI,CAACH,SAAS,CAAC;EACtC;EAEA,IACII,SAAS;IACX,OAAO,IAAI,CAACC,UAAU;EACxB;EACA,IAAID,SAAS,CAACA,SAA8B;IAC1C,IAAI,CAACC,UAAU,GAAGD,SAAS;IAC3B,IAAI,CAACE,eAAe,CAACH,IAAI,CAACC,SAAS,CAAC;EACtC;EAUAG,IAAI,CAACC,KAAS;IACZ,IAAIC,MAAM,CAAC,IAAI,CAACT,SAAS,CAAC,KAAK,QAAQ,EAAE;MACvC,IAAI,CAACI,SAAS,GAAGI,KAAK,KAAK,IAAI,CAACR,SAAS,GAAG,IAAI,GAAG,CAAC,IAAI,CAACI,SAAS;MAClE,IAAI,CAACJ,SAAS,GAAGQ,KAAK;MACtB,IAAI,CAACN,eAAe,CAACC,IAAI,CAACK,KAAK,CAAC;MAChC,IAAI,CAACF,eAAe,CAACH,IAAI,CAAC,IAAI,CAACC,SAAS,CAAC;MACzC,IAAI,CAACM,QAAQ,IAAI;;EAErB;;AAtCFC;;mBAGad,aAAa;AAAA;;QAAbA,aAAa;EAAAe;EAAAC;IAAAb;IAAAI;IAAAM;EAAA;EAAAI;IAAAZ;IAAAI;EAAA;AAAA","names":["SortDirective","constructor","core_1","predicate","_predicate","predicateChange","emit","ascending","_ascending","ascendingChange","sort","field","String","callback","exports","selectors","inputs","outputs"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\shared\\sort\\sort.directive.ts"],"sourcesContent":["import { Directive, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[icSort]',\r\n})\r\nexport class SortDirective<T> {\r\n  @Input()\r\n  get predicate(): T | undefined {\r\n    return this._predicate;\r\n  }\r\n  set predicate(predicate: T | undefined) {\r\n    this._predicate = predicate;\r\n    this.predicateChange.emit(predicate);\r\n  }\r\n\r\n  @Input()\r\n  get ascending(): boolean | undefined {\r\n    return this._ascending;\r\n  }\r\n  set ascending(ascending: boolean | undefined) {\r\n    this._ascending = ascending;\r\n    this.ascendingChange.emit(ascending);\r\n  }\r\n\r\n  @Input() callback?: () => void;\r\n\r\n  @Output() predicateChange = new EventEmitter<T>();\r\n  @Output() ascendingChange = new EventEmitter<boolean>();\r\n\r\n  private _predicate?: T;\r\n  private _ascending?: boolean;\r\n\r\n  sort(field?: T): void {\r\n    if (String(this.predicate) !== '_score') {\r\n      this.ascending = field !== this.predicate ? true : !this.ascending;\r\n      this.predicate = field;\r\n      this.predicateChange.emit(field);\r\n      this.ascendingChange.emit(this.ascending);\r\n      this.callback?.();\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}