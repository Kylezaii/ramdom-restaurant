{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ItemChangeHistorySectionComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst http_1 = require(\"@angular/common/http\");\nconst core_1 = require(\"@angular/core\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i2 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i3 = tslib_1.__importStar(require(\"app/claim/service/claim.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i5 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i6 = tslib_1.__importStar(require(\"primeng/card\"));\nconst i7 = tslib_1.__importStar(require(\"primeng/accordion\"));\nconst i8 = tslib_1.__importStar(require(\"primeng/togglebutton\"));\nconst i9 = tslib_1.__importStar(require(\"../../../../shared/pipe/default-string.pipe\"));\nfunction ItemChangeHistorySectionComponent_div_5_p_card_4_p_toggleButton_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-toggleButton\", 13);\n    i0.ɵɵlistener(\"click\", function ItemChangeHistorySectionComponent_div_5_p_card_4_p_toggleButton_6_Template_p_toggleButton_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const item_r5 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(!item_r5.value.collapseCard);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ItemChangeHistorySectionComponent_div_5_p_card_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-card\", 7);\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵelementStart(2, \"div\", 8);\n    i0.ɵɵtext(3, \"\\n                        \");\n    i0.ɵɵelementStart(4, \"div\", 9);\n    i0.ɵɵtext(5, \"\\n                                \");\n    i0.ɵɵtemplate(6, ItemChangeHistorySectionComponent_div_5_p_card_4_p_toggleButton_6_Template, 1, 0, \"p-toggleButton\", 10);\n    i0.ɵɵtext(7, \"\\n                                \");\n    i0.ɵɵelementStart(8, \"div\", 11)(9, \"b\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(11, \"\\n                                \");\n    i0.ɵɵelementStart(12, \"div\", 11);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                \");\n    i0.ɵɵelementStart(15, \"div\", 11);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n\\n                        \");\n    i0.ɵɵelementStart(19, \"div\", 9);\n    i0.ɵɵtext(20, \"\\n                            \");\n    i0.ɵɵelementStart(21, \"div\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \"\\n                        \");\n    i0.ɵɵelementStart(25, \"div\", 12);\n    i0.ɵɵtext(26, \"\\n                            \");\n    i0.ɵɵelementStart(27, \"div\", 11);\n    i0.ɵɵtext(28);\n    i0.ɵɵpipe(29, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n                        \");\n    i0.ɵɵelementStart(32, \"div\", 12);\n    i0.ɵɵtext(33, \"\\n                            \");\n    i0.ɵɵelementStart(34, \"div\", 11);\n    i0.ɵɵtext(35);\n    i0.ɵɵpipe(36, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(37, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(38, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(39, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroupName\", i_r6);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", item_r5.value.itemType === \"ITX\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r5.value.itemName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Appr Amt: \", item_r5.value.apprAmt, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"Formula: \", item_r5.value.formulaCode, \" \", ctx_r4.getCodeDesc(item_r5.value.formulaCode), \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"Computation: \", item_r5.value.computedFormula, \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate2(\"Verifier: \", item_r5.value.verifierInit, \" (\", i0.ɵɵpipeBind1(29, 11, ctx_r4.dateUtilsService.convertUnixToDateString(item_r5.value.verifiedDt, ctx_r4.dateFormat)), \")\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate2(\"Approver: \", item_r5.value.approverInit, \"  (\", i0.ɵɵpipeBind1(36, 13, ctx_r4.dateUtilsService.convertUnixToDateString(item_r5.value.approvedDt, ctx_r4.dateFormat)), \")\");\n  }\n}\nfunction ItemChangeHistorySectionComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵelementStart(2, \"div\", 5);\n    i0.ɵɵtext(3, \"\\n                \");\n    i0.ɵɵtemplate(4, ItemChangeHistorySectionComponent_div_5_p_card_4_Template, 40, 15, \"p-card\", 6);\n    i0.ɵɵtext(5, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.otherSEItemArr.controls);\n  }\n}\nfunction ItemChangeHistorySectionComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n            \");\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵelement(2, \"i\", 14);\n    i0.ɵɵtext(3, \"\\u00A0\\n                No records found.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n         \");\n  }\n}\nclass ItemChangeHistorySectionComponent {\n  constructor(dateUtilsService, formBuilder, claimService, toastService) {\n    this.dateUtilsService = dateUtilsService;\n    this.formBuilder = formBuilder;\n    this.claimService = claimService;\n    this.toastService = toastService;\n    this.seHardCopyDetails = {};\n    this.currHardCopyDetails = {};\n    this.selectedChange = new core_1.EventEmitter();\n    this.formulaList = [];\n    this.VEHICLE_RENTAL = \"VEHICLE RENTAL\";\n    this.SE_CLAIM_TYPE = 'S';\n    this.loading = false;\n    this.dateFormat = \"DD-MM-YYYY(HHMM)\";\n    this.computationStr = \"(99.32)*64\";\n    this.vehicleItemList = [];\n    this.nonVehicleItemList = [];\n    this.itemForm = this.formBuilder.group({\n      otherSEItemArr: this.formBuilder.array([])\n      // vehicleRentalItemArr: this.formBuilder.array([])\n    });\n\n    console.log(\"test\");\n  }\n  ngOnInit() {\n    this.retrieveFormulaList();\n  }\n  retrieveFormulaList() {\n    let params = new http_1.HttpParams();\n    params = params.append(\"claimType\", this.SE_CLAIM_TYPE);\n    this.claimService.retrieveFormulaList({\n      params\n    }).subscribe(resp => {\n      if (resp.status === 200 && resp.body.data) {\n        const sortedData = resp.body.data;\n        sortedData.forEach(x => {\n          this.formulaList.push({\n            name: x.formulaDesc,\n            key: x.formulaCode\n          });\n        });\n        console.log(\"the formula list\", this.formulaList);\n      }\n    }, error => {\n      console.log(\"error is\" + String(error?.error?.error_desc));\n      this.toastService.error(String(error?.error?.error_desc));\n    });\n  }\n  get otherSEItemArr() {\n    return this.itemForm.get('otherSEItemArr');\n  }\n  // get vehicleRentalItemArr(){\n  //   return this.itemForm.get('vehicleRentalItemArr') as FormArray;\n  // }\n  constructForm() {\n    this.retrieveSEItems();\n  }\n  ngOnChanges(changes) {\n    if (changes['seHardCopyDetails']?.currentValue) {\n      this.currHardCopyDetails = changes['seHardCopyDetails'].currentValue;\n      this.constructForm();\n    }\n  }\n  retrieveSEItems() {\n    let params = new http_1.HttpParams();\n    params = params.append(\"claimId\", this.currHardCopyDetails?.claimId);\n    this.claimService.retrieveClaimItemsHistory({\n      params\n    }).subscribe(resp => {\n      if (resp) {\n        if (resp.status === 200 && resp.body.data) {\n          this.setClaimItems(resp.body.data);\n          // this.setVehicleRentalItems(this.vehicleItemList);\n        }\n      }\n    }, error => {\n      console.log(\"error is\" + String(error?.error?.error_desc));\n      this.toastService.error(String(error?.error?.error_desc));\n    });\n  }\n  getCodeDesc(formulaCode) {\n    const rslt = this.formulaList.find(x => x.key.trim() === formulaCode.trim());\n    return rslt?.name;\n  }\n  //sets other claim item list\n  setClaimItems(data) {\n    console.log(\"data is \", data);\n    data.sort(this.sortByItemType());\n    this.otherSEItemArr.clear();\n    data.forEach(x => {\n      this.otherSEItemArr.push(this.formBuilder.group({\n        apprAmt: x.apprAmt,\n        itemName: x.itemName,\n        formulaCode: x.formulaCode,\n        latestStatus: x.latestStatus,\n        claimItemId: x.id,\n        apprBasis: x.apprBasis,\n        itemType: x.itemType,\n        computedFormula: x.computedFormula,\n        computedAmt: x.computedAmt,\n        approverInit: x.approverInit,\n        verifierInit: x.verifierInit,\n        approvedDt: x.approvedDt,\n        verifiedDt: x.verifiedDt\n      }));\n    });\n  }\n  sortByItemType() {\n    return function (a, b) {\n      if (a.itemType === 'ITX' || a.itemType === 'REP') {\n        return -1;\n      } else if (b.itemType === 'ITX' || b.itemType === 'REP') {\n        return -1;\n      } else {\n        return a.itemName < b.itemName ? -1 : 1;\n      }\n    };\n  }\n  //sets vehicle claim item list\n  // setVehicleRentalItems(data: any[]): void{\n  //   this.vehicleRentalItemArr.clear();\n  //   data.forEach(x=>{\n  //     this.vehicleRentalItemArr.push(this.formBuilder.group({\n  //       apprAmt: x.apprAmt,\n  //       itemName: x.itemName,\n  //       formulaCode: x.formulaCode,\n  //       latestStatus: x.latestStatus,\n  //       claimItemId: x.id,\n  //       apprBasis: x.apprBasis,\n  //       itemType: x.itemType,\n  //       computedFormula: x.computedFormula,\n  //       computedAmt: x.computedAmt\n  //     })\n  //   )});\n  // }\n  accordionClick() {\n    this.selectedChange.emit(this.selected);\n  }\n}\nexports.ItemChangeHistorySectionComponent = ItemChangeHistorySectionComponent;\nItemChangeHistorySectionComponent.ɵfac = function ItemChangeHistorySectionComponent_Factory(t) {\n  return new (t || ItemChangeHistorySectionComponent)(i0.ɵɵdirectiveInject(i1.DateUtilsService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ClaimService), i0.ɵɵdirectiveInject(i4.CustomToastService));\n};\nItemChangeHistorySectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ItemChangeHistorySectionComponent,\n  selectors: [[\"n2-item-change-history-section\"]],\n  inputs: {\n    seHardCopyDetails: \"seHardCopyDetails\",\n    changesIndicator: \"changesIndicator\",\n    selected: \"selected\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 12,\n  vars: 4,\n  consts: [[\"header\", \"Item Change History\", 3, \"selected\", \"selectedChange\", \"click\"], [\"sectionTab\", \"\"], [3, \"formGroup\"], [4, \"ngIf\", \"ngIfElse\"], [\"emptymessage\", \"\"], [\"formArrayName\", \"otherSEItemArr\", 1, \"grid\", \"col-12\", \"m-0\", \"p-0\"], [\"class\", \"flex col-6 align-items-stretch p-1 m-0\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"col-6\", \"align-items-stretch\", \"p-1\", \"m-0\", 3, \"formGroupName\"], [1, \"grid\", \"p-0\", \"m-0\"], [1, \"col-12\", \"flex\", \"align-items-center\", \"p-0\", \"m-0\"], [\"class\", \"collapse-card\", \"formControlName\", \"collapseCard\", \"onIcon\", \"pi pi-plus\", \"offIcon\", \"pi pi-minus\", \"style\", \"margin-right: 0.5em\", 3, \"click\", 4, \"ngIf\"], [2, \"margin-right\", \"2em\"], [1, \"col-6\", \"flex\", \"align-items-center\"], [\"formControlName\", \"collapseCard\", \"onIcon\", \"pi pi-plus\", \"offIcon\", \"pi pi-minus\", 1, \"collapse-card\", 2, \"margin-right\", \"0.5em\", 3, \"click\"], [1, \"pi\", \"pi-info-circle\"]],\n  template: function ItemChangeHistorySectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-accordionTab\", 0, 1);\n      i0.ɵɵlistener(\"selectedChange\", function ItemChangeHistorySectionComponent_Template_p_accordionTab_selectedChange_0_listener($event) {\n        return ctx.selected = $event;\n      })(\"click\", function ItemChangeHistorySectionComponent_Template_p_accordionTab_click_0_listener() {\n        return ctx.accordionClick();\n      });\n      i0.ɵɵtext(2, \"\\n    \");\n      i0.ɵɵelementStart(3, \"form\", 2);\n      i0.ɵɵtext(4, \"\\n        \");\n      i0.ɵɵtemplate(5, ItemChangeHistorySectionComponent_div_5_Template, 7, 1, \"div\", 3);\n      i0.ɵɵtext(6, \"\\n        \");\n      i0.ɵɵtemplate(7, ItemChangeHistorySectionComponent_ng_template_7_Template, 5, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtext(9, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(10, \"\\n\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(11, \"\\n\\n\\n\\n\");\n    }\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(8);\n      i0.ɵɵproperty(\"selected\", ctx.selected);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.itemForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.otherSEItemArr.controls.length !== 0)(\"ngIfElse\", _r2);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i2.FormGroupName, i2.FormArrayName, i6.Card, i7.AccordionTab, i8.ToggleButton, i9.DefaultStringPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpdGVtLWNoYW5nZS1oaXN0b3J5LXNlY3Rpb24uY29tcG9uZW50LnNjc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvY2xhaW0vc2UtY2xhaW0vc2UtY2xhaW0tdmVyaWZpY2F0aW9uL2l0ZW0tY2hhbmdlLWhpc3Rvcnktc2VjdGlvbi9pdGVtLWNoYW5nZS1oaXN0b3J5LXNlY3Rpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGdNQUFnTSIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ItemChangeHistorySectionComponent","constructor","dateUtilsService","formBuilder","claimService","toastService","core_1","group","otherSEItemArr","array","console","log","ngOnInit","retrieveFormulaList","params","http_1","append","SE_CLAIM_TYPE","subscribe","resp","status","body","data","sortedData","forEach","x","formulaList","push","name","formulaDesc","key","formulaCode","error","String","error_desc","itemForm","get","constructForm","retrieveSEItems","ngOnChanges","changes","currentValue","currHardCopyDetails","claimId","retrieveClaimItemsHistory","setClaimItems","getCodeDesc","rslt","find","trim","sort","sortByItemType","clear","apprAmt","itemName","latestStatus","claimItemId","id","apprBasis","itemType","computedFormula","computedAmt","approverInit","verifierInit","approvedDt","verifiedDt","a","b","accordionClick","selectedChange","emit","selected","exports","selectors","inputs","seHardCopyDetails","changesIndicator","outputs","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\item-change-history-section\\item-change-history-section.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\item-change-history-section\\item-change-history-section.component.html"],"sourcesContent":["import { HttpParams } from '@angular/common/http';\r\nimport {Component, EventEmitter, Input, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport { FormArray, FormBuilder } from '@angular/forms';\r\nimport { ClaimService } from 'app/claim/service/claim.service';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\n\r\n@Component({\r\n  selector: 'n2-item-change-history-section',\r\n  templateUrl: './item-change-history-section.component.html',\r\n  styleUrls: ['./item-change-history-section.component.scss']\r\n})\r\nexport class ItemChangeHistorySectionComponent implements OnInit {\r\n\r\n  @Input() seHardCopyDetails:any = {};\r\n  currHardCopyDetails: any = {};\r\n\r\n  @Input() changesIndicator: boolean;\r\n\r\n  @Input() selected:boolean;\r\n  @Output() selectedChange = new EventEmitter<boolean>();\r\n  formulaList:any[] = [];\r\n\r\n  readonly VEHICLE_RENTAL = \"VEHICLE RENTAL\";\r\n  readonly SE_CLAIM_TYPE = 'S';\r\n\r\n  loading = false;\r\n\r\n  dateFormat = \"DD-MM-YYYY(HHMM)\";\r\n  computationStr = \"(99.32)*64\";\r\n  vehicleItemList:any[]=[];\r\n  nonVehicleItemList:any[]=[];\r\n\r\n  itemForm = this.formBuilder.group({\r\n    otherSEItemArr: this.formBuilder.array([]),\r\n    // vehicleRentalItemArr: this.formBuilder.array([])\r\n  })\r\n\r\n\r\n  constructor(\r\n    public dateUtilsService: DateUtilsService,\r\n    private formBuilder: FormBuilder,\r\n    private claimService: ClaimService,\r\n    private toastService: CustomToastService\r\n\r\n  ) {     console.log(\"test\");\r\n}\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveFormulaList();\r\n\r\n\r\n  }\r\n\r\n  retrieveFormulaList():void{\r\n    let params = new HttpParams();\r\n    params = params.append(\"claimType\", this.SE_CLAIM_TYPE);\r\n    this.claimService.retrieveFormulaList({params}).subscribe((resp:any) => {\r\n      if(resp.status === 200 && resp.body.data){\r\n        const sortedData = resp.body.data;\r\n        sortedData.forEach((x:any)=>{\r\n          this.formulaList.push({\r\n            name:x.formulaDesc,\r\n            key: x.formulaCode\r\n          })\r\n        })\r\n        console.log(\"the formula list\", this.formulaList)\r\n    }},\r\n    (error: any) => {\r\n      console.log(\"error is\" + String(error?.error?.error_desc));\r\n      this.toastService.error(String(error?.error?.error_desc));\r\n    });\r\n  }\r\n\r\n\r\n  get otherSEItemArr(){\r\n    return this.itemForm.get('otherSEItemArr') as FormArray;\r\n  }\r\n\r\n  // get vehicleRentalItemArr(){\r\n  //   return this.itemForm.get('vehicleRentalItemArr') as FormArray;\r\n  // }\r\n\r\n  constructForm():void{\r\n    this.retrieveSEItems();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void{\r\n    if(changes['seHardCopyDetails']?.currentValue) {\r\n      this.currHardCopyDetails=changes['seHardCopyDetails'].currentValue;\r\n      this.constructForm();\r\n\r\n    }\r\n  }\r\n\r\n  retrieveSEItems():void{\r\n    let params = new HttpParams();\r\n    params = params.append(\"claimId\",this.currHardCopyDetails?.claimId);\r\n    this.claimService.retrieveClaimItemsHistory({params}).subscribe((resp:any) => {\r\n\r\n      if(resp){\r\n          if(resp.status === 200 && resp.body.data){\r\n            this.setClaimItems(resp.body.data);\r\n            // this.setVehicleRentalItems(this.vehicleItemList);\r\n          }\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(\"error is\" + String(error?.error?.error_desc));\r\n        this.toastService.error(String(error?.error?.error_desc));\r\n      });\r\n  }\r\n\r\n  getCodeDesc(formulaCode: string): string{\r\n    const rslt = this.formulaList.find(x=>\r\n      x.key.trim() === formulaCode.trim()\r\n    );\r\n    return rslt?.name as string;\r\n  }\r\n\r\n  //sets other claim item list\r\n  setClaimItems(data: any[]): void{\r\n    console.log(\"data is \",data);\r\n    data.sort(this.sortByItemType())\r\n    this.otherSEItemArr.clear();\r\n    data.forEach(x=>{\r\n      this.otherSEItemArr.push(this.formBuilder.group({\r\n        apprAmt: x.apprAmt,\r\n        itemName: x.itemName,\r\n        formulaCode: x.formulaCode,\r\n        latestStatus: x.latestStatus,\r\n        claimItemId: x.id,\r\n        apprBasis: x.apprBasis,\r\n        itemType: x.itemType,\r\n        computedFormula: x.computedFormula,\r\n        computedAmt: x.computedAmt,\r\n        approverInit: x.approverInit,\r\n        verifierInit: x.verifierInit,\r\n        approvedDt: x.approvedDt,\r\n        verifiedDt: x.verifiedDt\r\n      })\r\n    )});\r\n\r\n  }\r\n\r\n  \r\n  sortByItemType(){\r\n    return function (a: any, b: any) {\r\n      if(a.itemType==='ITX' || a.itemType === 'REP'){\r\n        return -1;\r\n      }else if(b.itemType==='ITX'|| b.itemType === 'REP'){\r\n        return -1;\r\n      }else {\r\n        return a.itemName < b.itemName ? -1 : 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  //sets vehicle claim item list\r\n  // setVehicleRentalItems(data: any[]): void{\r\n  //   this.vehicleRentalItemArr.clear();\r\n  //   data.forEach(x=>{\r\n  //     this.vehicleRentalItemArr.push(this.formBuilder.group({\r\n  //       apprAmt: x.apprAmt,\r\n  //       itemName: x.itemName,\r\n  //       formulaCode: x.formulaCode,\r\n  //       latestStatus: x.latestStatus,\r\n  //       claimItemId: x.id,\r\n  //       apprBasis: x.apprBasis,\r\n  //       itemType: x.itemType,\r\n  //       computedFormula: x.computedFormula,\r\n  //       computedAmt: x.computedAmt\r\n\r\n  //     })\r\n  //   )});\r\n  // }\r\n\r\n  accordionClick(): void{\r\n    this.selectedChange.emit(this.selected);\r\n  }\r\n\r\n}\r\n","<p-accordionTab header=\"Item Change History\" #sectionTab [(selected)]=\"selected\" (click) = \"accordionClick()\">\r\n    <form [formGroup] = \"itemForm\">\r\n        <div *ngIf=\"otherSEItemArr.controls.length!==0; else emptymessage\">\r\n            <div class = \"grid col-12 m-0 p-0\" formArrayName=\"otherSEItemArr\">\r\n                <p-card class = \"flex col-6 align-items-stretch p-1 m-0\" *ngFor=\"let item of otherSEItemArr.controls; let i = index\" [formGroupName]=\"i\">\r\n                    <div class = \"grid p-0 m-0\">\r\n                        <div class = \"col-12 flex align-items-center p-0 m-0\" >\r\n                                <p-toggleButton *ngIf = \"item.value.itemType === 'ITX'\" class =\"collapse-card\" (click)=\"!item.value.collapseCard\"\r\n                                formControlName=\"collapseCard\" onIcon=\"pi pi-plus\" offIcon=\"pi pi-minus\" style=\"margin-right: 0.5em\"></p-toggleButton>\r\n                                <div style=\"margin-right: 2em\"><b>{{ item.value.itemName }}</b></div>\r\n                                <div style=\"margin-right: 2em\">Appr Amt: {{ item.value.apprAmt }}</div>\r\n                                <div style=\"margin-right: 2em\">Formula: {{ item.value.formulaCode }} {{ getCodeDesc(item.value.formulaCode) }}</div>\r\n                            </div>\r\n\r\n                        <div class = \"col-12 flex align-items-center p-0 m-0\" >\r\n                            <div >Computation: {{ item.value.computedFormula }}</div>\r\n                        </div>\r\n                        <div class = \"col-6 flex align-items-center\" >\r\n                            <div style=\"margin-right: 2em; \">Verifier: {{ item.value.verifierInit }} ({{ this.dateUtilsService.convertUnixToDateString(item.value.verifiedDt,this.dateFormat) | defaultString }})</div>\r\n                        </div>\r\n                        <div class = \"col-6 flex align-items-center\" >\r\n                            <div style=\"margin-right: 2em; \">Approver: {{ item.value.approverInit }}  ({{ this.dateUtilsService.convertUnixToDateString(item.value.approvedDt,this.dateFormat) | defaultString }})</div>\r\n                        </div>\r\n                    </div>\r\n                </p-card>\r\n            </div>\r\n        </div>\r\n        <ng-template #emptymessage>\r\n            <span><i class=\"pi pi-info-circle\"></i>&nbsp;\r\n                No records found.</span>\r\n         </ng-template>\r\n    </form>\r\n\r\n</p-accordionTab>\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}