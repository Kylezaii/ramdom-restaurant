{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnualWriteOffService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/common/http\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nclass AnnualWriteOffService {\n  constructor(http, applicationConfigService, ns2Http) {\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n    this.ns2Http = ns2Http;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('api/payment/writeoff-annual');\n  }\n  getAllAnnualWriteOffRecords(options) {\n    return this.ns2Http.get(this.resourceUrl, options);\n  }\n  // Retrieve Annual Writeoff given Annual Writeoff record ID\n  getById(annualWriteOffRecordId, options) {\n    const url = this.resourceUrl + '/' + annualWriteOffRecordId;\n    return this.ns2Http.get(url, options);\n  }\n  // Verify source file given Annual Writeoff record ID\n  verifySource(annualWriteOffRecordId, request) {\n    const url = this.resourceUrl + '/' + annualWriteOffRecordId + '/verify';\n    return this.ns2Http.post(url, request);\n  }\n  // Approve an Annual Writeoff given Annual Writeoff record ID\n  approveAnnualWriteoff(annualWriteOffRecord, options) {\n    const url = this.resourceUrl + '/approve';\n    return this.ns2Http.post(url, JSON.stringify(annualWriteOffRecord), options);\n  }\n  // Reject an Annual Writeoff given Annual Writeoff record ID\n  rejectAnnualWriteoff(annualWriteOffRecord, options) {\n    const url = this.resourceUrl + '/reject';\n    return this.ns2Http.post(url, JSON.stringify(annualWriteOffRecord), options);\n  }\n  //Upload/Create Annual Writeoff\n  uploadAnnualWriteoffFile(request) {\n    const url = this.resourceUrl;\n    return this.ns2Http.post(url, request);\n  }\n}\nexports.AnnualWriteOffService = AnnualWriteOffService;\nAnnualWriteOffService.ɵfac = function AnnualWriteOffService_Factory(t) {\n  return new (t || AnnualWriteOffService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService), i0.ɵɵinject(i3.Ns2HttpService));\n};\nAnnualWriteOffService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AnnualWriteOffService,\n  factory: AnnualWriteOffService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;;;;;AAOA,MAGaA,qBAAqB;EAGhCC,YACUC,IAAgB,EAChBC,wBAAkD,EAClDC,OAAuB;IAFvB,SAAI,GAAJF,IAAI;IACJ,6BAAwB,GAAxBC,wBAAwB;IACxB,YAAO,GAAPC,OAAO;IALV,gBAAW,GAAG,IAAI,CAACD,wBAAwB,CAACE,cAAc,CAAC,6BAA6B,CAAC;EAMhG;EAEOC,2BAA2B,CAACC,OAAa;IAC9C,OAAO,IAAI,CAACH,OAAO,CAACI,GAAG,CAAC,IAAI,CAACC,WAAW,EAAEF,OAAO,CAAC;EACpD;EAEA;EACOG,OAAO,CAACC,sBAA8B,EAAEJ,OAAa;IAC1D,MAAMK,GAAG,GAAG,IAAI,CAACH,WAAW,GAAG,GAAG,GAAGE,sBAAsB;IAC3D,OAAO,IAAI,CAACP,OAAO,CAACI,GAAG,CAACI,GAAG,EAAEL,OAAO,CAAC;EACvC;EAEA;EACOM,YAAY,CAACF,sBAA8B,EAAEG,OAAY;IAC9D,MAAMF,GAAG,GAAG,IAAI,CAACH,WAAW,GAAG,GAAG,GAAGE,sBAAsB,GAAG,SAAS;IACvE,OAAO,IAAI,CAACP,OAAO,CAACW,IAAI,CAACH,GAAG,EAAEE,OAAO,CAAC;EACxC;EAEA;EACOE,qBAAqB,CAACC,oBAAoC,EAAEV,OAAa;IAC9E,MAAMK,GAAG,GAAG,IAAI,CAACH,WAAW,GAAG,UAAU;IACzC,OAAO,IAAI,CAACL,OAAO,CAACW,IAAI,CAACH,GAAG,EAAEM,IAAI,CAACC,SAAS,CAACF,oBAAoB,CAAC,EAAEV,OAAO,CAAC;EAC9E;EAEA;EACOa,oBAAoB,CAACH,oBAAoC,EAAEV,OAAa;IAC7E,MAAMK,GAAG,GAAG,IAAI,CAACH,WAAW,GAAG,SAAS;IACxC,OAAO,IAAI,CAACL,OAAO,CAACW,IAAI,CAACH,GAAG,EAAEM,IAAI,CAACC,SAAS,CAACF,oBAAoB,CAAC,EAAEV,OAAO,CAAC;EAC9E;EAEA;EACOc,wBAAwB,CAACP,OAAY;IAC1C,MAAMF,GAAG,GAAG,IAAI,CAACH,WAAW;IAC5B,OAAO,IAAI,CAACL,OAAO,CAACW,IAAI,CAACH,GAAG,EAAEE,OAAO,CAAC;EACxC;;AA5CFQ;;mBAGatB,qBAAqB;AAAA;;SAArBA,qBAAqB;EAAAuB,SAArBvB,qBAAqB;EAAAwB,YAFpB;AAAM","names":["AnnualWriteOffService","constructor","http","applicationConfigService","ns2Http","getEndpointFor","getAllAnnualWriteOffRecords","options","get","resourceUrl","getById","annualWriteOffRecordId","url","verifySource","request","post","approveAnnualWriteoff","annualWriteOffRecord","JSON","stringify","rejectAnnualWriteoff","uploadAnnualWriteoffFile","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payment\\annual-write-off\\service\\annual-write-off.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { AnnualWriteOff } from 'app/payment/annual-write-off/model/annual-write-off.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnnualWriteOffService {\r\n  public resourceUrl = this.applicationConfigService.getEndpointFor('api/payment/writeoff-annual');\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private applicationConfigService: ApplicationConfigService,\r\n    private ns2Http: Ns2HttpService) {\r\n  }\r\n\r\n  public getAllAnnualWriteOffRecords(options?: any): Observable<any> {\r\n    return this.ns2Http.get(this.resourceUrl, options);\r\n  }\r\n\r\n  // Retrieve Annual Writeoff given Annual Writeoff record ID\r\n  public getById(annualWriteOffRecordId: string, options?: any): Observable<any> {\r\n    const url = this.resourceUrl + '/' + annualWriteOffRecordId;\r\n    return this.ns2Http.get(url, options);\r\n  }\r\n\r\n  // Verify source file given Annual Writeoff record ID\r\n  public verifySource(annualWriteOffRecordId: string, request: any): Observable<any> {\r\n    const url = this.resourceUrl + '/' + annualWriteOffRecordId + '/verify';\r\n    return this.ns2Http.post(url, request);\r\n  }\r\n\r\n  // Approve an Annual Writeoff given Annual Writeoff record ID\r\n  public approveAnnualWriteoff(annualWriteOffRecord: AnnualWriteOff, options?: any): Observable<any> {\r\n    const url = this.resourceUrl + '/approve';\r\n    return this.ns2Http.post(url, JSON.stringify(annualWriteOffRecord), options);\r\n  }\r\n\r\n  // Reject an Annual Writeoff given Annual Writeoff record ID\r\n  public rejectAnnualWriteoff(annualWriteOffRecord: AnnualWriteOff, options?: any): Observable<any> {\r\n    const url = this.resourceUrl + '/reject';\r\n    return this.ns2Http.post(url, JSON.stringify(annualWriteOffRecord), options);\r\n  }\r\n  \r\n  //Upload/Create Annual Writeoff\r\n  public uploadAnnualWriteoffFile(request: any): Observable<any> {\r\n    const url = this.resourceUrl;\r\n    return this.ns2Http.post(url, request);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}