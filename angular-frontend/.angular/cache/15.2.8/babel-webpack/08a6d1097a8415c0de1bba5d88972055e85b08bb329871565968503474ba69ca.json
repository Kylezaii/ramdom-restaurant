{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReviewUnitSettingsComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst http_1 = require(\"@angular/common/http\");\nconst api_1 = require(\"primeng/api\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i2 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i3 = tslib_1.__importStar(require(\"primeng/dynamicdialog\"));\nconst i4 = tslib_1.__importStar(require(\"../../../service/access-right-review.service\"));\nconst i5 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i6 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i7 = tslib_1.__importStar(require(\"primeng/confirmpopup\"));\nconst i8 = tslib_1.__importStar(require(\"primeng/multiselect\"));\nconst _c0 = function () {\n  return {\n    \"float\": \"right\"\n  };\n};\nclass ReviewUnitSettingsComponent {\n  constructor(confirmationService, toastService, dialogRef, accessRightReviewService, formBuilder) {\n    this.confirmationService = confirmationService;\n    this.toastService = toastService;\n    this.dialogRef = dialogRef;\n    this.accessRightReviewService = accessRightReviewService;\n    this.formBuilder = formBuilder;\n    this.reviewUnitSettingForm = this.formBuilder.group({\n      NPC: [],\n      NSPD: [],\n      HRSD: [],\n      HRSSC: []\n    });\n  }\n  ngOnInit() {\n    this.getCurrentReviewUnitSettings();\n  }\n  getCurrentReviewUnitSettings() {\n    console.log(\"getCurrentReviewUnitSettings()\");\n    this.accessRightReviewService.getReviewingUnit().subscribe({\n      next: res => {\n        const data = res.body.data;\n        const dtoList = [];\n        data.forEach(record => {\n          const dto = {\n            id: record.id,\n            unitName: record.unitName,\n            reviewBy: record.reviewBy,\n            selected: true\n          };\n          dtoList.push(dto);\n        });\n        this.currentReviewUnitSettings = dtoList;\n        console.log(\"Current settings\", this.currentReviewUnitSettings);\n        this.autoFillReviewUnitSettings();\n      },\n      error(error) {\n        console.log(error);\n      },\n      complete() {\n        console.log(\"getCurrentReviewUnitSettings(): Completed\");\n      }\n    });\n  }\n  autoFillReviewUnitSettings() {\n    console.log(\"autoFillReviewUnitSettings()\");\n    this.reviewUnitSettingForm.patchValue({\n      NPC: this.currentReviewUnitSettings.filter(item => item.reviewBy === \"NPC\"),\n      NSPD: this.currentReviewUnitSettings.filter(item => item.reviewBy === \"NSPD\"),\n      HRSD: this.currentReviewUnitSettings.filter(item => item.reviewBy === \"HRSD\"),\n      HRSSC: this.currentReviewUnitSettings.filter(item => item.reviewBy === \"HRSSC\")\n    });\n  }\n  confirm(event) {\n    this.confirmationService.confirm({\n      target: event.target,\n      message: 'Good to go?',\n      icon: 'pi pi-exclamation-triangle',\n      acceptLabel: \"Proceed\",\n      rejectLabel: \"No\",\n      accept: () => {\n        const results = this.checkUnitAssignment();\n        if (results) {\n          this.prepareReviewUnitSettingRequestBody();\n          this.putNewSettings();\n        }\n      }\n    });\n  }\n  checkUnitAssignment() {\n    let unassignUnit = false;\n    for (const unitList of this.currentReviewUnitSettings) {\n      if (unitList.selected === false) {\n        unassignUnit = true;\n      }\n    }\n    if (unassignUnit === true) {\n      this.toastService.error(\"Units not assigned for Accounts Review found. Please ensure that all Units are applied\");\n      return false;\n    } else {\n      return true;\n    }\n  }\n  prepareReviewUnitSettingRequestBody() {\n    console.log(\"prepareReviewUnitSettingRequestBody()\");\n    const dtoList = [];\n    Object.keys(this.reviewUnitSettingForm.controls).forEach(key => {\n      this.reviewUnitSettingForm.get(key).value.forEach(value => {\n        const dto = {\n          id: value.id,\n          unitName: value.unitName,\n          reviewBy: key\n        };\n        dtoList.push(dto);\n      });\n    });\n    this.newReviewUnitSettings = dtoList;\n    console.log(this.newReviewUnitSettings);\n  }\n  putNewSettings() {\n    console.log(\"postNewSettings()\");\n    setTimeout(() => {\n      this.accessRightReviewService.putReviewingUnit(this.newReviewUnitSettings).subscribe({\n        next: res => {\n          if (res.body?.status === 200 /* HttpStatusCode.Ok */) {\n            this.toastService.success(res.body?.success_message);\n            this.getCurrentReviewUnitSettings();\n          }\n        },\n        error: error => {\n          console.log(error);\n          if (error.error?.status === 400 /* HttpStatusCode.BadRequest */) {\n            this.toastService.error(error.error?.error_desc);\n          }\n        },\n        complete() {\n          console.log(\"getCurrentReviewUnitSettings(): Completed\");\n        }\n      });\n    }, 1000);\n  }\n  /*\r\n  Change Unitlist selected value to true/false when toggle by user.\r\n  Ensure one to one mapping on frontend.\r\n  */\n  onChange(event) {\n    event.itemValue.selected = !event.itemValue.selected;\n    console.log(event.itemValue);\n  }\n  closeDialog(cond) {\n    this.dialogRef.close(cond);\n  }\n}\nexports.ReviewUnitSettingsComponent = ReviewUnitSettingsComponent;\nReviewUnitSettingsComponent.ɵfac = function ReviewUnitSettingsComponent_Factory(t) {\n  return new (t || ReviewUnitSettingsComponent)(i0.ɵɵdirectiveInject(i1.ConfirmationService), i0.ɵɵdirectiveInject(i2.CustomToastService), i0.ɵɵdirectiveInject(i3.DynamicDialogRef), i0.ɵɵdirectiveInject(i4.AccessRightReviewService), i0.ɵɵdirectiveInject(i5.FormBuilder));\n};\nReviewUnitSettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReviewUnitSettingsComponent,\n  selectors: [[\"n2-review-unit-settings\"]],\n  features: [i0.ɵɵProvidersFeature([api_1.ConfirmationService])],\n  decls: 64,\n  vars: 8,\n  consts: [[3, \"formGroup\"], [1, \"field\", \"grid\"], [1, \"col-2\"], [1, \"col-10\"], [\"optionLabel\", \"unitName\", \"optionDisabled\", \"selected\", \"display\", \"chip\", \"appendTo\", \"body\", \"formControlName\", \"NPC\", 3, \"options\", \"onChange\"], [\"optionLabel\", \"unitName\", \"optionDisabled\", \"selected\", \"display\", \"chip\", \"appendTo\", \"body\", \"formControlName\", \"NSPD\", 3, \"options\", \"onChange\"], [\"optionLabel\", \"unitName\", \"optionDisabled\", \"selected\", \"display\", \"chip\", \"appendTo\", \"body\", \"formControlName\", \"HRSD\", 3, \"options\", \"onChange\"], [\"optionLabel\", \"unitName\", \"optionDisabled\", \"selected\", \"display\", \"chip\", \"appendTo\", \"body\", \"formControlName\", \"HRSSC\", 3, \"options\", \"onChange\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"label\", \"Cancel\", 1, \"p-button-danger\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"label\", \"Submit\", 1, \"p-button-success\", 3, \"click\"]],\n  template: function ReviewUnitSettingsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵtext(1, \"\\n    \");\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵtext(3, \"\\n        \");\n      i0.ɵɵelementStart(4, \"label\", 2);\n      i0.ɵɵtext(5, \"NPC\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(6, \"\\n        \");\n      i0.ɵɵelementStart(7, \"div\", 3);\n      i0.ɵɵtext(8, \"\\n            \");\n      i0.ɵɵelementStart(9, \"p-multiSelect\", 4);\n      i0.ɵɵlistener(\"onChange\", function ReviewUnitSettingsComponent_Template_p_multiSelect_onChange_9_listener($event) {\n        return ctx.onChange($event);\n      });\n      i0.ɵɵtext(10, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(11, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\n    \");\n      i0.ɵɵelementStart(14, \"div\", 1);\n      i0.ɵɵtext(15, \"\\n        \");\n      i0.ɵɵelementStart(16, \"label\", 2);\n      i0.ɵɵtext(17, \"NSPD\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \"\\n        \");\n      i0.ɵɵelementStart(19, \"div\", 3);\n      i0.ɵɵtext(20, \"\\n            \");\n      i0.ɵɵelementStart(21, \"p-multiSelect\", 5);\n      i0.ɵɵlistener(\"onChange\", function ReviewUnitSettingsComponent_Template_p_multiSelect_onChange_21_listener($event) {\n        return ctx.onChange($event);\n      });\n      i0.ɵɵtext(22, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(24, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \"\\n    \");\n      i0.ɵɵelementStart(26, \"div\", 1);\n      i0.ɵɵtext(27, \"\\n        \");\n      i0.ɵɵelementStart(28, \"label\", 2);\n      i0.ɵɵtext(29, \"HRSD\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \"\\n        \");\n      i0.ɵɵelementStart(31, \"div\", 3);\n      i0.ɵɵtext(32, \"\\n            \");\n      i0.ɵɵelementStart(33, \"p-multiSelect\", 6);\n      i0.ɵɵlistener(\"onChange\", function ReviewUnitSettingsComponent_Template_p_multiSelect_onChange_33_listener($event) {\n        return ctx.onChange($event);\n      });\n      i0.ɵɵtext(34, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(35, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(36, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(37, \"\\n    \");\n      i0.ɵɵelementStart(38, \"div\", 1);\n      i0.ɵɵtext(39, \"\\n        \");\n      i0.ɵɵelementStart(40, \"label\", 2);\n      i0.ɵɵtext(41, \"HRSSC\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(42, \"\\n        \");\n      i0.ɵɵelementStart(43, \"div\", 3);\n      i0.ɵɵtext(44, \"\\n            \");\n      i0.ɵɵelementStart(45, \"p-multiSelect\", 7);\n      i0.ɵɵlistener(\"onChange\", function ReviewUnitSettingsComponent_Template_p_multiSelect_onChange_45_listener($event) {\n        return ctx.onChange($event);\n      });\n      i0.ɵɵtext(46, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(47, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(48, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(49, \"\\n    \");\n      i0.ɵɵelement(50, \"br\");\n      i0.ɵɵtext(51, \"\\n    \");\n      i0.ɵɵelement(52, \"br\");\n      i0.ɵɵtext(53, \"\\n    \");\n      i0.ɵɵelementStart(54, \"footer\");\n      i0.ɵɵtext(55, \"\\n        \");\n      i0.ɵɵelementStart(56, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function ReviewUnitSettingsComponent_Template_button_click_56_listener() {\n        return ctx.closeDialog(false);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(57, \"\\n        \");\n      i0.ɵɵelementStart(58, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function ReviewUnitSettingsComponent_Template_button_click_58_listener($event) {\n        return ctx.confirm($event);\n      });\n      i0.ɵɵtext(59, \"\\n            \");\n      i0.ɵɵelement(60, \"p-confirmPopup\");\n      i0.ɵɵtext(61, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(62, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(63, \"\\n\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.reviewUnitSettingForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"options\", ctx.currentReviewUnitSettings);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"options\", ctx.currentReviewUnitSettings);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"options\", ctx.currentReviewUnitSettings);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"options\", ctx.currentReviewUnitSettings);\n      i0.ɵɵadvance(9);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c0));\n    }\n  },\n  dependencies: [i5.ɵNgNoValidate, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i6.ButtonDirective, i7.ConfirmPopup, i8.MultiSelect],\n  styles: [\"[_nghost-%COMP%]  .p-multiselect {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJldmlldy11bml0LXNldHRpbmdzLmNvbXBvbmVudC5zY3NzIiwiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxccHJvamVjdHMlMjAyXFxuc3BheWlpYXBwXFxzcmNcXG1haW5cXHdlYmFwcFxcYXBwXFxhZG1pblxcYWNjZXNzLWNvbnRyb2xcXG92ZXJ2aWV3XFxhY2Nlc3MtcmlnaHQtcmV2aWV3XFxhY2NvdW50cy1yZXZpZXctc2V0dGluZ3MtbW9kYWxcXHJldmlldy11bml0LXNldHRpbmdzXFxyZXZpZXctdW5pdC1zZXR0aW5ncy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLFdBQUE7QUNBUiIsImZpbGUiOiJyZXZpZXctdW5pdC1zZXR0aW5ncy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0OjpuZy1kZWVwe1xyXG4gICAgLnAtbXVsdGlzZWxlY3R7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbn0iLCI6aG9zdDo6bmctZGVlcCAucC1tdWx0aXNlbGVjdCB7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvYWRtaW4vYWNjZXNzLWNvbnRyb2wvb3ZlcnZpZXcvYWNjZXNzLXJpZ2h0LXJldmlldy9hY2NvdW50cy1yZXZpZXctc2V0dGluZ3MtbW9kYWwvcmV2aWV3LXVuaXQtc2V0dGluZ3MvcmV2aWV3LXVuaXQtc2V0dGluZ3MuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi9wcm9qZWN0cyUyMDIvbnNwYXlpaWFwcC9zcmMvbWFpbi93ZWJhcHAvYXBwL2FkbWluL2FjY2Vzcy1jb250cm9sL292ZXJ2aWV3L2FjY2Vzcy1yaWdodC1yZXZpZXcvYWNjb3VudHMtcmV2aWV3LXNldHRpbmdzLW1vZGFsL3Jldmlldy11bml0LXNldHRpbmdzL3Jldmlldy11bml0LXNldHRpbmdzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksV0FBQTtBQ0FSO0FEQ0EsZ3hCQUFneEIiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdDo6bmctZGVlcHtcclxuICAgIC5wLW11bHRpc2VsZWN0e1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG59IiwiOmhvc3Q6Om5nLWRlZXAgLnAtbXVsdGlzZWxlY3Qge1xuICB3aWR0aDogMTAwJTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["ReviewUnitSettingsComponent","constructor","confirmationService","toastService","dialogRef","accessRightReviewService","formBuilder","group","NPC","NSPD","HRSD","HRSSC","ngOnInit","getCurrentReviewUnitSettings","console","log","getReviewingUnit","subscribe","next","res","data","body","dtoList","forEach","record","dto","id","unitName","reviewBy","selected","push","currentReviewUnitSettings","autoFillReviewUnitSettings","error","complete","reviewUnitSettingForm","patchValue","filter","item","confirm","event","target","message","icon","acceptLabel","rejectLabel","accept","results","checkUnitAssignment","prepareReviewUnitSettingRequestBody","putNewSettings","unassignUnit","unitList","Object","keys","controls","key","get","value","newReviewUnitSettings","setTimeout","putReviewingUnit","status","success","success_message","error_desc","onChange","itemValue","closeDialog","cond","close","exports","selectors","features","api_1","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\access-control\\overview\\access-right-review\\accounts-review-settings-modal\\review-unit-settings\\review-unit-settings.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\access-control\\overview\\access-right-review\\accounts-review-settings-modal\\review-unit-settings\\review-unit-settings.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse, HttpStatusCode } from '@angular/common/http';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\nimport { IUnit, IReviewUnitSettings } from '../../../model/access-right-review.model';\r\nimport { AccessRightReviewService } from '../../../service/access-right-review.service';\r\nimport { DynamicDialogRef } from 'primeng/dynamicdialog';\r\n\r\n@Component({\r\n    selector: 'n2-review-unit-settings',\r\n    templateUrl: './review-unit-settings.component.html',\r\n    styleUrls: ['./review-unit-settings.component.scss'],\r\n    providers: [ConfirmationService]\r\n})\r\n\r\nexport class ReviewUnitSettingsComponent implements OnInit {\r\n\r\n    currentReviewUnitSettings: IUnit[];\r\n    newReviewUnitSettings: IReviewUnitSettings[];\r\n\r\n    reviewUnitSettingForm = this.formBuilder.group({\r\n        NPC: [],\r\n        NSPD: [],\r\n        HRSD: [],\r\n        HRSSC: []\r\n    });\r\n\r\n    constructor(\r\n        private confirmationService: ConfirmationService,\r\n        private toastService: CustomToastService,\r\n        private dialogRef: DynamicDialogRef,\r\n        private accessRightReviewService: AccessRightReviewService,\r\n        private formBuilder: FormBuilder\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.getCurrentReviewUnitSettings();\r\n    }\r\n\r\n    getCurrentReviewUnitSettings(): void {\r\n        console.log(\"getCurrentReviewUnitSettings()\");\r\n        this.accessRightReviewService.getReviewingUnit()\r\n            .subscribe({\r\n                next: (res: HttpResponse<any>) => {\r\n                    const data = res.body.data;\r\n                    const dtoList: IUnit[] = [];\r\n                    data.forEach((record: IUnit) => {\r\n                        const dto = {\r\n                            id: record.id,\r\n                            unitName: record.unitName,\r\n                            reviewBy: record.reviewBy,\r\n                            selected: true\r\n                        }\r\n                        dtoList.push(dto);\r\n                    });\r\n                    this.currentReviewUnitSettings = dtoList;\r\n                    console.log(\"Current settings\", this.currentReviewUnitSettings);\r\n                    this.autoFillReviewUnitSettings();\r\n                },\r\n                error(error: HttpErrorResponse) {\r\n                    console.log(error);\r\n                },\r\n                complete() {\r\n                    console.log(\"getCurrentReviewUnitSettings(): Completed\");\r\n                }\r\n            });\r\n    }\r\n\r\n    autoFillReviewUnitSettings(): void {\r\n        console.log(\"autoFillReviewUnitSettings()\");\r\n        this.reviewUnitSettingForm.patchValue({\r\n            NPC: this.currentReviewUnitSettings.filter(item => item.reviewBy === \"NPC\"),\r\n            NSPD: this.currentReviewUnitSettings.filter(item => item.reviewBy === \"NSPD\"),\r\n            HRSD: this.currentReviewUnitSettings.filter(item => item.reviewBy === \"HRSD\"),\r\n            HRSSC: this.currentReviewUnitSettings.filter(item => item.reviewBy === \"HRSSC\"),\r\n        });\r\n    }\r\n\r\n    confirm(event: Event): void {\r\n        this.confirmationService.confirm({\r\n            target: event.target,\r\n            message: 'Good to go?',\r\n            icon: 'pi pi-exclamation-triangle',\r\n            acceptLabel: \"Proceed\",\r\n            rejectLabel: \"No\",\r\n            accept: () => {\r\n                const results = this.checkUnitAssignment();\r\n                if (results) {\r\n                    this.prepareReviewUnitSettingRequestBody();\r\n                    this.putNewSettings();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    checkUnitAssignment(): boolean {\r\n        let unassignUnit = false;\r\n\r\n        for (const unitList of this.currentReviewUnitSettings) {\r\n            if (unitList.selected === false) {\r\n                unassignUnit = true;\r\n            }\r\n        }\r\n\r\n        if (unassignUnit === true) {\r\n            this.toastService.error(\"Units not assigned for Accounts Review found. Please ensure that all Units are applied\")\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    prepareReviewUnitSettingRequestBody(): void {\r\n        console.log(\"prepareReviewUnitSettingRequestBody()\");\r\n        const dtoList: IReviewUnitSettings[] = [];\r\n        Object.keys(this.reviewUnitSettingForm.controls).forEach(key => {\r\n            this.reviewUnitSettingForm.get(key).value.forEach((value: IUnit) => {\r\n                const dto = {\r\n                    id: value.id,\r\n                    unitName: value.unitName,\r\n                    reviewBy: key,\r\n                }\r\n                dtoList.push(dto);\r\n            })\r\n        })\r\n        this.newReviewUnitSettings = dtoList;\r\n        console.log(this.newReviewUnitSettings);\r\n    }\r\n\r\n    putNewSettings(): void {\r\n        console.log(\"postNewSettings()\");\r\n        setTimeout(() => {\r\n            this.accessRightReviewService.putReviewingUnit(this.newReviewUnitSettings)\r\n                .subscribe(\r\n                    {\r\n                        next: (res: HttpResponse<any>) => {\r\n                            if (res.body?.status === HttpStatusCode.Ok) {\r\n                                this.toastService.success(res.body?.success_message);\r\n                                this.getCurrentReviewUnitSettings();\r\n                            }\r\n                        },\r\n                        error: (error: HttpErrorResponse) => {\r\n                            console.log(error);\r\n                            if (error.error?.status === HttpStatusCode.BadRequest) {\r\n                                this.toastService.error(error.error?.error_desc);\r\n                            }\r\n                        },\r\n                        complete() {\r\n                            console.log(\"getCurrentReviewUnitSettings(): Completed\");\r\n                        }\r\n                    }\r\n                )\r\n        }, 1000);\r\n    }\r\n\r\n    /*\r\n    Change Unitlist selected value to true/false when toggle by user.\r\n    Ensure one to one mapping on frontend.\r\n    */\r\n    onChange(event: any): void {\r\n        event.itemValue.selected = !event.itemValue.selected;\r\n        console.log(event.itemValue);\r\n    }\r\n\r\n    closeDialog(cond: boolean): void {\r\n        this.dialogRef.close(cond);\r\n    }\r\n\r\n}","<form [formGroup]=\"reviewUnitSettingForm\">\r\n    <div class=\"field grid\">\r\n        <label class=\"col-2\">NPC</label>\r\n        <div class=\"col-10\">\r\n            <p-multiSelect [options]=\"currentReviewUnitSettings\" optionLabel=\"unitName\" optionDisabled=\"selected\" display=\"chip\"\r\n                appendTo=\"body\" formControlName=\"NPC\" (onChange)=\"onChange($event)\">\r\n            </p-multiSelect>\r\n        </div>\r\n    </div>\r\n    <div class=\"field grid\">\r\n        <label class=\"col-2\">NSPD</label>\r\n        <div class=\"col-10\">\r\n            <p-multiSelect [options]=\"currentReviewUnitSettings\" optionLabel=\"unitName\" optionDisabled=\"selected\" display=\"chip\"\r\n                appendTo=\"body\" formControlName=\"NSPD\" (onChange)=\"onChange($event)\">\r\n            </p-multiSelect>\r\n        </div>\r\n    </div>\r\n    <div class=\"field grid\">\r\n        <label class=\"col-2\">HRSD</label>\r\n        <div class=\"col-10\">\r\n            <p-multiSelect [options]=\"currentReviewUnitSettings\" optionLabel=\"unitName\" optionDisabled=\"selected\" display=\"chip\"\r\n                appendTo=\"body\" formControlName=\"HRSD\" (onChange)=\"onChange($event)\">\r\n            </p-multiSelect>\r\n        </div>\r\n    </div>\r\n    <div class=\"field grid\">\r\n        <label class=\"col-2\">HRSSC</label>\r\n        <div class=\"col-10\">\r\n            <p-multiSelect [options]=\"currentReviewUnitSettings\" optionLabel=\"unitName\" optionDisabled=\"selected\" display=\"chip\"\r\n                appendTo=\"body\" formControlName=\"HRSSC\" (onChange)=\"onChange($event)\">\r\n            </p-multiSelect>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <br>\r\n    <footer [style]=\"{'float':'right'}\">\r\n        <button pButton pRipple type=\"button\" label=\"Cancel\" class=\"p-button-danger\" (click)=\"closeDialog(false)\"></button>\r\n        <button pButton pRipple type=\"button\" label=\"Submit\" class=\"p-button-success\" (click)=\"confirm($event)\">\r\n            <p-confirmPopup></p-confirmPopup>\r\n        </button>\r\n    </footer>\r\n</form>"]},"metadata":{},"sourceType":"script","externalDependencies":[]}