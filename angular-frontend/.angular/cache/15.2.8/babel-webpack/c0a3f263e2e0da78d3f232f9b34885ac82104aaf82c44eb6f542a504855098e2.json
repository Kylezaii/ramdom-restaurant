{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PayrollComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@angular/core\");\nconst date_validator_directive_1 = require(\"app/shared/validator/date-validator.directive\");\nconst forms_1 = require(\"@angular/forms\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i2 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i4 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i5 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i6 = tslib_1.__importStar(require(\"primeng/inputtext\"));\nconst i7 = tslib_1.__importStar(require(\"primeng/calendar\"));\nconst i8 = tslib_1.__importStar(require(\"primeng/panel\"));\nconst i9 = tslib_1.__importStar(require(\"./view-payroll/view-payroll.component\"));\nconst i10 = tslib_1.__importStar(require(\"./view-payroll-detail/view-payroll-detail.component\"));\nconst _c0 = [\"searchAwardTable\"];\nconst _c1 = [\"awardDetailTable\"];\nfunction PayrollComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"\\n              Please enter a value\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PayrollComponent_span_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"\\n              Invalid NRIC\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PayrollComponent_span_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"\\n                Start of Training Date required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PayrollComponent_span_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"\\n                End of Training Date needs to be later than Start of Training Date\\n              \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PayrollComponent_span_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"\\n                End of Training Date required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PayrollComponent_div_76_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"n2-view-payroll\", 20, 21);\n    i0.ɵɵlistener(\"selectEvent\", function PayrollComponent_div_76_Template_n2_view_payroll_selectEvent_2_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.handleSearchSelect($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n  \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"searchInput\", ctx_r5.searchInput)(\"startDate\", ctx_r5.searchStartDate)(\"endDate\", ctx_r5.searchEndDate)(\"selection\", ctx_r5.selection);\n  }\n}\nfunction PayrollComponent_div_81_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"n2-view-payroll-detail\", 22);\n    i0.ɵɵtext(3, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n  \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"payrollID\", ctx_r6.payrollID);\n  }\n}\nclass PayrollComponent {\n  constructor(fb, toastService, dateUtilsService, localeId) {\n    this.fb = fb;\n    this.toastService = toastService;\n    this.dateUtilsService = dateUtilsService;\n    this.localeId = localeId;\n    //Search Component\n    this.isSearching = false;\n    this.searchInput = \"\";\n    // nricInput = \"\";\n    this.searchStartDate = \"\";\n    this.searchEndDate = \"\";\n    this.selection = \"\";\n    // searchStartDate: Date;\n    // searchEndDate: Date;\n    this.resultList = [];\n    // display result\n    this.showDetail = false;\n    this.showAwardDetail = false;\n    this.payrollID = \"\";\n    this.PayrollDescriptionDict1 = {};\n    //date\n    this.startDateNow = new Date();\n    this.endDateNow = new Date();\n    this.defaultStartDate = new Date(this.startDateNow.setMonth(this.startDateNow.getMonth() - 3));\n    this.defaultEndDate = new Date(this.endDateNow.setMonth(this.endDateNow.getMonth() + 1));\n    // Search by Nric Form\n    this.searchNric = this.fb.group({\n      nric: new forms_1.FormControl(null, [forms_1.Validators.required, forms_1.Validators.pattern('^[STFG]\\\\d{7}[A-Z]$')]),\n      trgStartDate: new forms_1.FormControl(this.defaultStartDate, [forms_1.Validators.required]),\n      trgEndDate: new forms_1.FormControl(this.defaultEndDate, [forms_1.Validators.required])\n    }, {\n      validators: date_validator_directive_1.DateValidator.dateLessThanOrEquals(\"trgStartDate\", \"trgEndDate\")\n    });\n  }\n  ngOnInit() {\n    this.defaultStartDate.setDate(1);\n    this.defaultEndDate.setDate(1);\n    // this.logDates();\n    this.searchNric.get(\"trgStartDate\").patchValue(this.getDt(\"trgStartDate\"));\n    this.searchNric.get(\"trgEndDate\").patchValue(this.getDt(\"trgEndDate\"));\n    // this.logDates();\n  }\n\n  searchAll($event) {\n    console.log(\"searching by nric\");\n    const nric = this.searchNric.get('nric').value;\n    this.searchStartDate = \"\";\n    this.searchEndDate = \"\";\n    if (this.searchNric.get('nric')?.hasError('required')) {\n      console.log(\"NRIC IS INVALID\");\n      this.searchInput = nric;\n      this.isSearching = true;\n      this.selection = \"searchall\";\n      this.showDetail = false;\n      this.showAwardDetail = false;\n      console.log($event);\n      this.toastService.warn(\"Fill in NRIC\");\n    } else {\n      //display table when nric is valid\n      console.log(\"NRIC IS VALID\");\n      this.searchInput = nric;\n      this.selection = \"searchall\";\n      this.isSearching = true;\n      this.showDetail = true;\n      this.showAwardDetail = false;\n      console.log(this.searchInput);\n      if (this.ViewPayrollComponent !== undefined) {\n        // After component have been initialised\n        this.ViewPayrollComponent.startDate = \"\";\n        this.ViewPayrollComponent.endDate = \"\";\n        this.ViewPayrollComponent.searchnric();\n      }\n      this.toastService.info(\"Retrieving all records...\");\n    }\n  }\n  search(event) {\n    console.log(event);\n    this.searchStartDate = \"\";\n    this.searchEndDate = \"\";\n    if (!this.searchNric.valid) {\n      console.log(this.searchNric.errors);\n      this.isSearching = false;\n      this.showDetail = false;\n      this.showAwardDetail = false;\n      if (this.searchNric.get('nric')?.hasError('required')) {\n        this.toastService.warn(\"Fill in NRIC\");\n      } else if (this.searchNric.errors?.['invalidDateLessThanOrEquals']) {\n        this.toastService.error(\"End Date must be later than Start Date\");\n      }\n    } else {\n      console.log(\"both no error\");\n      console.log(this.searchNric.errors);\n      const nric = this.searchNric.get('nric').value;\n      const startDateISO = this.searchNric.get(\"trgStartDate\").value.toISOString();\n      const endDateISO = this.searchNric.get(\"trgEndDate\").value.toISOString();\n      this.searchStartDate = String(this.dateUtilsService.formatStrDate(startDateISO, \"YYYY-MM\"));\n      this.searchEndDate = String(this.dateUtilsService.formatStrDate(endDateISO, \"YYYY-MM\"));\n      this.searchInput = nric;\n      this.selection = \"search\";\n      this.isSearching = true;\n      this.showDetail = true;\n      this.showAwardDetail = false;\n      if (this.ViewPayrollComponent !== undefined) {\n        // After component have been initialised\n        this.ViewPayrollComponent.startDate = this.searchStartDate;\n        this.ViewPayrollComponent.endDate = this.searchEndDate;\n        this.ViewPayrollComponent.searchnricdate();\n      }\n      this.toastService.info(\"Retrieving records with given date range...\");\n    }\n  }\n  handleSearchSelect($event) {\n    console.log(\"Parent recieve payrollID = \", $event);\n    if ($event) {\n      this.showDetail = true;\n      this.isSearching = false;\n      this.showAwardDetail = true;\n      // console.log($event.data);\n      console.log(\"testing\");\n      console.log($event);\n      this.payrollID = $event;\n      // this.awardtest = $event.data;\n      // console.log(this.awardtest);\n      // this.ViewAwardsDetailComponent.refreshTable(this.awardtest);\n    }\n  }\n\n  DateSplit(datestring) {\n    let newDateStr;\n    const oldDateStr = datestring.split(\"/\");\n    if (oldDateStr[0].length === 2) {\n      newDateStr = oldDateStr[1] + \"/\" + oldDateStr[0];\n    }\n    return newDateStr;\n  }\n  updateStartDate(date) {\n    console.log(\"Updating Start Date\");\n    this.minEndDate = date;\n    this.searchNric.get(\"trgStartDate\").patchValue(this.getDt(\"trgStartDate\"));\n    this.searchNric.get(\"trgStartDate\").markAsPristine();\n    // this.logDates();\n  }\n\n  updateEndDate(date) {\n    console.log(\"Updating End Date\");\n    this.searchNric.get(\"trgEndDate\").patchValue(this.getDt(\"trgEndDate\"));\n    this.searchNric.get(\"trgEndDate\").markAsPristine();\n    // this.logDates();\n  }\n\n  logDates() {\n    console.log(\"========LOGGING DATES START========\");\n    console.log(this.searchNric.get('trgStartDate').value);\n    console.log(this.searchNric.get('trgEndDate').value);\n    console.log(\"========LOGGING DATES END========\");\n  }\n  getDt(date) {\n    let formattedDate;\n    console.log(this.searchNric.get(date).value);\n    if (this.searchNric.get(date).pristine) {\n      console.log(\"VALID DATE FORMAT\");\n      formattedDate = this.getFormattedDate(this.searchNric.get(date).value);\n    } else {\n      console.log(\"INVALID DATE FORMAT\");\n      formattedDate = this.getFormattedDateFromString(this.searchNric.get(date).value);\n    }\n    return formattedDate;\n  }\n  getFormattedDateFromString(date) {\n    console.log(\"mm/yyyy format\");\n    const formattedDate = new Date(this.DateSplit(date));\n    console.log(formattedDate);\n    console.log(formattedDate.getTime());\n    return formattedDate;\n  }\n  getFormattedDate(date) {\n    console.log(\"valid format\");\n    const formattedDate = new Date(date);\n    console.log(formattedDate);\n    console.log(formattedDate.getTime());\n    return formattedDate;\n  }\n}\nexports.PayrollComponent = PayrollComponent;\nPayrollComponent.ɵfac = function PayrollComponent_Factory(t) {\n  return new (t || PayrollComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CustomToastService), i0.ɵɵdirectiveInject(i3.DateUtilsService), i0.ɵɵdirectiveInject(core_1.LOCALE_ID));\n};\nPayrollComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PayrollComponent,\n  selectors: [[\"ic-payroll\"]],\n  viewQuery: function PayrollComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ViewPayrollComponent = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ViewPayrollDetailComponent = _t.first);\n    }\n  },\n  decls: 83,\n  vars: 14,\n  consts: [[1, \"flex\", \"align-items-stretch\", \"justify-content-between\", \"gap-3\", 2, \"margin-bottom\", \"1rem\"], [\"header\", \"Search\", 1, \"flex-1\"], [\"ngNativeValidate\", \"\", 1, \"pt-1\", \"pb-1\", 3, \"formGroup\"], [1, \"flex\", \"align-items-center\", 2, \"padding-top\", \"16px\"], [1, \"search-label\", 2, \"padding-bottom\", \"16px\"], [2, \"padding\", \"0% 1% 0% 1%\"], [\"type\", \"text\", \"pInputText\", \"\", \"id\", \"nric\", \"name\", \"nric\", \"formControlName\", \"nric\", \"required\", \"\", 1, \"search-input-text\", \"w-20rem\"], [2, \"height\", \"16px\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [1, \"flex\", \"align-items-center\", 2, \"padding\", \"0% 1% 0% 1%\"], [\"view\", \"month\", \"dateFormat\", \"mm/yy\", \"inputId\", \"trgStartDate\", \"id\", \"trgStartDate\", \"formControlName\", \"trgStartDate\", \"dataType\", \"string\", 3, \"readonlyInput\", \"required\", \"defaultDate\", \"onSelect\"], [1, \"pr-2\", \"pl-2\", 2, \"padding-bottom\", \"16px\"], [\"view\", \"month\", \"dateFormat\", \"mm/yy\", \"inputId\", \"trgEndDate\", \"id\", \"trgEndDate\", \"formControlName\", \"trgEndDate\", \"dataType\", \"string\", 3, \"readonlyInput\", \"minDate\", \"defaultDate\", \"onSelect\"], [1, \"search-button\", 2, \"padding\", \"0% 1% 0% 1%\", \"padding-bottom\", \"16px\"], [\"pButton\", \"\", \"label\", \"Search\", 3, \"click\"], [\"pButton\", \"\", \"label\", \"Search All\", 3, \"click\"], [1, \"grid\"], [\"class\", \"col-12\", 4, \"ngIf\"], [1, \"form-text\", \"text-danger\"], [1, \"col-12\"], [3, \"searchInput\", \"startDate\", \"endDate\", \"selection\", \"selectEvent\"], [\"searchAwardTable\", \"\"], [3, \"payrollID\"]],\n  template: function PayrollComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"p-panel\", 1);\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵtext(5, \"\\n      \");\n      i0.ɵɵelementStart(6, \"div\", 3);\n      i0.ɵɵtext(7, \"\\n        \");\n      i0.ɵɵelementStart(8, \"label\", 4);\n      i0.ɵɵtext(9, \"NRIC\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(10, \"\\n        \");\n      i0.ɵɵelementStart(11, \"div\", 5);\n      i0.ɵɵtext(12, \"\\n\\n          \");\n      i0.ɵɵelement(13, \"input\", 6)(14, \"br\");\n      i0.ɵɵtext(15, \"\\n          \");\n      i0.ɵɵelementStart(16, \"div\", 7);\n      i0.ɵɵtext(17, \"\\n            \");\n      i0.ɵɵtemplate(18, PayrollComponent_span_18_Template, 2, 0, \"span\", 8);\n      i0.ɵɵtext(19, \"\\n            \");\n      i0.ɵɵtemplate(20, PayrollComponent_span_20_Template, 2, 0, \"span\", 8);\n      i0.ɵɵtext(21, \"\\n          \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(22, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \"\\n\\n        \");\n      i0.ɵɵelementStart(24, \"div\", 9);\n      i0.ɵɵtext(25, \"\\n          \");\n      i0.ɵɵelementStart(26, \"div\");\n      i0.ɵɵtext(27, \"\\n            \");\n      i0.ɵɵelementStart(28, \"p-calendar\", 10);\n      i0.ɵɵlistener(\"onSelect\", function PayrollComponent_Template_p_calendar_onSelect_28_listener($event) {\n        return ctx.updateStartDate($event);\n      });\n      i0.ɵɵtext(29, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"br\");\n      i0.ɵɵtext(31, \"\\n            \");\n      i0.ɵɵelementStart(32, \"div\", 7);\n      i0.ɵɵtext(33, \"\\n              \");\n      i0.ɵɵtemplate(34, PayrollComponent_span_34_Template, 2, 0, \"span\", 8);\n      i0.ɵɵtext(35, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(36, \"\\n\\n          \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(37, \"\\n          \");\n      i0.ɵɵelementStart(38, \"span\", 11);\n      i0.ɵɵtext(39, \"To\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(40, \"\\n          \");\n      i0.ɵɵelementStart(41, \"div\");\n      i0.ɵɵtext(42, \"\\n            \");\n      i0.ɵɵelementStart(43, \"p-calendar\", 12);\n      i0.ɵɵlistener(\"onSelect\", function PayrollComponent_Template_p_calendar_onSelect_43_listener($event) {\n        return ctx.updateEndDate($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"br\");\n      i0.ɵɵtext(45, \"\\n            \");\n      i0.ɵɵelementStart(46, \"div\", 7);\n      i0.ɵɵtext(47, \"\\n              \");\n      i0.ɵɵtemplate(48, PayrollComponent_span_48_Template, 2, 0, \"span\", 8);\n      i0.ɵɵtext(49, \"\\n              \");\n      i0.ɵɵtemplate(50, PayrollComponent_span_50_Template, 2, 0, \"span\", 8);\n      i0.ɵɵtext(51, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(52, \"\\n          \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(53, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(54, \"\\n        \");\n      i0.ɵɵelementStart(55, \"div\", 13);\n      i0.ɵɵtext(56, \"\\n          \");\n      i0.ɵɵelementStart(57, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function PayrollComponent_Template_button_click_57_listener($event) {\n        return ctx.search($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(58, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(59, \"\\n        \");\n      i0.ɵɵelementStart(60, \"div\", 13);\n      i0.ɵɵtext(61, \"\\n          \");\n      i0.ɵɵelementStart(62, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function PayrollComponent_Template_button_click_62_listener($event) {\n        return ctx.searchAll($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(63, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(64, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(65, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(66, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(67, \"\\n  \");\n      i0.ɵɵelement(68, \"br\");\n      i0.ɵɵtext(69, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(70, \"\\n\\n\");\n      i0.ɵɵelement(71, \"br\")(72, \"br\");\n      i0.ɵɵtext(73, \"\\n\\n\");\n      i0.ɵɵelementStart(74, \"div\", 16);\n      i0.ɵɵtext(75, \"\\n  \");\n      i0.ɵɵtemplate(76, PayrollComponent_div_76_Template, 5, 4, \"div\", 17);\n      i0.ɵɵtext(77, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(78, \"\\n\\n\");\n      i0.ɵɵelementStart(79, \"div\", 16);\n      i0.ɵɵtext(80, \"\\n  \");\n      i0.ɵɵtemplate(81, PayrollComponent_div_81_Template, 5, 1, \"div\", 17);\n      i0.ɵɵtext(82, \"\\n\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_6_0;\n      let tmp_10_0;\n      let tmp_11_0;\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.searchNric);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.searchNric.get(\"nric\")) == null ? null : tmp_1_0.hasError(\"required\")) && (ctx.searchNric.get(\"nric\").dirty || ctx.searchNric.get(\"nric\").touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.searchNric.get(\"nric\")) == null ? null : tmp_2_0.hasError(\"nric\")) && ((tmp_2_0 = ctx.searchNric.get(\"nric\")) == null ? null : tmp_2_0.dirty));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"readonlyInput\", true)(\"required\", true)(\"defaultDate\", ctx.defaultStartDate);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.searchNric.get(\"trgStartDate\")) == null ? null : tmp_6_0.hasError(\"required\")) && ((tmp_6_0 = ctx.searchNric.get(\"trgStartDate\")) == null ? null : tmp_6_0.dirty));\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"readonlyInput\", true)(\"minDate\", ctx.minEndDate)(\"defaultDate\", ctx.defaultEndDate);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.searchNric.errors == null ? null : ctx.searchNric.errors[\"invalidDateLessThanOrEquals\"]) && ((tmp_10_0 = ctx.searchNric.get(\"trgEndDate\")) == null ? null : tmp_10_0.dirty));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_11_0 = ctx.searchNric.get(\"trgEndDate\")) == null ? null : tmp_11_0.hasError(\"required\")) && ((tmp_11_0 = ctx.searchNric.get(\"trgEndDate\")) == null ? null : tmp_11_0.dirty));\n      i0.ɵɵadvance(26);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSearching && ctx.showDetail);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAwardDetail);\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i4.NgIf, i1.FormGroupDirective, i1.FormControlName, i5.ButtonDirective, i6.InputText, i7.Calendar, i8.Panel, i9.ViewPayrollComponent, i10.ViewPayrollDetailComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","PayrollComponent","constructor","fb","toastService","dateUtilsService","localeId","Date","startDateNow","setMonth","getMonth","endDateNow","group","nric","forms_1","required","pattern","trgStartDate","defaultStartDate","trgEndDate","defaultEndDate","validators","date_validator_directive_1","dateLessThanOrEquals","ngOnInit","setDate","searchNric","get","patchValue","getDt","searchAll","$event","console","log","value","searchStartDate","searchEndDate","hasError","searchInput","isSearching","selection","showDetail","showAwardDetail","warn","ViewPayrollComponent","undefined","startDate","endDate","searchnric","info","search","event","valid","errors","error","startDateISO","toISOString","endDateISO","String","formatStrDate","searchnricdate","handleSearchSelect","payrollID","DateSplit","datestring","newDateStr","oldDateStr","split","length","updateStartDate","date","minEndDate","markAsPristine","updateEndDate","logDates","formattedDate","pristine","getFormattedDate","getFormattedDateFromString","getTime","exports","core_1","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payroll\\payroll\\payroll.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payroll\\payroll\\payroll.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, Inject, LOCALE_ID } from '@angular/core';\r\nimport { ViewPayrollComponent } from './view-payroll/view-payroll.component'\r\nimport { IPayrollRecord } from './model/view-payroll.model'\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { viewPayrollService } from './service/view-payroll.service'\r\nimport { NRICValidator } from 'app/shared/validator/nric.directive';\r\nimport { DateValidator } from 'app/shared/validator/date-validator.directive';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { FormatMediumDatePipe } from 'app/shared/date/format-medium-date.pipe';\r\nimport { ViewPayrollDetailComponent } from './view-payroll-detail/view-payroll-detail.component';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\nimport { formatDate } from '@angular/common';\r\nimport { relativeTimeThreshold } from 'moment';\r\nimport { testType, CodeTranslation } from './model/view-payroll.model'\r\nimport { start } from 'repl';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\n\r\n@Component({\r\n  selector: 'ic-payroll',\r\n  templateUrl: './payroll.component.html',\r\n})\r\nexport class PayrollComponent implements OnInit {\r\n\r\n\r\n  //Search Component\r\n  isSearching = false;\r\n\r\n  searchInput = \"\";\r\n  // nricInput = \"\";\r\n  searchStartDate = \"\";\r\n  searchEndDate = \"\";\r\n  selection = \"\";\r\n  // searchStartDate: Date;\r\n  // searchEndDate: Date;\r\n  resultList: IPayrollRecord[] = [];\r\n\r\n  // display result\r\n  showDetail = false;\r\n\r\n  showAwardDetail = false;\r\n\r\n  awardtest: [];\r\n\r\n  payrollID = \"\";\r\n  PayrollDescriptionDict1: { [codeId: string]: testType } = {};\r\n\r\n  //date\r\n  startDateNow: Date = new Date();\r\n  endDateNow: Date = new Date();\r\n  defaultStartDate: Date = new Date(this.startDateNow.setMonth(this.startDateNow.getMonth() - 3));\r\n  defaultEndDate: Date = new Date(this.endDateNow.setMonth(this.endDateNow.getMonth() + 1));\r\n\r\n  minEndDate: Date;\r\n\r\n\r\n  // Search by Nric Form\r\n  searchNric: FormGroup = this.fb.group({\r\n    nric: new FormControl(null, [Validators.required, Validators.pattern('^[STFG]\\\\d{7}[A-Z]$')]),\r\n    trgStartDate: new FormControl(this.defaultStartDate, [Validators.required]),\r\n    trgEndDate: new FormControl(this.defaultEndDate, [Validators.required]),\r\n  }, {\r\n    validators: DateValidator.dateLessThanOrEquals(\"trgStartDate\", \"trgEndDate\")\r\n  }\r\n  );\r\n\r\n  @ViewChild('searchAwardTable', { static: false })\r\n  private ViewPayrollComponent!: ViewPayrollComponent;\r\n\r\n  @ViewChild('awardDetailTable', { static: false })\r\n  private ViewPayrollDetailComponent!: ViewPayrollDetailComponent;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastService: CustomToastService,\r\n    private dateUtilsService: DateUtilsService,\r\n    @Inject(LOCALE_ID) protected localeId: string\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.defaultStartDate.setDate(1);\r\n    this.defaultEndDate.setDate(1);\r\n    // this.logDates();\r\n\r\n    this.searchNric.get(\"trgStartDate\").patchValue(this.getDt(\"trgStartDate\"));\r\n    this.searchNric.get(\"trgEndDate\").patchValue(this.getDt(\"trgEndDate\"));\r\n\r\n    // this.logDates();\r\n  }\r\n  searchAll($event: any): void {\r\n    console.log(\"searching by nric\");\r\n    const nric = this.searchNric.get('nric').value\r\n    this.searchStartDate = \"\";\r\n    this.searchEndDate = \"\";\r\n\r\n    if (this.searchNric.get('nric')?.hasError('required')) {\r\n      console.log(\"NRIC IS INVALID\");\r\n      this.searchInput = nric;\r\n      this.isSearching = true;\r\n      this.selection = \"searchall\";\r\n      this.showDetail = false;\r\n      this.showAwardDetail = false;\r\n      console.log($event);\r\n      this.toastService.warn(\"Fill in NRIC\");\r\n    }\r\n    else {\r\n      //display table when nric is valid\r\n      console.log(\"NRIC IS VALID\");\r\n      this.searchInput = nric;\r\n      this.selection = \"searchall\";\r\n      this.isSearching = true;\r\n      this.showDetail = true;\r\n      this.showAwardDetail = false;\r\n      console.log(this.searchInput);\r\n      if (this.ViewPayrollComponent !== undefined) {\r\n        // After component have been initialised\r\n        this.ViewPayrollComponent.startDate = \"\";\r\n        this.ViewPayrollComponent.endDate = \"\";\r\n        this.ViewPayrollComponent.searchnric();\r\n      }\r\n      this.toastService.info(\"Retrieving all records...\");\r\n    }\r\n  }\r\n\r\n  search(event: any): void {\r\n    console.log(event);\r\n    this.searchStartDate = \"\";\r\n    this.searchEndDate = \"\";\r\n\r\n    if (!this.searchNric.valid) {\r\n      console.log(this.searchNric.errors);\r\n      this.isSearching = false;\r\n      this.showDetail = false;\r\n      this.showAwardDetail = false;\r\n\r\n      if (this.searchNric.get('nric')?.hasError('required')) {\r\n        this.toastService.warn(\"Fill in NRIC\");\r\n      } else if ((this.searchNric.errors?.['invalidDateLessThanOrEquals'])) {\r\n        this.toastService.error(\"End Date must be later than Start Date\");\r\n      }\r\n\r\n    } else {\r\n      console.log(\"both no error\");\r\n      console.log(this.searchNric.errors);\r\n      const nric = this.searchNric.get('nric').value\r\n      const startDateISO = this.searchNric.get(\"trgStartDate\").value.toISOString();\r\n      const endDateISO = this.searchNric.get(\"trgEndDate\").value.toISOString();\r\n      this.searchStartDate = String(this.dateUtilsService.formatStrDate(startDateISO, \"YYYY-MM\"));\r\n      this.searchEndDate = String(this.dateUtilsService.formatStrDate(endDateISO, \"YYYY-MM\"));\r\n\r\n      this.searchInput = nric;\r\n      this.selection = \"search\";\r\n      this.isSearching = true;\r\n      this.showDetail = true;\r\n      this.showAwardDetail = false;\r\n      if (this.ViewPayrollComponent !== undefined) {\r\n        // After component have been initialised\r\n        this.ViewPayrollComponent.startDate = this.searchStartDate;\r\n        this.ViewPayrollComponent.endDate = this.searchEndDate;\r\n        this.ViewPayrollComponent.searchnricdate();\r\n      }\r\n\r\n      this.toastService.info(\"Retrieving records with given date range...\");\r\n    }\r\n  }\r\n\r\n  handleSearchSelect($event: any): void {\r\n    console.log(\"Parent recieve payrollID = \", $event);\r\n    if ($event) {\r\n      this.showDetail = true;\r\n      this.isSearching = false;\r\n      this.showAwardDetail = true;\r\n      // console.log($event.data);\r\n      console.log(\"testing\");\r\n      console.log($event);\r\n      this.payrollID = $event;\r\n\r\n      // this.awardtest = $event.data;\r\n      // console.log(this.awardtest);\r\n      // this.ViewAwardsDetailComponent.refreshTable(this.awardtest);\r\n    }\r\n  }\r\n\r\n  DateSplit(datestring: string): any {\r\n    let newDateStr;\r\n    const oldDateStr = datestring.split(\"/\");\r\n    if (oldDateStr[0].length === 2) {\r\n      newDateStr = oldDateStr[1] + \"/\" + oldDateStr[0];\r\n    }\r\n    return newDateStr;\r\n  }\r\n\r\n  updateStartDate(date: any): void {\r\n    console.log(\"Updating Start Date\");\r\n    this.minEndDate = date;\r\n\r\n    this.searchNric.get(\"trgStartDate\").patchValue(this.getDt(\"trgStartDate\"));\r\n    this.searchNric.get(\"trgStartDate\").markAsPristine();\r\n    // this.logDates();\r\n  }\r\n\r\n  updateEndDate(date: any): void {\r\n    console.log(\"Updating End Date\");\r\n\r\n    this.searchNric.get(\"trgEndDate\").patchValue(this.getDt(\"trgEndDate\"));\r\n    this.searchNric.get(\"trgEndDate\").markAsPristine();\r\n    // this.logDates();\r\n  }\r\n\r\n  logDates(): void {\r\n    console.log(\"========LOGGING DATES START========\");\r\n    console.log(this.searchNric.get('trgStartDate').value);\r\n    console.log(this.searchNric.get('trgEndDate').value);\r\n    console.log(\"========LOGGING DATES END========\");\r\n  }\r\n\r\n  getDt(date: string): Date {\r\n    let formattedDate: Date;\r\n    console.log(this.searchNric.get(date).value);\r\n    if (this.searchNric.get(date).pristine) {\r\n      console.log(\"VALID DATE FORMAT\")\r\n      formattedDate = this.getFormattedDate(this.searchNric.get(date).value);\r\n    } else {\r\n      console.log(\"INVALID DATE FORMAT\")\r\n      formattedDate = this.getFormattedDateFromString(this.searchNric.get(date).value);\r\n    }\r\n    return formattedDate;\r\n  }\r\n\r\n  getFormattedDateFromString(date: any): Date {\r\n    console.log(\"mm/yyyy format\");\r\n    const formattedDate = new Date(this.DateSplit(date));\r\n    console.log(formattedDate);\r\n    console.log(formattedDate.getTime());\r\n\r\n    return formattedDate;\r\n  }\r\n\r\n  getFormattedDate(date: any): Date {\r\n    console.log(\"valid format\");\r\n    const formattedDate = new Date(date);\r\n    console.log(formattedDate);\r\n    console.log(formattedDate.getTime());\r\n\r\n    return formattedDate;\r\n  }\r\n}\r\n//refType = 'AWARDS' , ATTENDANCE ' ALLOWANCE","<div class='flex align-items-stretch justify-content-between gap-3' style='margin-bottom: 1rem'>\r\n  <p-panel class='flex-1 ' header='Search'>\r\n    <form [formGroup]=\"searchNric\" ngNativeValidate class=\"pt-1 pb-1\">\r\n      <div class='flex align-items-center' style=\"padding-top: 16px;\">\r\n        <label class='search-label' style=\"padding-bottom:16px\">NRIC</label>\r\n        <div style=\"padding: 0% 1% 0% 1%\">\r\n\r\n          <input class='search-input-text w-20rem' type=\"text\" pInputText id=\"nric\" name=\"nric\" formControlName=\"nric\"\r\n            required><br>\r\n          <div style=\"height:16px;\">\r\n            <span\r\n              *ngIf=\"searchNric.get('nric')?.hasError('required') && (searchNric.get('nric')!.dirty || searchNric.get('nric')!.touched)\"\r\n              class=\"form-text text-danger\">\r\n              Please enter a value</span>\r\n            <span *ngIf=\"searchNric.get('nric')?.hasError('nric') && searchNric.get('nric')?.dirty\"\r\n              class=\"form-text text-danger\">\r\n              Invalid NRIC</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex align-items-center\" style=\"padding: 0% 1% 0% 1%\">\r\n          <div>\r\n            <p-calendar view=\"month\" dateFormat=\"mm/yy\" [readonlyInput]=\"true\" inputId=\"trgStartDate\" id=\"trgStartDate\"\r\n              formControlName=\"trgStartDate\" dataType=\"string\" [required]=\"true\" [defaultDate]=\"defaultStartDate\"\r\n              (onSelect)='updateStartDate($event)'>\r\n            </p-calendar><br>\r\n            <div style=\"height:16px\">\r\n              <span\r\n                *ngIf=\"searchNric.get('trgStartDate')?.hasError('required')  && searchNric.get('trgStartDate')?.dirty\"\r\n                class=\"form-text text-danger\">\r\n                Start of Training Date required</span>\r\n            </div>\r\n\r\n          </div>\r\n          <span style=\"padding-bottom: 16px;\" class=\"pr-2 pl-2\">To</span>\r\n          <div>\r\n            <p-calendar view=\"month\" dateFormat=\"mm/yy\" [readonlyInput]=\"true\" inputId=\"trgEndDate\" id=\"trgEndDate\"\r\n              formControlName=\"trgEndDate\" [minDate]=\"minEndDate\" [defaultDate]=\"defaultEndDate\" dataType=\"string\"\r\n              (onSelect)=\"updateEndDate($event)\"></p-calendar><br>\r\n            <div style=\"height:16px\">\r\n              <span *ngIf=\"searchNric.errors?.['invalidDateLessThanOrEquals'] && searchNric.get('trgEndDate')?.dirty\"\r\n                class=\"form-text text-danger\">\r\n                End of Training Date needs to be later than Start of Training Date\r\n              </span>\r\n              <span *ngIf=\"searchNric.get('trgEndDate')?.hasError('required')  && searchNric.get('trgEndDate')?.dirty\"\r\n                class=\"form-text text-danger\">\r\n                End of Training Date required</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class='search-button' style=\"padding: 0% 1% 0% 1%; padding-bottom:16px;\">\r\n          <button pButton label='Search' (click)='search($event)'></button>\r\n        </div>\r\n        <div class='search-button' style=\"padding: 0% 1% 0% 1%; padding-bottom:16px;\">\r\n          <button pButton label='Search All' (click)='searchAll($event)'></button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n  <br>\r\n</div>\r\n\r\n<br><br>\r\n\r\n<div class='grid'>\r\n  <div class='col-12' *ngIf='isSearching && showDetail'>\r\n    <n2-view-payroll #searchAwardTable [searchInput]='searchInput' [startDate]='searchStartDate'\r\n      [endDate]='searchEndDate' [selection]='selection' (selectEvent)='handleSearchSelect($event)'></n2-view-payroll>\r\n  </div>\r\n</div>\r\n\r\n<div class='grid'>\r\n  <div class='col-12' *ngIf='showAwardDetail'>\r\n    <n2-view-payroll-detail [payrollID]='payrollID'>\r\n    </n2-view-payroll-detail>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"script","externalDependencies":[]}