{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IcCodeI18nPipe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@ngx-translate/core\"));\nclass IcCodeI18nPipe {\n  constructor(translateService) {\n    this.translateService = translateService;\n  }\n  transform(label) {\n    this.currentLanguage = this.translateService.currentLang;\n    return this.getLabelByLanguage(label, this.currentLanguage);\n  }\n  getLabelByLanguage(label, language) {\n    if (label) {\n      let item;\n      for (item in label) {\n        if (Object.prototype.hasOwnProperty.call(label, item)) {\n          if (!this.defaultLabel) {\n            // get the first value for default label if there is no language match with the data\n            this.defaultLabel = label[item];\n          }\n          if (item.toLowerCase().includes(language)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return label[item];\n          }\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n          return label;\n        }\n      }\n    }\n    return this.defaultLabel;\n  }\n}\nexports.IcCodeI18nPipe = IcCodeI18nPipe;\nIcCodeI18nPipe.ɵfac = function IcCodeI18nPipe_Factory(t) {\n  return new (t || IcCodeI18nPipe)(i0.ɵɵdirectiveInject(i1.TranslateService, 16));\n};\nIcCodeI18nPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"icCodeI18n\",\n  type: IcCodeI18nPipe,\n  pure: true\n});","map":{"version":3,"mappings":";;;;;;;;;AAGA,MACaA,cAAc;EAGzBC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;EAAqB;EAEzDC,SAAS,CAACC,KAAU;IAClB,IAAI,CAACC,eAAe,GAAG,IAAI,CAACH,gBAAgB,CAACI,WAAW;IACxD,OAAO,IAAI,CAACC,kBAAkB,CAACH,KAAK,EAAE,IAAI,CAACC,eAAe,CAAC;EAC7D;EAEAE,kBAAkB,CAACH,KAAU,EAAEI,QAAgB;IAC7C,IAAIJ,KAAK,EAAE;MACT,IAAIK,IAAI;MACR,KAAKA,IAAI,IAAIL,KAAK,EAAE;QAClB,IAAIM,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACT,KAAK,EAAEK,IAAI,CAAC,EAAE;UACrD,IAAI,CAAC,IAAI,CAACK,YAAY,EAAE;YACtB;YACA,IAAI,CAACA,YAAY,GAAGV,KAAK,CAACK,IAAI,CAAC;;UAEjC,IAAIA,IAAI,CAACM,WAAW,EAAE,CAACC,QAAQ,CAACR,QAAQ,CAAC,EAAE;YACzC;YACA,OAAOJ,KAAK,CAACK,IAAI,CAAC;;SAErB,MAAM;UACL;UACA,OAAOL,KAAK;;;;IAIlB,OAAO,IAAI,CAACU,YAAY;EAC1B;;AA/BFG;;mBACajB,cAAc;AAAA;;;QAAdA,cAAc;EAAAkB;AAAA","names":["IcCodeI18nPipe","constructor","translateService","transform","label","currentLanguage","currentLang","getLabelByLanguage","language","item","Object","prototype","hasOwnProperty","call","defaultLabel","toLowerCase","includes","exports","pure"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\ng-connect\\i18n\\ic-code-i18n.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Pipe({ name: 'icCodeI18n' })\r\nexport class IcCodeI18nPipe implements PipeTransform {\r\n  private currentLanguage?: string;\r\n  private defaultLabel?: string;\r\n  constructor(private translateService: TranslateService) {}\r\n\r\n  transform(label: any): string {\r\n    this.currentLanguage = this.translateService.currentLang;\r\n    return this.getLabelByLanguage(label, this.currentLanguage);\r\n  }\r\n\r\n  getLabelByLanguage(label: any, language: string): string {\r\n    if (label) {\r\n      let item;\r\n      for (item in label) {\r\n        if (Object.prototype.hasOwnProperty.call(label, item)) {\r\n          if (!this.defaultLabel) {\r\n            // get the first value for default label if there is no language match with the data\r\n            this.defaultLabel = label[item];\r\n          }\r\n          if (item.toLowerCase().includes(language)) {\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n            return label[item];\r\n          }\r\n        } else {\r\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n          return label;\r\n        }\r\n      }\r\n    }\r\n    return this.defaultLabel;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}