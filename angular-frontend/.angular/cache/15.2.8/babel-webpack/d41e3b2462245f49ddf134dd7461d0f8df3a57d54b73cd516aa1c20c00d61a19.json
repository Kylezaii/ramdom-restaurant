{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PropertyAgentComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst http_1 = require(\"@angular/common/http\");\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst moment_1 = tslib_1.__importDefault(require(\"moment\"));\nconst rxjs_1 = require(\"rxjs\");\nconst nspay2_constants_1 = require(\"app/nspay2.constants\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i2 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/claim/se-claim/service/se-claim.service\"));\nconst i5 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i6 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i7 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i8 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i9 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i10 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i11 = tslib_1.__importStar(require(\"primeng/dropdown\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/inputnumber\"));\nconst i13 = tslib_1.__importStar(require(\"../../../../../shared/language/translate.directive\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/panel\"));\nconst i15 = tslib_1.__importStar(require(\"../annual-income/annual-income.component\"));\nconst _c0 = [\"dataTable\"];\nconst _c1 = function () {\n  return {\n    \"font-weight\": \"bold\",\n    \"margin-left\": \"0.5em\"\n  };\n};\nfunction PropertyAgentComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"div\", 16);\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4, \"Gross Income\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n            \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(2, _c1));\n  }\n}\nconst _c2 = function () {\n  return {\n    \"width\": \"100%\"\n  };\n};\nfunction PropertyAgentComponent_ng_template_15_p_dropdown_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dropdown\", 26);\n    i0.ɵɵlistener(\"onChange\", function PropertyAgentComponent_ng_template_15_p_dropdown_22_Template_p_dropdown_onChange_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.staticPropertyAgentComponent.staticConstructPeriodStrtDate(ctx_r12.propertyAgentForm, ctx_r12.dateUtilsService, ctx_r12.trgStartDte || (ctx_r12.currHardCopyDetails == null ? null : ctx_r12.currHardCopyDetails.trgStartDte), ctx_r12.cd));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c2));\n    i0.ɵɵproperty(\"options\", ctx_r7.getFormControlValue(ctx_r7.propertyAgentForm, \"periodEndDateOptions\"))(\"formControl\", ctx_r7.getInnerFormControl(ctx_r7.propertyAgentForm, \"periodGroup\", \"periodEndDate\"));\n  }\n}\nconst _c3 = function () {\n  return {\n    field: \"Period End Date\"\n  };\n};\nfunction PropertyAgentComponent_ng_template_15_small_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 27);\n    i0.ɵɵtext(1, \"\\n                                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c3));\n  }\n}\nfunction PropertyAgentComponent_ng_template_15_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                                    \", ctx_r10.periodGroup.get(\"periodEndDate\").value, \"\\n                                                \");\n  }\n}\nconst _c4 = function () {\n  return {\n    field: \"Divisor\"\n  };\n};\nfunction PropertyAgentComponent_ng_template_15_small_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 27);\n    i0.ɵɵtext(1, \"\\n                                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c4));\n  }\n}\nconst _c5 = function () {\n  return {\n    \"width\": \"15em\"\n  };\n};\nconst _c6 = function () {\n  return {\n    \"width\": \"5em\",\n    \"text-align\": \"right\"\n  };\n};\nconst _c7 = function () {\n  return {\n    \"width\": \"15em\",\n    \"text-align\": \"center\"\n  };\n};\nfunction PropertyAgentComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                                \");\n    i0.ɵɵelement(3, \"th\", 17);\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵelementStart(5, \"th\", 17);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementStart(7, \"form\", 4);\n    i0.ɵɵtext(8, \"\\n                                        \");\n    i0.ɵɵelementStart(9, \"div\", 10);\n    i0.ɵɵtext(10, \"\\n                                            \");\n    i0.ɵɵelementStart(11, \"div\", 18);\n    i0.ɵɵtext(12, \"Period: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n                                            \");\n    i0.ɵɵelementStart(14, \"div\", 19);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n                                            \");\n    i0.ɵɵelementStart(17, \"div\", 20);\n    i0.ɵɵtext(18, \"to \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n                                            \");\n    i0.ɵɵelementStart(20, \"div\", 21);\n    i0.ɵɵtext(21, \"\\n                                                \");\n    i0.ɵɵtemplate(22, PropertyAgentComponent_ng_template_15_p_dropdown_22_Template, 1, 5, \"p-dropdown\", 22);\n    i0.ɵɵtext(23, \"\\n                                                \");\n    i0.ɵɵtemplate(24, PropertyAgentComponent_ng_template_15_small_24_Template, 2, 2, \"small\", 23);\n    i0.ɵɵtext(25, \"\\n                                                \");\n    i0.ɵɵtemplate(26, PropertyAgentComponent_ng_template_15_ng_template_26_Template, 1, 1, \"ng-template\", null, 24, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(28, \"\\n                                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n                                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(32, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(33, \"\\n                            \");\n    i0.ɵɵelementStart(34, \"tr\");\n    i0.ɵɵtext(35, \"\\n                                \");\n    i0.ɵɵelementStart(36, \"th\", 17);\n    i0.ɵɵtext(37, \"\\n                                    \");\n    i0.ɵɵelementStart(38, \"form\", 4);\n    i0.ɵɵtext(39, \"\\n                                        Divisor:\\u00A0\\u00A0\\n                                        \");\n    i0.ɵɵelementStart(40, \"p-inputNumber\", 25);\n    i0.ɵɵlistener(\"onBlur\", function PropertyAgentComponent_ng_template_15_Template_p_inputNumber_onBlur_40_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.staticPropertyAgentComponent.staticConstructPeriodStrtDate(ctx_r14.propertyAgentForm, ctx_r14.dateUtilsService, ctx_r14.trgStartDte || (ctx_r14.currHardCopyDetails == null ? null : ctx_r14.currHardCopyDetails.trgStartDte), ctx_r14.cd));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(41, \"\\n                                        \");\n    i0.ɵɵtemplate(42, PropertyAgentComponent_ng_template_15_small_42_Template, 2, 2, \"small\", 23);\n    i0.ɵɵtext(43, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(44, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(45, \"\\n                                \");\n    i0.ɵɵelementStart(46, \"th\", 17);\n    i0.ɵɵtext(47, \"Personal\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(48, \"\\n                                \");\n    i0.ɵɵelementStart(49, \"th\", 17);\n    i0.ɵɵtext(50, \"Overriding\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(51, \"\\n                                \");\n    i0.ɵɵelementStart(52, \"th\", 17);\n    i0.ɵɵtext(53, \"Total\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(54, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(55, \"\\n                        \");\n  }\n  if (rf & 2) {\n    const _r9 = i0.ɵɵreference(27);\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_5_0;\n    let tmp_12_0;\n    i0.ɵɵadvance(5);\n    i0.ɵɵattribute(\"colspan\", 3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.periodGroup);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\"\\n                                                \", ctx_r2.periodGroup.get(\"periodStrtDate\").value, \"\\n                                            \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isActive())(\"ngIfElse\", _r9);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx_r2.periodGroup.get(\"periodEndDate\")) == null ? null : tmp_5_0.touched) && !ctx_r2.dateUtilsService.isValidDateStr((tmp_5_0 = ctx_r2.periodGroup.get(\"periodEndDate\")) == null ? null : tmp_5_0.value, \"DD-MM-YYYY\"));\n    i0.ɵɵadvance(12);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(20, _c5));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.captionGroup);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"min\", 1)(\"max\", 6)(\"inputStyle\", i0.ɵɵpureFunction0(21, _c6))(\"disabled\", !ctx_r2.isActive());\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_12_0 = ctx_r2.captionGroup.get(\"divisor\")) == null ? null : tmp_12_0.touched) && !ctx_r2.isValidNumber((tmp_12_0 = ctx_r2.captionGroup.get(\"divisor\")) == null ? null : tmp_12_0.value));\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(22, _c7));\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(23, _c7));\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(24, _c7));\n  }\n}\nconst _c8 = function () {\n  return {\n    \"text-align\": \"right\"\n  };\n};\nfunction PropertyAgentComponent_ng_template_17_p_inputNumber_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 34);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"min\", 0)(\"max\", 9999999)(\"inputStyle\", i0.ɵɵpureFunction0(4, _c8))(\"minFractionDigits\", 2);\n  }\n}\nfunction PropertyAgentComponent_ng_template_17_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"div\", 33);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                            \", i0.ɵɵpipeBind2(3, 1, ctx_r21.grossIncomeArray.controls[0].get(\"personalAmt\").value, \"1.2-2\"), \"\\n                                        \");\n  }\n}\nfunction PropertyAgentComponent_ng_template_17_p_inputNumber_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 35);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"min\", 0)(\"max\", 9999999)(\"inputStyle\", i0.ɵɵpureFunction0(4, _c8))(\"minFractionDigits\", 2);\n  }\n}\nfunction PropertyAgentComponent_ng_template_17_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"div\", 33);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                            \", i0.ɵɵpipeBind2(3, 1, ctx_r24.grossIncomeArray.controls[0].get(\"overiddingAmt\").value, \"1.2-2\"), \"\\n                                        \");\n  }\n}\nfunction PropertyAgentComponent_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵelementStart(1, \"tr\", 28);\n    i0.ɵɵtext(2, \"\\n                                \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                                \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7, \"\\n                                    \");\n    i0.ɵɵtemplate(8, PropertyAgentComponent_ng_template_17_p_inputNumber_8_Template, 1, 5, \"p-inputNumber\", 29);\n    i0.ɵɵtext(9, \"\\n                                    \");\n    i0.ɵɵtemplate(10, PropertyAgentComponent_ng_template_17_ng_template_10_Template, 5, 4, \"ng-template\", null, 30, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(12, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n                                \");\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15, \"\\n                                    \");\n    i0.ɵɵtemplate(16, PropertyAgentComponent_ng_template_17_p_inputNumber_16_Template, 1, 5, \"p-inputNumber\", 31);\n    i0.ɵɵtext(17, \"\\n                                    \");\n    i0.ɵɵtemplate(18, PropertyAgentComponent_ng_template_17_ng_template_18_Template, 5, 4, \"ng-template\", null, 32, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(20, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                                \");\n    i0.ɵɵelementStart(22, \"td\");\n    i0.ɵɵtext(23, \"\\n                                    \");\n    i0.ɵɵelementStart(24, \"div\", 33);\n    i0.ɵɵtext(25);\n    i0.ɵɵpipe(26, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n                            \");\n    i0.ɵɵelementStart(30, \"tr\");\n    i0.ɵɵtext(31, \"\\n                                \");\n    i0.ɵɵelementStart(32, \"td\");\n    i0.ɵɵtext(33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(34, \"\\n                                \");\n    i0.ɵɵelementStart(35, \"td\");\n    i0.ɵɵtext(36, \"\\n                                    \");\n    i0.ɵɵelementStart(37, \"div\", 33);\n    i0.ɵɵtext(38);\n    i0.ɵɵpipe(39, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(40, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(41, \"\\n                                \");\n    i0.ɵɵelement(42, \"td\");\n    i0.ɵɵtext(43, \"\\n                                \");\n    i0.ɵɵelement(44, \"td\");\n    i0.ɵɵtext(45, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(46, \"\\n                        \");\n  }\n  if (rf & 2) {\n    const rowIndex_r18 = ctx.rowIndex;\n    const _r20 = i0.ɵɵreference(11);\n    const _r23 = i0.ɵɵreference(19);\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", rowIndex_r18);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.cols[0]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isActive() && !ctx_r3.readOnly && ctx_r3.hasValidAuthorityAndStation())(\"ngIfElse\", _r20);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isActive() && !ctx_r3.readOnly && ctx_r3.hasValidAuthorityAndStation())(\"ngIfElse\", _r23);\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(26, 9, ctx_r3.grossIncomeArray.controls[0].get(\"overiddingAmt\").value + ctx_r3.grossIncomeArray.controls[0].get(\"personalAmt\").value, \"1.2-2\"), \"\\n                                    \");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r3.cols[1]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(39, 12, ctx_r3.grossIncomeArray.controls[0].get(\"personalAmt\").value / ctx_r3.captionGroup.get(\"divisor\").value, \"1.2-2\"), \"\\n                                    \");\n  }\n}\nfunction PropertyAgentComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"p-inputNumber\", 36);\n    i0.ɵɵtext(2, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"maxlength\", 3)(\"inputStyle\", i0.ɵɵpureFunction0(2, _c6));\n  }\n}\nfunction PropertyAgentComponent_ng_template_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\"\\n                                \", ctx_r6.footerGroup.get(\"claimNip\").value, \"%\\n                            \");\n  }\n}\nclass PropertyAgentComponent {\n  get grossIncomeArray() {\n    return this.propertyAgentForm?.get('grossIncomeArray');\n  }\n  get captionGroup() {\n    return this.propertyAgentForm.get('captionGroup');\n  }\n  get periodGroup() {\n    return this.propertyAgentForm.get('periodGroup');\n  }\n  get footerGroup() {\n    return this.propertyAgentForm.get('footerGroup');\n  }\n  get annualIncomeList() {\n    return this.propertyAgentForm.get('annualIncomeList');\n  }\n  constructor(formBuilder, ns2Http, dateUtilsService, seClaimService, toastService, accountService, cd) {\n    this.formBuilder = formBuilder;\n    this.ns2Http = ns2Http;\n    this.dateUtilsService = dateUtilsService;\n    this.seClaimService = seClaimService;\n    this.toastService = toastService;\n    this.accountService = accountService;\n    this.cd = cd;\n    this.staticPropertyAgentComponent = PropertyAgentComponent;\n    this.seHardCopyDetails = {};\n    this.selectedWDOption = {};\n    this.itemDetailsSection = {};\n    this.subscr = new rxjs_1.Subscription();\n    this.dateFormat = \"DD-MM-YYYY\";\n    this.cols = [\"Amount\", \"Ave\"];\n    this.sourceYrOptions = [];\n    this.dataSet = {\n      dataList: []\n    };\n    this.claimNIP = 0;\n    this.proposedNIP = 75;\n    this.loading = true;\n    this.currHardCopyDetails = {};\n    this.totalAmtPayEvent = new core_1.EventEmitter();\n    this.totalAmtPay = 0;\n    this.PEND_VERIFY_STATUS = \"PVE\";\n    this.PEND_ACTION_STATUS = \"PAC\";\n    this.propertyAgentForm = this.formBuilder.group({\n      id: new forms_1.FormControl(null, null),\n      captionGroup: this.formBuilder.group({\n        divisor: new forms_1.FormControl(6, null)\n      }),\n      periodGroup: this.formBuilder.group({\n        periodStrtDate: new forms_1.FormControl('', null),\n        periodEndDate: new forms_1.FormControl('', null)\n      }),\n      grossIncomeArray: this.formBuilder.array([this.formBuilder.group({\n        personalAmt: new forms_1.FormControl(null, null),\n        overiddingAmt: new forms_1.FormControl(null, null)\n      })]),\n      footerGroup: this.formBuilder.group({\n        claimNip: new forms_1.FormControl(0, null)\n      }),\n      annualIncomeList: new forms_1.FormArray([]),\n      periodEndDateOptions: new forms_1.FormControl([], null),\n      initialStrtDate: new forms_1.FormControl('', null)\n    });\n    this.periodEndDateOptions = [];\n    console.log(\"test\");\n  }\n  static staticCreateNewPropertyAgentForm(workingDataOption, dateUtilsService, formBuilder, trgStartDte, cd) {\n    const propertyAgentFormGroup = formBuilder.group({\n      id: new forms_1.FormControl(null, null),\n      workingDataId: new forms_1.FormControl(null, null),\n      captionGroup: formBuilder.group({\n        divisor: new forms_1.FormControl(6, null)\n      }),\n      periodGroup: formBuilder.group({\n        periodStrtDate: new forms_1.FormControl('', null),\n        periodEndDate: new forms_1.FormControl('', null)\n      }),\n      grossIncomeArray: formBuilder.array([formBuilder.group({\n        personalAmt: new forms_1.FormControl(null, null),\n        overiddingAmt: new forms_1.FormControl(null, null)\n      })]),\n      footerGroup: formBuilder.group({\n        claimNip: new forms_1.FormControl(0, null)\n      }),\n      annualIncomeList: new forms_1.FormArray([]),\n      initialStrtDate: new forms_1.FormControl('', null),\n      periodEndDateOptions: new forms_1.FormControl([], null)\n    });\n    PropertyAgentComponent.staticConstructPeriodEndDateOptions(trgStartDte, dateUtilsService, propertyAgentFormGroup, cd);\n    PropertyAgentComponent.staticConstructPeriodStrtDate(propertyAgentFormGroup, dateUtilsService, trgStartDte, cd);\n    const startDate = propertyAgentFormGroup.get('periodGroup.periodStrtDate').value;\n    propertyAgentFormGroup.get('initialStrtDate').setValue(startDate);\n    const annualIncomeFormGroup = formBuilder.group({\n      source: new forms_1.FormControl(null, null),\n      assessment: new forms_1.FormControl(null, null),\n      acctgPeriodStrt: new forms_1.FormControl(null, null),\n      acctgPeriodEnd: new forms_1.FormControl(null, null),\n      occupationNature: new forms_1.FormControl(null, null),\n      revenue: new forms_1.FormControl(null, null),\n      adjProfit: new forms_1.FormControl(null, null)\n    });\n    propertyAgentFormGroup.get('annualIncomeList').push(annualIncomeFormGroup);\n    return propertyAgentFormGroup;\n  }\n  static staticConstructPeriodEndDateOptions(trgStartDte, dateUtilsService, propertyAgentForm, cd) {\n    const dateFormat = \"DD-MM-YYYY\";\n    console.log(\"reconstructing \", trgStartDte);\n    const claimStartDt = dateUtilsService.convertStrToDate(trgStartDte, \"DD-MM-YYYY\");\n    const lastDateOfClaimStartDt = new Date(claimStartDt.getFullYear(), claimStartDt.getMonth() + 1, 0);\n    const date1 = dateUtilsService.convertMomentToStr((0, moment_1.default)(lastDateOfClaimStartDt).subtract(1, 'months'), dateFormat);\n    const date2 = dateUtilsService.convertMomentToStr((0, moment_1.default)(claimStartDt).subtract(1, 'days'), dateFormat);\n    const periodEndDateOptions = [{\n      name: date1,\n      key: date1\n    }, {\n      name: date2,\n      key: date2\n    }];\n    propertyAgentForm.get('periodEndDateOptions').setValue(periodEndDateOptions);\n    console.log('the options is', propertyAgentForm.get('periodEndDateOptions').value);\n    console.log('the key before is', periodEndDateOptions[0].key);\n    propertyAgentForm.get('periodGroup.periodEndDate').setValue(propertyAgentForm.get('periodEndDateOptions').value[0].key);\n    //needs to call detect changes otherwise period end date wont have been updated sequentially\n    cd.detectChanges();\n  }\n  static staticConstructPeriodStrtDate(propertyAgentForm, dateUtilsService, trgStartDte, cd) {\n    console.log(\"the after\", propertyAgentForm.get('periodGroup.periodEndDate').value);\n    const dateFormat = \"DD-MM-YYYY\";\n    const claimStartDt = dateUtilsService.convertStrToDate(trgStartDte, dateFormat);\n    const firstDateOfClaimStartDt = new Date(claimStartDt.getFullYear(), claimStartDt.getMonth(), 1);\n    console.log(\"the new date\", firstDateOfClaimStartDt);\n    let periodStartDate;\n    if (propertyAgentForm.get('periodGroup.periodEndDate').value === propertyAgentForm.get('periodEndDateOptions').value[0]?.key) {\n      periodStartDate = dateUtilsService.convertMomentToStr((0, moment_1.default)(firstDateOfClaimStartDt).subtract(propertyAgentForm.get('captionGroup.divisor').value, 'months'), dateFormat);\n    } else if (propertyAgentForm.get('periodGroup.periodEndDate').value === propertyAgentForm.get('periodEndDateOptions').value[1]?.key) {\n      periodStartDate = dateUtilsService.convertMomentToStr((0, moment_1.default)(claimStartDt).subtract(propertyAgentForm.get('captionGroup.divisor').value, 'months'), dateFormat);\n    } else if (propertyAgentForm.get('periodGroup.periodEndDate').value === propertyAgentForm.get('periodEndDateOptions').value[2]?.key) {\n      periodStartDate = propertyAgentForm.get('initialStrtDate').value;\n    } else periodStartDate = \"\";\n    propertyAgentForm.get('periodGroup.periodStrtDate').setValue(periodStartDate);\n    cd.detectChanges();\n  }\n  static mapPropertyAgentWDToFormGroup(propertyAgentWD, dateUtilsService, formBuilder, trgStartDte, cd) {\n    const propertyAgentFormGroup = formBuilder.group({\n      id: new forms_1.FormControl(propertyAgentWD.id, null),\n      workingDataId: new forms_1.FormControl(propertyAgentWD.workingDataId, null),\n      captionGroup: formBuilder.group({\n        divisor: new forms_1.FormControl(propertyAgentWD.divisor, null)\n      }),\n      periodGroup: formBuilder.group({\n        periodStrtDate: new forms_1.FormControl(propertyAgentWD.startDate, null),\n        periodEndDate: new forms_1.FormControl(propertyAgentWD.endDate, null)\n      }),\n      grossIncomeArray: formBuilder.array([formBuilder.group({\n        personalAmt: new forms_1.FormControl(propertyAgentWD.personalAmt, null),\n        overiddingAmt: new forms_1.FormControl(propertyAgentWD.overiddingAmt, null)\n      })]),\n      footerGroup: formBuilder.group({\n        claimNip: new forms_1.FormControl(propertyAgentWD.claimNip, null)\n      }),\n      annualIncomeList: new forms_1.FormArray([]),\n      initialStrtDate: new forms_1.FormControl(propertyAgentWD.startDate, null),\n      periodEndDateOptions: new forms_1.FormControl([], null)\n    });\n    PropertyAgentComponent.staticConstructPeriodEndDateOptions(trgStartDte, dateUtilsService, propertyAgentFormGroup, cd);\n    PropertyAgentComponent.staticConstructPeriodStrtDate(propertyAgentFormGroup, dateUtilsService, trgStartDte, cd);\n    propertyAgentWD.annualIncomeList.forEach(annualIncomeWD => {\n      const annualIncomeFormGroup = formBuilder.group({\n        source: new forms_1.FormControl(annualIncomeWD.source, null),\n        assessment: new forms_1.FormControl(annualIncomeWD.assessment === null ? null : dateUtilsService.convertStrToDate(annualIncomeWD.assessment, \"DD-MM-YYYY\"), null),\n        acctgPeriodStrt: new forms_1.FormControl(annualIncomeWD.acctgStartDate === null ? null : dateUtilsService.convertStrToDate(annualIncomeWD.acctgStartDate, \"DD-MM-YYYY\"), null),\n        acctgPeriodEnd: new forms_1.FormControl(annualIncomeWD.acctgEndDate === null ? null : dateUtilsService.convertStrToDate(annualIncomeWD.acctgEndDate, \"DD-MM-YYYY\"), null),\n        occupationNature: new forms_1.FormControl(annualIncomeWD.occupationNature, null),\n        revenue: new forms_1.FormControl(annualIncomeWD.revenue, null),\n        adjProfit: new forms_1.FormControl(annualIncomeWD.adjProfit, null)\n      });\n      propertyAgentFormGroup.get('annualIncomeList').push(annualIncomeFormGroup);\n    });\n    return propertyAgentFormGroup;\n  }\n  static mapPropertyAgentFormGroupToWD(fg, obj, dateUtilsService) {\n    const annualIncomeDtoList = [];\n    console.log(\"id \", fg.get('periodGroup.periodStrtDate').value);\n    const propertyAgentWD = {\n      id: fg.get('id')?.value,\n      archiveDt: obj.archiveDt,\n      workingDataId: obj.workingDataId,\n      startDate: fg.get('periodGroup.periodStrtDate').value,\n      endDate: fg.get('periodGroup.periodEndDate').value,\n      divisor: fg.get('captionGroup.divisor').value,\n      claimNip: fg.get('footerGroup.claimNip').value,\n      personalAmt: fg.get('grossIncomeArray').controls[0].get('personalAmt').value,\n      overiddingAmt: fg.get('grossIncomeArray').controls[0].get('overiddingAmt').value,\n      annualIncomeList: annualIncomeDtoList\n    };\n    console.log(\"prop agent\", propertyAgentWD);\n    const annualIncomeListFA = fg.get('annualIncomeList');\n    annualIncomeListFA.controls.forEach(control => {\n      const annualIncomeDto = {\n        workingDataId: obj.workingDataId,\n        seq: annualIncomeDtoList.length + 1,\n        source: control.get('source').value,\n        assessment: dateUtilsService.isValid(control.get('assessment').value) ? dateUtilsService.convertDateToStr(control.get('assessment').value, \"DD-MM-YYYY\") : null,\n        acctgStartDate: dateUtilsService.isValid(control.get('acctgPeriodStrt').value) ? dateUtilsService.convertDateToStr(control.get('acctgPeriodStrt').value, \"DD-MM-YYYY\") : null,\n        acctgEndDate: dateUtilsService.isValid(control.get('acctgPeriodEnd').value) ? dateUtilsService.convertDateToStr(control.get('acctgPeriodEnd').value, \"DD-MM-YYYY\") : null,\n        occupationNature: control.get('occupationNature').value,\n        revenue: control.get('revenue').value,\n        adjProfit: control.get('adjProfit').value\n      };\n      annualIncomeDtoList.push(annualIncomeDto);\n    });\n    return propertyAgentWD;\n  }\n  ngOnInit() {\n    console.log(\"initializing\");\n  }\n  ngOnChanges(changes) {\n    if (changes.trgStartDte && this.isActive()) {\n      console.log('has my trg date changed');\n      this.constructSourceYearOptions();\n      PropertyAgentComponent.staticConstructPeriodEndDateOptions(this.trgStartDte || this.currHardCopyDetails.trgStartDte, this.dateUtilsService, this.propertyAgentForm, this.cd);\n      PropertyAgentComponent.staticConstructPeriodStrtDate(this.propertyAgentForm, this.dateUtilsService, this.trgStartDte || this.currHardCopyDetails.trgStartDte, this.cd);\n    }\n    if (changes.seHardCopyDetails?.currentValue) {\n      this.currHardCopyDetails = changes.seHardCopyDetails.currentValue;\n    }\n    if (changes.selectedWDOption?.currentValue) {\n      this.currSelectedOption = changes.selectedWDOption?.currentValue;\n      this.subscr.unsubscribe();\n      this.retrievePropertyAgentWD();\n    }\n  }\n  isActive() {\n    return this.currSelectedOption?.obj.archiveDt === 0;\n  }\n  getFormControlValue(fg, formCtrlName) {\n    return fg.get(formCtrlName).value;\n  }\n  getInnerFormControl(fg, controlName, innerControlName) {\n    return fg?.get(controlName)?.get(innerControlName);\n  }\n  constructSourceYearOptions() {\n    const claimEndDt = this.dateUtilsService.convertStrToDate(this.currHardCopyDetails.trgEndDte, \"DD-MM-YYYY\");\n    this.sourceYrOptions = [{\n      name: 'NA ' + this.dateUtilsService.convertMomentToStr((0, moment_1.default)(claimEndDt).subtract(1, 'years'), \"YY\"),\n      key: 1\n    }, {\n      name: 'NA ' + this.dateUtilsService.convertMomentToStr((0, moment_1.default)(claimEndDt), \"YY\"),\n      key: 2\n    }, {\n      name: 'NA ' + this.dateUtilsService.convertMomentToStr((0, moment_1.default)(claimEndDt).add(1, 'years'), \"YY\"),\n      key: 3\n    }];\n  }\n  retrievePropertyAgentWD() {\n    if (!this.currSelectedOption?.changes && !this.currSelectedOption.newWD) {\n      this.propertyAgentForm = this.formBuilder.group({\n        id: new forms_1.FormControl(null, null),\n        captionGroup: this.formBuilder.group({\n          divisor: new forms_1.FormControl(6, null)\n        }),\n        periodGroup: this.formBuilder.group({\n          periodStrtDate: new forms_1.FormControl('', null),\n          periodEndDate: new forms_1.FormControl('', null)\n        }),\n        grossIncomeArray: this.formBuilder.array([this.formBuilder.group({\n          personalAmt: new forms_1.FormControl(null, null),\n          overiddingAmt: new forms_1.FormControl(null, null)\n        })]),\n        footerGroup: this.formBuilder.group({\n          claimNip: new forms_1.FormControl(0, null)\n        }),\n        annualIncomeList: new forms_1.FormArray([]),\n        periodEndDateOptions: new forms_1.FormControl([], null),\n        initialStrtDate: new forms_1.FormControl('', null)\n      });\n      let params = new http_1.HttpParams();\n      params = params.append(\"workingDataId\", this.currSelectedOption?.obj.workingDataId);\n      this.seClaimService.retrievePropertyAgentWD({\n        params\n      }).subscribe(resp => {\n        if (resp) {\n          if (resp.status === 200 && resp.body.data) {\n            this.dataTable?.reset();\n            this.dataSet = resp.body.data;\n            this.constructForm(this.dataSet);\n            this.valueChangeSubscribe();\n          }\n        }\n      }, error => {\n        console.log(\"error is\" + String(error?.error?.error_desc));\n        this.toastService.error(String(error?.error?.error_desc));\n      });\n    } else if (this.currSelectedOption.changes && !this.currSelectedOption.newWD) {\n      this.propertyAgentForm = this.workingDataWithChanges.get(this.currSelectedOption?.obj?.workingDataId).formGroup;\n      this.loading = false;\n    } else if (this.currSelectedOption.newWD) {\n      this.propertyAgentForm = this.newUnsavedWorkingData.get(this.currSelectedOption?.key.toString()).formGroup;\n      this.loading = false;\n    }\n  }\n  constructForm(dataSet) {\n    console.log(\"lola here\");\n    const formArr = this.grossIncomeArray;\n    if (!this.propertyAgentForm.get('periodEndDateOptions').value.find(x => x.name === dataSet.endDate)) {\n      const periodEndDateOptions = this.propertyAgentForm.get('periodEndDateOptions').value;\n      periodEndDateOptions.push({\n        key: dataSet.endDate,\n        name: dataSet.endDate\n      });\n      this.propertyAgentForm.get('periodEndDateOptions').setValue(periodEndDateOptions);\n    }\n    this.propertyAgentForm.get('initialStrtDate').setValue(dataSet.startDate);\n    this.propertyAgentForm.get('periodGroup.periodStrtDate').setValue(dataSet.startDate);\n    this.propertyAgentForm.get('periodGroup.periodEndDate').setValue(dataSet.endDate);\n    this.propertyAgentForm.get('id').setValue(dataSet.id);\n    this.propertyAgentForm.get('captionGroup.divisor').setValue(dataSet.divisor);\n    formArr.controls[0]?.get('personalAmt').setValue(dataSet.personalAmt);\n    formArr.controls[0]?.get('overiddingAmt').setValue(dataSet.overiddingAmt);\n    dataSet.annualIncomeList?.forEach(annualIncomeWD => {\n      const annualIncomeFormGroup = this.formBuilder.group({\n        seq: new forms_1.FormControl(annualIncomeWD.seq, null),\n        source: new forms_1.FormControl(annualIncomeWD.source, null),\n        assessment: new forms_1.FormControl(annualIncomeWD.assessment === null ? null : this.dateUtilsService.convertStrToDate(annualIncomeWD.assessment, \"DD-MM-YYYY\"), null),\n        acctgPeriodStrt: new forms_1.FormControl(annualIncomeWD.acctgStartDate === null ? null : this.dateUtilsService.convertStrToDate(annualIncomeWD.acctgStartDate, \"DD-MM-YYYY\"), null),\n        acctgPeriodEnd: new forms_1.FormControl(annualIncomeWD.acctgEndDate === null ? null : this.dateUtilsService.convertStrToDate(annualIncomeWD.acctgEndDate, \"DD-MM-YYYY\"), null),\n        occupationNature: new forms_1.FormControl(annualIncomeWD.occupationNature, null),\n        revenue: new forms_1.FormControl(annualIncomeWD.revenue, null),\n        adjProfit: new forms_1.FormControl(annualIncomeWD.adjProfit, null)\n      });\n      this.propertyAgentForm.get('annualIncomeList').push(annualIncomeFormGroup);\n    });\n    this.propertyAgentForm.get('footerGroup.claimNip').setValue(dataSet?.claimNip);\n  }\n  valueChangeSubscribe() {\n    this.subscr = this.propertyAgentForm.valueChanges.subscribe(changes => {\n      console.log(\"has changes\", changes);\n      this.currSelectedOption.changes = true;\n      this.saveSEClaimRequest.workingDataSectionInd = true;\n      if (!this.workingDataWithChanges.has(this.currSelectedOption?.obj?.workingDataId) && this.currSelectedOption?.obj?.archiveDt === 0) {\n        console.log(\"puting to id\", this.currSelectedOption?.obj?.workingDataId);\n        console.log(\"subscribing\", this.propertyAgentForm);\n        this.workingDataWithChanges.set(this.currSelectedOption?.obj?.workingDataId, {\n          obj: this.currSelectedOption.obj,\n          formGroup: this.propertyAgentForm\n        });\n      }\n    });\n  }\n  copyToItem(event) {\n    this.totalAmtPay = this.propertyAgentForm.get('footerGroup.claimNip')?.value / 100 * this.grossIncomeArray.controls[0]?.get('personalAmt').value / this.propertyAgentForm.get('captionGroup.divisor')?.value;\n    this.totalAmtPayEvent.emit(this.totalAmtPay);\n  }\n  enableCopytoItem() {\n    const claimItemList = this.itemDetailsSection.itemForm?.get('otherSEItemArr');\n    let itxItem = null;\n    if (claimItemList.length > 0) {\n      itxItem = claimItemList?.controls.filter(x => x.get('itemType').value === 'AVE')[0];\n      return itxItem?.get('latestStatus').value === this.PEND_VERIFY_STATUS || itxItem?.get('latestStatus').value === this.PEND_ACTION_STATUS;\n    } else return false;\n  }\n  isValidNumber(obj) {\n    return !isNaN(obj);\n  }\n  //allows input on need basis\n  hasValidAuthorityAndStation() {\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_VERIFIER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_VERIFICATION) {\n      return true;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_CERTIFICATION) {\n      return false;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_APPROVAL) {\n      return false;\n    }\n    return false;\n  }\n}\nexports.PropertyAgentComponent = PropertyAgentComponent;\nPropertyAgentComponent.ɵfac = function PropertyAgentComponent_Factory(t) {\n  return new (t || PropertyAgentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Ns2HttpService), i0.ɵɵdirectiveInject(i3.DateUtilsService), i0.ɵɵdirectiveInject(i4.SEClaimService), i0.ɵɵdirectiveInject(i5.CustomToastService), i0.ɵɵdirectiveInject(i6.AccountService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nPropertyAgentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PropertyAgentComponent,\n  selectors: [[\"n2-property-agent\"]],\n  viewQuery: function PropertyAgentComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dataTable = _t.first);\n    }\n  },\n  inputs: {\n    seHardCopyDetails: \"seHardCopyDetails\",\n    selectedWDOption: \"selectedWDOption\",\n    itemDetailsSection: \"itemDetailsSection\",\n    trgStartDte: \"trgStartDte\",\n    workingDataWithChanges: \"workingDataWithChanges\",\n    newUnsavedWorkingData: \"newUnsavedWorkingData\",\n    saveSEClaimRequest: \"saveSEClaimRequest\",\n    station: \"station\",\n    readOnly: \"readOnly\"\n  },\n  outputs: {\n    totalAmtPayEvent: \"totalAmtPayEvent\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 58,\n  vars: 21,\n  consts: [[1, \"flex\", \"gap-2\"], [1, \"grid\"], [1, \"col-6\"], [\"pTemplate\", \"header\"], [3, \"formGroup\"], [\"formArrayName\", \"grossIncomeArray\"], [\"responsiveLayout\", \"scroll\", 3, \"value\"], [\"dataTable\", \"\"], [\"pTemplate\", \"body\"], [1, \"grid\", 2, \"margin-top\", \"1em\", \"margin-left\", \"220px\"], [1, \"col-12\", \"justify-content-start\", \"gap-4\", \"flex\", \"align-items-center\"], [4, \"ngIf\", \"ngIfElse\"], [\"labelClaimNIP\", \"\"], [1, \"col\"], [\"label\", \"Copy to Item\", 3, \"disabled\", \"click\"], [1, \"col-6\", 3, \"annualIncomeFormArray\", \"seHardCopyDetails\", \"isActive\", \"readOnly\", \"station\"], [1, \"align-items-center\"], [\"scope\", \"col\"], [1, \"col-form-label\"], [1, \"col-3\"], [1, \"col-1\"], [1, \"col-5\", \"input-group\", \"gap-2\", \"flex\", \"align-content-center\"], [\"id\", \"source\", \"optionLabel\", \"name\", \"optionValue\", \"key\", \"autoWidth\", \"false\", \"appendTo\", \"body\", 3, \"options\", \"formControl\", \"style\", \"onChange\", 4, \"ngIf\", \"ngIfElse\"], [\"class\", \"p-error\", \"icTranslate\", \"nspay2App.claim.validation.CLM-V002\", 3, \"translateValues\", 4, \"ngIf\"], [\"labelPeriodEndDate\", \"\"], [\"formControlName\", \"divisor\", 3, \"min\", \"max\", \"inputStyle\", \"disabled\", \"onBlur\"], [\"id\", \"source\", \"optionLabel\", \"name\", \"optionValue\", \"key\", \"autoWidth\", \"false\", \"appendTo\", \"body\", 3, \"options\", \"formControl\", \"onChange\"], [\"icTranslate\", \"nspay2App.claim.validation.CLM-V002\", 1, \"p-error\", 3, \"translateValues\"], [3, \"formGroupName\"], [\"formControlName\", \"personalAmt\", \"mode\", \"decimal\", 3, \"min\", \"max\", \"inputStyle\", \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelPersonalAmt\", \"\"], [\"formControlName\", \"overiddingAmt\", \"mode\", \"decimal\", 3, \"min\", \"max\", \"inputStyle\", \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelOverridingAmt\", \"\"], [2, \"text-align\", \"right\"], [\"formControlName\", \"personalAmt\", \"mode\", \"decimal\", 3, \"min\", \"max\", \"inputStyle\", \"minFractionDigits\"], [\"formControlName\", \"overiddingAmt\", \"mode\", \"decimal\", 3, \"min\", \"max\", \"inputStyle\", \"minFractionDigits\"], [\"formControlName\", \"claimNip\", \"suffix\", \"%\", 3, \"maxlength\", \"inputStyle\"]],\n  template: function PropertyAgentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n    \");\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵtext(3, \"\\n        \");\n      i0.ɵɵelementStart(4, \"p-panel\", 2);\n      i0.ɵɵtext(5, \"\\n            \");\n      i0.ɵɵtemplate(6, PropertyAgentComponent_ng_template_6_Template, 7, 3, \"ng-template\", 3);\n      i0.ɵɵtext(7, \"\\n            \");\n      i0.ɵɵelementStart(8, \"form\", 4);\n      i0.ɵɵtext(9, \"\\n                \");\n      i0.ɵɵelementStart(10, \"div\", 5);\n      i0.ɵɵtext(11, \"\\n                    \");\n      i0.ɵɵelementStart(12, \"p-table\", 6, 7);\n      i0.ɵɵtext(14, \"\\n                        \");\n      i0.ɵɵtemplate(15, PropertyAgentComponent_ng_template_15_Template, 56, 25, \"ng-template\", 3);\n      i0.ɵɵtext(16, \"\\n                        \");\n      i0.ɵɵtemplate(17, PropertyAgentComponent_ng_template_17_Template, 47, 15, \"ng-template\", 8);\n      i0.ɵɵtext(18, \"\\n                    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n                \");\n      i0.ɵɵelementStart(21, \"div\", 9);\n      i0.ɵɵtext(22, \"\\n                    \");\n      i0.ɵɵelementStart(23, \"form\", 4);\n      i0.ɵɵtext(24, \"\\n                        \");\n      i0.ɵɵelementStart(25, \"div\", 10);\n      i0.ɵɵtext(26, \"\\n                            Claim NIP:\\n                            \");\n      i0.ɵɵtemplate(27, PropertyAgentComponent_div_27_Template, 3, 3, \"div\", 11);\n      i0.ɵɵtext(28, \"\\n                            \");\n      i0.ɵɵtemplate(29, PropertyAgentComponent_ng_template_29_Template, 1, 1, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtext(31, \"\\n\\n                            \");\n      i0.ɵɵelementStart(32, \"div\");\n      i0.ɵɵtext(33);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \"\\n                        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(35, \"\\n                        \");\n      i0.ɵɵelementStart(36, \"div\", 10);\n      i0.ɵɵtext(37, \"\\n                            \");\n      i0.ɵɵelementStart(38, \"div\");\n      i0.ɵɵtext(39);\n      i0.ɵɵpipe(40, \"number\");\n      i0.ɵɵpipe(41, \"number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(42, \"\\n                        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(43, \"\\n                        \");\n      i0.ɵɵelementStart(44, \"div\", 13);\n      i0.ɵɵtext(45, \"\\n                            \");\n      i0.ɵɵelementStart(46, \"p-button\", 14);\n      i0.ɵɵlistener(\"click\", function PropertyAgentComponent_Template_p_button_click_46_listener($event) {\n        return ctx.copyToItem($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(47, \"\\n                        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(48, \"\\n                    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(49, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(50, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(51, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(52, \"\\n        \");\n      i0.ɵɵelementStart(53, \"n2-annual-income\", 15);\n      i0.ɵɵtext(54, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(55, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(56, \"\\n\\n\\n\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(57, \"\\n\\n\\n\");\n    }\n    if (rf & 2) {\n      const _r5 = i0.ɵɵreference(30);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.propertyAgentForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", ctx.grossIncomeArray.controls);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"formGroup\", ctx.footerGroup);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.isActive())(\"ngIfElse\", _r5);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\"Proposed NIP: \", ctx.proposedNIP, \" %\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate3(\"Total Amount Payable: \", i0.ɵɵpipeBind2(40, 15, ctx.footerGroup.get(\"claimNip\").value / 100 * ctx.grossIncomeArray.controls[0].get(\"personalAmt\").value / ctx.captionGroup.get(\"divisor\").value, \"1.2-2\"), \"\\n                                (\", ctx.footerGroup.get(\"claimNip\").value, \"% * \", i0.ɵɵpipeBind2(41, 18, ctx.grossIncomeArray.controls[0].get(\"personalAmt\").value / ctx.captionGroup.get(\"divisor\").value, \"1.2-2\"), \") \");\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"disabled\", !ctx.enableCopytoItem());\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"annualIncomeFormArray\", ctx.annualIncomeList)(\"seHardCopyDetails\", ctx.seHardCopyDetails)(\"isActive\", ctx.isActive())(\"readOnly\", ctx.readOnly)(\"station\", ctx.station);\n    }\n  },\n  dependencies: [i7.NgIf, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormControlDirective, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i8.PrimeTemplate, i9.Button, i10.Table, i11.Dropdown, i12.InputNumber, i13.TranslateDirective, i14.Panel, i15.AnnualIncomeComponent, i7.DecimalPipe],\n  styles: [\"[_nghost-%COMP%]     .p-panel .p-panel-header {\\n  height: 5rem;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable.p-datatable-striped .p-datatable-tbody > tr > :nth-child(1) {\\n  min-width: 220px;\\n  background: none;\\n  border: none;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable.p-datatable-striped .p-datatable-thead > tr > :nth-child(1) {\\n  min-width: 220px;\\n  background: none;\\n  border: none;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable.p-datatable-striped .p-datatable-tbody > tr > :nth-child(2) {\\n  min-width: 220px;\\n  width: 220px;\\n}\\n\\n[_nghost-%COMP%]     .grid-top-bold .td {\\n  border-bottom: 1px solid black;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable .p-datatable-tfoot > tr > td {\\n  text-align: left;\\n  padding: 1rem 1rem;\\n  border: none;\\n  border-width: none;\\n  font-weight: 600; \\n  color: #343a40;\\n  background: transparent;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable .p-datatable-thead > tr > th {\\n  position: sticky;\\n  top: 0px;\\n}\\n\\n[_nghost-%COMP%]     .transparent-input .p-inputtext {\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n  font-size: 1rem;\\n  color: #495057;\\n  background: #ffffff;\\n  padding: 0.75rem 0.75rem;\\n  border: none;\\n  -webkit-appearance: none;\\n          appearance: none;\\n}\\n\\n[_nghost-%COMP%]     .transparent-input .p-inputtext:enabled:focus {\\n  outline: 0 none;\\n  border-color: transparent;\\n}\\n\\n[_nghost-%COMP%]     .transparent-input .p-inputtext.ng-dirty.ng-invalid {\\n  border-color: transparent;\\n}\\n\\n[_nghost-%COMP%]     .transparent-input .p-inputtext:enabled:hover {\\n  border-color: transparent;\\n}\\n\\n[_nghost-%COMP%]     .p-card .p-card-content {\\n  padding: 0 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3BlcnR5LWFnZW50LmNvbXBvbmVudC5zY3NzIiwiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxwcm9qZWN0cyUyMDJcXG5zcGF5aWlhcHBcXHNyY1xcbWFpblxcd2ViYXBwXFxhcHBcXGNsYWltXFxzZS1jbGFpbVxcc2UtY2xhaW0tdmVyaWZpY2F0aW9uXFx3b3JraW5nLWRhdGEtc2VjdGlvblxccHJvcGVydHktYWdlbnRcXHByb3BlcnR5LWFnZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQ0NKOztBREdBO0VBQ0ksZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7QUNBSjs7QURJQTtFQUNJLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0FDREo7O0FESUE7RUFDSSxnQkFBQTtFQUNBLFlBQUE7QUNESjs7QURJQTtFQUNJLDhCQUFBO0FDREo7O0FES0E7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUEsRUFBQSwyQkFBQTtFQUNBLGNBQUE7RUFDQSx1QkFBQTtBQ0ZKOztBREtBO0VBRUksZ0JBQUE7RUFDQSxRQUFBO0FDRko7O0FES0E7RUFDSSwwSkFBQTtFQUNBLGVBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7RUFDQSx3QkFBQTtFQUNBLFlBQUE7RUFDQSx3QkFBQTtVQUFBLGdCQUFBO0FDRko7O0FES0U7RUFDRSxlQUFBO0VBQ0EseUJBQUE7QUNGSjs7QURNRTtFQUNFLHlCQUFBO0FDSEo7O0FETUU7RUFDRSx5QkFBQTtBQ0hKOztBRE1FO0VBQ0UsWUFBQTtBQ0hKIiwiZmlsZSI6InByb3BlcnR5LWFnZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIC5wLXBhbmVsIC5wLXBhbmVsLWhlYWRlciB7XHJcbiAgICBoZWlnaHQ6IDVyZW07XHJcbn1cclxuXHJcbi8vY3VzdG9tIHN0eWxlcyBmb3Igd29ya2luZyBkYXRhIHRhYmxlXHJcbjpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUucC1kYXRhdGFibGUtc3RyaXBlZCAucC1kYXRhdGFibGUtdGJvZHkgPiB0ciA+Om50aC1jaGlsZCgxKSB7XHJcbiAgICBtaW4td2lkdGg6IDIyMHB4O1xyXG4gICAgYmFja2dyb3VuZDpub25lO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG5cclxufVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5wLWRhdGF0YWJsZS5wLWRhdGF0YWJsZS1zdHJpcGVkIC5wLWRhdGF0YWJsZS10aGVhZCA+IHRyID46bnRoLWNoaWxkKDEpIHtcclxuICAgIG1pbi13aWR0aDogMjIwcHg7XHJcbiAgICBiYWNrZ3JvdW5kOm5vbmU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUucC1kYXRhdGFibGUtc3RyaXBlZCAucC1kYXRhdGFibGUtdGJvZHkgPiB0ciA+Om50aC1jaGlsZCgyKSB7XHJcbiAgICBtaW4td2lkdGg6IDIyMHB4O1xyXG4gICAgd2lkdGg6IDIyMHB4O1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLmdyaWQtdG9wLWJvbGQgLnRke1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGJsYWNrO1xyXG5cclxufVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5wLWRhdGF0YWJsZSAucC1kYXRhdGFibGUtdGZvb3QgPiB0ciA+IHRkIHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBwYWRkaW5nOiAxcmVtIDFyZW07XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItd2lkdGg6IG5vbmU7XHJcbiAgICBmb250LXdlaWdodDogNjAwOyAvKiBDVVNUT00gIE9yaWdpbmFsID0gNzAwICovXHJcbiAgICBjb2xvcjogIzM0M2E0MDtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50XHJcbiAgfVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5wLWRhdGF0YWJsZSAucC1kYXRhdGFibGUtdGhlYWQgPiB0ciA+IHRoIHtcclxuICAgIHBvc2l0aW9uOiAtd2Via2l0LXN0aWNreTtcclxuICAgIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgICB0b3A6IDBweDtcclxufVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC50cmFuc3BhcmVudC1pbnB1dCAucC1pbnB1dHRleHQge1xyXG4gICAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTZWdvZSBVSVwiLCBSb2JvdG8sIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWYsIFwiQXBwbGUgQ29sb3IgRW1vamlcIiwgXCJTZWdvZSBVSSBFbW9qaVwiLCBcIlNlZ29lIFVJIFN5bWJvbFwiO1xyXG4gICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgY29sb3I6ICM0OTUwNTc7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xyXG4gICAgcGFkZGluZzogMC43NXJlbSAwLjc1cmVtO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYXBwZWFyYW5jZTogbm9uZTtcclxuICB9XHJcblxyXG4gIDpob3N0IDo6bmctZGVlcCAudHJhbnNwYXJlbnQtaW5wdXQgLnAtaW5wdXR0ZXh0OmVuYWJsZWQ6Zm9jdXMge1xyXG4gICAgb3V0bGluZTogMCBub25lO1xyXG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuXHJcblxyXG4gIH1cclxuICA6aG9zdCA6Om5nLWRlZXAgLnRyYW5zcGFyZW50LWlucHV0IC5wLWlucHV0dGV4dC5uZy1kaXJ0eS5uZy1pbnZhbGlkIHtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG5cclxuICA6aG9zdCA6Om5nLWRlZXAgLnRyYW5zcGFyZW50LWlucHV0IC5wLWlucHV0dGV4dDplbmFibGVkOmhvdmVyIHtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnRcclxuICB9XHJcblxyXG4gIDpob3N0IDo6bmctZGVlcCAucC1jYXJkIC5wLWNhcmQtY29udGVudCB7XHJcbiAgICBwYWRkaW5nOiAwIDA7XHJcbiAgfVxyXG4iLCI6aG9zdCA6Om5nLWRlZXAgLnAtcGFuZWwgLnAtcGFuZWwtaGVhZGVyIHtcbiAgaGVpZ2h0OiA1cmVtO1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtZGF0YXRhYmxlLnAtZGF0YXRhYmxlLXN0cmlwZWQgLnAtZGF0YXRhYmxlLXRib2R5ID4gdHIgPiA6bnRoLWNoaWxkKDEpIHtcbiAgbWluLXdpZHRoOiAyMjBweDtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtZGF0YXRhYmxlLnAtZGF0YXRhYmxlLXN0cmlwZWQgLnAtZGF0YXRhYmxlLXRoZWFkID4gdHIgPiA6bnRoLWNoaWxkKDEpIHtcbiAgbWluLXdpZHRoOiAyMjBweDtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtZGF0YXRhYmxlLnAtZGF0YXRhYmxlLXN0cmlwZWQgLnAtZGF0YXRhYmxlLXRib2R5ID4gdHIgPiA6bnRoLWNoaWxkKDIpIHtcbiAgbWluLXdpZHRoOiAyMjBweDtcbiAgd2lkdGg6IDIyMHB4O1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLmdyaWQtdG9wLWJvbGQgLnRkIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGJsYWNrO1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtZGF0YXRhYmxlIC5wLWRhdGF0YWJsZS10Zm9vdCA+IHRyID4gdGQge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBwYWRkaW5nOiAxcmVtIDFyZW07XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXdpZHRoOiBub25lO1xuICBmb250LXdlaWdodDogNjAwOyAvKiBDVVNUT00gIE9yaWdpbmFsID0gNzAwICovXG4gIGNvbG9yOiAjMzQzYTQwO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5wLWRhdGF0YWJsZSAucC1kYXRhdGFibGUtdGhlYWQgPiB0ciA+IHRoIHtcbiAgcG9zaXRpb246IC13ZWJraXQtc3RpY2t5O1xuICBwb3NpdGlvbjogc3RpY2t5O1xuICB0b3A6IDBweDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC50cmFuc3BhcmVudC1pbnB1dCAucC1pbnB1dHRleHQge1xuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlNlZ29lIFVJXCIsIFJvYm90bywgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZiwgXCJBcHBsZSBDb2xvciBFbW9qaVwiLCBcIlNlZ29lIFVJIEVtb2ppXCIsIFwiU2Vnb2UgVUkgU3ltYm9sXCI7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgY29sb3I6ICM0OTUwNTc7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gIHBhZGRpbmc6IDAuNzVyZW0gMC43NXJlbTtcbiAgYm9yZGVyOiBub25lO1xuICBhcHBlYXJhbmNlOiBub25lO1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnRyYW5zcGFyZW50LWlucHV0IC5wLWlucHV0dGV4dDplbmFibGVkOmZvY3VzIHtcbiAgb3V0bGluZTogMCBub25lO1xuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnRyYW5zcGFyZW50LWlucHV0IC5wLWlucHV0dGV4dC5uZy1kaXJ0eS5uZy1pbnZhbGlkIHtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC50cmFuc3BhcmVudC1pbnB1dCAucC1pbnB1dHRleHQ6ZW5hYmxlZDpob3ZlciB7XG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbjpob3N0IDo6bmctZGVlcCAucC1jYXJkIC5wLWNhcmQtY29udGVudCB7XG4gIHBhZGRpbmc6IDAgMDtcbn0iXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvY2xhaW0vc2UtY2xhaW0vc2UtY2xhaW0tdmVyaWZpY2F0aW9uL3dvcmtpbmctZGF0YS1zZWN0aW9uL3Byb3BlcnR5LWFnZW50L3Byb3BlcnR5LWFnZW50LmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vcHJvamVjdHMlMjAyL25zcGF5aWlhcHAvc3JjL21haW4vd2ViYXBwL2FwcC9jbGFpbS9zZS1jbGFpbS9zZS1jbGFpbS12ZXJpZmljYXRpb24vd29ya2luZy1kYXRhLXNlY3Rpb24vcHJvcGVydHktYWdlbnQvcHJvcGVydHktYWdlbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FDQ0o7O0FER0E7RUFDSSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtBQ0FKOztBRElBO0VBQ0ksZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7QUNESjs7QURJQTtFQUNJLGdCQUFBO0VBQ0EsWUFBQTtBQ0RKOztBRElBO0VBQ0ksOEJBQUE7QUNESjs7QURLQTtFQUNJLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQSxFQUFBLDJCQUFBO0VBQ0EsY0FBQTtFQUNBLHVCQUFBO0FDRko7O0FES0E7RUFFSSxnQkFBQTtFQUNBLFFBQUE7QUNGSjs7QURLQTtFQUNJLDBKQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7RUFDQSxtQkFBQTtFQUNBLHdCQUFBO0VBQ0EsWUFBQTtFQUNBLHdCQUFBO1VBQUEsZ0JBQUE7QUNGSjs7QURLRTtFQUNFLGVBQUE7RUFDQSx5QkFBQTtBQ0ZKOztBRE1FO0VBQ0UseUJBQUE7QUNISjs7QURNRTtFQUNFLHlCQUFBO0FDSEo7O0FETUU7RUFDRSxZQUFBO0FDSEo7QURDQSxvN0xBQW83TCIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IDo6bmctZGVlcCAucC1wYW5lbCAucC1wYW5lbC1oZWFkZXIge1xyXG4gICAgaGVpZ2h0OiA1cmVtO1xyXG59XHJcblxyXG4vL2N1c3RvbSBzdHlsZXMgZm9yIHdvcmtpbmcgZGF0YSB0YWJsZVxyXG46aG9zdCA6Om5nLWRlZXAgLnAtZGF0YXRhYmxlLnAtZGF0YXRhYmxlLXN0cmlwZWQgLnAtZGF0YXRhYmxlLXRib2R5ID4gdHIgPjpudGgtY2hpbGQoMSkge1xyXG4gICAgbWluLXdpZHRoOiAyMjBweDtcclxuICAgIGJhY2tncm91bmQ6bm9uZTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuXHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUucC1kYXRhdGFibGUtc3RyaXBlZCAucC1kYXRhdGFibGUtdGhlYWQgPiB0ciA+Om50aC1jaGlsZCgxKSB7XHJcbiAgICBtaW4td2lkdGg6IDIyMHB4O1xyXG4gICAgYmFja2dyb3VuZDpub25lO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLnAtZGF0YXRhYmxlLnAtZGF0YXRhYmxlLXN0cmlwZWQgLnAtZGF0YXRhYmxlLXRib2R5ID4gdHIgPjpudGgtY2hpbGQoMikge1xyXG4gICAgbWluLXdpZHRoOiAyMjBweDtcclxuICAgIHdpZHRoOiAyMjBweDtcclxufVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5ncmlkLXRvcC1ib2xkIC50ZHtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBibGFjaztcclxuXHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUgLnAtZGF0YXRhYmxlLXRmb290ID4gdHIgPiB0ZCB7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgcGFkZGluZzogMXJlbSAxcmVtO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXdpZHRoOiBub25lO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDsgLyogQ1VTVE9NICBPcmlnaW5hbCA9IDcwMCAqL1xyXG4gICAgY29sb3I6ICMzNDNhNDA7XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudFxyXG4gIH1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUgLnAtZGF0YXRhYmxlLXRoZWFkID4gdHIgPiB0aCB7XHJcbiAgICBwb3NpdGlvbjogLXdlYmtpdC1zdGlja3k7XHJcbiAgICBwb3NpdGlvbjogc3RpY2t5O1xyXG4gICAgdG9wOiAwcHg7XHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAudHJhbnNwYXJlbnQtaW5wdXQgLnAtaW5wdXR0ZXh0IHtcclxuICAgIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiU2Vnb2UgVUlcIiwgUm9ib3RvLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmLCBcIkFwcGxlIENvbG9yIEVtb2ppXCIsIFwiU2Vnb2UgVUkgRW1vamlcIiwgXCJTZWdvZSBVSSBTeW1ib2xcIjtcclxuICAgIGZvbnQtc2l6ZTogMXJlbTtcclxuICAgIGNvbG9yOiAjNDk1MDU3O1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcclxuICAgIHBhZGRpbmc6IDAuNzVyZW0gMC43NXJlbTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgfVxyXG5cclxuICA6aG9zdCA6Om5nLWRlZXAgLnRyYW5zcGFyZW50LWlucHV0IC5wLWlucHV0dGV4dDplbmFibGVkOmZvY3VzIHtcclxuICAgIG91dGxpbmU6IDAgbm9uZTtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcblxyXG5cclxuICB9XHJcbiAgOmhvc3QgOjpuZy1kZWVwIC50cmFuc3BhcmVudC1pbnB1dCAucC1pbnB1dHRleHQubmctZGlydHkubmctaW52YWxpZCB7XHJcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuXHJcbiAgOmhvc3QgOjpuZy1kZWVwIC50cmFuc3BhcmVudC1pbnB1dCAucC1pbnB1dHRleHQ6ZW5hYmxlZDpob3ZlciB7XHJcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50XHJcbiAgfVxyXG5cclxuICA6aG9zdCA6Om5nLWRlZXAgLnAtY2FyZCAucC1jYXJkLWNvbnRlbnQge1xyXG4gICAgcGFkZGluZzogMCAwO1xyXG4gIH1cclxuIiwiOmhvc3QgOjpuZy1kZWVwIC5wLXBhbmVsIC5wLXBhbmVsLWhlYWRlciB7XG4gIGhlaWdodDogNXJlbTtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5wLWRhdGF0YWJsZS5wLWRhdGF0YWJsZS1zdHJpcGVkIC5wLWRhdGF0YWJsZS10Ym9keSA+IHRyID4gOm50aC1jaGlsZCgxKSB7XG4gIG1pbi13aWR0aDogMjIwcHg7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5wLWRhdGF0YWJsZS5wLWRhdGF0YWJsZS1zdHJpcGVkIC5wLWRhdGF0YWJsZS10aGVhZCA+IHRyID4gOm50aC1jaGlsZCgxKSB7XG4gIG1pbi13aWR0aDogMjIwcHg7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5wLWRhdGF0YWJsZS5wLWRhdGF0YWJsZS1zdHJpcGVkIC5wLWRhdGF0YWJsZS10Ym9keSA+IHRyID4gOm50aC1jaGlsZCgyKSB7XG4gIG1pbi13aWR0aDogMjIwcHg7XG4gIHdpZHRoOiAyMjBweDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5ncmlkLXRvcC1ib2xkIC50ZCB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBibGFjaztcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5wLWRhdGF0YWJsZSAucC1kYXRhdGFibGUtdGZvb3QgPiB0ciA+IHRkIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgcGFkZGluZzogMXJlbSAxcmVtO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci13aWR0aDogbm9uZTtcbiAgZm9udC13ZWlnaHQ6IDYwMDsgLyogQ1VTVE9NICBPcmlnaW5hbCA9IDcwMCAqL1xuICBjb2xvcjogIzM0M2E0MDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbjpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUgLnAtZGF0YXRhYmxlLXRoZWFkID4gdHIgPiB0aCB7XG4gIHBvc2l0aW9uOiAtd2Via2l0LXN0aWNreTtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAwcHg7XG59XG5cbjpob3N0IDo6bmctZGVlcCAudHJhbnNwYXJlbnQtaW5wdXQgLnAtaW5wdXR0ZXh0IHtcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTZWdvZSBVSVwiLCBSb2JvdG8sIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWYsIFwiQXBwbGUgQ29sb3IgRW1vamlcIiwgXCJTZWdvZSBVSSBFbW9qaVwiLCBcIlNlZ29lIFVJIFN5bWJvbFwiO1xuICBmb250LXNpemU6IDFyZW07XG4gIGNvbG9yOiAjNDk1MDU3O1xuICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICBwYWRkaW5nOiAwLjc1cmVtIDAuNzVyZW07XG4gIGJvcmRlcjogbm9uZTtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC50cmFuc3BhcmVudC1pbnB1dCAucC1pbnB1dHRleHQ6ZW5hYmxlZDpmb2N1cyB7XG4gIG91dGxpbmU6IDAgbm9uZTtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC50cmFuc3BhcmVudC1pbnB1dCAucC1pbnB1dHRleHQubmctZGlydHkubmctaW52YWxpZCB7XG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbjpob3N0IDo6bmctZGVlcCAudHJhbnNwYXJlbnQtaW5wdXQgLnAtaW5wdXR0ZXh0OmVuYWJsZWQ6aG92ZXIge1xuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtY2FyZCAucC1jYXJkLWNvbnRlbnQge1xuICBwYWRkaW5nOiAwIDA7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","PropertyAgentComponent","grossIncomeArray","propertyAgentForm","get","captionGroup","periodGroup","footerGroup","annualIncomeList","constructor","formBuilder","ns2Http","dateUtilsService","seClaimService","toastService","accountService","cd","rxjs_1","dataList","core_1","group","id","forms_1","divisor","periodStrtDate","periodEndDate","array","personalAmt","overiddingAmt","claimNip","periodEndDateOptions","initialStrtDate","console","log","staticCreateNewPropertyAgentForm","workingDataOption","trgStartDte","propertyAgentFormGroup","workingDataId","staticConstructPeriodEndDateOptions","staticConstructPeriodStrtDate","startDate","value","setValue","annualIncomeFormGroup","source","assessment","acctgPeriodStrt","acctgPeriodEnd","occupationNature","revenue","adjProfit","push","dateFormat","claimStartDt","convertStrToDate","lastDateOfClaimStartDt","Date","getFullYear","getMonth","date1","convertMomentToStr","subtract","date2","name","key","detectChanges","firstDateOfClaimStartDt","periodStartDate","mapPropertyAgentWDToFormGroup","propertyAgentWD","endDate","forEach","annualIncomeWD","acctgStartDate","acctgEndDate","mapPropertyAgentFormGroupToWD","fg","obj","annualIncomeDtoList","archiveDt","controls","annualIncomeListFA","control","annualIncomeDto","seq","length","isValid","convertDateToStr","ngOnInit","ngOnChanges","changes","isActive","constructSourceYearOptions","currHardCopyDetails","seHardCopyDetails","currentValue","selectedWDOption","currSelectedOption","subscr","unsubscribe","retrievePropertyAgentWD","getFormControlValue","formCtrlName","getInnerFormControl","controlName","innerControlName","claimEndDt","trgEndDte","sourceYrOptions","add","newWD","params","http_1","append","subscribe","resp","status","body","data","dataTable","reset","dataSet","constructForm","valueChangeSubscribe","error","String","error_desc","workingDataWithChanges","formGroup","loading","newUnsavedWorkingData","toString","formArr","find","x","valueChanges","saveSEClaimRequest","workingDataSectionInd","has","set","copyToItem","event","totalAmtPay","totalAmtPayEvent","emit","enableCopytoItem","claimItemList","itemDetailsSection","itemForm","itxItem","filter","PEND_VERIFY_STATUS","PEND_ACTION_STATUS","isValidNumber","isNaN","hasValidAuthorityAndStation","hasAnyAuthority","nspay2_constants_1","CLAIMS_VERIFIER","station","STATION_VERIFICATION","CLAIMS_APPROVER","STATION_CERTIFICATION","STATION_APPROVAL","exports","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\working-data-section\\property-agent\\property-agent.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\working-data-section\\property-agent\\property-agent.component.html"],"sourcesContent":["import { HttpParams } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { AnnualIncomeWD } from 'app/claim/se-claim/model/annual-income-model';\r\nimport { PropertyAgentWD } from 'app/claim/se-claim/model/property-agent.model';\r\nimport { SaveSEClaimRequest } from 'app/claim/se-claim/model/save-se-claim-request.model';\r\nimport { SEClaimService } from 'app/claim/se-claim/service/se-claim.service';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\nimport { NspConfirmationService } from 'app/shared/confirm/nsp-confirm.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport moment from 'moment';\r\nimport { Table } from 'primeng/table';\r\nimport { Subscription } from 'rxjs';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { NSPAY2_ROLES, NSPAY2_STATION } from 'app/nspay2.constants';\r\n\r\n@Component({\r\n  selector: 'n2-property-agent',\r\n  templateUrl: './property-agent.component.html',\r\n  styleUrls: ['./property-agent.component.scss']\r\n})\r\nexport class PropertyAgentComponent implements OnInit {\r\n\r\n  public staticPropertyAgentComponent = PropertyAgentComponent;\r\n \r\n  @Input() seHardCopyDetails:any = {};\r\n  @Input() selectedWDOption:any = {};\r\n  @Input() itemDetailsSection: any = {};\r\n  @Input() trgStartDte: string;\r\n  @Input() workingDataWithChanges: Map<string, any>;\r\n  @Input() newUnsavedWorkingData: Map<string, any>;\r\n  @Input() saveSEClaimRequest: SaveSEClaimRequest;\r\n  @Input() station: string;\r\n  //meant for routing from enquiry\r\n  @Input() readOnly: boolean;\r\n  \r\n  subscr:Subscription = new Subscription();\r\n\r\n  initialStrtDate: string;\r\n\r\n  dateFormat = \"DD-MM-YYYY\";\r\n  cols: any[] = [\r\n    \"Amount\",\r\n    \"Ave\"\r\n  ];\r\n  sourceYrOptions: any[] = [];\r\n  dataSet: any = {\r\n    dataList: []\r\n  }\r\n  claimNIP= 0;\r\n  proposedNIP=75;\r\n  loading = true;\r\n\r\n  currHardCopyDetails: any = {};\r\n  currSelectedOption: any;\r\n  @Output()  totalAmtPayEvent: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  totalAmtPay=0;\r\n  readonly PEND_VERIFY_STATUS = \"PVE\";\r\n  readonly PEND_ACTION_STATUS = \"PAC\";\r\n\r\n\r\n  propertyAgentForm: FormGroup  = this.formBuilder.group({\r\n    id: new FormControl(null, null),\r\n    captionGroup: this.formBuilder.group({\r\n      divisor: new FormControl(6, null)\r\n    }),\r\n    periodGroup:  this.formBuilder.group({\r\n      periodStrtDate: new FormControl('', null),\r\n      periodEndDate: new FormControl('', null),\r\n    }),\r\n    grossIncomeArray: this.formBuilder.array([\r\n      this.formBuilder.group({\r\n        personalAmt: new FormControl(null, null),\r\n        overiddingAmt: new FormControl(null, null),\r\n      })\r\n    ]),\r\n    footerGroup: this.formBuilder.group({\r\n      claimNip: new FormControl(0, null)\r\n    }),\r\n    annualIncomeList: new FormArray([]),\r\n    periodEndDateOptions: new FormControl([], null),\r\n    initialStrtDate: new FormControl('', null)\r\n  });\r\n\r\n  get grossIncomeArray(): FormArray {\r\n    return this.propertyAgentForm?.get('grossIncomeArray') as FormArray\r\n  }\r\n\r\n\r\n  periodEndDateOptions: any[]= [];\r\n\r\n  get captionGroup(): FormGroup {\r\n    return this.propertyAgentForm.get('captionGroup') as FormGroup;\r\n  }\r\n\r\n  get periodGroup(): FormGroup {\r\n    return this.propertyAgentForm.get('periodGroup') as FormGroup;\r\n  }\r\n\r\n  get footerGroup(): FormGroup {\r\n    return this.propertyAgentForm.get('footerGroup') as FormGroup;\r\n  }\r\n\r\n  get annualIncomeList(): FormArray {\r\n    return this.propertyAgentForm.get('annualIncomeList') as FormArray;\r\n  }\r\n\r\n  @ViewChild('dataTable', {static: false})\r\n  private dataTable!: Table;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private ns2Http: Ns2HttpService,\r\n    public dateUtilsService: DateUtilsService,\r\n    private seClaimService: SEClaimService,\r\n    private toastService: CustomToastService,\r\n    public accountService: AccountService,\r\n    public cd: ChangeDetectorRef \r\n  ) {\r\n\r\n    console.log(\"test\");\r\n   }\r\n\r\n  static staticCreateNewPropertyAgentForm(workingDataOption: any, dateUtilsService: DateUtilsService, formBuilder: FormBuilder,trgStartDte: string, cd:  ChangeDetectorRef): FormGroup<any> {\r\n    const propertyAgentFormGroup: FormGroup = formBuilder.group({\r\n      id: new FormControl(null, null),\r\n      workingDataId: new FormControl(null,null),\r\n      captionGroup: formBuilder.group({\r\n        divisor: new FormControl(6, null)\r\n      }),\r\n      periodGroup: formBuilder.group({\r\n        periodStrtDate: new FormControl('', null),\r\n        periodEndDate: new FormControl('', null),\r\n      }),\r\n      grossIncomeArray: formBuilder.array([\r\n        formBuilder.group({\r\n          personalAmt: new FormControl(null, null),\r\n          overiddingAmt: new FormControl(null, null),\r\n        })\r\n      ]),\r\n      footerGroup: formBuilder.group({\r\n        claimNip: new FormControl(0, null)\r\n      }),\r\n      annualIncomeList: new FormArray([]),\r\n      initialStrtDate: new FormControl('', null),\r\n      periodEndDateOptions: new FormControl([], null),\r\n    });\r\n\r\n    PropertyAgentComponent.staticConstructPeriodEndDateOptions(trgStartDte, dateUtilsService, propertyAgentFormGroup, cd);\r\n    PropertyAgentComponent.staticConstructPeriodStrtDate(propertyAgentFormGroup, dateUtilsService, trgStartDte, cd);\r\n    \r\n    const startDate = propertyAgentFormGroup.get('periodGroup.periodStrtDate').value;\r\n    propertyAgentFormGroup.get('initialStrtDate').setValue(startDate);\r\n\r\n    const annualIncomeFormGroup: FormGroup = formBuilder.group({\r\n      source: new FormControl(null, null),\r\n      assessment: new FormControl(null, null),\r\n      acctgPeriodStrt: new FormControl(null, null),\r\n      acctgPeriodEnd: new FormControl(null, null),\r\n      occupationNature: new FormControl(null, null),\r\n      revenue: new FormControl(null, null),\r\n      adjProfit: new FormControl(null, null),\r\n    });\r\n    (propertyAgentFormGroup.get('annualIncomeList') as FormArray).push(annualIncomeFormGroup);\r\n    return propertyAgentFormGroup;\r\n  }\r\n\r\n  static staticConstructPeriodEndDateOptions(trgStartDte: string, dateUtilsService: DateUtilsService, propertyAgentForm: FormGroup, cd: ChangeDetectorRef):void{\r\n    const dateFormat = \"DD-MM-YYYY\"\r\n    console.log(\"reconstructing \", trgStartDte)\r\n    const claimStartDt = dateUtilsService.convertStrToDate(trgStartDte, \"DD-MM-YYYY\");\r\n    const lastDateOfClaimStartDt = new Date(claimStartDt.getFullYear(), claimStartDt.getMonth() + 1, 0);\r\n    const date1 = dateUtilsService.convertMomentToStr(moment(lastDateOfClaimStartDt).subtract(1,'months'), dateFormat);\r\n    const date2 = dateUtilsService.convertMomentToStr(moment(claimStartDt).subtract(1,'days'),  dateFormat)\r\n    \r\n    const periodEndDateOptions = [\r\n      {name: date1, key: date1},\r\n      {name: date2, key: date2},\r\n    ]\r\n    propertyAgentForm.get('periodEndDateOptions').setValue(periodEndDateOptions);\r\n    console.log('the options is', propertyAgentForm.get('periodEndDateOptions').value)\r\n    console.log('the key before is',  periodEndDateOptions[0].key);\r\n\r\n    propertyAgentForm.get('periodGroup.periodEndDate').setValue((propertyAgentForm.get('periodEndDateOptions').value as any[])[0].key)\r\n    //needs to call detect changes otherwise period end date wont have been updated sequentially\r\n    cd.detectChanges();\r\n  }\r\n\r\n  static staticConstructPeriodStrtDate(propertyAgentForm: FormGroup, dateUtilsService: DateUtilsService, trgStartDte: string, cd: ChangeDetectorRef): void{\r\n    console.log(\"the after\",propertyAgentForm.get('periodGroup.periodEndDate').value);\r\n    const dateFormat = \"DD-MM-YYYY\"\r\n    const claimStartDt = dateUtilsService.convertStrToDate(trgStartDte, dateFormat);\r\n    const firstDateOfClaimStartDt = new Date(claimStartDt.getFullYear(), claimStartDt.getMonth(), 1);\r\n    console.log(\"the new date\",firstDateOfClaimStartDt)\r\n    let periodStartDate;\r\n    if(propertyAgentForm.get('periodGroup.periodEndDate').value === (propertyAgentForm.get('periodEndDateOptions').value as any[])[0]?.key){\r\n      periodStartDate = dateUtilsService.convertMomentToStr(moment(firstDateOfClaimStartDt).subtract(propertyAgentForm.get('captionGroup.divisor').value,'months'), dateFormat);\r\n    }else if(propertyAgentForm.get('periodGroup.periodEndDate').value === (propertyAgentForm.get('periodEndDateOptions').value as any[])[1]?.key){\r\n      periodStartDate = dateUtilsService.convertMomentToStr(moment(claimStartDt).subtract(propertyAgentForm.get('captionGroup.divisor').value,'months'), dateFormat);\r\n    }else if(propertyAgentForm.get('periodGroup.periodEndDate').value === (propertyAgentForm.get('periodEndDateOptions').value as any[])[2]?.key){\r\n      periodStartDate = propertyAgentForm.get('initialStrtDate').value;\r\n    }else periodStartDate = \"\";\r\n    propertyAgentForm.get('periodGroup.periodStrtDate').setValue(periodStartDate);\r\n    cd.detectChanges();\r\n\r\n  }\r\n\r\n  static mapPropertyAgentWDToFormGroup(propertyAgentWD: PropertyAgentWD, dateUtilsService: DateUtilsService, formBuilder: FormBuilder, trgStartDte:string, cd: ChangeDetectorRef): FormGroup {\r\n    const propertyAgentFormGroup = formBuilder.group({\r\n      id: new FormControl(propertyAgentWD.id, null),\r\n      workingDataId: new FormControl(propertyAgentWD.workingDataId,null),\r\n      captionGroup: formBuilder.group({\r\n        divisor: new FormControl(propertyAgentWD.divisor, null)\r\n      }),\r\n      periodGroup: formBuilder.group({\r\n        periodStrtDate: new FormControl(propertyAgentWD.startDate, null),\r\n        periodEndDate: new FormControl(propertyAgentWD.endDate, null),\r\n      }),\r\n      grossIncomeArray: formBuilder.array([\r\n        formBuilder.group({\r\n          personalAmt: new FormControl(propertyAgentWD.personalAmt, null),\r\n          overiddingAmt: new FormControl(propertyAgentWD.overiddingAmt, null),\r\n        })\r\n      ]),\r\n      footerGroup: formBuilder.group({\r\n        claimNip: new FormControl(propertyAgentWD.claimNip, null)\r\n      }),\r\n      annualIncomeList: new FormArray([]),\r\n      initialStrtDate: new FormControl(propertyAgentWD.startDate, null),\r\n      periodEndDateOptions: new FormControl([], null)\r\n    });\r\n\r\n    PropertyAgentComponent.staticConstructPeriodEndDateOptions(trgStartDte, dateUtilsService, propertyAgentFormGroup, cd);\r\n    PropertyAgentComponent.staticConstructPeriodStrtDate(propertyAgentFormGroup, dateUtilsService, trgStartDte, cd);\r\n    \r\n    propertyAgentWD.annualIncomeList.forEach((annualIncomeWD: AnnualIncomeWD) => {\r\n      const annualIncomeFormGroup: FormGroup = formBuilder.group({\r\n        source: new FormControl(annualIncomeWD.source, null),\r\n        assessment: new FormControl(annualIncomeWD.assessment === null? null :dateUtilsService.convertStrToDate(annualIncomeWD.assessment, \"DD-MM-YYYY\"), null),\r\n        acctgPeriodStrt: new FormControl(annualIncomeWD.acctgStartDate === null? null :dateUtilsService.convertStrToDate(annualIncomeWD.acctgStartDate, \"DD-MM-YYYY\"), null),\r\n        acctgPeriodEnd: new FormControl(annualIncomeWD.acctgEndDate === null? null :dateUtilsService.convertStrToDate(annualIncomeWD.acctgEndDate, \"DD-MM-YYYY\"), null),\r\n        occupationNature: new FormControl(annualIncomeWD.occupationNature, null),\r\n        revenue: new FormControl(annualIncomeWD.revenue, null),\r\n        adjProfit: new FormControl(annualIncomeWD.adjProfit, null),\r\n      });\r\n      (propertyAgentFormGroup.get('annualIncomeList') as FormArray).push(annualIncomeFormGroup);\r\n    });\r\n    return propertyAgentFormGroup;\r\n  }\r\n\r\n\r\n   \r\n  static mapPropertyAgentFormGroupToWD(fg:FormGroup, obj: any,  dateUtilsService: DateUtilsService): PropertyAgentWD {\r\n    const annualIncomeDtoList: AnnualIncomeWD[] = [];\r\n    console.log(\"id \",fg.get('periodGroup.periodStrtDate').value,)\r\n    const propertyAgentWD: PropertyAgentWD = {\r\n      id: fg.get('id')?.value,\r\n      archiveDt: obj.archiveDt,\r\n      workingDataId: obj.workingDataId,\r\n      startDate: fg.get('periodGroup.periodStrtDate').value,\r\n      endDate: fg.get('periodGroup.periodEndDate').value,\r\n      divisor: fg.get('captionGroup.divisor').value,\r\n      claimNip:  fg.get('footerGroup.claimNip').value,\r\n      personalAmt: (fg.get('grossIncomeArray') as FormArray).controls[0].get('personalAmt').value,\r\n      overiddingAmt: (fg.get('grossIncomeArray') as FormArray).controls[0].get('overiddingAmt').value,\r\n      annualIncomeList: annualIncomeDtoList\r\n    };\r\n    console.log(\"prop agent\", propertyAgentWD)\r\n    const annualIncomeListFA = (fg.get('annualIncomeList') as FormArray);\r\n    annualIncomeListFA.controls.forEach((control: AbstractControl)=>{\r\n      const annualIncomeDto: AnnualIncomeWD = {\r\n        workingDataId: obj.workingDataId,\r\n        seq: annualIncomeDtoList.length + 1,\r\n        source: control.get('source').value,\r\n        assessment: dateUtilsService.isValid(control.get('assessment').value)? dateUtilsService.convertDateToStr(control.get('assessment').value, \"DD-MM-YYYY\"): null,\r\n        acctgStartDate: dateUtilsService.isValid(control.get('acctgPeriodStrt').value)? dateUtilsService.convertDateToStr(control.get('acctgPeriodStrt').value, \"DD-MM-YYYY\"): null,\r\n        acctgEndDate: dateUtilsService.isValid(control.get('acctgPeriodEnd').value)? dateUtilsService.convertDateToStr(control.get('acctgPeriodEnd').value, \"DD-MM-YYYY\"): null,\r\n        occupationNature: control.get('occupationNature').value,\r\n        revenue: control.get('revenue').value,\r\n        adjProfit: control.get('adjProfit').value,\r\n      }\r\n      annualIncomeDtoList.push(annualIncomeDto);\r\n    })\r\n\r\n\r\n    return propertyAgentWD;\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"initializing\")\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void{\r\n\r\n    if(changes.trgStartDte && this.isActive()){\r\n      console.log('has my trg date changed')\r\n      this.constructSourceYearOptions();\r\n      PropertyAgentComponent.staticConstructPeriodEndDateOptions(this.trgStartDte || this.currHardCopyDetails.trgStartDte, this.dateUtilsService, this.propertyAgentForm, this.cd); \r\n      PropertyAgentComponent.staticConstructPeriodStrtDate(this.propertyAgentForm, this.dateUtilsService, this.trgStartDte || this.currHardCopyDetails.trgStartDte, this.cd)\r\n    }\r\n    if(changes.seHardCopyDetails?.currentValue){\r\n      this.currHardCopyDetails=changes.seHardCopyDetails.currentValue;\r\n    }\r\n    if(changes.selectedWDOption?.currentValue){\r\n      this.currSelectedOption = changes.selectedWDOption?.currentValue;\r\n      this.subscr.unsubscribe();\r\n      this.retrievePropertyAgentWD();\r\n    }\r\n  \r\n\r\n  }\r\n\r\n\r\n  isActive(): boolean{\r\n    return this.currSelectedOption?.obj.archiveDt===0;\r\n  }\r\n\r\n  getFormControlValue(fg: FormGroup, formCtrlName: string): any{\r\n    return fg.get(formCtrlName).value;\r\n  }\r\n\r\n  getInnerFormControl(fg: FormGroup, controlName: string, innerControlName: string): FormControl{\r\n    return fg?.get(controlName)?.get(innerControlName) as FormControl;\r\n  }\r\n\r\n  constructSourceYearOptions():void{\r\n    const claimEndDt = this.dateUtilsService.convertStrToDate(this.currHardCopyDetails.trgEndDte, \"DD-MM-YYYY\");\r\n    this.sourceYrOptions = [\r\n      {name:  'NA ' + this.dateUtilsService.convertMomentToStr(moment(claimEndDt).subtract(1,'years'), \"YY\"), key: 1},\r\n      {name:  'NA ' + this.dateUtilsService.convertMomentToStr(moment(claimEndDt), \"YY\"), key: 2},\r\n      {name:  'NA ' + this.dateUtilsService.convertMomentToStr(moment(claimEndDt).add(1,'years'), \"YY\"), key: 3},\r\n    ]\r\n  }\r\n\r\n  retrievePropertyAgentWD():void{\r\n    if((!this.currSelectedOption?.changes && !this.currSelectedOption.newWD)) {    \r\n      this.propertyAgentForm = this.formBuilder.group({\r\n        id: new FormControl(null, null),\r\n        captionGroup: this.formBuilder.group({\r\n          divisor: new FormControl(6, null)\r\n        }),\r\n        periodGroup:  this.formBuilder.group({\r\n          periodStrtDate: new FormControl('', null),\r\n          periodEndDate: new FormControl('', null),\r\n        }),\r\n        grossIncomeArray: this.formBuilder.array([\r\n          this.formBuilder.group({\r\n            personalAmt: new FormControl(null, null),\r\n            overiddingAmt: new FormControl(null, null),\r\n          })\r\n        ]),\r\n        footerGroup: this.formBuilder.group({\r\n          claimNip: new FormControl(0, null)\r\n        }),\r\n        annualIncomeList: new FormArray([]),\r\n        periodEndDateOptions: new FormControl([], null),\r\n        initialStrtDate: new FormControl('', null)\r\n      });\r\n    \r\n      let params = new HttpParams();\r\n      params = params.append(\"workingDataId\", this.currSelectedOption?.obj.workingDataId);\r\n      this.seClaimService.retrievePropertyAgentWD({params}).subscribe((resp:any) => {\r\n\r\n        if(resp){\r\n            if(resp.status === 200 && resp.body.data){\r\n              this.dataTable?.reset();\r\n              this.dataSet = resp.body.data;\r\n              this.constructForm(this.dataSet);\r\n              this.valueChangeSubscribe();\r\n\r\n            }\r\n          }\r\n        },\r\n        (error: any) => {\r\n          console.log(\"error is\" + String(error?.error?.error_desc));\r\n          this.toastService.error(String(error?.error?.error_desc));\r\n        });\r\n    }else if(this.currSelectedOption.changes && !this.currSelectedOption.newWD) {\r\n      this.propertyAgentForm = this.workingDataWithChanges.get(this.currSelectedOption?.obj?.workingDataId).formGroup as FormGroup;\r\n      this.loading = false;\r\n\r\n    }else if(this.currSelectedOption.newWD) {\r\n      this.propertyAgentForm = this.newUnsavedWorkingData.get(this.currSelectedOption?.key.toString()).formGroup as FormGroup;\r\n      this.loading = false;\r\n\r\n    }\r\n  }\r\n\r\n  constructForm(dataSet: any): void {\r\n    console.log(\"lola here\");\r\n    const formArr = this.grossIncomeArray;\r\n    if(!(this.propertyAgentForm.get('periodEndDateOptions').value as any[]).find(x=> x.name===dataSet.endDate)){\r\n        const periodEndDateOptions = this.propertyAgentForm.get('periodEndDateOptions').value;\r\n        periodEndDateOptions.push({key:dataSet.endDate, name:dataSet.endDate});\r\n        this.propertyAgentForm.get('periodEndDateOptions').setValue(periodEndDateOptions);\r\n      }\r\n    this.propertyAgentForm.get('initialStrtDate').setValue(dataSet.startDate);\r\n    this.propertyAgentForm.get('periodGroup.periodStrtDate').setValue(dataSet.startDate);\r\n    this.propertyAgentForm.get('periodGroup.periodEndDate').setValue(dataSet.endDate);\r\n    this.propertyAgentForm.get('id').setValue(dataSet.id);\r\n    this.propertyAgentForm.get('captionGroup.divisor').setValue(dataSet.divisor);\r\n\r\n    formArr.controls[0]?.get('personalAmt').setValue(dataSet.personalAmt);\r\n    formArr.controls[0]?.get('overiddingAmt').setValue(dataSet.overiddingAmt);\r\n    dataSet.annualIncomeList?.forEach((annualIncomeWD: AnnualIncomeWD) => {\r\n      const annualIncomeFormGroup: FormGroup = this.formBuilder.group({\r\n        seq: new FormControl(annualIncomeWD.seq, null),\r\n        source: new FormControl(annualIncomeWD.source, null),\r\n        assessment: new FormControl(annualIncomeWD.assessment === null? null :this.dateUtilsService.convertStrToDate(annualIncomeWD.assessment, \"DD-MM-YYYY\"), null),\r\n        acctgPeriodStrt: new FormControl(annualIncomeWD.acctgStartDate === null? null :this.dateUtilsService.convertStrToDate(annualIncomeWD.acctgStartDate, \"DD-MM-YYYY\"), null),\r\n        acctgPeriodEnd: new FormControl(annualIncomeWD.acctgEndDate === null? null :this.dateUtilsService.convertStrToDate(annualIncomeWD.acctgEndDate, \"DD-MM-YYYY\"), null),\r\n        occupationNature: new FormControl(annualIncomeWD.occupationNature, null),\r\n        revenue: new FormControl(annualIncomeWD.revenue, null),\r\n        adjProfit: new FormControl(annualIncomeWD.adjProfit, null),\r\n      });\r\n      (this.propertyAgentForm.get('annualIncomeList') as FormArray).push(annualIncomeFormGroup);\r\n    });\r\n    this.propertyAgentForm.get('footerGroup.claimNip').setValue(dataSet?.claimNip);\r\n\r\n  }\r\n\r\n  valueChangeSubscribe():void{\r\n    this.subscr = this.propertyAgentForm.valueChanges.subscribe(changes=>{\r\n      console.log(\"has changes\", changes)\r\n      this.currSelectedOption.changes = true;\r\n      this.saveSEClaimRequest.workingDataSectionInd = true;\r\n      if(!this.workingDataWithChanges.has(this.currSelectedOption?.obj?.workingDataId) && this.currSelectedOption?.obj?.archiveDt === 0\r\n      ){\r\n        console.log(\"puting to id\",this.currSelectedOption?.obj?.workingDataId);\r\n        console.log(\"subscribing\",this.propertyAgentForm);\r\n\r\n        this.workingDataWithChanges.set(this.currSelectedOption?.obj?.workingDataId,\r\n          {\r\n            obj: this.currSelectedOption.obj,\r\n            formGroup: this.propertyAgentForm,\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  copyToItem(event: any):void{\r\n    this.totalAmtPay = this.propertyAgentForm.get('footerGroup.claimNip')?.value/100 * this.grossIncomeArray.controls[0]?.get('personalAmt').value/ this.propertyAgentForm.get('captionGroup.divisor')?.value\r\n    this.totalAmtPayEvent.emit(this.totalAmtPay);\r\n  }\r\n\r\n  enableCopytoItem(): boolean{\r\n    const claimItemList = this.itemDetailsSection.itemForm?.get('otherSEItemArr') as FormArray;\r\n    let itxItem = null;\r\n    if(claimItemList.length>0){\r\n      itxItem = claimItemList?.controls.filter(x=> x.get('itemType').value === 'AVE')[0];\r\n      return itxItem?.get('latestStatus').value === this.PEND_VERIFY_STATUS || itxItem?.get('latestStatus').value === this.PEND_ACTION_STATUS;\r\n    }else return false;\r\n  }\r\n\r\n  isValidNumber(obj: any): boolean{\r\n    return !isNaN(obj);\r\n  }\r\n\r\n    //allows input on need basis\r\n    hasValidAuthorityAndStation(): boolean{\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_VERIFIER) && \r\n      this.station === NSPAY2_STATION.STATION_VERIFICATION){\r\n        return true;\r\n      }\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) && \r\n    this.station === NSPAY2_STATION.STATION_CERTIFICATION) {\r\n      return false;\r\n    }\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) && \r\n    this.station === NSPAY2_STATION.STATION_APPROVAL) {\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<div class=\"flex gap-2\">\r\n    <div class=\"grid\">\r\n        <p-panel class = \"col-6\" >\r\n            <ng-template pTemplate=\"header\">\r\n                <div class = \"align-items-center\">\r\n                    <div [style] = \"{'font-weight':'bold','margin-left':'0.5em'}\">Gross Income</div>\r\n                </div>\r\n            </ng-template>\r\n            <form [formGroup]=\"propertyAgentForm\">\r\n                <div formArrayName=\"grossIncomeArray\">\r\n                    <p-table [value]=\"grossIncomeArray.controls\"\r\n                    responsiveLayout=\"scroll\"\r\n                    #dataTable>\r\n                        <ng-template pTemplate=\"header\">\r\n                            <tr>\r\n                                <th scope=\"col\"></th>\r\n                                <th scope=\"col\" [attr.colspan]=\"3\">\r\n                                    <form [formGroup] = \"periodGroup\">\r\n                                        <div class = \"col-12 justify-content-start gap-4 flex align-items-center\" >\r\n                                            <div class = \"col-form-label\">Period: </div>\r\n                                            <div class=\"col-3\">\r\n                                                {{ periodGroup.get('periodStrtDate').value }}\r\n                                            </div>\r\n                                            <div class=\"col-1\">to </div>\r\n                                            <div class=\"col-5 input-group gap-2 flex align-content-center\">\r\n                                                <p-dropdown  *ngIf = \"isActive(); else labelPeriodEndDate\"  [options]=\"getFormControlValue(propertyAgentForm, 'periodEndDateOptions')\"\r\n                                                 id=\"source\" [formControl]=\"getInnerFormControl(propertyAgentForm, 'periodGroup', 'periodEndDate')\" optionLabel=\"name\" optionValue=\"key\"\r\n                                                [style]=\"{'width': '100%'}\" autoWidth=\"false\"  appendTo=\"body\" (onChange)=\"staticPropertyAgentComponent.staticConstructPeriodStrtDate(this.propertyAgentForm, this.dateUtilsService, this.trgStartDte || this.currHardCopyDetails?.trgStartDte, cd);\"></p-dropdown>\r\n                                                <small *ngIf=\"periodGroup.get('periodEndDate')?.touched && !this.dateUtilsService.isValidDateStr(periodGroup.get('periodEndDate')?.value, 'DD-MM-YYYY')\"\r\n                                                class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V002\"\r\n                                                [translateValues]=\"{ field: 'Period End Date' }\">\r\n                                                </small>\r\n                                                <ng-template #labelPeriodEndDate>\r\n                                                    {{ periodGroup.get('periodEndDate').value }}\r\n                                                </ng-template>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"col\" [style]=\"{'width': '15em'}\" >\r\n                                    <form [formGroup] = \"captionGroup\">\r\n                                        Divisor:&nbsp;&nbsp;\r\n                                        <p-inputNumber\r\n                                        [min]=\"1\" [max]=\"6\" [inputStyle]=\"{'width': '5em', 'text-align':'right'}\"\r\n                                        formControlName = \"divisor\"\r\n                                        (onBlur)=\"staticPropertyAgentComponent.staticConstructPeriodStrtDate(this.propertyAgentForm, this.dateUtilsService, this.trgStartDte || this.currHardCopyDetails?.trgStartDte, cd);\"\r\n                                        [disabled]=\"!isActive()\"></p-inputNumber>\r\n                                        <small *ngIf=\"captionGroup.get('divisor')?.touched && !isValidNumber(captionGroup.get('divisor')?.value)\"\r\n                                        class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V002\"\r\n                                        [translateValues]=\"{ field: 'Divisor' }\">\r\n                                        </small>\r\n                                    </form>\r\n                                </th>\r\n                                <th scope=\"col\" [style]=\"{'width': '15em','text-align': 'center'}\">Personal</th>\r\n                                <th scope=\"col\" [style]=\"{'width': '15em','text-align': 'center'}\">Overriding</th>\r\n                                <th scope=\"col\" [style]=\"{'width': '15em','text-align': 'center'}\">Total</th>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"body\" let-data  let-columns = \"cols\"  let-rowIndex = \"rowIndex\">\r\n                            <tr  [formGroupName] = \"rowIndex\">\r\n                                <td>{{ cols[0] }}</td>\r\n                                <td>\r\n                                    <p-inputNumber\r\n                                    [min]=\"0\" [max]=\"9999999\" [inputStyle]=\"{'text-align':'right'}\"\r\n                                    formControlName = \"personalAmt\"\r\n                                    mode=\"decimal\" [minFractionDigits]=\"2\"\r\n                                    *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelPersonalAmt\"\r\n                                    ></p-inputNumber>\r\n                                    <ng-template #labelPersonalAmt>\r\n                                        <div style=\"text-align:right\">\r\n                                            {{ grossIncomeArray.controls[0].get('personalAmt').value | number : '1.2-2'}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </td>\r\n                                <td>\r\n                                    <p-inputNumber\r\n                                    [min]=\"0\" [max]=\"9999999\" [inputStyle]=\"{'text-align':'right'}\"\r\n                                    formControlName = \"overiddingAmt\"\r\n                                    mode=\"decimal\" [minFractionDigits]=\"2\"\r\n                                    *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelOverridingAmt\"\r\n                                    ></p-inputNumber>\r\n                                    <ng-template #labelOverridingAmt>\r\n                                        <div style=\"text-align:right\">\r\n                                            {{ grossIncomeArray.controls[0].get('overiddingAmt').value | number : '1.2-2'}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </td>\r\n                                <td>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ (grossIncomeArray.controls[0].get('overiddingAmt').value + grossIncomeArray.controls[0].get('personalAmt').value)| number : '1.2-2'  }}\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{{ cols[1] }}</td>\r\n                                <td>\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ grossIncomeArray.controls[0].get('personalAmt').value / captionGroup.get('divisor').value | number : '1.2-2' }}\r\n                                    </div>\r\n                                </td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </ng-template>\r\n                    </p-table>\r\n                </div>\r\n                <div class=\"grid\" style=\"margin-top:1em; margin-left: 220px\">\r\n                    <form [formGroup] = \"footerGroup\">\r\n                        <div class = \"col-12 justify-content-start gap-4 flex align-items-center\" >\r\n                            Claim NIP:\r\n                            <div *ngIf=\"isActive(); else labelClaimNIP\"><p-inputNumber\r\n                                [maxlength]=3 [inputStyle]=\"{'width': '5em', 'text-align':'right'}\" formControlName = \"claimNip\"\r\n                                suffix=\"%\"></p-inputNumber>\r\n                            </div>\r\n                            <ng-template #labelClaimNIP>\r\n                                {{  footerGroup.get('claimNip').value }}%\r\n                            </ng-template>\r\n\r\n                            <div>Proposed NIP: {{ proposedNIP }} %</div>\r\n                        </div>\r\n                        <div class = \"col-12 justify-content-start gap-4 flex align-items-center\" >\r\n                            <div>Total Amount Payable: {{ footerGroup.get('claimNip').value/100* grossIncomeArray.controls[0].get('personalAmt').value/ captionGroup.get('divisor').value | number : '1.2-2'}}\r\n                                ({{ footerGroup.get('claimNip').value }}% * {{  grossIncomeArray.controls[0].get('personalAmt').value/ captionGroup.get('divisor').value  | number : '1.2-2'}}) </div>\r\n                        </div>\r\n                        <div class = \"col\" >\r\n                            <p-button label=\"Copy to Item\" (click)=\"copyToItem($event)\" [disabled] = \"!enableCopytoItem()\"\r\n                            ></p-button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </form>\r\n        </p-panel>\r\n        <n2-annual-income class = \"col-6\"\r\n            [annualIncomeFormArray]=\"this.annualIncomeList\"\r\n            [seHardCopyDetails] = \"seHardCopyDetails\"\r\n            [isActive] = \"isActive()\"\r\n            [readOnly] = \"readOnly\"\r\n            [station]=\"station\">\r\n        </n2-annual-income>\r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}