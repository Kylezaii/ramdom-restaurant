{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClaimApproverInboxComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst forms_1 = require(\"@angular/forms\");\nconst common_1 = require(\"@angular/common\");\nconst http_1 = require(\"@angular/common/http\");\nconst nspay2_constants_1 = require(\"app/nspay2.constants\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/workload/service/workload-inbox.service\"));\nconst i2 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i3 = tslib_1.__importStar(require(\"app/shared/confirm/nsp-confirm.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i5 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i6 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i7 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i8 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i9 = tslib_1.__importStar(require(\"app/ng-connect\"));\nconst i10 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i11 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i12 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i15 = tslib_1.__importStar(require(\"primeng/dropdown\"));\nconst i16 = tslib_1.__importStar(require(\"primeng/dialog\"));\nconst i17 = tslib_1.__importStar(require(\"primeng/inputtextarea\"));\nconst i18 = tslib_1.__importStar(require(\"primeng/confirmpopup\"));\nconst i19 = tslib_1.__importStar(require(\"../../../shared/pipe/default-string.pipe\"));\nconst _c0 = [\"dataTable\"];\nconst _c1 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nfunction ClaimApproverInboxComponent_ng_template_3_button_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function ClaimApproverInboxComponent_ng_template_3_button_23_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.onClickTransferOwnership());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c1));\n    i0.ɵɵproperty(\"disabled\", !ctx_r6.enableTxferOSBtn());\n  }\n}\nconst _c2 = function () {\n  return {\n    \"margin-right\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nfunction ClaimApproverInboxComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"form\", 11);\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelementStart(3, \"div\", 12);\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"div\", 13);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementStart(7, \"p-button\", 14);\n    i0.ɵɵlistener(\"click\", function ClaimApproverInboxComponent_ng_template_3_Template_p_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(1);\n      return i0.ɵɵresetView(ctx_r9.exportCSV(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                            \");\n    i0.ɵɵelementStart(9, \"p-dropdown\", 15);\n    i0.ɵɵlistener(\"onChange\", function ClaimApproverInboxComponent_ng_template_3_Template_p_dropdown_onChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onChangeECFilter($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n\\n                            \");\n    i0.ɵɵelementStart(11, \"p-dropdown\", 16);\n    i0.ɵɵlistener(\"onChange\", function ClaimApproverInboxComponent_ng_template_3_Template_p_dropdown_onChange_11_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.applyFilter(\"claimantNRIC\", ctx_r12.captionGroup.get(\"selectedDupNric\").value));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n\\n                            \");\n    i0.ɵɵelementStart(13, \"p\")(14, \"b\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementStart(16, \"span\", 17);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(19, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n                        \");\n    i0.ɵɵelementStart(21, \"div\", 18);\n    i0.ɵɵtext(22, \"\\n                            \");\n    i0.ɵɵtemplate(23, ClaimApproverInboxComponent_ng_template_3_button_23_Template, 1, 4, \"button\", 19);\n    i0.ɵɵtext(24, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \"\\n            \");\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.captionGroup);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(17, _c2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(18, _c2));\n    i0.ɵɵproperty(\"options\", ctx_r1.ecseClaimFilterOptions);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(19, _c2));\n    i0.ɵɵproperty(\"options\", ctx_r1.nricWithMoreThanOneClaimOptions)(\"placeholder\", ctx_r1.duplicateNricPlaceHolder)(\"showClear\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.selectedECSEFilter.label, \":\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\"\\n                                \", ctx_r1.quickFilterclaimCount.claimsPendRecompNo, \" (Recomp);\\n                                \", ctx_r1.quickFilterclaimCount.claimsDueToDate, \" (Today);\\n                                \", ctx_r1.quickFilterclaimCount.claimsOverDue, \" (Overdue);\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", ctx_r1.quickFilterclaimCount.claimsTotal, \" (Total)\\n                            \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.captionGroup.controls[\"ecseFilter\"].value.label == \"EC\");\n  }\n}\nfunction ClaimApproverInboxComponent_ng_template_5_ng_template_49_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵelementStart(1, \"p-dropdown\", 49);\n    i0.ɵɵlistener(\"onChange\", function ClaimApproverInboxComponent_ng_template_5_ng_template_49_Template_p_dropdown_onChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const filter_r18 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r18($event.value));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\n                        \");\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r14.selectedReason)(\"options\", ctx_r14.reasonList);\n  }\n}\nfunction ClaimApproverInboxComponent_ng_template_5_ng_template_59_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                            \");\n    i0.ɵɵelementStart(1, \"p-dropdown\", 50);\n    i0.ɵɵlistener(\"onChange\", function ClaimApproverInboxComponent_ng_template_5_ng_template_59_Template_p_dropdown_onChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const filter_r22 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r22($event.value));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\n                        \");\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r15.selectedOwner)(\"options\", ctx_r15.ownerMap);\n  }\n}\nfunction ClaimApproverInboxComponent_ng_template_5_th_63_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 51);\n    i0.ɵɵtext(1, \"Option\");\n    i0.ɵɵelement(2, \"p-sortIcon\", 52);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClaimApproverInboxComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n            \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                \");\n    i0.ɵɵelementStart(3, \"th\", 21);\n    i0.ɵɵelement(4, \"p-tableHeaderCheckbox\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                \");\n    i0.ɵɵelementStart(6, \"th\", 22);\n    i0.ɵɵtext(7, \"SN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                \");\n    i0.ɵɵelementStart(9, \"th\", 23);\n    i0.ɵɵtext(10, \"Limit\");\n    i0.ɵɵelement(11, \"p-sortIcon\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n                \");\n    i0.ɵɵelementStart(13, \"th\", 25);\n    i0.ɵɵtext(14, \"Case ID\");\n    i0.ɵɵelement(15, \"p-sortIcon\", 26);\n    i0.ɵɵtext(16, \"\\n                    \");\n    i0.ɵɵelement(17, \"p-columnFilter\", 27);\n    i0.ɵɵtext(18, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n                \");\n    i0.ɵɵelementStart(20, \"th\", 28);\n    i0.ɵɵtext(21, \"Name\");\n    i0.ɵɵelement(22, \"p-sortIcon\", 29);\n    i0.ɵɵtext(23, \"\\n                    \");\n    i0.ɵɵelement(24, \"p-columnFilter\", 30);\n    i0.ɵɵtext(25, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n                \");\n    i0.ɵɵelementStart(27, \"th\", 31);\n    i0.ɵɵtext(28, \"Due Date\");\n    i0.ɵɵelement(29, \"p-sortIcon\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n                \");\n    i0.ɵɵelementStart(31, \"th\", 33);\n    i0.ɵɵtext(32, \"Trg Start\");\n    i0.ɵɵelement(33, \"p-sortIcon\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(34, \"\\n                \");\n    i0.ɵɵelementStart(35, \"th\", 35);\n    i0.ɵɵtext(36, \"Company\");\n    i0.ɵɵelement(37, \"p-sortIcon\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(38, \"\\n                \");\n    i0.ɵɵelementStart(39, \"th\", 37);\n    i0.ɵɵtext(40, \"Occupation\");\n    i0.ɵɵelement(41, \"p-sortIcon\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n                \");\n    i0.ɵɵelementStart(43, \"th\", 39);\n    i0.ɵɵtext(44, \"Status\");\n    i0.ɵɵelement(45, \"p-sortIcon\", 40);\n    i0.ɵɵtext(46, \"\\n                    \");\n    i0.ɵɵelementStart(47, \"p-columnFilter\", 41);\n    i0.ɵɵtext(48, \"\\n                        \");\n    i0.ɵɵtemplate(49, ClaimApproverInboxComponent_ng_template_5_ng_template_49_Template, 3, 2, \"ng-template\", 42);\n    i0.ɵɵtext(50, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(51, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(52, \"\\n                \");\n    i0.ɵɵelementStart(53, \"th\", 43);\n    i0.ɵɵtext(54, \"Owner\");\n    i0.ɵɵelement(55, \"p-sortIcon\", 44);\n    i0.ɵɵtext(56, \"\\n                    \");\n    i0.ɵɵelementStart(57, \"p-columnFilter\", 45);\n    i0.ɵɵtext(58, \"\\n                        \");\n    i0.ɵɵtemplate(59, ClaimApproverInboxComponent_ng_template_5_ng_template_59_Template, 3, 2, \"ng-template\", 42);\n    i0.ɵɵtext(60, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(61, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(62, \"\\n                \");\n    i0.ɵɵtemplate(63, ClaimApproverInboxComponent_ng_template_5_th_63_Template, 3, 0, \"th\", 46);\n    i0.ɵɵtext(64, \"\\n\\n                \");\n    i0.ɵɵelementStart(65, \"th\", 47);\n    i0.ɵɵtext(66, \"Receipt Date\");\n    i0.ɵɵelement(67, \"p-sortIcon\", 48);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(68, \"\\n\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(69, \"\\n        \");\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(63);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.captionGroup.controls[\"ecseFilter\"].value.label == \"SE\");\n  }\n}\nfunction ClaimApproverInboxComponent_ng_template_7_td_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"defaultString\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const claimRecord_r25 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, claimRecord_r25.optionDesc));\n  }\n}\nfunction ClaimApproverInboxComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n\\n        \");\n    i0.ɵɵelementStart(1, \"tr\", 53);\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"p-tableCheckbox\", 54);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n            \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n            \");\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n            \");\n    i0.ɵɵelementStart(12, \"td\")(13, \"a\", 55);\n    i0.ɵɵlistener(\"click\", function ClaimApproverInboxComponent_ng_template_7_Template_a_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r31);\n      const claimRecord_r25 = restoredCtx.$implicit;\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.navigateApproverPage(claimRecord_r25));\n    });\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(15, \"\\n            \");\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelement(18, \"br\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n            \");\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n            \");\n    i0.ɵɵelementStart(24, \"td\");\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n            \");\n    i0.ɵɵelementStart(27, \"td\");\n    i0.ɵɵtext(28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n            \");\n    i0.ɵɵelementStart(30, \"td\");\n    i0.ɵɵtext(31);\n    i0.ɵɵpipe(32, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(33, \"\\n            \");\n    i0.ɵɵelementStart(34, \"td\");\n    i0.ɵɵtext(35);\n    i0.ɵɵpipe(36, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(37, \"\\n            \");\n    i0.ɵɵelementStart(38, \"td\");\n    i0.ɵɵtext(39);\n    i0.ɵɵpipe(40, \"defaultString\");\n    i0.ɵɵpipe(41, \"uppercase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n            \");\n    i0.ɵɵtemplate(43, ClaimApproverInboxComponent_ng_template_7_td_43_Template, 3, 3, \"td\", 56);\n    i0.ɵɵtext(44, \"\\n\\n            \");\n    i0.ɵɵelementStart(45, \"td\");\n    i0.ɵɵtext(46);\n    i0.ɵɵpipe(47, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(48, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(49, \"\\n    \");\n  }\n  if (rf & 2) {\n    const claimRecord_r25 = ctx.$implicit;\n    const rowIndex_r26 = ctx.rowIndex;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pSelectableRow\", claimRecord_r25);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", claimRecord_r25);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(rowIndex_r26 + 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Lvl \", claimRecord_r25.limitLevel, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(claimRecord_r25.caseId);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", claimRecord_r25.nric, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", claimRecord_r25.name, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.dateUtilsService.convertUnixToDateString(claimRecord_r25.dueDate, ctx_r3.dateFormat));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.dateUtilsService.convertUnixToDateString(claimRecord_r25.start, ctx_r3.dateFormat));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(claimRecord_r25.coy);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(32, 15, claimRecord_r25.occupation));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(36, 17, claimRecord_r25.reason));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(40, 19, i0.ɵɵpipeBind1(41, 21, claimRecord_r25.ownerInit)));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.captionGroup.controls[\"ecseFilter\"].value.label == \"SE\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(47, 23, ctx_r3.dateUtilsService.convertUnixToDateString(claimRecord_r25.receiptDate, ctx_r3.dateFormat)));\n  }\n}\nfunction ClaimApproverInboxComponent_ng_template_9_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 59);\n    i0.ɵɵtext(1, \"No records found.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClaimApproverInboxComponent_ng_template_9_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 60);\n    i0.ɵɵtext(1, \"No records found.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClaimApproverInboxComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵtemplate(3, ClaimApproverInboxComponent_ng_template_9_td_3_Template, 2, 0, \"td\", 57);\n    i0.ɵɵtext(4, \"\\n            \");\n    i0.ɵɵtemplate(5, ClaimApproverInboxComponent_ng_template_9_td_5_Template, 2, 0, \"td\", 58);\n    i0.ɵɵtext(6, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n    \");\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.captionGroup.controls[\"ecseFilter\"].value.label == \"SE\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.captionGroup.controls[\"ecseFilter\"].value.label == \"EC\");\n  }\n}\nfunction ClaimApproverInboxComponent_ng_template_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"button\", 61);\n    i0.ɵɵlistener(\"click\", function ClaimApproverInboxComponent_ng_template_22_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.displayTxferClaimOwnershipDialog.display = false);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\n        \");\n    i0.ɵɵelementStart(3, \"button\", 62);\n    i0.ɵɵlistener(\"click\", function ClaimApproverInboxComponent_ng_template_22_Template_button_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.onSubmit($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n\\n    \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(5, _c1));\n  }\n}\nconst _c3 = function () {\n  return [10, 15, 20];\n};\nconst _c4 = function () {\n  return {\n    width: \"50vw\"\n  };\n};\nconst _c5 = function () {\n  return {\n    \"960px\": \"75vw\"\n  };\n};\nclass ClaimApproverInboxComponent {\n  constructor(workloadService, primengConfig, messageService, nspConfirmService, accountService, dateUtilsService, ns2Http, toastService, formBuilder, codeService, exportUtilsService, router) {\n    this.workloadService = workloadService;\n    this.primengConfig = primengConfig;\n    this.messageService = messageService;\n    this.nspConfirmService = nspConfirmService;\n    this.accountService = accountService;\n    this.dateUtilsService = dateUtilsService;\n    this.ns2Http = ns2Http;\n    this.toastService = toastService;\n    this.formBuilder = formBuilder;\n    this.codeService = codeService;\n    this.exportUtilsService = exportUtilsService;\n    this.router = router;\n    this.cols = [];\n    this.selectAll = false;\n    this.totalRecords = 0;\n    this.selectedRows = [];\n    this.claimsDtoList = [];\n    this.autoResize = true;\n    this.displayTxferClaimOwnershipDialog = {\n      display: false\n    };\n    this.dateFormat = \"DD-MM-YYYY\";\n    this.ownerMap = [];\n    this.reasonList = [];\n    this.duplicateNricPlaceHolder = \"0 Duplicates\";\n    this.pageData = {\n      currentPage: 0\n    };\n    this.pageSize = 10;\n    this.CLAIM_TYPE_SELF_EMP = \"S\";\n    this.CLAIM_TYPE_EMP = \"E\";\n    this.quickFilterclaimCount = {\n      claimsPendRecompNo: 0,\n      claimsDueToDate: 0,\n      claimsOverDue: 0,\n      claimsTotal: 0\n    };\n    this.accountService.identity().subscribe(account => {\n      this.currentAccount = this.copyAccount(account);\n    });\n    this.ecseClaimFilterOptions = [\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    {\n      codeId: 'MY_EC',\n      codeDesc: 'My EC',\n      claimFilterStr: \"owner=\" + this.currentAccount.subjectId + \"&claimType=E\",\n      label: 'EC',\n      codeType: 'item_ec_class'\n    }, {\n      codeId: 'ALL_SE',\n      codeDesc: 'All SE',\n      claimFilterStr: \"&claimType=S\",\n      label: 'SE',\n      codeType: 'item_se_class'\n    }, {\n      codeId: 'ALL_EC',\n      codeDesc: 'All EC',\n      claimFilterStr: \"&claimType=E\",\n      label: 'EC',\n      codeType: 'item_ec_class'\n    }\n    // to be changed to retrieve from code table\n    ];\n  }\n\n  ngOnInit() {\n    this.primengConfig.ripple = true;\n    this.selectedECSEFilter = this.ecseClaimFilterOptions[0];\n    console.log(\"se filter\", this.selectedECSEFilter);\n    this.captionGroup = this.formBuilder.group({\n      selectedDupNric: new forms_1.FormControl(),\n      ecseFilter: new forms_1.FormControl()\n    });\n    this.selectedECSEFilter = this.ecseClaimFilterOptions[0];\n    this.captionGroup.controls['ecseFilter'].setValue(this.ecseClaimFilterOptions[0]);\n  }\n  onChangeECFilter(event) {\n    this.selectedECSEFilter = this.captionGroup.get('ecseFilter').value;\n    console.log(\"changefilter\", event);\n    console.log(\"selected is now \", this.captionGroup.get('ecseFilter').value);\n    this.getClaimsApproverData(this.lastTableLazyLoadEvent);\n    // get consolidated table filters + current drop down filter and recall api for pagination.\n  }\n\n  getClaimsApproverData(event) {\n    this.loading = true;\n    this.lastTableLazyLoadEvent = event;\n    this.pageSize = event.rows;\n    setTimeout(() => {\n      const options = this.ns2Http.convertLazyEvent(event, this.pageData, this.pageSize);\n      if (this.selectedECSEFilter) {\n        console.log(\"this is nowsss\", this.captionGroup.get('ecseFilter').value);\n        options.params = this.ns2Http.appendHttpParam(this.selectedECSEFilter.claimFilterStr, options.params);\n        this.loadCodes(this.captionGroup.get('ecseFilter')?.value.codeType);\n      }\n      this.workloadService.getClaimsApproverData(options).subscribe(resp => {\n        this.claimsDtoList = resp.body.data.dtoList;\n        if (resp.body.data.quickFilterClaimCount) {\n          this.quickFilterclaimCount = {\n            claimsPendRecompNo: resp.body.data.quickFilterClaimCount.claimsPendRecompNo,\n            claimsDueToDate: resp.body.data.quickFilterClaimCount.claimsDueToDate,\n            claimsOverDue: resp.body.data.quickFilterClaimCount.claimsOverDue,\n            claimsTotal: resp.body.data.quickFilterClaimCount.total\n          };\n        }\n        if (resp.body.data.ownerMap) {\n          this.setOwnerMap(resp.body.data.ownerMap);\n        }\n        this.totalRecords = resp.body.data.total_no_of_elems;\n        if (resp.body.data.duplicateNrics) {\n          this.nricWithMoreThanOneClaimOptions = resp.body.data.duplicateNrics;\n        }\n        this.duplicateNricPlaceHolder = `${this.nricWithMoreThanOneClaimOptions.length} Duplicates`;\n        this.loading = false;\n      });\n    }, 0);\n    return this.claimsDtoList;\n  }\n  loadCodes(codeType) {\n    this.codeService.gets(codeType).subscribe(codes => {\n      this.reasonList = codes[0].map(x => {\n        return x.label['en-US'];\n      });\n    });\n  }\n  //depending on the selected claim inbox station, the path will be routed accordingly\n  navigateApproverPage(dto) {\n    const currentSubjectId = this.currentAccount.subjectId;\n    //if clicked claim owner belongs to current user\n    // if(dto.ownerId === currentSubjectId){\n    if (dto.claimType === this.CLAIM_TYPE_SELF_EMP) {\n      const queryParams = {\n        claimId: dto.claimId,\n        reason: dto.reason,\n        claimInboxId: dto.id,\n        claimantNRIC: dto.claimantNRIC,\n        station: dto.station\n      };\n      if (dto.station === nspay2_constants_1.NSPAY2_STATION.STATION_CERTIFICATION) {\n        console.log(\"routing to se-certification\");\n      } else if (dto.station === nspay2_constants_1.NSPAY2_STATION.STATION_APPROVAL) {\n        console.log(\"routing to se-approval\");\n      }\n      this.router.navigate(['/claim/se-claim/claim-verification-se'], {\n        queryParams\n      });\n      // if(dto.station === this.STATION_CERTIFICATION){\n      //   console.log(\"routing to se-certification\");\n      //   this.router.navigate(['/claim/se-claim/claim-verification-se'], {queryParams});\n      // }else if(dto.station === this.STATION_APPROVAL){\n      //   console.log(\"routing to se-approval\");\n      //   this.router.navigate(['/claim/se-claim/claim-approval-se'], {queryParams});\n      // }\n    } else if (dto.claimType === this.CLAIM_TYPE_EMP) {\n      this.router.navigate(['/claim/ec-claim/claim-verification-ec', dto]);\n    }\n    // }else{\n    //   //route to enquiry\n    //   //TODO\n    //   //new scenario\n    //   console.log(\"route to enquiry\")\n    // }\n  }\n\n  setOwnerMap(ownerMap) {\n    this.ownerMap = [];\n    Object.entries(ownerMap).forEach(x => {\n      const rslt = x[1];\n      let displayName = rslt[\"displayName\"];\n      if (this.currentAccount.subjectId === rslt[\"ownerId\"]) {\n        displayName = displayName.concat(\" (Me)\");\n      }\n      this.ownerMap.push({\n        key: x[0],\n        value: displayName\n      });\n    });\n  }\n  applyFilter(column, filterValue) {\n    this.table.filter(filterValue, column, 'equals');\n    this.pageData.currentPage = 0;\n    this.pageSize = 10;\n  }\n  onSelectAllChange(event) {\n    const checked = event.checked;\n    if (checked) {\n      this.selectedRows = this.claimsDtoList;\n      this.selectAll = true;\n    } else {\n      this.selectedRows = [];\n      this.selectAll = false;\n    }\n  }\n  copyAccount(account) {\n    return {\n      email: account.email,\n      firstName: account.firstName,\n      lastName: account.lastName,\n      login: account.username,\n      authorities: account.authorities,\n      groups: account.groups,\n      subjectId: account.subjectId\n    };\n  }\n  onClickTransferOwnership() {\n    this.displayTxferClaimOwnershipDialog.display = true;\n  }\n  onSubmit(event) {\n    this.nspConfirmService.onConfirmPopup(event, \"confirmTransferClaims\", this.displayTxferClaimOwnershipDialog, () => {\n      console.log(\"transfering ownership\");\n      if (this.selectedRows.length > 0) {\n        const reqList = [];\n        const request = {\n          reqList,\n          txferReason: this.claimsTransferComment\n        };\n        this.selectedRows.forEach(x => {\n          const req = {\n            id: x.caseId,\n            claimId: x.claimId,\n            lastOwnerId: x.ownerId\n          };\n          request.reqList.push(req);\n        });\n        this.workloadService.transferOwnership(request).subscribe(resp => {\n          if (resp) {\n            if (resp.status === 200) {\n              this.toastService.success(resp.body.success_message);\n              this.resetDataTable();\n            }\n          }\n        }, error => {\n          console.log(\"error is\" + String(error?.error?.error_desc));\n          this.toastService.error(String(error?.error?.error_desc));\n        });\n      }\n    });\n  }\n  enableTxferOSBtn() {\n    let enable = true;\n    if (this.selectedRows.length > 0) {\n      this.selectedRows.forEach(x => {\n        if (x.ownerId === null || x.ownerId.trim().length === 0 || x.ownerId !== null && x.ownerId === this.currentAccount.subjectId) {\n          enable = false;\n        }\n      });\n    } else {\n      enable = false;\n    }\n    return enable;\n  }\n  onPage(event) {\n    console.log(\"pageevent\", event);\n    this.pageData.currentPage = event.first / event.rows;\n  }\n  exportCSV(dataTable) {\n    let params = new http_1.HttpParams();\n    params = this.ns2Http.appendHttpParam(this.selectedECSEFilter.claimFilterStr, params);\n    this.workloadService.getClaimsApproverData({\n      params\n    }).subscribe(resp => {\n      if (resp.body.data) {\n        const columns = [{\n          field: 'limit',\n          header: 'Limit',\n          index: 1\n        }, {\n          field: 'caseId',\n          header: 'Case ID',\n          index: 2\n        }, {\n          field: 'claimantNRIC',\n          header: 'NRIC',\n          index: 3\n        }, {\n          field: 'claimantName',\n          header: 'Name',\n          index: 4\n        }, {\n          field: 'dueDate',\n          header: 'Due Date',\n          index: 5\n        }, {\n          field: 'dateTrgStart',\n          header: 'Trg Start',\n          index: 6\n        }, {\n          field: 'company',\n          header: 'Company',\n          index: 7\n        }, {\n          field: 'occupation',\n          header: 'Occupation',\n          index: 8\n        }, {\n          field: 'reason',\n          header: 'Status',\n          index: 9\n        }, {\n          field: 'ownerInit',\n          header: 'Owner',\n          index: 10\n        }, {\n          field: 'receiptDate',\n          header: 'Receipt Date',\n          index: 12\n        }];\n        if (this.captionGroup.controls['ecseFilter'].value.label === 'SE') {\n          columns.push({\n            field: 'claimOptDesc',\n            header: 'Option',\n            index: 11\n          });\n        }\n        columns.sort((a, b) => a.index - b.index);\n        const dtoList = [];\n        resp.body.data.dtoList.forEach(data => {\n          let dto = {};\n          if (this.captionGroup.controls['ecseFilter'].value.label === 'SE') {\n            dto = {\n              limit: \"Lvl \".concat(data.limitLevel),\n              caseId: data.caseId,\n              claimantNRIC: data.nric,\n              claimantName: data.name,\n              dueDate: this.dateUtilsService.convertUnixToDateString(data.dueDate, this.dateFormat),\n              dateTrgStart: this.dateUtilsService.convertUnixToDateString(data.start, this.dateFormat),\n              company: data.coy,\n              occupation: data.occupation,\n              reason: data.reason,\n              claimOptDesc: data.optionDesc,\n              ownerInit: data.ownerInit,\n              receiptDate: this.dateUtilsService.convertUnixToDateString(data.receiptDate, this.dateFormat)\n            };\n          } else {\n            dto = {\n              limit: \"Lvl \".concat(data.limitLevel),\n              caseId: data.caseId,\n              claimantNRIC: data.nric,\n              claimantName: data.name,\n              dueDate: this.dateUtilsService.convertUnixToDateString(data.dueDate, this.dateFormat),\n              dateTrgStart: this.dateUtilsService.convertUnixToDateString(data.start, this.dateFormat),\n              company: data.coy,\n              occupation: data.occupation,\n              reason: data.reason,\n              ownerInit: data.ownerInit,\n              receiptDate: this.dateUtilsService.convertUnixToDateString(data.receiptDate, this.dateFormat)\n            };\n          }\n          dtoList.push(dto);\n        });\n        this.exportUtilsService.exportCSV(dataTable, dtoList, resp.body.data.total_no_of_elems, columns, \"claim_approver_\".concat((0, common_1.formatDate)(new Date(), \"dd-MM-YYYY\", 'en-US')));\n        this.loading = false;\n      }\n    });\n  }\n  resetDataTable() {\n    this.selectAll = false;\n    this.selectedRows = [];\n    this.table.filters = {};\n    this.pageData.currentPage = 0;\n    this.pageSize = 10;\n    this.table.reset();\n  }\n}\nexports.ClaimApproverInboxComponent = ClaimApproverInboxComponent;\nClaimApproverInboxComponent.ɵfac = function ClaimApproverInboxComponent_Factory(t) {\n  return new (t || ClaimApproverInboxComponent)(i0.ɵɵdirectiveInject(i1.WorkloadInboxService), i0.ɵɵdirectiveInject(i2.PrimeNGConfig), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i3.NspConfirmationService), i0.ɵɵdirectiveInject(i4.AccountService), i0.ɵɵdirectiveInject(i5.DateUtilsService), i0.ɵɵdirectiveInject(i6.Ns2HttpService), i0.ɵɵdirectiveInject(i7.CustomToastService), i0.ɵɵdirectiveInject(i8.FormBuilder), i0.ɵɵdirectiveInject(i9.IcCodeService), i0.ɵɵdirectiveInject(i10.ExportUtilsService), i0.ɵɵdirectiveInject(i11.Router));\n};\nClaimApproverInboxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClaimApproverInboxComponent,\n  selectors: [[\"n2-claim-approver-inbox\"]],\n  viewQuery: function ClaimApproverInboxComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n    }\n  },\n  decls: 27,\n  vars: 22,\n  consts: [[\"dataKey\", \"id\", \"styleClass\", \"p-datatable-gridlines p-datatable-striped\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"responsiveLayout\", \"scroll\", 3, \"value\", \"paginator\", \"rows\", \"lazy\", \"showCurrentPageReport\", \"selectAll\", \"totalRecords\", \"selection\", \"filterDelay\", \"loading\", \"rowsPerPageOptions\", \"columns\", \"selectAllChange\", \"onLazyLoad\", \"selectionChange\", \"onPage\"], [\"dataTable\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"header\", \"Transfer Claim Ownership\", 3, \"visible\", \"breakpoints\", \"draggable\", \"resizable\", \"visibleChange\"], [1, \"form-group\"], [\"pInputTextarea\", \"\", \"type\", \"text\", \"id\", \"claimsTransferComment\", \"rows\", \"8\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"pTemplate\", \"footer\"], [\"key\", \"confirmTransferClaims\", \"header\", \"Confirmation\", \"icon\", \"fa fa-question-circle\", \"width\", \"425\"], [3, \"formGroup\"], [1, \"grid\"], [1, \"col-9\", \"nsp-align-left\", \"flex\", \"justify-content-start\", \"align-items-center\"], [\"icon\", \"pi pi-file-o\", 3, \"click\"], [\"formControlName\", \"ecseFilter\", \"optionLabel\", \"codeDesc\", 3, \"options\", \"onChange\"], [\"formControlName\", \"selectedDupNric\", 3, \"options\", \"placeholder\", \"showClear\", \"onChange\"], [2, \"color\", \"rgb(175, 3, 3)\"], [1, \"col-3\", \"nsp-align-right\"], [\"pButton\", \"\", \"label\", \"Transfer Ownerhip\", 3, \"disabled\", \"style\", \"click\", 4, \"ngIf\"], [\"pButton\", \"\", \"label\", \"Transfer Ownerhip\", 3, \"disabled\", \"click\"], [\"scope\", \"col\", 2, \"width\", \"3%\"], [\"scope\", \"col\"], [\"scope\", \"col\", \"pSortableColumn\", \"limit\"], [\"field\", \"limit\"], [\"scope\", \"col\", \"pSortableColumn\", \"caseId\"], [\"field\", \"caseId\"], [\"type\", \"text\", \"field\", \"caseId\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"claimantNRIC\"], [\"field\", \"claimantNRIC\"], [\"type\", \"text\", \"field\", \"claimantNRIC\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"dueDate\"], [\"field\", \"dueDate\"], [\"scope\", \"col\", \"pSortableColumn\", \"dateTrgStart\"], [\"field\", \"dateTrgStart\"], [\"scope\", \"col\", \"pSortableColumn\", \"company\"], [\"field\", \"company\"], [\"scope\", \"col\", \"pSortableColumn\", \"occupation\"], [\"field\", \"occupation\"], [\"scope\", \"col\", \"pSortableColumn\", \"reason\"], [\"field\", \"reason\"], [\"type\", \"text\", \"field\", \"reason\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"pTemplate\", \"filter\"], [\"scope\", \"col\", \"pSortableColumn\", \"ownerInit\"], [\"field\", \"ownerInit\"], [\"type\", \"text\", \"field\", \"ownerInit\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"claimOptDesc\", 4, \"ngIf\"], [\"scope\", \"col\", \"pSortableColumn\", \"receiptDate\"], [\"field\", \"receiptDate\"], [\"placeholder\", \"Reason\", 3, \"ngModel\", \"options\", \"onChange\"], [\"optionLabel\", \"value\", \"optionValue\", \"key\", \"placeholder\", \"Owner\", 3, \"ngModel\", \"options\", \"onChange\"], [\"scope\", \"col\", \"pSortableColumn\", \"claimOptDesc\"], [\"field\", \"claimOptDesc\"], [3, \"pSelectableRow\"], [3, \"value\"], [3, \"routerLink\", \"click\"], [4, \"ngIf\"], [\"colspan\", \"13\", 4, \"ngIf\"], [\"colspan\", \"12\", 4, \"ngIf\"], [\"colspan\", \"13\"], [\"colspan\", \"12\"], [\"pButton\", \"\", \"label\", \"Cancel\", 1, \"p-button-danger\", 3, \"click\"], [\"pButton\", \"\", \"label\", \"Submit\", 3, \"click\"]],\n  template: function ClaimApproverInboxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-table\", 0, 1);\n      i0.ɵɵlistener(\"selectAllChange\", function ClaimApproverInboxComponent_Template_p_table_selectAllChange_0_listener($event) {\n        return ctx.onSelectAllChange($event);\n      })(\"onLazyLoad\", function ClaimApproverInboxComponent_Template_p_table_onLazyLoad_0_listener($event) {\n        return ctx.getClaimsApproverData($event);\n      })(\"selectionChange\", function ClaimApproverInboxComponent_Template_p_table_selectionChange_0_listener($event) {\n        return ctx.selectedRows = $event;\n      })(\"onPage\", function ClaimApproverInboxComponent_Template_p_table_onPage_0_listener($event) {\n        return ctx.onPage($event);\n      });\n      i0.ɵɵtext(2, \"\\n            \");\n      i0.ɵɵtemplate(3, ClaimApproverInboxComponent_ng_template_3_Template, 28, 20, \"ng-template\", 2);\n      i0.ɵɵtext(4, \"\\n        \");\n      i0.ɵɵtemplate(5, ClaimApproverInboxComponent_ng_template_5_Template, 70, 1, \"ng-template\", 3);\n      i0.ɵɵtext(6, \"\\n    \");\n      i0.ɵɵtemplate(7, ClaimApproverInboxComponent_ng_template_7_Template, 50, 25, \"ng-template\", 4);\n      i0.ɵɵtext(8, \"\\n    \");\n      i0.ɵɵtemplate(9, ClaimApproverInboxComponent_ng_template_9_Template, 8, 2, \"ng-template\", 5);\n      i0.ɵɵtext(10, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(11, \"\\n\\n\\n\\n\");\n      i0.ɵɵelementStart(12, \"p-dialog\", 6);\n      i0.ɵɵlistener(\"visibleChange\", function ClaimApproverInboxComponent_Template_p_dialog_visibleChange_12_listener($event) {\n        return ctx.displayTxferClaimOwnershipDialog.display = $event;\n      });\n      i0.ɵɵtext(13, \"\\n    \");\n      i0.ɵɵelementStart(14, \"div\", 7);\n      i0.ɵɵtext(15, \"\\n    \");\n      i0.ɵɵelementStart(16, \"h6\");\n      i0.ɵɵtext(17, \"Claims transferred due to:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \"\\n\\n        \");\n      i0.ɵɵelementStart(19, \"textarea\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function ClaimApproverInboxComponent_Template_textarea_ngModelChange_19_listener($event) {\n        return ctx.claimsTransferComment = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(21, \"\\n\\n    \");\n      i0.ɵɵtemplate(22, ClaimApproverInboxComponent_ng_template_22_Template, 5, 6, \"ng-template\", 9);\n      i0.ɵɵtext(23, \"\\n    \");\n      i0.ɵɵelement(24, \"p-confirmPopup\", 10);\n      i0.ɵɵtext(25, \"\\n\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(26, \"\\n\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"value\", ctx.claimsDtoList)(\"paginator\", true)(\"rows\", ctx.pageSize)(\"lazy\", true)(\"showCurrentPageReport\", true)(\"selectAll\", ctx.selectAll)(\"totalRecords\", ctx.totalRecords)(\"selection\", ctx.selectedRows)(\"filterDelay\", 0)(\"loading\", ctx.loading)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(19, _c3))(\"columns\", ctx.cols);\n      i0.ɵɵadvance(12);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(20, _c4));\n      i0.ɵɵproperty(\"visible\", ctx.displayTxferClaimOwnershipDialog.display)(\"breakpoints\", i0.ɵɵpureFunction0(21, _c5))(\"draggable\", false)(\"resizable\", false);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.claimsTransferComment);\n    }\n  },\n  dependencies: [i8.ɵNgNoValidate, i8.DefaultValueAccessor, i8.NgControlStatus, i8.NgControlStatusGroup, i8.NgModel, i12.NgIf, i8.FormGroupDirective, i8.FormControlName, i2.PrimeTemplate, i13.ButtonDirective, i13.Button, i11.RouterLink, i14.Table, i14.SortableColumn, i14.SelectableRow, i14.SortIcon, i14.TableCheckbox, i14.TableHeaderCheckbox, i14.ColumnFilter, i15.Dropdown, i16.Dialog, i17.InputTextarea, i18.ConfirmPopup, i12.UpperCasePipe, i19.DefaultStringPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbGFpbS1hcHByb3Zlci1pbmJveC5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvd29ya2xvYWQvY2xhaW0tYXBwcm92ZXIvY2xhaW0tYXBwcm92ZXItaW5ib3gvY2xhaW0tYXBwcm92ZXItaW5ib3guY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLG9MQUFvTCIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ctx_r12","ClaimApproverInboxComponent","constructor","workloadService","primengConfig","messageService","nspConfirmService","accountService","dateUtilsService","ns2Http","toastService","formBuilder","codeService","exportUtilsService","router","display","currentPage","claimsPendRecompNo","claimsDueToDate","claimsOverDue","claimsTotal","identity","subscribe","account","currentAccount","copyAccount","ecseClaimFilterOptions","codeId","codeDesc","claimFilterStr","subjectId","label","codeType","ngOnInit","ripple","selectedECSEFilter","console","log","captionGroup","group","selectedDupNric","forms_1","ecseFilter","controls","setValue","onChangeECFilter","event","get","value","getClaimsApproverData","lastTableLazyLoadEvent","loading","pageSize","rows","setTimeout","options","convertLazyEvent","pageData","params","appendHttpParam","loadCodes","resp","claimsDtoList","body","data","dtoList","quickFilterClaimCount","quickFilterclaimCount","total","ownerMap","setOwnerMap","totalRecords","total_no_of_elems","duplicateNrics","nricWithMoreThanOneClaimOptions","duplicateNricPlaceHolder","length","gets","codes","reasonList","map","x","navigateApproverPage","dto","currentSubjectId","claimType","CLAIM_TYPE_SELF_EMP","queryParams","claimId","reason","claimInboxId","id","claimantNRIC","station","nspay2_constants_1","STATION_CERTIFICATION","STATION_APPROVAL","navigate","CLAIM_TYPE_EMP","Object","entries","forEach","rslt","displayName","concat","push","key","applyFilter","column","filterValue","table","filter","onSelectAllChange","checked","selectedRows","selectAll","email","firstName","lastName","login","username","authorities","groups","onClickTransferOwnership","displayTxferClaimOwnershipDialog","onSubmit","onConfirmPopup","reqList","request","txferReason","claimsTransferComment","req","caseId","lastOwnerId","ownerId","transferOwnership","status","success","success_message","resetDataTable","error","String","error_desc","enableTxferOSBtn","enable","trim","onPage","first","exportCSV","dataTable","http_1","columns","field","header","index","sort","a","b","limit","limitLevel","nric","claimantName","name","dueDate","convertUnixToDateString","dateFormat","dateTrgStart","start","company","coy","occupation","claimOptDesc","optionDesc","ownerInit","receiptDate","Date","filters","reset","exports","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\workload\\claim-approver\\claim-approver-inbox\\claim-approver-inbox.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\workload\\claim-approver\\claim-approver-inbox\\claim-approver-inbox.component.html"],"sourcesContent":["import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {DateUtilsService} from 'app/core/util/date-utils.service';\r\nimport {NspConfirmationService} from 'app/shared/confirm/nsp-confirm.service';\r\nimport {WorkloadInboxService} from 'app/workload/service/workload-inbox.service';\r\nimport {AccountService} from 'app/core/auth/account.service';\r\nimport {LazyLoadEvent, MessageService, PrimeNGConfig} from 'primeng/api';\r\nimport {Ns2HttpService} from 'app/shared/service/ns2-http.service';\r\nimport {CustomToastService} from 'app/layouts/service/customtoast.service';\r\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport { Table } from 'primeng/table';\r\nimport { IcCodeService } from 'app/ng-connect';\r\nimport { formatDate } from \"@angular/common\";\r\nimport { ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { NSPAY2_STATION } from 'app/nspay2.constants';\r\n\r\n\r\n@Component({\r\n  selector: 'n2-claim-approver-inbox',\r\n  templateUrl: './claim-approver-inbox.component.html',\r\n  styleUrls: ['./claim-approver-inbox.component.scss']\r\n})\r\nexport class ClaimApproverInboxComponent implements OnInit {\r\n\r\n  public ecseClaimFilterOptions!: any;\r\n  public selectedECSEFilter!: any;\r\n  currentAccount: any;\r\n  captionGroup: FormGroup;\r\n  public nricWithMoreThanOneClaimOptions!: string[];\r\n  public cols: any [] = [];\r\n  selectAll = false;\r\n  loading!: boolean;\r\n  totalRecords = 0;\r\n  public selectedRows: any[] = [];\r\n  public claimsDtoList:any[] = [];\r\n  autoResize = true;\r\n  claimsTransferComment!: string;\r\n  displayTxferClaimOwnershipDialog: any = {display: false};\r\n  dateFormat = \"DD-MM-YYYY\";\r\n  lastTableLazyLoadEvent: LazyLoadEvent;\r\n  selectedOwner: any;\r\n  ownerMap: any[] = [];\r\n  selectedReason: string;\r\n  reasonList: any[] = [];\r\n  duplicateNricPlaceHolder = \"0 Duplicates\";\r\n  pageData: {currentPage: number} = {\r\n    currentPage: 0\r\n  }\r\n  pageSize = 10;\r\n  @ViewChild('dataTable') table: Table;\r\n\r\n  readonly CLAIM_TYPE_SELF_EMP =\"S\";\r\n  readonly CLAIM_TYPE_EMP =\"E\";\r\n\r\n\r\n  quickFilterclaimCount: any = {\r\n    claimsPendRecompNo: 0,\r\n    claimsDueToDate: 0,\r\n    claimsOverDue: 0,\r\n    claimsTotal: 0\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  constructor(\r\n    private workloadService: WorkloadInboxService,\r\n    private primengConfig: PrimeNGConfig,\r\n    private messageService: MessageService,\r\n    private nspConfirmService: NspConfirmationService,\r\n    private accountService: AccountService,\r\n    public dateUtilsService: DateUtilsService,\r\n    private ns2Http: Ns2HttpService,\r\n    private toastService: CustomToastService,\r\n    private formBuilder: FormBuilder,\r\n    private codeService: IcCodeService,\r\n    private exportUtilsService: ExportUtilsService,\r\n    private router: Router\r\n\r\n    ) {\r\n\r\n      this.accountService.identity().subscribe((account:any) => {\r\n        this.currentAccount = this.copyAccount(account);\r\n      });\r\n\r\n\r\n      this.ecseClaimFilterOptions = [\r\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\r\n        {codeId: 'MY_EC', codeDesc: 'My EC', claimFilterStr: \"owner=\" + this.currentAccount.subjectId + \"&claimType=E\", label: 'EC', codeType: 'item_ec_class'},\r\n        {codeId: 'ALL_SE', codeDesc: 'All SE', claimFilterStr: \"&claimType=S\", label: 'SE', codeType: 'item_se_class'},\r\n        {codeId: 'ALL_EC', codeDesc: 'All EC', claimFilterStr: \"&claimType=E\", label: 'EC', codeType: 'item_ec_class'}\r\n        // to be changed to retrieve from code table\r\n      ];\r\n\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.primengConfig.ripple = true;\r\n    this.selectedECSEFilter = this.ecseClaimFilterOptions[0];\r\n    console.log(\"se filter\", this.selectedECSEFilter);\r\n    this.captionGroup = this.formBuilder.group({\r\n      selectedDupNric: new FormControl(),\r\n      ecseFilter: new FormControl()\r\n\r\n    })\r\n\r\n     this.selectedECSEFilter = this.ecseClaimFilterOptions[0];\r\n     this.captionGroup.controls['ecseFilter'].setValue(this.ecseClaimFilterOptions[0]);\r\n\r\n\r\n  }\r\n\r\n  onChangeECFilter(event: any):void{\r\n    this.selectedECSEFilter = this.captionGroup.get('ecseFilter').value;\r\n    console.log(\"changefilter\", event);\r\n    console.log(\"selected is now \", this.captionGroup.get('ecseFilter').value);\r\n    this.getClaimsApproverData(this.lastTableLazyLoadEvent);\r\n    // get consolidated table filters + current drop down filter and recall api for pagination.\r\n\r\n  }\r\n\r\n \r\n\r\n  getClaimsApproverData(event: LazyLoadEvent):any[] {\r\n    this.loading =  true;\r\n    this.lastTableLazyLoadEvent = event;\r\n    this.pageSize = event.rows;\r\n\r\n    setTimeout(() => {\r\n      const options = this.ns2Http.convertLazyEvent(event, this.pageData, this.pageSize);\r\n    \r\n      if(this.selectedECSEFilter){\r\n        console.log(\"this is nowsss\",this.captionGroup.get('ecseFilter').value);\r\n        options.params = this.ns2Http.appendHttpParam(this.selectedECSEFilter.claimFilterStr, options.params);\r\n        this.loadCodes(this.captionGroup.get('ecseFilter')?.value.codeType);\r\n\r\n      }\r\n\r\n      this.workloadService.getClaimsApproverData(options).subscribe((resp:any) => {\r\n\r\n        this.claimsDtoList = resp.body.data.dtoList;\r\n        if(resp.body.data.quickFilterClaimCount){\r\n          this.quickFilterclaimCount = {\r\n            claimsPendRecompNo: resp.body.data.quickFilterClaimCount.claimsPendRecompNo,\r\n            claimsDueToDate: resp.body.data.quickFilterClaimCount.claimsDueToDate,\r\n            claimsOverDue: resp.body.data.quickFilterClaimCount.claimsOverDue,\r\n            claimsTotal: resp.body.data.quickFilterClaimCount.total\r\n          }\r\n        }\r\n        if(resp.body.data.ownerMap){\r\n          this.setOwnerMap(resp.body.data.ownerMap);\r\n        }\r\n\r\n        this.totalRecords = resp.body.data.total_no_of_elems;\r\n        if(resp.body.data.duplicateNrics){\r\n          this.nricWithMoreThanOneClaimOptions =resp.body.data.duplicateNrics;\r\n        }\r\n        this.duplicateNricPlaceHolder = `${this.nricWithMoreThanOneClaimOptions.length} Duplicates`\r\n\r\n        this.loading = false;\r\n      });\r\n    }, 0);\r\n    return this.claimsDtoList;\r\n\r\n  }\r\n\r\n  loadCodes(codeType: string): void {\r\n    this.codeService.gets(codeType)\r\n    .subscribe((codes: any[]) => {\r\n      this.reasonList = codes[0].map((x:any)=> {\r\n        return x.label['en-US'] as string;\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  //depending on the selected claim inbox station, the path will be routed accordingly\r\n  navigateApproverPage(dto: any): void{\r\n    const currentSubjectId = this.currentAccount.subjectId;\r\n    //if clicked claim owner belongs to current user\r\n    // if(dto.ownerId === currentSubjectId){\r\n      if(dto.claimType===this.CLAIM_TYPE_SELF_EMP){\r\n        const queryParams = {\r\n          claimId: dto.claimId, \r\n          reason: dto.reason, \r\n          claimInboxId: dto.id,\r\n          claimantNRIC: dto.claimantNRIC,\r\n          station: dto.station\r\n        }\r\n        if(dto.station === NSPAY2_STATION.STATION_CERTIFICATION){\r\n          console.log(\"routing to se-certification\");\r\n        }else if(dto.station === NSPAY2_STATION.STATION_APPROVAL){\r\n          console.log(\"routing to se-approval\");\r\n        }\r\n        this.router.navigate(['/claim/se-claim/claim-verification-se'], {queryParams});\r\n\r\n        // if(dto.station === this.STATION_CERTIFICATION){\r\n        //   console.log(\"routing to se-certification\");\r\n        //   this.router.navigate(['/claim/se-claim/claim-verification-se'], {queryParams});\r\n        // }else if(dto.station === this.STATION_APPROVAL){\r\n        //   console.log(\"routing to se-approval\");\r\n        //   this.router.navigate(['/claim/se-claim/claim-approval-se'], {queryParams});\r\n        // }\r\n      }else if(dto.claimType===this.CLAIM_TYPE_EMP){\r\n        this.router.navigate(['/claim/ec-claim/claim-verification-ec', dto]);\r\n      }\r\n    // }else{\r\n    //   //route to enquiry\r\n    //   //TODO\r\n    //   //new scenario\r\n    //   console.log(\"route to enquiry\")\r\n    // }\r\n   \r\n  }\r\n\r\n  setOwnerMap(ownerMap: any){\r\n    this.ownerMap = [];\r\n    Object.entries(ownerMap).forEach(x=>{\r\n      const rslt:any = x[1];\r\n      let displayName = rslt[\"displayName\"]\r\n      if(this.currentAccount.subjectId === rslt[\"ownerId\"]){\r\n        displayName = displayName.concat(\" (Me)\");\r\n      }\r\n      this.ownerMap.push({\r\n        key: x[0],\r\n        value: displayName\r\n      })\r\n    })\r\n  }\r\n\r\n  applyFilter(column: string, filterValue: string): void {\r\n    this.table.filter(filterValue, column, 'equals');\r\n    this.pageData.currentPage = 0;\r\n    this.pageSize = 10;\r\n  }\r\n  \r\n  \r\n  onSelectAllChange(event: any): void {\r\n    const checked = event.checked;\r\n    if (checked) {\r\n      this.selectedRows = this.claimsDtoList;\r\n      this.selectAll = true;\r\n    } else {\r\n      this.selectedRows = [];\r\n      this.selectAll = false;\r\n    }\r\n  }\r\n\r\n  copyAccount(account: any): any {\r\n    return {\r\n      email: account.email as string,\r\n      firstName: account.firstName as string,\r\n      lastName: account.lastName as string,\r\n      login: account.username as string,\r\n      authorities: account.authorities,\r\n      groups: account.groups,\r\n      subjectId: account.subjectId\r\n    };\r\n  }\r\n\r\n  onClickTransferOwnership(): void{\r\n    this.displayTxferClaimOwnershipDialog.display = true;\r\n  }\r\n\r\n\r\n  onSubmit(event: Event): void{\r\n    this.nspConfirmService.onConfirmPopup(event, \"confirmTransferClaims\", this.displayTxferClaimOwnershipDialog,\r\n    ()=>{\r\n      console.log(\"transfering ownership\");\r\n      if(this.selectedRows.length>0){\r\n        const reqList:any[] = [];\r\n        const request = {\r\n          reqList,\r\n          txferReason: this.claimsTransferComment\r\n        }\r\n        this.selectedRows.forEach(x=>{\r\n          const req = {\r\n            id: x.caseId,\r\n            claimId: x.claimId,\r\n            lastOwnerId: x.ownerId\r\n          }\r\n          request.reqList.push(req);\r\n\r\n        })\r\n        this.workloadService.transferOwnership(request).subscribe((resp:any)=> {\r\n          if(resp){\r\n            if(resp.status === 200){\r\n              this.toastService.success(resp.body.success_message as string);\r\n              this.resetDataTable();\r\n            }\r\n          }\r\n        },\r\n        (error: any) => {\r\n          console.log(\"error is\" + String(error?.error?.error_desc));\r\n          this.toastService.error(String(error?.error?.error_desc));\r\n        }\r\n      );\r\n\r\n    }\r\n  })\r\n  }\r\n\r\n  enableTxferOSBtn(): boolean{\r\n    let enable = true;\r\n    if(this.selectedRows.length > 0){\r\n      this.selectedRows.forEach(x=>{\r\n        if(x.ownerId===null || x.ownerId.trim().length===0 || (x.ownerId!==null && x.ownerId === this.currentAccount.subjectId)){\r\n\r\n          enable = false;\r\n        }\r\n      });\r\n    }else {\r\n      enable = false;\r\n    }\r\n    return enable;\r\n  }\r\n  onPage(event: any): void {\r\n    console.log(\"pageevent\", event);\r\n    this.pageData.currentPage = event.first / event.rows;\r\n  }\r\n\r\n  exportCSV(dataTable: Table): void{\r\n\r\n    let params = new HttpParams;\r\n    params = this.ns2Http.appendHttpParam(this.selectedECSEFilter.claimFilterStr, params);\r\n\r\n    this.workloadService.getClaimsApproverData({params}).subscribe((resp: any) => {\r\n      if(resp.body.data) {\r\n        const columns = \r\n          [\r\n            {field: 'limit', header: 'Limit', index: 1},\r\n            {field: 'caseId', header: 'Case ID', index: 2},\r\n            {field: 'claimantNRIC', header: 'NRIC', index: 3},\r\n            {field: 'claimantName', header: 'Name', index: 4},\r\n            {field: 'dueDate', header: 'Due Date', index: 5},\r\n            {field: 'dateTrgStart', header: 'Trg Start', index: 6},\r\n            {field: 'company', header: 'Company', index: 7},\r\n            {field: 'occupation', header: 'Occupation', index: 8},\r\n            {field: 'reason', header: 'Status', index: 9},\r\n            {field: 'ownerInit', header: 'Owner', index: 10},\r\n            {field: 'receiptDate', header: 'Receipt Date', index: 12}\r\n          ];\r\n\r\n     if(this.captionGroup.controls['ecseFilter'].value.label ==='SE'){\r\n            columns.push(\r\n              {field: 'claimOptDesc', header: 'Option', index: 11}\r\n            );\r\n          }\r\n\r\n        columns.sort((a, b) => a.index - b.index);\r\n        const dtoList:any[] = [];\r\n        resp.body.data.dtoList.forEach((data:any)=>{\r\n          let dto = {};\r\n        if(this.captionGroup.controls['ecseFilter'].value.label ==='SE'){\r\n            dto = {\r\n              limit: \"Lvl \".concat(data.limitLevel),\r\n              caseId: data.caseId,\r\n              claimantNRIC: data.nric,\r\n              claimantName: data.name,\r\n              dueDate: this.dateUtilsService.convertUnixToDateString(data.dueDate, this.dateFormat),\r\n              dateTrgStart: this.dateUtilsService.convertUnixToDateString(data.start, this.dateFormat),\r\n              company: data.coy,\r\n              occupation: data.occupation,\r\n              reason: data.reason,\r\n              claimOptDesc: data.optionDesc,\r\n              ownerInit: data.ownerInit,\r\n              receiptDate: this.dateUtilsService.convertUnixToDateString(data.receiptDate, this.dateFormat),\r\n            }\r\n          }else{\r\n            dto = {\r\n              limit: \"Lvl \".concat(data.limitLevel),\r\n              caseId: data.caseId,\r\n              claimantNRIC: data.nric,\r\n              claimantName: data.name,\r\n              dueDate: this.dateUtilsService.convertUnixToDateString(data.dueDate, this.dateFormat),\r\n              dateTrgStart: this.dateUtilsService.convertUnixToDateString(data.start, this.dateFormat),\r\n              company: data.coy,\r\n              occupation: data.occupation,\r\n              reason: data.reason,\r\n              ownerInit: data.ownerInit,\r\n              receiptDate: this.dateUtilsService.convertUnixToDateString(data.receiptDate, this.dateFormat),\r\n            }\r\n\r\n          }\r\n          dtoList.push(dto);\r\n\r\n          \r\n        })\r\n        this.exportUtilsService.exportCSV(dataTable, dtoList,resp.body.data.total_no_of_elems, columns, \r\n          \"claim_approver_\".concat(formatDate(new Date(),\"dd-MM-YYYY\", 'en-US')));\r\n      this.loading = false;\r\n    }});\r\n    \r\n  }\r\n\r\n  resetDataTable(): void {\r\n    this.selectAll = false;\r\n    this.selectedRows = [];\r\n    this.table.filters = {};\r\n    this.pageData.currentPage = 0;\r\n    this.pageSize = 10;\r\n    this.table.reset();\r\n  }\r\n\r\n}\r\n","<p-table [value]=\"claimsDtoList\"\r\n            [paginator]=\"true\"\r\n            [rows]=\"pageSize\"\r\n            [lazy] = \"true\"\r\n            [showCurrentPageReport]=\"true\"\r\n            [selectAll]=\"selectAll\"\r\n            (selectAllChange)=\"onSelectAllChange($event)\"\r\n            (onLazyLoad)=\"getClaimsApproverData($event)\"\r\n            [totalRecords] = \"totalRecords\"\r\n            [(selection)] = \"selectedRows\"\r\n            dataKey = \"id\"\r\n            [filterDelay]=\"0\"\r\n            [loading] = \"loading\"\r\n            styleClass=\"p-datatable-gridlines p-datatable-striped\"\r\n            [rowsPerPageOptions]=\"[10,15,20]\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            responsiveLayout=\"scroll\"\r\n            (onPage) = \"onPage($event)\"\r\n            [columns] = \"cols\"\r\n            #dataTable\r\n\r\n            >\r\n            <ng-template pTemplate=\"caption\">\r\n                <form [formGroup] = \"captionGroup\">\r\n                    <div class=\"grid\">\r\n                        <div class = \"col-9 nsp-align-left flex justify-content-start align-items-center\">\r\n                            <p-button icon=\"pi pi-file-o\" [style]=\"{'margin-right': '.5em', 'margin-bottom': '.5em'}\" (click) = \"exportCSV(dataTable)\"></p-button>\r\n                            <p-dropdown [options]=\"ecseClaimFilterOptions\" [style]=\"{'margin-right': '.5em', 'margin-bottom': '.5em'}\" formControlName=\"ecseFilter\"\r\n                            (onChange) = \"onChangeECFilter($event)\"  optionLabel=\"codeDesc\" ></p-dropdown>\r\n\r\n                            <p-dropdown [options]=\"nricWithMoreThanOneClaimOptions\" [style]=\"{'margin-right': '.5em', 'margin-bottom': '.5em'}\" formControlName=\"selectedDupNric\" [placeholder]=\"duplicateNricPlaceHolder\" [showClear]=\"true\"\r\n                            (onChange)=\"applyFilter('claimantNRIC', captionGroup.get('selectedDupNric').value)\"\r\n                            ></p-dropdown>\r\n\r\n                            <p><b>{{ selectedECSEFilter.label }}:<span style=\"color:rgb(175, 3, 3);\">\r\n                                {{ quickFilterclaimCount.claimsPendRecompNo }} (Recomp);\r\n                                {{ quickFilterclaimCount.claimsDueToDate }} (Today);\r\n                                {{ quickFilterclaimCount.claimsOverDue }} (Overdue);</span>\r\n                                {{ quickFilterclaimCount.claimsTotal }} (Total)\r\n                            </b></p>\r\n                        </div>\r\n                        <div class = \"col-3 nsp-align-right\">\r\n                            <button pButton  *ngIf = \"captionGroup.controls['ecseFilter'].value.label =='EC'\" label=\"Transfer Ownerhip\" [disabled] = \"!enableTxferOSBtn()\" (click)=\"onClickTransferOwnership()\" [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\"></button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th scope=\"col\" style=\"width:3%\"><p-tableHeaderCheckbox></p-tableHeaderCheckbox></th>\r\n                <th scope=\"col\">SN</th>\r\n                <th scope=\"col\" pSortableColumn =\"limit\">Limit<p-sortIcon field=\"limit\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn = \"caseId\">Case ID<p-sortIcon field=\"caseId\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"caseId\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" pSortableColumn =\"claimantNRIC\">Name<p-sortIcon field=\"claimantNRIC\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"claimantNRIC\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" pSortableColumn =\"dueDate\">Due Date<p-sortIcon field=\"dueDate\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"dateTrgStart\">Trg Start<p-sortIcon field=\"dateTrgStart\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"company\">Company<p-sortIcon field=\"company\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"occupation\">Occupation<p-sortIcon field=\"occupation\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"reason\">Status<p-sortIcon field=\"reason\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"reason\" display=\"menu\" matchMode=\"contains\">\r\n                        <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                            <p-dropdown [ngModel]=\"selectedReason\" [options]=\"reasonList\" (onChange)=\"filter($event.value)\"  placeholder=\"Reason\"></p-dropdown>\r\n                        </ng-template>\r\n                    </p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" pSortableColumn =\"ownerInit\">Owner<p-sortIcon field=\"ownerInit\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"ownerInit\" display=\"menu\" matchMode=\"contains\">\r\n                        <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                            <p-dropdown [ngModel]=\"selectedOwner\" [options]=\"ownerMap\" (onChange)=\"filter($event.value)\"\r\n                            optionLabel=\"value\" optionValue=\"key\" placeholder=\"Owner\"></p-dropdown>\r\n                        </ng-template>\r\n                    </p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" *ngIf=\"captionGroup.controls['ecseFilter'].value.label =='SE'\"\r\n                pSortableColumn =\"claimOptDesc\">Option<p-sortIcon field=\"claimOptDesc\"></p-sortIcon></th>\r\n\r\n                <th scope=\"col\" pSortableColumn =\"receiptDate\">Receipt Date<p-sortIcon field=\"receiptDate\"></p-sortIcon></th>\r\n\r\n            </tr>\r\n        </ng-template>\r\n    <ng-template pTemplate=\"body\" let-claimRecord let-rowIndex = \"rowIndex\" let-columns=\"columns\">\r\n\r\n        <tr [pSelectableRow]=\"claimRecord\">\r\n            <td><p-tableCheckbox [value]=\"claimRecord\"></p-tableCheckbox></td>\r\n            <td>{{ rowIndex + 1}}</td>\r\n            <td>Lvl {{claimRecord.limitLevel }}</td>\r\n            <td><a [routerLink]=\"\" (click)=\"navigateApproverPage(claimRecord)\">{{claimRecord.caseId}}</a></td>\r\n            <td>{{claimRecord.nric }} <br/> {{ claimRecord.name}}</td>\r\n            <td>{{ this.dateUtilsService.convertUnixToDateString(claimRecord.dueDate, dateFormat) }}</td>\r\n            <td>{{ this.dateUtilsService.convertUnixToDateString(claimRecord.start, dateFormat)}}</td>\r\n            <td>{{claimRecord.coy}}</td>\r\n            <td>{{claimRecord.occupation | defaultString }}</td>\r\n            <td>{{claimRecord.reason | defaultString}}</td>\r\n            <td>{{claimRecord.ownerInit | uppercase | defaultString}}</td>\r\n            <td *ngIf=\"captionGroup.controls['ecseFilter'].value.label =='SE'\">{{claimRecord.optionDesc | defaultString}}</td>\r\n\r\n            <td>{{ this.dateUtilsService.convertUnixToDateString(claimRecord.receiptDate, dateFormat) | defaultString}}</td>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n            <td *ngIf=\"captionGroup.controls['ecseFilter'].value.label =='SE'\" colspan=\"13\">No records found.</td>\r\n            <td *ngIf=\"captionGroup.controls['ecseFilter'].value.label =='EC'\" colspan=\"12\">No records found.</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n\r\n\r\n\r\n<p-dialog header=\"Transfer Claim Ownership\"\r\n[(visible)]=\"displayTxferClaimOwnershipDialog.display\"\r\n[breakpoints]=\"{'960px': '75vw'}\"\r\n[style]=\"{width: '50vw'}\"\r\n[draggable]=\"false\" [resizable]=\"false\"\r\n>\r\n    <div class=\"form-group\">\r\n    <h6>Claims transferred due to:</h6>\r\n\r\n        <textarea pInputTextarea  [(ngModel)]=\"claimsTransferComment\" type=\"text\" id=\"claimsTransferComment\" rows=\"8\" class = \"form-control\"></textarea>\r\n    </div>\r\n\r\n    <ng-template pTemplate=\"footer\">\r\n        <button pButton class =\"p-button-danger\" label=\"Cancel\"  (click)=\"displayTxferClaimOwnershipDialog.display=false\" [style]=\"{'margin-left': '.5em' , 'margin-bottom': '.5em'}\"\r\n        ></button>\r\n        <button pButton  label=\"Submit\"  (click)=\"onSubmit($event)\" [style]=\"{'margin-left': '.5em' , 'margin-bottom': '.5em'}\"\r\n        ></button>\r\n\r\n    </ng-template>\r\n    <p-confirmPopup key = \"confirmTransferClaims\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n\r\n</p-dialog>\r\n\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}