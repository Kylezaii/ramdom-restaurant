{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DeductionService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/common/http\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/config/application-config.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nclass DeductionService {\n  constructor(http, applicationConfigService, ns2HttpService) {\n    this.http = http;\n    this.applicationConfigService = applicationConfigService;\n    this.ns2HttpService = ns2HttpService;\n    this.resourceUrl = this.applicationConfigService.getEndpointFor('/api/payment/deduction');\n  }\n  getAllDeductions() {\n    const url = \"assets/mock/payment/deduction.json\";\n    return this.http.get(url, {\n      observe: 'response'\n    });\n  }\n  get(options) {\n    const url = this.resourceUrl;\n    return this.ns2HttpService.get(url, options);\n  }\n  patch(id, fields) {\n    const url = `${this.resourceUrl}/${id}`;\n    return this.ns2HttpService.patch(url, fields);\n  }\n  upload(request) {\n    const url = this.applicationConfigService.getEndpointFor('/api/payment/deduction/upload');\n    return this.ns2HttpService.postWithFormData(url, request);\n  }\n  trigger(deductionRecordid) {\n    const url = `${this.resourceUrl}/result`;\n    return this.ns2HttpService.post(url, {\n      \"id\": deductionRecordid\n    });\n  }\n  download(id, options) {\n    const url = `${this.resourceUrl}/result/${id}`;\n    return this.ns2HttpService.get(url, options);\n  }\n}\nexports.DeductionService = DeductionService;\nDeductionService.ɵfac = function DeductionService_Factory(t) {\n  return new (t || DeductionService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService), i0.ɵɵinject(i3.Ns2HttpService));\n};\nDeductionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DeductionService,\n  factory: DeductionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;;;;;;;AAQA,MAGaA,gBAAgB;EAG3BC,YACUC,IAAgB,EAChBC,wBAAkD,EAClDC,cAA8B;IAF9B,SAAI,GAAJF,IAAI;IACJ,6BAAwB,GAAxBC,wBAAwB;IACxB,mBAAc,GAAdC,cAAc;IALjB,gBAAW,GAAG,IAAI,CAACD,wBAAwB,CAACE,cAAc,CAAC,wBAAwB,CAAC;EAMvF;EAEGC,gBAAgB;IACrB,MAAMC,GAAG,GAAG,oCAAoC;IAChD,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAeD,GAAG,EAAE;MAAEE,OAAO,EAAE;IAAU,CAAE,CAAC;EAClE;EAEOD,GAAG,CAACE,OAAa;IACtB,MAAMH,GAAG,GAAG,IAAI,CAACI,WAAW;IAC5B,OAAO,IAAI,CAACP,cAAc,CAACI,GAAG,CAACD,GAAG,EAAEG,OAAO,CAAC;EAC9C;EAEOE,KAAK,CAACC,EAAU,EAAEC,MAAW;IAClC,MAAMP,GAAG,GAAG,GAAG,IAAI,CAACI,WAAW,IAAIE,EAAE,EAAE;IACvC,OAAO,IAAI,CAACT,cAAc,CAACQ,KAAK,CAACL,GAAG,EAAEO,MAAM,CAAC;EAC/C;EAEOC,MAAM,CAACC,OAAY;IACxB,MAAMT,GAAG,GAAG,IAAI,CAACJ,wBAAwB,CAACE,cAAc,CAAC,+BAA+B,CAAC;IACzF,OAAO,IAAI,CAACD,cAAc,CAACa,gBAAgB,CAACV,GAAG,EAAES,OAAO,CAAC;EAC3D;EAEOE,OAAO,CAACC,iBAAyB;IACtC,MAAMZ,GAAG,GAAE,GAAG,IAAI,CAACI,WAAW,SAAS;IAEvC,OAAO,IAAI,CAACP,cAAc,CAACgB,IAAI,CAACb,GAAG,EAAE;MAAC,IAAI,EAACY;IAAiB,CAAC,CAAC;EAChE;EAEOE,QAAQ,CAACR,EAAU,EAAEH,OAAY;IACtC,MAAMH,GAAG,GAAE,GAAG,IAAI,CAACI,WAAW,WAAWE,EAAE,EAAE;IAC7C,OAAO,IAAI,CAACT,cAAc,CAACI,GAAG,CAACD,GAAG,EAAEG,OAAO,CAAC;EAC9C;;AAzCFY;;mBAGatB,gBAAgB;AAAA;;SAAhBA,gBAAgB;EAAAuB,SAAhBvB,gBAAgB;EAAAwB,YAFf;AAAM","names":["DeductionService","constructor","http","applicationConfigService","ns2HttpService","getEndpointFor","getAllDeductions","url","get","observe","options","resourceUrl","patch","id","fields","upload","request","postWithFormData","trigger","deductionRecordid","post","download","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payment\\deduction\\service\\deduction.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {ApplicationConfigService} from 'app/core/config/application-config.service';\r\nimport {IDeduction} from 'app/payment/deduction/model/deduction';\r\nimport {Observable} from \"rxjs\";\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { isString } from 'lodash';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DeductionService {\r\n  public resourceUrl = this.applicationConfigService.getEndpointFor('/api/payment/deduction');\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private applicationConfigService: ApplicationConfigService,\r\n    private ns2HttpService: Ns2HttpService\r\n  ) { }\r\n\r\n  public getAllDeductions(): Observable<any>{\r\n    const url = \"assets/mock/payment/deduction.json\";\r\n    return this.http.get<IDeduction[]>(url, { observe: 'response' });\r\n  }\r\n\r\n  public get(options?: any): Observable<any> {\r\n    const url = this.resourceUrl;\r\n    return this.ns2HttpService.get(url, options);\r\n  }\r\n\r\n  public patch(id: string, fields: any): Observable<any> {\r\n    const url = `${this.resourceUrl}/${id}`;\r\n    return this.ns2HttpService.patch(url, fields);\r\n  }\r\n\r\n  public upload(request: any): Observable<any> {\r\n    const url = this.applicationConfigService.getEndpointFor('/api/payment/deduction/upload');\r\n    return this.ns2HttpService.postWithFormData(url, request);\r\n  }\r\n\r\n  public trigger(deductionRecordid: string): Observable<any> {\r\n    const url =`${this.resourceUrl}/result`;\r\n\r\n    return this.ns2HttpService.post(url, {\"id\":deductionRecordid});\r\n  }\r\n\r\n  public download(id: string, options: any): Observable<any> {\r\n    const url =`${this.resourceUrl}/result/${id}`;      \r\n    return this.ns2HttpService.get(url, options);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}