{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NRICValidatorDirective = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst nric_validate_1 = require(\"./nric-validate\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst NRIC_VALIDATOR = {\n  provide: forms_1.NG_VALIDATORS,\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  useExisting: (0, core_1.forwardRef)(() => NRICValidatorDirective),\n  multi: true\n};\nclass NRICValidatorDirective {\n  constructor() {\n    this.isValid = false;\n  }\n  validate(c) {\n    if (c.value) {\n      this.isValid = (0, nric_validate_1.validateNRIC)(c.value);\n      if (this.isValid) {\n        return {};\n      } else {\n        return {\n          nric: 'invalid'\n        };\n      }\n    } else {\n      return {};\n    }\n  }\n}\nexports.NRICValidatorDirective = NRICValidatorDirective;\nNRICValidatorDirective.ɵfac = function NRICValidatorDirective_Factory(t) {\n  return new (t || NRICValidatorDirective)();\n};\nNRICValidatorDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: NRICValidatorDirective,\n  selectors: [[\"\", \"icNric\", \"\", \"formControlName\", \"\"], [\"\", \"icNric\", \"\", \"formControl\", \"\"], [\"\", \"icNric\", \"\", \"ngModel\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([NRIC_VALIDATOR])]\n});","map":{"version":3,"mappings":";;;;;;;AAAA;AACA;AACA;;AAEA,MAAMA,cAAc,GAAG;EACrBC,OAAO,EAAEC,qBAAa;EACtB;EACAC,WAAW,EAAE,qBAAU,EAAC,MAAMC,sBAAsB,CAAC;EACrDC,KAAK,EAAE;CACR;AAED,MAIaD,sBAAsB;EAJnCE;IAKU,YAAO,GAAG,KAAK;;EAEvBC,QAAQ,CAACC,CAAc;IACrB,IAAIA,CAAC,CAACC,KAAK,EAAE;MACX,IAAI,CAACC,OAAO,GAAG,gCAAY,EAACF,CAAC,CAACC,KAAK,CAAC;MACpC,IAAI,IAAI,CAACC,OAAO,EAAE;QAChB,OAAO,EAAE;OACV,MAAM;QACL,OAAO;UAAEC,IAAI,EAAE;QAAS,CAAE;;KAE7B,MAAM;MACL,OAAO,EAAE;;EAEb;;AAlBFC;;mBAIaR,sBAAsB;AAAA;;QAAtBA,sBAAsB;EAAAS;EAAAC,iCAFtB,CAACd,cAAc,CAAC;AAAA","names":["NRIC_VALIDATOR","provide","forms_1","useExisting","NRICValidatorDirective","multi","constructor","validate","c","value","isValid","nric","exports","selectors","features"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\ng-connect\\nric\\nric-validator.directive.ts"],"sourcesContent":["import { Directive, forwardRef } from '@angular/core';\r\nimport { Validator, FormControl, NG_VALIDATORS } from '@angular/forms';\r\nimport { validateNRIC } from './nric-validate';\r\n\r\nconst NRIC_VALIDATOR = {\r\n  provide: NG_VALIDATORS,\r\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n  useExisting: forwardRef(() => NRICValidatorDirective),\r\n  multi: true,\r\n};\r\n\r\n@Directive({\r\n  selector: '[icNric][formControlName],[icNric][formControl],[icNric][ngModel]',\r\n  providers: [NRIC_VALIDATOR],\r\n})\r\nexport class NRICValidatorDirective implements Validator {\r\n  private isValid = false;\r\n\r\n  validate(c: FormControl): { [key: string]: any } {\r\n    if (c.value) {\r\n      this.isValid = validateNRIC(c.value);\r\n      if (this.isValid) {\r\n        return {};\r\n      } else {\r\n        return { nric: 'invalid' };\r\n      }\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}