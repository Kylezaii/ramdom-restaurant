{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PayrollNotificationHistoryComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@angular/common\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"../../service/workload-inbox.service\"));\nconst i2 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i3 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i5 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i6 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i7 = tslib_1.__importStar(require(\"app/shared/confirm/nsp-confirm.service\"));\nconst i8 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i9 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i10 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i11 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i12 = tslib_1.__importStar(require(\"../../../shared/pipe/default-string.pipe\"));\nconst _c0 = [\"dataTable\"];\nconst _c1 = function () {\n  return {\n    \"margin-right\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nfunction PayrollNotificationHistoryComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵelementStart(3, \"div\", 7);\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"p-button\", 8);\n    i0.ɵɵlistener(\"click\", function PayrollNotificationHistoryComponent_ng_template_3_Template_p_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(1);\n      return i0.ɵɵresetView(ctx_r5.exportCSV(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n        \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(2, _c1));\n  }\n}\nfunction PayrollNotificationHistoryComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n            \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                \");\n    i0.ɵɵelementStart(3, \"th\", 9);\n    i0.ɵɵtext(4, \"SN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                \");\n    i0.ɵɵelementStart(6, \"th\", 10);\n    i0.ɵɵtext(7, \"Rej Date\");\n    i0.ɵɵelement(8, \"p-sortIcon\", 11);\n    i0.ɵɵtext(9, \"\\n                    \");\n    i0.ɵɵelement(10, \"p-columnFilter\", 12);\n    i0.ɵɵtext(11, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n                \");\n    i0.ɵɵelementStart(13, \"th\", 13);\n    i0.ɵɵtext(14, \"Action By\");\n    i0.ɵɵelement(15, \"p-sortIcon\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n                \");\n    i0.ɵɵelementStart(17, \"th\", 15);\n    i0.ɵɵtext(18, \"Type\");\n    i0.ɵɵelement(19, \"p-sortIcon\", 16);\n    i0.ɵɵtext(20, \"\\n                    \");\n    i0.ɵɵelement(21, \"p-columnFilter\", 17);\n    i0.ɵɵtext(22, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n                \");\n    i0.ɵɵelementStart(24, \"th\", 18);\n    i0.ɵɵtext(25, \"Name\");\n    i0.ɵɵelement(26, \"p-sortIcon\", 19);\n    i0.ɵɵtext(27, \"\\n                    \");\n    i0.ɵɵelement(28, \"p-columnFilter\", 20);\n    i0.ɵɵtext(29, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n                \");\n    i0.ɵɵelementStart(31, \"th\", 21);\n    i0.ɵɵtext(32, \"Start Date\");\n    i0.ɵɵelement(33, \"p-sortIcon\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(34, \"\\n                \");\n    i0.ɵɵelementStart(35, \"th\", 23);\n    i0.ɵɵtext(36, \"End Date\");\n    i0.ɵɵelement(37, \"p-sortIcon\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(38, \"\\n                \");\n    i0.ɵɵelementStart(39, \"th\", 25);\n    i0.ɵɵtext(40, \"Payment Description\");\n    i0.ɵɵelement(41, \"p-sortIcon\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n                \");\n    i0.ɵɵelementStart(43, \"th\", 27);\n    i0.ɵɵtext(44, \"Status\");\n    i0.ɵɵelement(45, \"p-sortIcon\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(46, \"\\n                \");\n    i0.ɵɵelementStart(47, \"th\", 29);\n    i0.ɵɵtext(48, \"Remarks\");\n    i0.ɵɵelement(49, \"p-sortIcon\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(50, \"\\n                \");\n    i0.ɵɵelementStart(51, \"th\", 31);\n    i0.ɵɵtext(52, \"User Update\");\n    i0.ɵɵelement(53, \"p-sortIcon\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(54, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(55, \"\\n        \");\n  }\n}\nfunction PayrollNotificationHistoryComponent_ng_template_7_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const payRollNotif_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                \", payRollNotif_r8.removedByInit, \"\\n                \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", payRollNotif_r8.removeWAction == 1 ? \"Remove-No-Action\" : \"Remove-Action\", \"\\n                \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.dateUtilsService.convertUnixToDateString(payRollNotif_r8.removedDate, ctx_r11.dateFormat), \"\\n\\n            \");\n  }\n}\nfunction PayrollNotificationHistoryComponent_ng_template_7_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const payRollNotif_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                \", payRollNotif_r8.claimantName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", payRollNotif_r8.claimantNRIC, \"\\n            \");\n  }\n}\nfunction PayrollNotificationHistoryComponent_ng_template_7_td_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const payRollNotif_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                \", payRollNotif_r8.userUpdateByInit, \"\\n                \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r13.dateUtilsService.convertUnixToDateString(payRollNotif_r8.userUpdateDate, ctx_r13.dateFormat), \"\\n                \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", payRollNotif_r8.userUpdateDesc, \"\\n            \");\n  }\n}\nfunction PayrollNotificationHistoryComponent_ng_template_7_ng_template_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"td\", 35);\n    i0.ɵɵtext(2, \"\\n                    -\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n            \");\n  }\n}\nfunction PayrollNotificationHistoryComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n\\n        \");\n    i0.ɵɵelementStart(1, \"tr\", 33);\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n            \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n            \");\n    i0.ɵɵtemplate(10, PayrollNotificationHistoryComponent_ng_template_7_td_10_Template, 6, 3, \"td\", 34);\n    i0.ɵɵtext(11, \"\\n\\n            \");\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n            \");\n    i0.ɵɵtemplate(15, PayrollNotificationHistoryComponent_ng_template_7_td_15_Template, 4, 2, \"td\", 34);\n    i0.ɵɵtext(16, \"\\n            \");\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵpipe(19, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n            \");\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵpipe(23, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \"\\n            \");\n    i0.ɵɵelementStart(25, \"td\");\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \"\\n            \");\n    i0.ɵɵelementStart(28, \"td\", 35);\n    i0.ɵɵtext(29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n            \");\n    i0.ɵɵelementStart(31, \"td\");\n    i0.ɵɵtext(32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(33, \"\\n            \");\n    i0.ɵɵtemplate(34, PayrollNotificationHistoryComponent_ng_template_7_td_34_Template, 6, 3, \"td\", 34);\n    i0.ɵɵtext(35, \"\\n            \");\n    i0.ɵɵtemplate(36, PayrollNotificationHistoryComponent_ng_template_7_ng_template_36_Template, 4, 0, \"ng-template\", null, 36, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(38, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(39, \"\\n    \");\n  }\n  if (rf & 2) {\n    const payRollNotif_r8 = ctx.$implicit;\n    const rowIndex_r9 = ctx.rowIndex;\n    const _r14 = i0.ɵɵreference(37);\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pSelectableRow\", payRollNotif_r8);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(rowIndex_r9 + 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(8, 15, ctx_r3.dateUtilsService.convertUnixToDateString(payRollNotif_r8.rejectedDate, ctx_r3.dateFormat)), \"\\n            \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", payRollNotif_r8.removedByInit !== undefined)(\"ngIfElse\", _r14);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(payRollNotif_r8.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", payRollNotif_r8.claimantNRIC !== undefined)(\"ngIfElse\", _r14);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(19, 17, ctx_r3.dateUtilsService.convertUnixToDateString(payRollNotif_r8.paymentStartDate, ctx_r3.dateFormat)));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(23, 19, ctx_r3.dateUtilsService.convertUnixToDateString(payRollNotif_r8.paymentEndDate, ctx_r3.dateFormat)));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(payRollNotif_r8.paymentDesc);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(payRollNotif_r8.attendanceStatus);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(payRollNotif_r8.remarks);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", payRollNotif_r8.userUpdateByInit !== undefined)(\"ngIfElse\", _r14);\n  }\n}\nfunction PayrollNotificationHistoryComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"td\", 37);\n    i0.ɵɵtext(4, \"No records found.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n    \");\n  }\n}\nconst _c2 = function () {\n  return [10, 15, 20];\n};\nclass PayrollNotificationHistoryComponent {\n  constructor(workloadService, primengConfig, ns2Http, toastService, formBuilder, dateUtilsService, nspConfirmService, exportUtilsService) {\n    this.workloadService = workloadService;\n    this.primengConfig = primengConfig;\n    this.ns2Http = ns2Http;\n    this.toastService = toastService;\n    this.formBuilder = formBuilder;\n    this.dateUtilsService = dateUtilsService;\n    this.nspConfirmService = nspConfirmService;\n    this.exportUtilsService = exportUtilsService;\n    this.payrollNotificationHistList = [];\n    this.selectedRowsId = [];\n    this.selectAll = false;\n    this.totalRecords = 0;\n    this.cols = [];\n    this.pageData = {\n      currentPage: 0\n    };\n    this.dateFormat = \"DD-MM-YYYY (HH:mm)\";\n    this.pageSize = 10;\n  }\n  ngOnInit() {\n    this.loading = true;\n  }\n  getPayRollNotificationHistData(event) {\n    this.lastTableLazyLoadEvent = event;\n    this.loading = true;\n    this.pageSize = event.rows;\n    setTimeout(() => {\n      const options = this.ns2Http.convertLazyEvent(event, this.pageData, this.pageSize);\n      this.workloadService.getPayRollNotificationHistData(options).subscribe(resp => {\n        if (resp.body.data) {\n          this.payrollNotificationHistList = resp.body.data.dtoList;\n          this.totalRecords = resp.body.data.total_no_of_elems;\n        }\n        this.loading = false;\n      });\n    }, 0);\n    return this.payrollNotificationHistList;\n  }\n  mapRemoveWAction(code) {\n    switch (code) {\n      case 1:\n        return \"Remove-No-Action\";\n      case 2:\n        return \"Remove-Action\";\n      default:\n        return \"Remove-No-Action\";\n    }\n  }\n  exportCSV(dataTable) {\n    this.workloadService.getPayRollNotificationHistData(null).subscribe(resp => {\n      if (resp.body.data) {\n        const columns = [{\n          field: 'rejectedDate',\n          header: 'Rej Date',\n          index: 1\n        }, {\n          field: 'type',\n          header: 'Type',\n          index: 2\n        }, {\n          field: 'claimantName',\n          header: 'Name',\n          index: 3\n        }, {\n          field: 'claimantNRIC',\n          header: 'NRIC',\n          index: 4\n        }, {\n          field: 'paymentStartDate',\n          header: 'Start Date',\n          index: 5\n        }, {\n          field: 'paymentEndDate',\n          header: 'End Date',\n          index: 6\n        }, {\n          field: 'paymentDesc',\n          header: 'Payment Description',\n          index: 7\n        }, {\n          field: 'attendanceStatus',\n          header: 'Status',\n          index: 8\n        }, {\n          field: 'remarks',\n          header: 'Remarks',\n          index: 9\n        }, {\n          field: 'userUpdateBy',\n          header: 'User Update By',\n          index: 10\n        }, {\n          field: 'userUpdateDate',\n          header: 'User Update Date',\n          index: 11\n        }, {\n          field: 'userUpdateDesc',\n          header: 'User Update Desc',\n          index: 12\n        }, {\n          field: 'removedBy',\n          header: 'Action By',\n          index: 13\n        }, {\n          field: 'removedDate',\n          header: 'Action By Date',\n          index: 14\n        }, {\n          field: 'removeWAction',\n          header: 'Action',\n          index: 15\n        }];\n        const dtoList = [];\n        resp.body.data.dtoList.forEach(data => {\n          const dto = {\n            rejectedDate: this.dateUtilsService.convertUnixToDateString(data.rejectedDate, this.dateFormat),\n            type: data.type,\n            claimantName: data.claimantName,\n            claimantNRIC: data.claimantNRIC,\n            paymentStartDate: this.dateUtilsService.convertUnixToDateString(data.paymentStartDate, this.dateFormat),\n            paymentEndDate: this.dateUtilsService.convertUnixToDateString(data.paymentEndDate, this.dateFormat),\n            attendanceStatus: data.attendanceStatus,\n            remarks: data.remarks,\n            userUpdateBy: data.userUpdateByInit,\n            userUpdateDate: this.dateUtilsService.convertUnixToDateString(data.userUpdateDate, this.dateFormat),\n            userUpdateDesc: data.userUpdateDesc,\n            removedBy: data.removedByInit,\n            removedDate: this.dateUtilsService.convertUnixToDateString(data.removedDate, this.dateFormat),\n            removeWAction: this.mapRemoveWAction(data.removeWAction)\n          };\n          dtoList.push(dto);\n        });\n        this.exportUtilsService.exportCSV(dataTable, dtoList, resp.body.data.total_no_of_elems, columns, \"payroll_notification_history\".concat((0, common_1.formatDate)(new Date(), \"dd-MM-YYYY\", 'en-US')));\n        this.loading = false;\n      }\n    });\n  }\n  onPage(event) {\n    console.log(\"pageevent\", event);\n    this.pageData.currentPage = event.first / event.rows;\n  }\n  resetDataTable() {\n    this.selectAll = false;\n    this.table.filters = {};\n    this.pageData.currentPage = 0;\n    this.pageSize = 10;\n    this.table.reset();\n  }\n}\nexports.PayrollNotificationHistoryComponent = PayrollNotificationHistoryComponent;\nPayrollNotificationHistoryComponent.ɵfac = function PayrollNotificationHistoryComponent_Factory(t) {\n  return new (t || PayrollNotificationHistoryComponent)(i0.ɵɵdirectiveInject(i1.WorkloadInboxService), i0.ɵɵdirectiveInject(i2.PrimeNGConfig), i0.ɵɵdirectiveInject(i3.Ns2HttpService), i0.ɵɵdirectiveInject(i4.CustomToastService), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.DateUtilsService), i0.ɵɵdirectiveInject(i7.NspConfirmationService), i0.ɵɵdirectiveInject(i8.ExportUtilsService));\n};\nPayrollNotificationHistoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PayrollNotificationHistoryComponent,\n  selectors: [[\"n2-payroll-notification-history\"]],\n  viewQuery: function PayrollNotificationHistoryComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n    }\n  },\n  decls: 12,\n  vars: 10,\n  consts: [[\"styleClass\", \"p-datatable-gridlines p-datatable-striped\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"responsiveLayout\", \"scroll\", 3, \"value\", \"paginator\", \"rows\", \"lazy\", \"showCurrentPageReport\", \"totalRecords\", \"filterDelay\", \"loading\", \"rowsPerPageOptions\", \"onLazyLoad\", \"onPage\"], [\"dataTable\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"grid\"], [1, \"col-12\", \"nsp-align-left\", \"flex\", \"justify-content-start\", \"align-items-center\"], [\"icon\", \"pi pi-file-o\", 3, \"click\"], [\"scope\", \"col\"], [\"scope\", \"col\", \"pSortableColumn\", \"rejectedDate\"], [\"field\", \"rejectedDate\"], [\"type\", \"text\", \"field\", \"rejectedDtate\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"removedDate\"], [\"field\", \"removedDate\"], [\"scope\", \"col\", \"pSortableColumn\", \"type\"], [\"field\", \"type\"], [\"type\", \"text\", \"field\", \"type\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"claimantNRIC\"], [\"field\", \"claimantNRIC\"], [\"type\", \"text\", \"field\", \"claimantNRIC\", \"display\", \"menu\", \"matchMode\", \"contains\"], [\"scope\", \"col\", \"pSortableColumn\", \"paymentStartDate\"], [\"field\", \"paymentStartDate\"], [\"scope\", \"col\", \"pSortableColumn\", \"paymentEndDate\"], [\"field\", \"paymentEndDate\"], [\"scope\", \"col\", \"pSortableColumn\", \"paymentDesc\"], [\"field\", \"paymentDesc\"], [\"scope\", \"col\", \"pSortableColumn\", \"attendanceStatus\"], [\"field\", \"attendanceStatus\"], [\"scope\", \"col\", \"pSortableColumn\", \"remarks\"], [\"field\", \"remarks\"], [\"scope\", \"col\", \"pSortableColumn\", \"userUpdate\"], [\"field\", \"userUpdate\"], [3, \"pSelectableRow\"], [4, \"ngIf\", \"ngIfElse\"], [2, \"text-align\", \"center\"], [\"emptyCombinedField\", \"\"], [\"colspan\", \"8\"]],\n  template: function PayrollNotificationHistoryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-table\", 0, 1);\n      i0.ɵɵlistener(\"onLazyLoad\", function PayrollNotificationHistoryComponent_Template_p_table_onLazyLoad_0_listener($event) {\n        return ctx.getPayRollNotificationHistData($event);\n      })(\"onPage\", function PayrollNotificationHistoryComponent_Template_p_table_onPage_0_listener($event) {\n        return ctx.onPage($event);\n      });\n      i0.ɵɵtext(2, \"\\n        \");\n      i0.ɵɵtemplate(3, PayrollNotificationHistoryComponent_ng_template_3_Template, 9, 3, \"ng-template\", 2);\n      i0.ɵɵtext(4, \"\\n\\n        \");\n      i0.ɵɵtemplate(5, PayrollNotificationHistoryComponent_ng_template_5_Template, 56, 0, \"ng-template\", 3);\n      i0.ɵɵtext(6, \"\\n    \");\n      i0.ɵɵtemplate(7, PayrollNotificationHistoryComponent_ng_template_7_Template, 40, 21, \"ng-template\", 4);\n      i0.ɵɵtext(8, \"\\n    \");\n      i0.ɵɵtemplate(9, PayrollNotificationHistoryComponent_ng_template_9_Template, 7, 0, \"ng-template\", 5);\n      i0.ɵɵtext(10, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(11, \"\\n\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"value\", ctx.payrollNotificationHistList)(\"paginator\", true)(\"rows\", ctx.pageSize)(\"lazy\", true)(\"showCurrentPageReport\", true)(\"totalRecords\", ctx.totalRecords)(\"filterDelay\", 0)(\"loading\", ctx.loading)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(9, _c2));\n    }\n  },\n  dependencies: [i9.NgIf, i2.PrimeTemplate, i10.Button, i11.Table, i11.SortableColumn, i11.SelectableRow, i11.SortIcon, i11.ColumnFilter, i12.DefaultStringPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXlyb2xsLW5vdGlmaWNhdGlvbi1oaXN0b3J5LmNvbXBvbmVudC5zY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvd29ya2xvYWQvcGF5cm9sbC12ZXJpZmllci9wYXlyb2xsLW5vdGlmaWNhdGlvbi1oaXN0b3J5L3BheXJvbGwtbm90aWZpY2F0aW9uLWhpc3RvcnkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGdNQUFnTSIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","PayrollNotificationHistoryComponent","constructor","workloadService","primengConfig","ns2Http","toastService","formBuilder","dateUtilsService","nspConfirmService","exportUtilsService","currentPage","ngOnInit","loading","getPayRollNotificationHistData","event","lastTableLazyLoadEvent","pageSize","rows","setTimeout","options","convertLazyEvent","pageData","subscribe","resp","body","data","payrollNotificationHistList","dtoList","totalRecords","total_no_of_elems","mapRemoveWAction","code","exportCSV","dataTable","columns","field","header","index","forEach","dto","rejectedDate","convertUnixToDateString","dateFormat","type","claimantName","claimantNRIC","paymentStartDate","paymentEndDate","attendanceStatus","remarks","userUpdateBy","userUpdateByInit","userUpdateDate","userUpdateDesc","removedBy","removedByInit","removedDate","removeWAction","push","concat","Date","onPage","console","log","first","resetDataTable","selectAll","table","filters","reset","exports","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\workload\\payroll-verifier\\payroll-notification-history\\payroll-notification-history.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\workload\\payroll-verifier\\payroll-notification-history\\payroll-notification-history.component.html"],"sourcesContent":["import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport {LazyLoadEvent, PrimeNGConfig} from 'primeng/api';\r\nimport { Table } from 'primeng/table';\r\nimport {WorkloadInboxService} from '../../service/workload-inbox.service';\r\nimport {CustomToastService} from 'app/layouts/service/customtoast.service';\r\nimport { NspConfirmationService } from 'app/shared/confirm/nsp-confirm.service';\r\nimport { HttpErrorResponse, HttpParams, HttpStatusCode } from '@angular/common/http';\r\nimport { ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport { formatDate } from \"@angular/common\";\r\n\r\n\r\n@Component({\r\n  selector: 'n2-payroll-notification-history',\r\n  templateUrl: './payroll-notification-history.component.html',\r\n  styleUrls: ['./payroll-notification-history.component.scss']\r\n})\r\nexport class PayrollNotificationHistoryComponent implements OnInit {\r\n\r\n  public payrollNotificationHistList : any[] = [];\r\n  selectedRowsId: string[] = [];\r\n\r\n  selectAll = false;\r\n  loading!: boolean;\r\n  totalRecords = 0;\r\n  public cols: any [] = [];\r\n  pageData: {currentPage: number} = {\r\n    currentPage: 0\r\n  }\r\n  dateFormat = \"DD-MM-YYYY (HH:mm)\";\r\n  lastTableLazyLoadEvent: LazyLoadEvent;\r\n  pageSize = 10;\r\n  @ViewChild('dataTable') table: Table;\r\n\r\n  constructor(private workloadService: WorkloadInboxService, \r\n    private primengConfig: PrimeNGConfig,\r\n    private ns2Http: Ns2HttpService,\r\n    private toastService: CustomToastService,\r\n    private formBuilder: FormBuilder,\r\n    public dateUtilsService: DateUtilsService,\r\n    private nspConfirmService: NspConfirmationService,\r\n    private exportUtilsService: ExportUtilsService,\r\n\r\n    ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n  }\r\n\r\n  getPayRollNotificationHistData(event: LazyLoadEvent): any[] {\r\n    this.lastTableLazyLoadEvent = event;\r\n    this.loading = true;\r\n    this.pageSize = event.rows;\r\n    setTimeout(() => {\r\n      const options = this.ns2Http.convertLazyEvent(event, this.pageData, this.pageSize);\r\n      this.workloadService.getPayRollNotificationHistData(options).subscribe((resp: any) => {\r\n        if (resp.body.data) {\r\n          this.payrollNotificationHistList =  resp.body.data.dtoList;\r\n          this.totalRecords = resp.body.data.total_no_of_elems;\r\n        }\r\n        this.loading = false;\r\n\r\n      });\r\n    }, 0);\r\n    return this.payrollNotificationHistList;\r\n\r\n  }\r\n\r\n  mapRemoveWAction(code: number): string{\r\n    switch(code){\r\n      case 1:\r\n        return \"Remove-No-Action\";\r\n      case 2:\r\n        return \"Remove-Action\";\r\n      default:\r\n        return \"Remove-No-Action\";\r\n    }\r\n  }\r\n\r\n  exportCSV(dataTable: Table): void{\r\n    this.workloadService.getPayRollNotificationHistData(null).subscribe((resp: any) => {\r\n      if (resp.body.data) {\r\n        const columns = \r\n          [\r\n            {field: 'rejectedDate', header: 'Rej Date', index: 1},\r\n            {field: 'type', header: 'Type', index: 2},\r\n            {field: 'claimantName', header: 'Name', index: 3},\r\n            {field: 'claimantNRIC', header: 'NRIC', index: 4},\r\n            {field: 'paymentStartDate', header: 'Start Date', index: 5},\r\n            {field: 'paymentEndDate', header: 'End Date', index: 6},\r\n            {field: 'paymentDesc', header: 'Payment Description', index: 7},\r\n            {field: 'attendanceStatus', header: 'Status', index: 8},\r\n            {field: 'remarks', header: 'Remarks', index: 9},\r\n            {field: 'userUpdateBy', header: 'User Update By', index: 10},\r\n            {field: 'userUpdateDate', header: 'User Update Date', index: 11},\r\n            {field: 'userUpdateDesc', header: 'User Update Desc', index: 12},\r\n            {field: 'removedBy', header: 'Action By', index: 13},\r\n            {field: 'removedDate', header: 'Action By Date', index: 14},\r\n            {field: 'removeWAction', header: 'Action', index: 15}\r\n\r\n\r\n          ];\r\n        const dtoList:any[] = [];\r\n        resp.body.data.dtoList.forEach((data:any)=>{\r\n          const dto = {\r\n            rejectedDate: this.dateUtilsService.convertUnixToDateString(data.rejectedDate, this.dateFormat),\r\n            type: data.type,\r\n            claimantName: data.claimantName,\r\n            claimantNRIC: data.claimantNRIC,\r\n            paymentStartDate:  this.dateUtilsService.convertUnixToDateString(data.paymentStartDate, this.dateFormat),\r\n            paymentEndDate:  this.dateUtilsService.convertUnixToDateString(data.paymentEndDate, this.dateFormat),\r\n            attendanceStatus: data.attendanceStatus,\r\n            remarks: data.remarks,\r\n            userUpdateBy: data.userUpdateByInit,\r\n            userUpdateDate: this.dateUtilsService.convertUnixToDateString(data.userUpdateDate, this.dateFormat),\r\n            userUpdateDesc: data.userUpdateDesc,\r\n            removedBy: data.removedByInit,\r\n            removedDate: this.dateUtilsService.convertUnixToDateString(data.removedDate, this.dateFormat),\r\n            removeWAction: this.mapRemoveWAction(data.removeWAction),\r\n          }\r\n          dtoList.push(dto);\r\n          \r\n        })\r\n        this.exportUtilsService.exportCSV(dataTable, dtoList,resp.body.data.total_no_of_elems, columns, \r\n          \"payroll_notification_history\".concat(formatDate(new Date(),\"dd-MM-YYYY\", 'en-US')));\r\n      this.loading = false;\r\n    }});\r\n    \r\n  }\r\n\r\n\r\n  onPage(event: any): void {\r\n    console.log(\"pageevent\", event);\r\n    this.pageData.currentPage = event.first / event.rows;\r\n  }\r\n\r\n  resetDataTable(): void {\r\n    this.selectAll = false;\r\n    this.table.filters = {};\r\n    this.pageData.currentPage = 0;\r\n    this.pageSize = 10;\r\n    this.table.reset();\r\n  }\r\n\r\n}\r\n","<p-table [value]=\"payrollNotificationHistList\"\r\n            [paginator]=\"true\"\r\n            [rows]=\"pageSize\"\r\n            [lazy] = \"true\"\r\n            [showCurrentPageReport]=\"true\"\r\n            (onLazyLoad)=\"getPayRollNotificationHistData($event)\"\r\n            [totalRecords] = \"totalRecords\"\r\n            [filterDelay]=\"0\"\r\n            [loading] = \"loading\"\r\n            styleClass=\"p-datatable-gridlines p-datatable-striped\"\r\n            [rowsPerPageOptions]=\"[10,15,20]\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            responsiveLayout=\"scroll\"\r\n            (onPage) = \"onPage($event)\"\r\n            #dataTable\r\n            >\r\n        <ng-template pTemplate=\"caption\">\r\n                <div class=\"grid\">\r\n                    <div class = \"col-12 nsp-align-left flex justify-content-start align-items-center\">\r\n                        <p-button icon=\"pi pi-file-o\" [style]=\"{'margin-right': '.5em', 'margin-bottom': '.5em'}\"  (click) = \"exportCSV(dataTable)\"></p-button>\r\n                    </div>\r\n                </div>\r\n        </ng-template>\r\n\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th scope=\"col\">SN</th>\r\n                <th scope=\"col\" pSortableColumn = \"rejectedDate\">Rej Date<p-sortIcon field=\"rejectedDate\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"rejectedDtate\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" pSortableColumn =\"removedDate\">Action By<p-sortIcon field=\"removedDate\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"type\">Type<p-sortIcon field=\"type\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"type\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" pSortableColumn =\"claimantNRIC\">Name<p-sortIcon field=\"claimantNRIC\"></p-sortIcon>\r\n                    <p-columnFilter type=\"text\" field=\"claimantNRIC\" display=\"menu\" matchMode=\"contains\"></p-columnFilter>\r\n                </th>\r\n                <th scope=\"col\" pSortableColumn =\"paymentStartDate\">Start Date<p-sortIcon field=\"paymentStartDate\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"paymentEndDate\">End Date<p-sortIcon field=\"paymentEndDate\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"paymentDesc\">Payment Description<p-sortIcon field=\"paymentDesc\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"attendanceStatus\">Status<p-sortIcon field=\"attendanceStatus\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"remarks\">Remarks<p-sortIcon field=\"remarks\"></p-sortIcon></th>\r\n                <th scope=\"col\" pSortableColumn =\"userUpdate\">User Update<p-sortIcon field=\"userUpdate\"></p-sortIcon></th>\r\n            </tr>\r\n        </ng-template>\r\n    <ng-template pTemplate=\"body\" let-payRollNotif let-rowIndex = \"rowIndex\" let-columns=\"columns\">\r\n\r\n        <tr [pSelectableRow]=\"payRollNotif\">\r\n            <td>{{ rowIndex + 1}}</td>\r\n            <td>{{ dateUtilsService.convertUnixToDateString(payRollNotif.rejectedDate , dateFormat) | defaultString}}\r\n            </td>\r\n            <td *ngIf=\"payRollNotif.removedByInit!==undefined; else emptyCombinedField\">\r\n                {{payRollNotif.removedByInit }}\r\n                <br/> {{ payRollNotif.removeWAction==1? 'Remove-No-Action' : 'Remove-Action' }}\r\n                <br/> {{ dateUtilsService.convertUnixToDateString(payRollNotif.removedDate, dateFormat) }}\r\n\r\n            </td>\r\n\r\n            <td>{{payRollNotif.type }}</td>\r\n            <td *ngIf=\"payRollNotif.claimantNRIC!==undefined; else emptyCombinedField\">\r\n                {{payRollNotif.claimantName }} <br/> {{ payRollNotif.claimantNRIC}}\r\n            </td>\r\n            <td>{{ dateUtilsService.convertUnixToDateString(payRollNotif.paymentStartDate, dateFormat) | defaultString}}</td>\r\n            <td>{{ dateUtilsService.convertUnixToDateString(payRollNotif.paymentEndDate, dateFormat) | defaultString}}</td>\r\n            <td>{{payRollNotif.paymentDesc }}</td>\r\n            <td style=\"text-align: center;\">{{payRollNotif.attendanceStatus }}</td>\r\n            <td>{{payRollNotif.remarks }}</td>\r\n            <td *ngIf=\"payRollNotif.userUpdateByInit!==undefined; else emptyCombinedField\">\r\n                {{payRollNotif.userUpdateByInit }}\r\n                <br/> {{ dateUtilsService.convertUnixToDateString(payRollNotif.userUpdateDate, dateFormat) }}\r\n                <br/> {{ payRollNotif.userUpdateDesc }}\r\n            </td>\r\n            <ng-template #emptyCombinedField>\r\n                <td style=\"text-align: center;\">\r\n                    -\r\n                </td>\r\n            </ng-template>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n            <td colspan=\"8\">No records found.</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}