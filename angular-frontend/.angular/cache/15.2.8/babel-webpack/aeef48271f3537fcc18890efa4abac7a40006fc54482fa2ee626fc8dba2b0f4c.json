{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HealthComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst health_modal_component_1 = require(\"./modal/health-modal.component\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@ng-bootstrap/ng-bootstrap\"));\nconst i2 = tslib_1.__importStar(require(\"./health.service\"));\nconst i3 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i4 = tslib_1.__importStar(require(\"@fortawesome/angular-fontawesome\"));\nconst i5 = tslib_1.__importStar(require(\"../../shared/language/translate.directive\"));\nconst i6 = tslib_1.__importStar(require(\"@ngx-translate/core\"));\nfunction HealthComponent_tbody_35_tr_2_a_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 14);\n    i0.ɵɵlistener(\"click\", function HealthComponent_tbody_35_tr_2_a_14_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const componentHealth_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.showHealth({\n        key: componentHealth_r2.key,\n        value: componentHealth_r2.value\n      }));\n    });\n    i0.ɵɵtext(1, \"\\n              \");\n    i0.ɵɵelement(2, \"fa-icon\", 15);\n    i0.ɵɵtext(3, \"\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HealthComponent_tbody_35_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n          \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n          \");\n    i0.ɵɵelementStart(6, \"td\", 11);\n    i0.ɵɵtext(7, \"\\n            \");\n    i0.ɵɵelementStart(8, \"span\", 12);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n          \");\n    i0.ɵɵelementStart(12, \"td\", 11);\n    i0.ɵɵtext(13, \"\\n            \");\n    i0.ɵɵtemplate(14, HealthComponent_tbody_35_tr_2_a_14_Template, 4, 0, \"a\", 13);\n    i0.ɵɵtext(15, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const componentHealth_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n            \", i0.ɵɵpipeBind1(4, 5, \"health.indicator.\" + componentHealth_r2.key), \"\\n          \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate(\"icTranslate\", \"health.status.\" + componentHealth_r2.value.status);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.getBadgeClass(componentHealth_r2.value.status));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n              \", componentHealth_r2.value.status, \"\\n            \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", componentHealth_r2.value.details);\n  }\n}\nfunction HealthComponent_tbody_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵtemplate(2, HealthComponent_tbody_35_tr_2_Template, 17, 7, \"tr\", 10);\n    i0.ɵɵpipe(3, \"keyvalue\");\n    i0.ɵɵtext(4, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 1, ctx_r0.health.components));\n  }\n}\nclass HealthComponent {\n  constructor(modalService, healthService) {\n    this.modalService = modalService;\n    this.healthService = healthService;\n  }\n  ngOnInit() {\n    this.refresh();\n  }\n  getBadgeClass(statusState) {\n    if (statusState === 'UP') {\n      return 'badge-success';\n    } else {\n      return 'badge-danger';\n    }\n  }\n  refresh() {\n    this.healthService.checkHealth().subscribe(health => this.health = health, error => {\n      if (error.status === 503) {\n        this.health = error.error;\n      }\n    });\n  }\n  showHealth(health) {\n    const modalRef = this.modalService.open(health_modal_component_1.HealthModalComponent);\n    modalRef.componentInstance.health = health;\n  }\n}\nexports.HealthComponent = HealthComponent;\nHealthComponent.ɵfac = function HealthComponent_Factory(t) {\n  return new (t || HealthComponent)(i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i2.HealthService));\n};\nHealthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HealthComponent,\n  selectors: [[\"ic-health\"]],\n  decls: 40,\n  vars: 1,\n  consts: [[\"id\", \"health-page-heading\", \"icTranslate\", \"health.title\", \"data-cy\", \"healthPageHeading\"], [1, \"btn\", \"btn-primary\", \"float-end\", 3, \"click\"], [\"icon\", \"sync\"], [\"icTranslate\", \"health.refresh.button\"], [1, \"table-responsive\"], [\"id\", \"healthCheck\", \"aria-describedby\", \"health-page-heading\", 1, \"table\", \"table-striped\"], [\"scope\", \"col\", \"icTranslate\", \"health.table.service\"], [\"scope\", \"col\", \"icTranslate\", \"health.table.status\", 1, \"text-center\"], [\"scope\", \"col\", \"icTranslate\", \"health.details.details\", 1, \"text-center\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"text-center\"], [1, \"badge\", 3, \"ngClass\", \"icTranslate\"], [\"class\", \"hand\", 3, \"click\", 4, \"ngIf\"], [1, \"hand\", 3, \"click\"], [\"icon\", \"eye\"]],\n  template: function HealthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵelementStart(4, \"span\", 0);\n      i0.ɵɵtext(5, \"Health Checks\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(6, \"\\n\\n    \");\n      i0.ɵɵelementStart(7, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function HealthComponent_Template_button_click_7_listener() {\n        return ctx.refresh();\n      });\n      i0.ɵɵtext(8, \"\\n      \");\n      i0.ɵɵelement(9, \"fa-icon\", 2);\n      i0.ɵɵtext(10, \" \");\n      i0.ɵɵelementStart(11, \"span\", 3);\n      i0.ɵɵtext(12, \"Refresh\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(14, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \"\\n\\n  \");\n      i0.ɵɵelementStart(16, \"div\", 4);\n      i0.ɵɵtext(17, \"\\n    \");\n      i0.ɵɵelementStart(18, \"table\", 5);\n      i0.ɵɵtext(19, \"\\n      \");\n      i0.ɵɵelementStart(20, \"thead\");\n      i0.ɵɵtext(21, \"\\n        \");\n      i0.ɵɵelementStart(22, \"tr\");\n      i0.ɵɵtext(23, \"\\n          \");\n      i0.ɵɵelementStart(24, \"th\", 6);\n      i0.ɵɵtext(25, \"Service Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(26, \"\\n          \");\n      i0.ɵɵelementStart(27, \"th\", 7);\n      i0.ɵɵtext(28, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(29, \"\\n          \");\n      i0.ɵɵelementStart(30, \"th\", 8);\n      i0.ɵɵtext(31, \"Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(32, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(33, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \"\\n      \");\n      i0.ɵɵtemplate(35, HealthComponent_tbody_35_Template, 5, 3, \"tbody\", 9);\n      i0.ɵɵtext(36, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(37, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(38, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(39, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(35);\n      i0.ɵɵproperty(\"ngIf\", ctx.health);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.FaIconComponent, i5.TranslateDirective, i3.KeyValuePipe, i6.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;AAMA;;;;;;;;;;;IC2BYA,6BAIC;IAFCA;MAAAA;MAAA;MAAA;MAAA,OAASA;QAAAC;QAAAC;MAAA,EAAuE;IAAA,EAAC;IAGjFF;IAAAA,8BAA8B;IAChCA;IAAAA,iBAAI;;;;;IApBRA,0BAAiE;IAC/DA;IAAAA,0BAAI;IACFA,YACF;;IAAAA,iBAAK;IACLA;IAAAA,8BAAwB;IACtBA;IAAAA,gCAIC;IACCA,YACF;IAAAA,iBAAO;IACTA;IAAAA,iBAAK;IACLA;IAAAA,+BAAwB;IACtBA;IAAAA,6EAMI;IACNA;IAAAA,iBAAK;IACPA;IAAAA,iBAAK;;;;;IApBDA,eACF;IADEA,2HACF;IAKIA,eAAoE;IAApEA,2FAAoE;IADpEA,+EAAwD;IAGxDA,eACF;IADEA,4FACF;IAMGA,eAAoC;IAApCA,uDAAoC;;;;;IAlB7CA,6BAAsB;IACpBA;IAAAA,yEAsBK;;IACPA;IAAAA,iBAAQ;;;;IAvB0BA,eAA+B;IAA/BA,wEAA+B;;;ADXvE,MAIaG,eAAe;EAG1BC,YAAoBC,YAAsB,EAAUC,aAA4B;IAA5D,iBAAY,GAAZD,YAAY;IAAoB,kBAAa,GAAbC,aAAa;EAAkB;EAEnFC,QAAQ;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAC,aAAa,CAACC,WAAyB;IACrC,IAAIA,WAAW,KAAK,IAAI,EAAE;MACxB,OAAO,eAAe;KACvB,MAAM;MACL,OAAO,cAAc;;EAEzB;EAEAF,OAAO;IACL,IAAI,CAACF,aAAa,CAACK,WAAW,EAAE,CAACC,SAAS,CACxCC,MAAM,IAAK,IAAI,CAACA,MAAM,GAAGA,MAAO,EAC/BC,KAAwB,IAAI;MAC3B,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;QACxB,IAAI,CAACF,MAAM,GAAGC,KAAK,CAACA,KAAK;;IAE7B,CAAC,CACF;EACH;EAEAE,UAAU,CAACH,MAA6C;IACtD,MAAMI,QAAQ,GAAG,IAAI,CAACZ,YAAY,CAACa,IAAI,CAACC,6CAAoB,CAAC;IAC7DF,QAAQ,CAACG,iBAAiB,CAACP,MAAM,GAAGA,MAAM;EAC5C;;AAnCFQ;;mBAIalB,eAAe;AAAA;;QAAfA,eAAe;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ5B1B,2BAAK;MACHA;MAAAA,0BAAI;MACFA;MAAAA,+BAAsF;MAAAA,6BAAa;MAAAA,iBAAO;MAE1GA;MAAAA,iCAA8D;MAApBA;QAAA,OAAS2B,aAAS;MAAA,EAAC;MAC3D3B;MAAAA,6BAA+B;MAACA;MAAAA,gCAA0C;MAAAA,wBAAO;MAAAA,iBAAO;MAC1FA;MAAAA,iBAAS;MACXA;MAAAA,iBAAK;MAELA;MAAAA,+BAA8B;MAC5BA;MAAAA,iCAA2F;MACzFA;MAAAA,8BAAO;MACLA;MAAAA,2BAAI;MACFA;MAAAA,8BAAmD;MAAAA,6BAAY;MAAAA,iBAAK;MACpEA;MAAAA,8BAAsE;MAAAA,uBAAM;MAAAA,iBAAK;MACjFA;MAAAA,8BAAyE;MAAAA,wBAAO;MAAAA,iBAAK;MACvFA;MAAAA,iBAAK;MACPA;MAAAA,iBAAQ;MACRA;MAAAA,sEAwBQ;MACVA;MAAAA,iBAAQ;MACVA;MAAAA,iBAAM;MACRA;MAAAA,iBAAM;MACNA;;;MA5BcA,gBAAY;MAAZA,iCAAY","names":["i0","key","value","HealthComponent","constructor","modalService","healthService","ngOnInit","refresh","getBadgeClass","statusState","checkHealth","subscribe","health","error","status","showHealth","modalRef","open","health_modal_component_1","componentInstance","exports","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\health\\health.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\health\\health.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { HealthService } from './health.service';\r\nimport { Health, HealthDetails, HealthStatus } from './health.model';\r\nimport { HealthModalComponent } from './modal/health-modal.component';\r\n\r\n@Component({\r\n  selector: 'ic-health',\r\n  templateUrl: './health.component.html',\r\n})\r\nexport class HealthComponent implements OnInit {\r\n  health?: Health;\r\n\r\n  constructor(private modalService: NgbModal, private healthService: HealthService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.refresh();\r\n  }\r\n\r\n  getBadgeClass(statusState: HealthStatus): string {\r\n    if (statusState === 'UP') {\r\n      return 'badge-success';\r\n    } else {\r\n      return 'badge-danger';\r\n    }\r\n  }\r\n\r\n  refresh(): void {\r\n    this.healthService.checkHealth().subscribe(\r\n      health => (this.health = health),\r\n      (error: HttpErrorResponse) => {\r\n        if (error.status === 503) {\r\n          this.health = error.error;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  showHealth(health: { key: string; value: HealthDetails }): void {\r\n    const modalRef = this.modalService.open(HealthModalComponent);\r\n    modalRef.componentInstance.health = health;\r\n  }\r\n}\r\n","<div>\r\n  <h2>\r\n    <span id=\"health-page-heading\" icTranslate=\"health.title\" data-cy=\"healthPageHeading\">Health Checks</span>\r\n\r\n    <button class=\"btn btn-primary float-end\" (click)=\"refresh()\">\r\n      <fa-icon icon=\"sync\"></fa-icon> <span icTranslate=\"health.refresh.button\">Refresh</span>\r\n    </button>\r\n  </h2>\r\n\r\n  <div class=\"table-responsive\">\r\n    <table id=\"healthCheck\" class=\"table table-striped\" aria-describedby=\"health-page-heading\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\" icTranslate=\"health.table.service\">Service Name</th>\r\n          <th scope=\"col\" class=\"text-center\" icTranslate=\"health.table.status\">Status</th>\r\n          <th scope=\"col\" class=\"text-center\" icTranslate=\"health.details.details\">Details</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody *ngIf=\"health\">\r\n        <tr *ngFor=\"let componentHealth of health.components | keyvalue\">\r\n          <td>\r\n            {{ 'health.indicator.' + componentHealth.key | translate }}\r\n          </td>\r\n          <td class=\"text-center\">\r\n            <span\r\n              class=\"badge\"\r\n              [ngClass]=\"getBadgeClass(componentHealth.value!.status)\"\r\n              icTranslate=\"{{ 'health.status.' + componentHealth.value!.status }}\"\r\n            >\r\n              {{ componentHealth.value!.status }}\r\n            </span>\r\n          </td>\r\n          <td class=\"text-center\">\r\n            <a\r\n              class=\"hand\"\r\n              (click)=\"showHealth({ key: componentHealth.key, value: componentHealth.value! })\"\r\n              *ngIf=\"componentHealth.value!.details\"\r\n            >\r\n              <fa-icon icon=\"eye\"></fa-icon>\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}