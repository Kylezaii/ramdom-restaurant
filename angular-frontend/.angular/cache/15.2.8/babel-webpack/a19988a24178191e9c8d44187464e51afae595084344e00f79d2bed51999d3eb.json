{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SerbApprovalSectionComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst http_1 = require(\"@angular/common/http\");\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst nspay2_constants_1 = require(\"app/nspay2.constants\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"../../service/se-claim.service\"));\nconst i2 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i3 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i4 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i5 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i6 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i7 = tslib_1.__importStar(require(\"primeng/inputtextarea\"));\nconst i8 = tslib_1.__importStar(require(\"primeng/accordion\"));\nfunction SerbApprovalSectionComponent_ng_template_2_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function SerbApprovalSectionComponent_ng_template_2_button_9_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      $event.stopPropagation();\n      return i0.ɵɵresetView(ctx_r2.copyFromCaseId());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                Copy from\\u00A0\", ctx_r1.lastPendCertClaim, \"\\n            \");\n  }\n}\nfunction SerbApprovalSectionComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n      \");\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵtext(2, \"\\n        \");\n    i0.ɵɵelementStart(3, \"label\", 11);\n    i0.ɵɵtext(4, \"For SERB Approval\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n        \");\n    i0.ɵɵelementStart(7, \"div\", 12);\n    i0.ɵɵtext(8, \"\\n            \");\n    i0.ɵɵtemplate(9, SerbApprovalSectionComponent_ng_template_2_button_9_Template, 2, 1, \"button\", 13);\n    i0.ɵɵtext(10, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n    \");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isEmpty(ctx_r0.lastPendCertClaim) && !ctx_r0.readOnly);\n  }\n}\nclass SerbApprovalSectionComponent {\n  constructor(seClaimService, formBuilder, accountService) {\n    this.seClaimService = seClaimService;\n    this.formBuilder = formBuilder;\n    this.accountService = accountService;\n    this.lastPendCertClaim = \"\";\n    this.selectedChange = new core_1.EventEmitter();\n    this.serbApprovalForm = this.formBuilder.group({\n      recomendationBasis: new forms_1.FormControl('', null),\n      additionalDetails: new forms_1.FormControl('', null),\n      reason: new forms_1.FormControl('', null)\n    });\n  }\n  ngOnInit() {\n    console.log(\"init serb approval\");\n    console.log(\"readonly\", typeof this.readOnly);\n  }\n  ngOnChanges(changes) {\n    if (changes.seHardCopyDetails?.currentValue) {\n      this.currHardCopyDetails = changes.seHardCopyDetails.currentValue;\n      this.retrieveLastPendCertClaim();\n      this.retrieveSerbApprovalSection();\n    }\n    this.serbApprovalForm.valueChanges.subscribe(() => {\n      console.log(\"valuechange serb approval\");\n      this.saveSEClaimRequest.forSerbApprovalSectionInd = true;\n    });\n  }\n  retrieveSerbApprovalSection() {\n    let params = new http_1.HttpParams();\n    params = params.append('claimId', this.currHardCopyDetails.claimId);\n    this.seClaimService.retrieveSerbApprovalSection({\n      params\n    }).subscribe(resp => {\n      if (resp.body.data) {\n        this.serbApprovalForm.get('recomendationBasis').setValue(resp.body.data.recomendationBasis);\n        this.serbApprovalForm.get('additionalDetails').setValue(resp.body.data.additionalDetails);\n      }\n    });\n  }\n  retrieveLastPendCertClaim() {\n    let params = new http_1.HttpParams();\n    params = params.append('nric', this.currHardCopyDetails.headerDto.nsManNric);\n    params = params.append('claimId', this.currHardCopyDetails.claimId);\n    this.seClaimService.retrieveLastPendCertClaim({\n      params\n    }).subscribe(resp => {\n      if (resp.body.data) {\n        this.lastPendCertClaim = resp.body.data;\n      }\n    });\n  }\n  isEmpty(input) {\n    return input === undefined || input === null || input === '';\n  }\n  copyFromCaseId() {\n    let params = new http_1.HttpParams();\n    params = params.append('nric', this.currHardCopyDetails.headerDto.nsManNric);\n    this.seClaimService.copySerbApprovalFromCaseId({\n      params\n    }).subscribe(resp => {\n      if (resp.body.data) {\n        this.serbApprovalForm.get('recomendationBasis').setValue(resp.body.data.recomendationBasis);\n        this.serbApprovalForm.get('additionalDetails').setValue(resp.body.data.additionalDetails);\n      }\n    });\n  }\n  populateRequestWithSerbApprovalSectionChanges() {\n    this.saveSEClaimRequest.recomendationBasis = this.serbApprovalForm.get('recomendationBasis').value;\n    this.saveSEClaimRequest.additionalDetails = this.serbApprovalForm.get('additionalDetails').value;\n  }\n  accordionClick() {\n    this.selectedChange.emit(this.selected);\n  }\n  //allows input on need basis\n  hasValidAuthorityAndStation() {\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_VERIFIER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_VERIFICATION) {\n      return true;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_CERTIFICATION) {\n      return false;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_APPROVAL) {\n      return false;\n    }\n    return false;\n  }\n  disableBasisAndAddClaimDetails() {\n    return this.readOnly || this.station === 'A' || this.station === 'S';\n  }\n}\nexports.SerbApprovalSectionComponent = SerbApprovalSectionComponent;\nSerbApprovalSectionComponent.ɵfac = function SerbApprovalSectionComponent_Factory(t) {\n  return new (t || SerbApprovalSectionComponent)(i0.ɵɵdirectiveInject(i1.SEClaimService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AccountService));\n};\nSerbApprovalSectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SerbApprovalSectionComponent,\n  selectors: [[\"n2-serb-approval-section\"]],\n  inputs: {\n    saveSEClaimRequest: \"saveSEClaimRequest\",\n    seHardCopyDetails: \"seHardCopyDetails\",\n    selected: \"selected\",\n    readOnly: \"readOnly\",\n    station: \"station\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 36,\n  vars: 6,\n  consts: [[\"multiple\", \"true\", 3, \"selected\", \"selectedChange\", \"click\"], [\"pTemplate\", \"header\"], [3, \"formGroup\"], [1, \"grid\"], [1, \"col-6\"], [1, \"row\"], [\"for\", \"recomendationBasis\", 1, \"col-auto\", \"col-form-label\"], [\"rows\", \"5\", \"inputId\", \"recomendationBasis\", \"formControlName\", \"recomendationBasis\", \"maxlength\", \"500\", \"cols\", \"30\", \"pInputTextarea\", \"\", 1, \"inputfield\", \"w-full\", 3, \"readonly\", \"disabled\"], [\"for\", \"additionalDetails\", 1, \"col-auto\", \"col-form-label\"], [\"rows\", \"5\", \"inputId\", \"additionalDetails\", \"formControlName\", \"additionalDetails\", \"maxlength\", \"500\", \"cols\", \"30\", \"pInputTextarea\", \"\", 1, \"inputfield\", \"w-full\", 3, \"readonly\", \"disabled\"], [1, \"grid\", \"col-6\", \"align-items-center\", \"my-0\"], [1, \"col-form-label\", \"pl-1\"], [1, \"grid\", \"col-6\", \"align-items-center\", \"justify-content-end\", \"m-0\", \"p-0\"], [\"id\", \"copyFromCaseId\", \"pButton\", \"\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"copyFromCaseId\", \"pButton\", \"\", 3, \"click\"]],\n  template: function SerbApprovalSectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-accordionTab\", 0);\n      i0.ɵɵlistener(\"selectedChange\", function SerbApprovalSectionComponent_Template_p_accordionTab_selectedChange_0_listener($event) {\n        return ctx.selected = $event;\n      })(\"click\", function SerbApprovalSectionComponent_Template_p_accordionTab_click_0_listener() {\n        return ctx.accordionClick();\n      });\n      i0.ɵɵtext(1, \"\\n    \");\n      i0.ɵɵtemplate(2, SerbApprovalSectionComponent_ng_template_2_Template, 12, 1, \"ng-template\", 1);\n      i0.ɵɵtext(3, \"\\n\\n\\n    \");\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵtext(5, \"\\n        \");\n      i0.ɵɵelementStart(6, \"div\", 3);\n      i0.ɵɵtext(7, \"\\n            \");\n      i0.ɵɵelementStart(8, \"div\", 4);\n      i0.ɵɵtext(9, \"\\n                \");\n      i0.ɵɵelementStart(10, \"div\", 5);\n      i0.ɵɵtext(11, \"\\n                    \");\n      i0.ɵɵelementStart(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Basis of Recommendation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(14, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \"\\n                    \");\n      i0.ɵɵelement(16, \"textarea\", 7);\n      i0.ɵɵtext(17, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \"\\n            \");\n      i0.ɵɵelementStart(19, \"div\", 4);\n      i0.ɵɵtext(20, \"\\n                \");\n      i0.ɵɵelementStart(21, \"div\", 5);\n      i0.ɵɵtext(22, \"\\n                    \");\n      i0.ɵɵelementStart(23, \"label\", 8);\n      i0.ɵɵtext(24, \"Additional Claim Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(26, \"\\n                \");\n      i0.ɵɵelementStart(27, \"div\");\n      i0.ɵɵtext(28, \"\\n                    \");\n      i0.ɵɵelement(29, \"textarea\", 9);\n      i0.ɵɵtext(30, \"\\n                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(31, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(32, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(33, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(35, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"selected\", ctx.selected);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.serbApprovalForm);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"readonly\", ctx.disableBasisAndAddClaimDetails())(\"disabled\", ctx.disableBasisAndAddClaimDetails());\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"readonly\", ctx.disableBasisAndAddClaimDetails())(\"disabled\", ctx.disableBasisAndAddClaimDetails());\n    }\n  },\n  dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName, i5.PrimeTemplate, i6.ButtonDirective, i7.InputTextarea, i8.AccordionTab],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZXJiLWFwcHJvdmFsLXNlY3Rpb24uY29tcG9uZW50LnNjc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvY2xhaW0vc2UtY2xhaW0vc2UtY2xhaW0tdmVyaWZpY2F0aW9uL3NlcmItYXBwcm92YWwtc2VjdGlvbi9zZXJiLWFwcHJvdmFsLXNlY3Rpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLHdMQUF3TCIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","$event","SerbApprovalSectionComponent","constructor","seClaimService","formBuilder","accountService","core_1","group","recomendationBasis","forms_1","additionalDetails","reason","ngOnInit","console","log","readOnly","ngOnChanges","changes","seHardCopyDetails","currentValue","currHardCopyDetails","retrieveLastPendCertClaim","retrieveSerbApprovalSection","serbApprovalForm","valueChanges","subscribe","saveSEClaimRequest","forSerbApprovalSectionInd","params","http_1","append","claimId","resp","body","data","get","setValue","headerDto","nsManNric","lastPendCertClaim","isEmpty","input","undefined","copyFromCaseId","copySerbApprovalFromCaseId","populateRequestWithSerbApprovalSectionChanges","value","accordionClick","selectedChange","emit","selected","hasValidAuthorityAndStation","hasAnyAuthority","nspay2_constants_1","CLAIMS_VERIFIER","station","STATION_VERIFICATION","CLAIMS_APPROVER","STATION_CERTIFICATION","STATION_APPROVAL","disableBasisAndAddClaimDetails","exports","selectors","inputs","outputs","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\serb-approval-section\\serb-approval-section.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\serb-approval-section\\serb-approval-section.component.html"],"sourcesContent":["import { HttpParams } from '@angular/common/http';\r\nimport {Component, EventEmitter, Input, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport {SaveSEClaimRequest} from \"app/claim/se-claim/model/save-se-claim-request.model\";\r\nimport { IcCodeService } from 'app/ng-connect';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { SEClaimService } from '../../service/se-claim.service';\r\nimport { read } from 'fs';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { NSPAY2_ROLES, NSPAY2_STATION } from 'app/nspay2.constants';\r\n\r\n@Component({\r\n  selector: 'n2-serb-approval-section',\r\n  templateUrl: './serb-approval-section.component.html',\r\n  styleUrls: ['./serb-approval-section.component.scss']\r\n})\r\nexport class SerbApprovalSectionComponent implements OnInit {\r\n\r\n  @Input() saveSEClaimRequest: SaveSEClaimRequest;\r\n  @Input() seHardCopyDetails:any;\r\n  currHardCopyDetails: any;\r\n  currSelectedOption: any;\r\n  lastPendCertClaim = \"\";\r\n\r\n  @Input() selected:boolean;\r\n  @Output() selectedChange = new EventEmitter<boolean>();\r\n  //meant for routing from enquiry\r\n  @Input() readOnly: boolean;\r\n  @Input() station: string;\r\n\r\n  serbApprovalForm: FormGroup =this.formBuilder.group({\r\n    recomendationBasis: new FormControl('', null),\r\n    additionalDetails: new FormControl('', null),\r\n    reason: new FormControl('', null)\r\n  });\r\n\r\n\r\n  constructor(\r\n    private seClaimService: SEClaimService,\r\n    private formBuilder: FormBuilder,\r\n    public accountService: AccountService\r\n\r\n    ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"init serb approval\")\r\n    console.log(\"readonly\", typeof this.readOnly)\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void{\r\n    if(changes.seHardCopyDetails?.currentValue){\r\n      this.currHardCopyDetails=changes.seHardCopyDetails.currentValue;\r\n      this.retrieveLastPendCertClaim();\r\n      this.retrieveSerbApprovalSection();\r\n\r\n    }\r\n    this.serbApprovalForm.valueChanges.subscribe(() => {\r\n      console.log(\"valuechange serb approval\");\r\n      this.saveSEClaimRequest.forSerbApprovalSectionInd = true;\r\n    });\r\n  }\r\n  retrieveSerbApprovalSection(): void{\r\n    let params = new HttpParams();\r\n    params = params.append('claimId', this.currHardCopyDetails.claimId);\r\n    this.seClaimService.retrieveSerbApprovalSection({params}).subscribe((resp:any) => {\r\n      if (resp.body.data) {\r\n       this.serbApprovalForm.get('recomendationBasis').setValue(resp.body.data.recomendationBasis);\r\n       this.serbApprovalForm.get('additionalDetails').setValue(resp.body.data.additionalDetails);\r\n      }\r\n    });\r\n  }\r\n\r\n  retrieveLastPendCertClaim(): void{\r\n    let params = new HttpParams();\r\n    params = params.append('nric', this.currHardCopyDetails.headerDto.nsManNric);\r\n    params = params.append('claimId', this.currHardCopyDetails.claimId);\r\n\r\n    this.seClaimService.retrieveLastPendCertClaim({params}).subscribe((resp:any) => {\r\n      if (resp.body.data) {\r\n        this.lastPendCertClaim = resp.body.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  isEmpty(input:any): boolean{\r\n    return input===undefined || input === null || input === '';\r\n  }\r\n\r\n  copyFromCaseId(): void{\r\n    let params = new HttpParams();\r\n    params = params.append('nric', this.currHardCopyDetails.headerDto.nsManNric);\r\n    this.seClaimService.copySerbApprovalFromCaseId({params}).subscribe((resp:any) => {\r\n      if (resp.body.data) {\r\n       this.serbApprovalForm.get('recomendationBasis').setValue(resp.body.data.recomendationBasis);\r\n       this.serbApprovalForm.get('additionalDetails').setValue(resp.body.data.additionalDetails);\r\n      }\r\n    });\r\n  }\r\n\r\n  populateRequestWithSerbApprovalSectionChanges(): void{\r\n    this.saveSEClaimRequest.recomendationBasis = this.serbApprovalForm.get('recomendationBasis').value;\r\n    this.saveSEClaimRequest.additionalDetails = this.serbApprovalForm.get('additionalDetails').value;\r\n\r\n  }\r\n\r\n  accordionClick(): void{\r\n    this.selectedChange.emit(this.selected);\r\n  }\r\n    \r\n  //allows input on need basis\r\n  hasValidAuthorityAndStation(): boolean{\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_VERIFIER) && \r\n      this.station === NSPAY2_STATION.STATION_VERIFICATION){\r\n        return true;\r\n      }\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) && \r\n    this.station === NSPAY2_STATION.STATION_CERTIFICATION) {\r\n      return false;\r\n    }\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) && \r\n    this.station === NSPAY2_STATION.STATION_APPROVAL) {\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  disableBasisAndAddClaimDetails():boolean{\r\n    return this.readOnly || (\r\n      (this.station === 'A' || this.station === 'S' ) \r\n    )\r\n\r\n  }\r\n\r\n}\r\n","<p-accordionTab multiple=\"true\" [(selected)]=\"selected\" (click) = \"accordionClick()\">\r\n    <ng-template pTemplate=\"header\" >\r\n      <div class = \"grid col-6 align-items-center my-0\">\r\n        <label class=\"col-form-label pl-1\">For SERB Approval</label>\r\n      </div>\r\n        <div class = \"grid col-6 align-items-center justify-content-end m-0 p-0\">\r\n            <button id = \"copyFromCaseId\" *ngIf = \"!isEmpty(lastPendCertClaim) && !readOnly\" pButton  (click)=\"$event.stopPropagation(); copyFromCaseId()\">\r\n                Copy from&nbsp;{{ lastPendCertClaim }}\r\n            </button>\r\n        </div>\r\n    </ng-template>\r\n\r\n\r\n    <form [formGroup]=\"serbApprovalForm\">\r\n        <div class=\"grid\">\r\n            <div class=\"col-6\">\r\n                <div class = \"row\">\r\n                    <label for=\"recomendationBasis\" class=\"col-auto col-form-label\">Basis of Recommendation</label>\r\n                </div>\r\n                    <textarea rows=\"5\"\r\n                    class=\"inputfield w-full\"\r\n                    inputId = \"recomendationBasis\"\r\n                    formControlName = \"recomendationBasis\"\r\n                    maxlength=\"500\"\r\n                    [readonly] = \"disableBasisAndAddClaimDetails()\"\r\n                    [disabled] = \"disableBasisAndAddClaimDetails()\"\r\n                    cols=\"30\"\r\n                    pInputTextarea></textarea>\r\n                </div>\r\n            <div class=\"col-6\">\r\n                <div class = \"row\">\r\n                    <label for=\"additionalDetails\" class=\"col-auto col-form-label\">Additional Claim Details</label>\r\n                </div>\r\n                <div>\r\n                    <textarea rows=\"5\"\r\n                    class=\"inputfield w-full\"\r\n                    inputId = \"additionalDetails\"\r\n                    formControlName = \"additionalDetails\"\r\n                    maxlength=\"500\"\r\n                    [readonly] =\"disableBasisAndAddClaimDetails()\"\r\n                    [disabled] = \"disableBasisAndAddClaimDetails()\"\r\n                    cols=\"30\"\r\n                    pInputTextarea></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</p-accordionTab>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}