{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParameterCapPipe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nclass ParameterCapPipe {\n  constructor() {\n    this.WORKING_CAP_UNLIMITED = 2147483647;\n    this.WORKING_CAP_NA = 0;\n  }\n  transform(value) {\n    if (value !== null || value !== undefined) {\n      switch (value) {\n        case this.WORKING_CAP_NA:\n          {\n            return \"NA\";\n          }\n        case this.WORKING_CAP_UNLIMITED:\n          {\n            return \"Unlimited\";\n          }\n        default:\n          {\n            return value.toString();\n          }\n      }\n    }\n    return \"\";\n  }\n}\nexports.ParameterCapPipe = ParameterCapPipe;\nParameterCapPipe.ɵfac = function ParameterCapPipe_Factory(t) {\n  return new (t || ParameterCapPipe)();\n};\nParameterCapPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"parameterCap\",\n  type: ParameterCapPipe,\n  pure: true\n});","map":{"version":3,"mappings":";;;;;;;;AAEA,MACaA,gBAAgB;EAD7BC;IAGa,0BAAqB,GAAG,UAAU;IAClC,mBAAc,GAAG,CAAC;;EAE7BC,SAAS,CAACC,KAAa;IAErB,IAAGA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKC,SAAS,EAAE;MACxC,QAAOD,KAAK;QACV,KAAK,IAAI,CAACE,cAAc;UAAE;YACxB,OAAO,IAAI;;QAEb,KAAK,IAAI,CAACC,qBAAsB;UAAE;YAChC,OAAO,WAAW;;QAEpB;UAAS;YACP,OAAOH,KAAK,CAACI,QAAQ,EAAE;;MACxB;;IAGL,OAAO,EAAE;EACX;;AAtBFC;;mBACaR,gBAAgB;AAAA;;;QAAhBA,gBAAgB;EAAAS;AAAA","names":["ParameterCapPipe","constructor","transform","value","undefined","WORKING_CAP_NA","WORKING_CAP_UNLIMITED","toString","exports","pure"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\shared\\pipe\\cap.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'parameterCap'})\r\nexport class ParameterCapPipe implements PipeTransform {\r\n\r\n    readonly WORKING_CAP_UNLIMITED = 2147483647;\r\n    readonly WORKING_CAP_NA = 0;\r\n\r\n  transform(value: number): string {\r\n\r\n    if(value !== null || value !== undefined) {\r\n      switch(value) {\r\n        case this.WORKING_CAP_NA: {\r\n          return \"NA\";\r\n        }\r\n        case this.WORKING_CAP_UNLIMITED : {\r\n          return \"Unlimited\";\r\n        }\r\n        default: {\r\n          return value.toString();\r\n        }\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}