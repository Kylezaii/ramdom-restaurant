{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HasAnyResourceDirective = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\n/**\r\n * @whatItDoes Conditionally includes an HTML element if current user has any\r\n * of the authorities passed as the `expression`.\r\n *\r\n * @howToUse\r\n * ```\r\n *   <some-element *icHasAnyResource=\"'PAGE_RES'\">...</some-element>\r\n *\r\n * ```\r\n */\nclass HasAnyResourceDirective {\n  constructor(accountService, templateRef, viewContainerRef) {\n    this.accountService = accountService;\n    this.templateRef = templateRef;\n    this.viewContainerRef = viewContainerRef;\n    this.resources = [];\n  }\n  set icHasAnyResource(value) {\n    this.resources = typeof value === 'string' ? [value] : value;\n    this.updateView();\n    // Get notified each time authentication state changes.\n    this.resourceSubscription = this.accountService.getAuthenticationState().subscribe(() => this.updateView());\n  }\n  ngOnDestroy() {\n    if (this.resourceSubscription) {\n      this.resourceSubscription.unsubscribe();\n    }\n  }\n  updateView() {\n    const hasAnyResource = this.accountService.hasAnyResources(this.resources);\n    this.viewContainerRef.clear();\n    if (hasAnyResource) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    }\n  }\n}\nexports.HasAnyResourceDirective = HasAnyResourceDirective;\nHasAnyResourceDirective.ɵfac = function HasAnyResourceDirective_Factory(t) {\n  return new (t || HasAnyResourceDirective)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\nHasAnyResourceDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: HasAnyResourceDirective,\n  selectors: [[\"\", \"icHasAnyResource\", \"\"]],\n  inputs: {\n    icHasAnyResource: \"icHasAnyResource\"\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;AAKA;;;;;;;;;;AAUA,MAGaA,uBAAuB;EAIlCC,YAAoBC,cAA8B,EAAUC,WAA6B,EAAUC,gBAAkC;IAAjH,mBAAc,GAAdF,cAAc;IAA0B,gBAAW,GAAXC,WAAW;IAA4B,qBAAgB,GAAhBC,gBAAgB;IAH3G,cAAS,GAAa,EAAE;EAGwG;EAExI,IACIC,gBAAgB,CAACC,KAAwB;IAC3C,IAAI,CAACC,SAAS,GAAG,OAAOD,KAAK,KAAK,QAAQ,GAAG,CAACA,KAAK,CAAC,GAAGA,KAAK;IAC5D,IAAI,CAACE,UAAU,EAAE;IAEjB;IACA,IAAI,CAACC,oBAAoB,GAAG,IAAI,CAACP,cAAc,CAACQ,sBAAsB,EAAE,CAACC,SAAS,CAAC,MAAM,IAAI,CAACH,UAAU,EAAE,CAAC;EAC7G;EAEAI,WAAW;IACT,IAAI,IAAI,CAACH,oBAAoB,EAAE;MAC7B,IAAI,CAACA,oBAAoB,CAACI,WAAW,EAAE;;EAE3C;EAEQL,UAAU;IAChB,MAAMM,cAAc,GAAG,IAAI,CAACZ,cAAc,CAACa,eAAe,CAAC,IAAI,CAACR,SAAS,CAAC;IAC1E,IAAI,CAACH,gBAAgB,CAACY,KAAK,EAAE;IAC7B,IAAIF,cAAc,EAAE;MAClB,IAAI,CAACV,gBAAgB,CAACa,kBAAkB,CAAC,IAAI,CAACd,WAAW,CAAC;;EAE9D;;AA9BFe;;mBAGalB,uBAAuB;AAAA;;QAAvBA,uBAAuB;EAAAmB;EAAAC;IAAAf;EAAA;AAAA","names":["HasAnyResourceDirective","constructor","accountService","templateRef","viewContainerRef","icHasAnyResource","value","resources","updateView","resourceSubscription","getAuthenticationState","subscribe","ngOnDestroy","unsubscribe","hasAnyResource","hasAnyResources","clear","createEmbeddedView","exports","selectors","inputs"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\shared\\auth\\has-any-resource.directive.ts"],"sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AccountService } from 'app/core/auth/account.service';\r\n\r\n/**\r\n * @whatItDoes Conditionally includes an HTML element if current user has any\r\n * of the authorities passed as the `expression`.\r\n *\r\n * @howToUse\r\n * ```\r\n *   <some-element *icHasAnyResource=\"'PAGE_RES'\">...</some-element>\r\n *\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[icHasAnyResource]',\r\n})\r\nexport class HasAnyResourceDirective implements OnDestroy {\r\n  private resources: string[] = [];\r\n  private resourceSubscription?: Subscription;\r\n\r\n  constructor(private accountService: AccountService, private templateRef: TemplateRef<any>, private viewContainerRef: ViewContainerRef) {}\r\n\r\n  @Input()\r\n  set icHasAnyResource(value: string | string[]) {\r\n    this.resources = typeof value === 'string' ? [value] : value;\r\n    this.updateView();\r\n\r\n    // Get notified each time authentication state changes.\r\n    this.resourceSubscription = this.accountService.getAuthenticationState().subscribe(() => this.updateView());\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.resourceSubscription) {\r\n      this.resourceSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private updateView(): void {\r\n    const hasAnyResource = this.accountService.hasAnyResources(this.resources);\r\n    this.viewContainerRef.clear();\r\n    if (hasAnyResource) {\r\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}