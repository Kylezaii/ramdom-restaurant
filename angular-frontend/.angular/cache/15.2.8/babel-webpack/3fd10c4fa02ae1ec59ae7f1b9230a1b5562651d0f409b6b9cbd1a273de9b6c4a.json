{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ItemCountComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"../language/translate.directive\"));\nconst _c0 = function (a0, a1, a2) {\n  return {\n    first: a0,\n    second: a1,\n    total: a2\n  };\n};\n/**\r\n * A component that will take care of item count statistics of a pagination.\r\n */\nclass ItemCountComponent {\n  /**\r\n   * @param params  Contains parameters for component:\r\n   *                    page          Current page number\r\n   *                    totalItems    Total number of items\r\n   *                    itemsPerPage  Number of items per page\r\n   */\n  set params(params) {\n    if (params.page !== undefined && params.totalItems !== undefined && params.itemsPerPage !== undefined) {\n      this.first = (params.page - 1) * params.itemsPerPage === 0 ? 1 : (params.page - 1) * params.itemsPerPage + 1;\n      this.second = params.page * params.itemsPerPage < params.totalItems ? params.page * params.itemsPerPage : params.totalItems;\n    } else {\n      this.first = undefined;\n      this.second = undefined;\n    }\n    this.total = params.totalItems;\n  }\n}\nexports.ItemCountComponent = ItemCountComponent;\nItemCountComponent.ɵfac = function ItemCountComponent_Factory(t) {\n  return new (t || ItemCountComponent)();\n};\nItemCountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ItemCountComponent,\n  selectors: [[\"ic-item-count\"]],\n  inputs: {\n    params: \"params\"\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[\"icTranslate\", \"global.item-count\", 3, \"translateValues\"]],\n  template: function ItemCountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \" \");\n      i0.ɵɵelement(1, \"div\", 0);\n      i0.ɵɵtext(2, \" \");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction3(1, _c0, ctx.first, ctx.second, ctx.total));\n    }\n  },\n  dependencies: [i1.TranslateDirective],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAEA;;;AAGA,MAIaA,kBAAkB;EAC7B;;;;;;EAMA,IAAaC,MAAM,CAACA,MAAqE;IACvF,IAAIA,MAAM,CAACC,IAAI,KAAKC,SAAS,IAAIF,MAAM,CAACG,UAAU,KAAKD,SAAS,IAAIF,MAAM,CAACI,YAAY,KAAKF,SAAS,EAAE;MACrG,IAAI,CAACG,KAAK,GAAG,CAACL,MAAM,CAACC,IAAI,GAAG,CAAC,IAAID,MAAM,CAACI,YAAY,KAAK,CAAC,GAAG,CAAC,GAAG,CAACJ,MAAM,CAACC,IAAI,GAAG,CAAC,IAAID,MAAM,CAACI,YAAY,GAAG,CAAC;MAC5G,IAAI,CAACE,MAAM,GAAGN,MAAM,CAACC,IAAI,GAAGD,MAAM,CAACI,YAAY,GAAGJ,MAAM,CAACG,UAAU,GAAGH,MAAM,CAACC,IAAI,GAAGD,MAAM,CAACI,YAAY,GAAGJ,MAAM,CAACG,UAAU;KAC5H,MAAM;MACL,IAAI,CAACE,KAAK,GAAGH,SAAS;MACtB,IAAI,CAACI,MAAM,GAAGJ,SAAS;;IAEzB,IAAI,CAACK,KAAK,GAAGP,MAAM,CAACG,UAAU;EAChC;;AApBFK;;mBAIaT,kBAAkB;AAAA;;QAAlBA,kBAAkB;EAAAU;EAAAC;IAAAV;EAAA;EAAAW;EAAAC;EAAAC;EAAAC;IAAA;MAFjBC;MAAAA,yBAA8G;MAACA;;;MAA1EA,eAAkE;MAAlEA,8FAAkE","names":["ItemCountComponent","params","page","undefined","totalItems","itemsPerPage","first","second","total","exports","selectors","inputs","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\shared\\pagination\\item-count.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\r\n\r\n/**\r\n * A component that will take care of item count statistics of a pagination.\r\n */\r\n@Component({\r\n  selector: 'ic-item-count',\r\n  template: ` <div icTranslate=\"global.item-count\" [translateValues]=\"{ first: first, second: second, total: total }\"></div> `,\r\n})\r\nexport class ItemCountComponent {\r\n  /**\r\n   * @param params  Contains parameters for component:\r\n   *                    page          Current page number\r\n   *                    totalItems    Total number of items\r\n   *                    itemsPerPage  Number of items per page\r\n   */\r\n  @Input() set params(params: { page?: number; totalItems?: number; itemsPerPage?: number }) {\r\n    if (params.page !== undefined && params.totalItems !== undefined && params.itemsPerPage !== undefined) {\r\n      this.first = (params.page - 1) * params.itemsPerPage === 0 ? 1 : (params.page - 1) * params.itemsPerPage + 1;\r\n      this.second = params.page * params.itemsPerPage < params.totalItems ? params.page * params.itemsPerPage : params.totalItems;\r\n    } else {\r\n      this.first = undefined;\r\n      this.second = undefined;\r\n    }\r\n    this.total = params.totalItems;\r\n  }\r\n\r\n  first?: number;\r\n  second?: number;\r\n  total?: number;\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}