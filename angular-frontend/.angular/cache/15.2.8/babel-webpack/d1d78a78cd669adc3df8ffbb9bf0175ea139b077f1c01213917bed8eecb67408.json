{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OthersComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst http_1 = require(\"@angular/common/http\");\nconst nspay2_constants_1 = require(\"app/nspay2.constants\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i2 = tslib_1.__importStar(require(\"app/claim/se-claim/service/se-claim.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i4 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i5 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i6 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i7 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i8 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i9 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i10 = tslib_1.__importStar(require(\"primeng/inputnumber\"));\nconst i11 = tslib_1.__importStar(require(\"../../../../../shared/language/translate.directive\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/panel\"));\nconst i13 = tslib_1.__importStar(require(\"../annual-income/annual-income.component\"));\nfunction OthersComponent_div_0_ng_template_4_p_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 16);\n    i0.ɵɵlistener(\"click\", function OthersComponent_div_0_ng_template_4_p_button_9_Template_p_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r8.refresh());\n    });\n    i0.ɵɵtext(1, \"Refresh from Past Claim\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return {\n    \"font-weight\": \"bold\",\n    \"margin-left\": \"0.5em\"\n  };\n};\nfunction OthersComponent_div_0_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n          \");\n    i0.ɵɵelementStart(1, \"div\", 13);\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4, \"Gross Income\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n          \");\n    i0.ɵɵelementStart(7, \"div\", 14);\n    i0.ɵɵtext(8, \"\\n            \");\n    i0.ɵɵtemplate(9, OthersComponent_div_0_ng_template_4_p_button_9_Template, 2, 0, \"p-button\", 15);\n    i0.ɵɵtext(10, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n      \");\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c0));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isActive() && !ctx_r1.readOnly && ctx_r1.hasValidAuthorityAndStation());\n  }\n}\nconst _c1 = function () {\n  return {\n    field: \"Divisor\"\n  };\n};\nfunction OthersComponent_div_0_div_18_small_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"\\n              \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c1));\n  }\n}\nconst _c2 = function () {\n  return {\n    \"margin-right\": \"0.5em\",\n    \"margin-left\": \"0.5em\"\n  };\n};\nfunction OthersComponent_div_0_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n              (Divisor:\\n              \");\n    i0.ɵɵelementStart(2, \"p-inputNumber\", 17);\n    i0.ɵɵlistener(\"onBlur\", function OthersComponent_div_0_div_18_Template_p_inputNumber_onBlur_2_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.rePopulateOthersYearMonth());\n    });\n    i0.ɵɵtext(3, \"\\n              \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n              \");\n    i0.ɵɵtemplate(5, OthersComponent_div_0_div_18_small_5_Template, 2, 2, \"small\", 18);\n    i0.ɵɵtext(6, \"\\n              )\\n            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    let tmp_5_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c2));\n    i0.ɵɵproperty(\"size\", 1)(\"min\", 1)(\"max\", 6)(\"disabled\", !ctx_r2.isActive());\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx_r2.othersFormGroup.get(\"divisor\")) == null ? null : tmp_5_0.touched) && !ctx_r2.isValidNumber((tmp_5_0 = ctx_r2.othersFormGroup.get(\"divisor\")) == null ? null : tmp_5_0.value));\n  }\n}\nfunction OthersComponent_div_0_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n              (Divisor: \", ctx_r3.othersFormGroup.get(\"divisor\").value, \" )\\n            \");\n  }\n}\nconst _c3 = function () {\n  return {\n    \"text-align\": \"center\"\n  };\n};\nfunction OthersComponent_div_0_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n            \");\n    i0.ɵɵelementStart(1, \"tr\", 20);\n    i0.ɵɵtext(2, \"\\n              \");\n    i0.ɵɵelement(3, \"th\", 21);\n    i0.ɵɵtext(4, \"\\n              \");\n    i0.ɵɵelementStart(5, \"th\", 21);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n              \");\n    i0.ɵɵelement(8, \"th\", 21);\n    i0.ɵɵtext(9, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n          \");\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r4.othersFormGroup.get(\"divisor\").value, \" - Mth Account\");\n  }\n}\nconst _c4 = function (a0) {\n  return {\n    field: a0\n  };\n};\nfunction OthersComponent_div_0_ng_template_28_div_8_small_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rowHeader_r13 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction1(1, _c4, ctx_r22.dateUtilsService.convertDateToStr(ctx_r22.dateUtilsService.convertStrToDate(rowHeader_r13, \"MM-YYYY\"), \"MMM\").concat(\" Income\")));\n  }\n}\nconst _c5 = function () {\n  return {\n    \"text-align\": \"right\"\n  };\n};\nfunction OthersComponent_div_0_ng_template_28_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n                  \");\n    i0.ɵɵelementStart(2, \"p-inputNumber\", 25);\n    i0.ɵɵtext(3, \"\\n                  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                  \");\n    i0.ɵɵtemplate(5, OthersComponent_div_0_ng_template_28_div_8_small_5_Template, 2, 3, \"small\", 18);\n    i0.ɵɵtext(6, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rowHeader_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    let tmp_3_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"inputStyle\", i0.ɵɵpureFunction0(4, _c5))(\"formControl\", ctx_r15.getFormControl(ctx_r15.workingDataOthersInfoList, rowHeader_r13))(\"minFractionDigits\", 2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r15.getFormControl(ctx_r15.workingDataOthersInfoList, rowHeader_r13)) == null ? null : tmp_3_0.touched) && !ctx_r15.isValidNumber((tmp_3_0 = ctx_r15.getFormControl(ctx_r15.workingDataOthersInfoList, rowHeader_r13)) == null ? null : tmp_3_0.value));\n  }\n}\nconst _c6 = function () {\n  return {\n    \"margin-right\": \"0.75em\",\n    \"text-align\": \"right\"\n  };\n};\nfunction OthersComponent_div_0_ng_template_28_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                  \");\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                \");\n  }\n  if (rf & 2) {\n    const rowHeader_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c6));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                    \", i0.ɵɵpipeBind2(3, 3, ctx_r17.workingDataOthersInfoList.get(rowHeader_r13).value, \"1.2-2\"), \"\\n                  \");\n  }\n}\nconst _c7 = function () {\n  return {\n    \"border-bottom\": \"2px solid black\",\n    \"border-top\": \"2px solid black\",\n    \"text-align\": \"right\"\n  };\n};\nconst _c8 = function () {\n  return {\n    \"margin-right\": \"0.75em\"\n  };\n};\nfunction OthersComponent_div_0_ng_template_28_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 20);\n    i0.ɵɵtext(1, \"\\n              \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3, \"Total\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n              \");\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \"\\n                \");\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n              \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c7));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(9, _c8));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                \", i0.ɵɵpipeBind2(9, 5, ctx_r18.calculateTotal(), \"1.2-2\"), \"\\n                \");\n  }\n}\nfunction OthersComponent_div_0_ng_template_28_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 20);\n    i0.ɵɵtext(1, \"\\n              \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3, \"Ave Monthly Inc\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n              \");\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \"\\n                \");\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n              \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c5));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(9, _c8));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                 \", i0.ɵɵpipeBind2(9, 5, ctx_r19.calculateTotal() / ctx_r19.othersFormGroup.get(\"divisor\").value, \"1.2-2\"), \"\\n                \");\n  }\n}\nfunction OthersComponent_div_0_ng_template_28_tr_19_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n                \");\n    i0.ɵɵelement(2, \"p-inputNumber\", 28);\n    i0.ɵɵtext(3, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"inputStyle\", i0.ɵɵpureFunction0(1, _c5));\n  }\n}\nfunction OthersComponent_div_0_ng_template_28_tr_19_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                  \");\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                \");\n  }\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c8));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                    \", i0.ɵɵpipeBind2(3, 3, ctx_r28.othersFormGroup.get(\"claimNip\").value, \"1.0-0\"), \"%\\n                  \");\n  }\n}\nconst _c9 = function () {\n  return {\n    \"cursor\": \"pointer\"\n  };\n};\nfunction OthersComponent_div_0_ng_template_28_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 20);\n    i0.ɵɵtext(1, \"\\n              \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3, \"Claim NIP\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n              \");\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \"\\n                \");\n    i0.ɵɵtemplate(7, OthersComponent_div_0_ng_template_28_tr_19_div_7_Template, 4, 2, \"div\", 22);\n    i0.ɵɵtext(8, \"\\n                \");\n    i0.ɵɵtemplate(9, OthersComponent_div_0_ng_template_28_tr_19_ng_template_9_Template, 5, 7, \"ng-template\", null, 26, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(11, \"\\n\\n              \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n              \");\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14, \"\\n                \");\n    i0.ɵɵelementStart(15, \"span\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                \");\n    i0.ɵɵelementStart(18, \"span\");\n    i0.ɵɵtext(19, \"\\n                  \");\n    i0.ɵɵelementStart(20, \"i\", 27);\n    i0.ɵɵlistener(\"click\", function OthersComponent_div_0_ng_template_28_tr_19_Template_i_click_20_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r29.openSerbTable());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n              \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r27 = i0.ɵɵreference(10);\n    const ctx_r20 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c5));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r20.isActive() && !ctx_r20.readOnly && ctx_r20.hasValidAuthorityAndStation())(\"ngIfElse\", _r27);\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate1(\"Proposed NIP: \", ctx_r20.proposeNip(), \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c9));\n  }\n}\nfunction OthersComponent_div_0_ng_template_28_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 20);\n    i0.ɵɵtext(1, \"\\n              \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3, \"Net Inc Payable\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n              \");\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \"\\n                \");\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n              \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n              \");\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13, \"Computation Stuff\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c7));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(9, _c8));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                \", i0.ɵɵpipeBind2(9, 5, ctx_r21.calculateTotal() / ctx_r21.othersFormGroup.get(\"divisor\").value * ctx_r21.othersFormGroup.get(\"claimNip\").value / 100, \"1.2-2\"), \"\\n                \");\n  }\n}\nfunction OthersComponent_div_0_ng_template_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n            \");\n    i0.ɵɵelementStart(1, \"tr\", 20);\n    i0.ɵɵtext(2, \"\\n              \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n              \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7, \"\\n                \");\n    i0.ɵɵtemplate(8, OthersComponent_div_0_ng_template_28_div_8_Template, 7, 5, \"div\", 22);\n    i0.ɵɵtext(9, \"\\n                \");\n    i0.ɵɵtemplate(10, OthersComponent_div_0_ng_template_28_ng_template_10_Template, 5, 7, \"ng-template\", null, 23, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(12, \"\\n              \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n            \");\n    i0.ɵɵtemplate(15, OthersComponent_div_0_ng_template_28_tr_15_Template, 12, 10, \"tr\", 24);\n    i0.ɵɵtext(16, \"\\n            \");\n    i0.ɵɵtemplate(17, OthersComponent_div_0_ng_template_28_tr_17_Template, 12, 10, \"tr\", 24);\n    i0.ɵɵtext(18, \"\\n            \");\n    i0.ɵɵtemplate(19, OthersComponent_div_0_ng_template_28_tr_19_Template, 24, 9, \"tr\", 24);\n    i0.ɵɵtext(20, \"\\n            \");\n    i0.ɵɵtemplate(21, OthersComponent_div_0_ng_template_28_tr_21_Template, 15, 10, \"tr\", 24);\n    i0.ɵɵtext(22, \"\\n          \");\n  }\n  if (rf & 2) {\n    const rowHeader_r13 = ctx.$implicit;\n    const rowIndex_r14 = ctx.rowIndex;\n    const _r16 = i0.ɵɵreference(11);\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(rowHeader_r13);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.isActive() && !ctx_r5.readOnly && ctx_r5.hasValidAuthorityAndStation())(\"ngIfElse\", _r16);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r14 === (ctx_r5.rowHeaders == null ? null : ctx_r5.rowHeaders.length) - 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r14 === (ctx_r5.rowHeaders == null ? null : ctx_r5.rowHeaders.length) - 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r14 === (ctx_r5.rowHeaders == null ? null : ctx_r5.rowHeaders.length) - 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r14 === (ctx_r5.rowHeaders == null ? null : ctx_r5.rowHeaders.length) - 1);\n  }\n}\nconst _c10 = function () {\n  return {\n    \"padding-left\": \".5rem\",\n    \"padding-top\": \".5rem\"\n  };\n};\nfunction OthersComponent_div_0_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"p-button\", 29);\n    i0.ɵɵlistener(\"click\", function OthersComponent_div_0_div_32_Template_p_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r31.copyToItem());\n    });\n    i0.ɵɵtext(3, \"Copy to Item\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c10));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r6.enableCopytoItem());\n  }\n}\nconst _c11 = function () {\n  return {\n    \"width\": \"100%\"\n  };\n};\nconst _c12 = function () {\n  return {\n    \"padding-left\": \"1rem\"\n  };\n};\nfunction OthersComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtext(1, \"\\n\\n    \");\n    i0.ɵɵelementStart(2, \"p-panel\", 2);\n    i0.ɵɵtext(3, \"\\n      \");\n    i0.ɵɵtemplate(4, OthersComponent_div_0_ng_template_4_Template, 12, 4, \"ng-template\", 3);\n    i0.ɵɵtext(5, \"\\n      \");\n    i0.ɵɵelementStart(6, \"form\", 4);\n    i0.ɵɵtext(7, \"\\n        \");\n    i0.ɵɵelementStart(8, \"div\", 5);\n    i0.ɵɵtext(9, \"\\n          \");\n    i0.ɵɵelementStart(10, \"div\", 6);\n    i0.ɵɵtext(11, \"Period\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n          \");\n    i0.ɵɵelementStart(13, \"div\", 7);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n          \");\n    i0.ɵɵelementStart(16, \"div\", 7);\n    i0.ɵɵtext(17, \"\\n            \");\n    i0.ɵɵtemplate(18, OthersComponent_div_0_div_18_Template, 7, 8, \"div\", 8);\n    i0.ɵɵtext(19, \"\\n            \");\n    i0.ɵɵtemplate(20, OthersComponent_div_0_div_20_Template, 2, 1, \"div\", 8);\n    i0.ɵɵtext(21, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n        \");\n    i0.ɵɵelementStart(24, \"p-table\", 9);\n    i0.ɵɵtext(25, \"\\n          \");\n    i0.ɵɵtemplate(26, OthersComponent_div_0_ng_template_26_Template, 11, 4, \"ng-template\", 3);\n    i0.ɵɵtext(27, \"\\n          \");\n    i0.ɵɵtemplate(28, OthersComponent_div_0_ng_template_28_Template, 23, 7, \"ng-template\", 10);\n    i0.ɵɵtext(29, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n      \");\n    i0.ɵɵtemplate(32, OthersComponent_div_0_div_32_Template, 5, 4, \"div\", 11);\n    i0.ɵɵtext(33, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(34, \"\\n   \");\n    i0.ɵɵelementStart(35, \"n2-annual-income\", 12);\n    i0.ɵɵtext(36, \"\\n   \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(37, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(16, _c11));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.othersFormGroup);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(17, _c12));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate2(\"\\n            \", ctx_r0.dateUtilsService.convertDateToStr(ctx_r0.othersFormGroup.get(\"startDate\").value, \"MM-YYYY\"), \"\\n            to\\n            \", ctx_r0.dateUtilsService.convertDateToStr(ctx_r0.othersFormGroup.get(\"endDate\").value, \"MM-YYYY\"), \"\\n          \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isActive() && !ctx_r0.readOnly && ctx_r0.hasValidAuthorityAndStation());\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isActive() || ctx_r0.readOnly || !ctx_r0.hasValidAuthorityAndStation());\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", ctx_r0.rowHeaders);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isActive() && !ctx_r0.readOnly && ctx_r0.hasValidAuthorityAndStation());\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"annualIncomeFormArray\", ctx_r0.annualIncomeList)(\"seHardCopyDetails\", ctx_r0.seHardCopyDetails)(\"isActive\", ctx_r0.isActive())(\"readOnly\", ctx_r0.readOnly)(\"station\", ctx_r0.station);\n  }\n}\nclass OthersComponent {\n  constructor(router, seClaimService, dateUtilsService, formBuilder, accountService) {\n    this.router = router;\n    this.seClaimService = seClaimService;\n    this.dateUtilsService = dateUtilsService;\n    this.formBuilder = formBuilder;\n    this.accountService = accountService;\n    this.seHardCopyDetails = {};\n    this.selectedWDOption = {};\n    this.itemDetailsSection = {};\n    this.currHardCopyDetails = {};\n    this.totalAmtPayEvent = new core_1.EventEmitter();\n    this.totalAmtPay = 0;\n    this.PEND_VERIFY_STATUS = \"PVE\";\n    this.PEND_ACTION_STATUS = \"PAC\";\n    this.rowHeaders = [];\n    console.log(\"test\");\n  }\n  static mapOthersWDToFormGroup(othersWD, formBuilder, dateUtilsService) {\n    const othersFormGroup = formBuilder.group({\n      id: new forms_1.FormControl(othersWD.id, null),\n      workingDataId: new forms_1.FormControl(othersWD.workingDataId, null),\n      startDate: new forms_1.FormControl(othersWD.startDate === null ? null : dateUtilsService.convertStrToDate(othersWD.startDate, \"DD-MM-YYYY\"), null),\n      endDate: new forms_1.FormControl(othersWD.endDate === null ? null : dateUtilsService.convertStrToDate(othersWD.endDate, \"DD-MM-YYYY\"), null),\n      divisor: new forms_1.FormControl(othersWD.divisor, null),\n      claimNip: new forms_1.FormControl(othersWD.claimNip, null),\n      annualIncomeList: new forms_1.FormArray([])\n    });\n    const infoFormGroup = formBuilder.group({});\n    othersWD.workingDataOthersInfoList.forEach(othersWDInfo => {\n      infoFormGroup.addControl(othersWDInfo.yearMonth.substring(3, 10), new forms_1.FormControl(othersWDInfo.monthlyIncome, null));\n    });\n    othersFormGroup.addControl('workingDataOthersInfoList', infoFormGroup);\n    othersWD.annualIncomeList.forEach(annualIncomeWD => {\n      const annualIncomeFormGroup = formBuilder.group({\n        source: new forms_1.FormControl(annualIncomeWD.source, null),\n        assessment: new forms_1.FormControl(annualIncomeWD.assessment === null ? null : dateUtilsService.convertStrToDate(annualIncomeWD.assessment, \"DD-MM-YYYY\"), null),\n        acctgPeriodStrt: new forms_1.FormControl(annualIncomeWD.acctgStartDate === null ? null : dateUtilsService.convertStrToDate(annualIncomeWD.acctgStartDate, \"DD-MM-YYYY\"), null),\n        acctgPeriodEnd: new forms_1.FormControl(annualIncomeWD.acctgEndDate === null ? null : dateUtilsService.convertStrToDate(annualIncomeWD.acctgEndDate, \"DD-MM-YYYY\"), null),\n        occupationNature: new forms_1.FormControl(annualIncomeWD.occupationNature, null),\n        revenue: new forms_1.FormControl(annualIncomeWD.revenue, null),\n        adjProfit: new forms_1.FormControl(annualIncomeWD.adjProfit, null)\n      });\n      othersFormGroup.get('annualIncomeList').push(annualIncomeFormGroup);\n    });\n    return othersFormGroup;\n  }\n  static mapOthersFormGroupToWD(fg, obj, dateUtilsService) {\n    const workingDataOthersInfoList = [];\n    const infoFormGroup = fg.get('workingDataOthersInfoList');\n    const othersYearMonthSet = OthersComponent.populateOthersYearMonthSet(fg.get('startDate').value, fg.get('endDate').value, dateUtilsService);\n    Object.keys(infoFormGroup.controls).forEach(yearMonthString => {\n      if (othersYearMonthSet.has(yearMonthString)) {\n        const othersWDInfo = {\n          id: null,\n          yearMonth: \"01-\".concat(yearMonthString),\n          monthlyIncome: infoFormGroup.get(yearMonthString).value\n        };\n        workingDataOthersInfoList.push(othersWDInfo);\n      }\n    });\n    const annualIncomeList = [];\n    fg.get('annualIncomeList').controls.forEach(control => {\n      const annualIncome = {\n        workingDataId: null,\n        seq: annualIncomeList.length + 1,\n        source: control.get('source').value,\n        assessment: dateUtilsService.isValid(control.get('assessment').value) ? dateUtilsService.convertDateToStr(control.get('assessment').value, \"DD-MM-YYYY\") : null,\n        acctgStartDate: dateUtilsService.isValid(control.get('acctgPeriodStrt').value) ? dateUtilsService.convertDateToStr(control.get('acctgPeriodStrt').value, \"DD-MM-YYYY\") : null,\n        acctgEndDate: dateUtilsService.isValid(control.get('acctgPeriodEnd').value) ? dateUtilsService.convertDateToStr(control.get('acctgPeriodEnd').value, \"DD-MM-YYYY\") : null,\n        occupationNature: control.get('occupationNature').value,\n        revenue: control.get('revenue').value,\n        adjProfit: control.get('adjProfit').value\n      };\n      annualIncomeList.push(annualIncome);\n    });\n    const othersWD = {\n      id: fg.get('id').value,\n      workingDataId: fg.get('workingDataId').value,\n      startDate: dateUtilsService.isValid(fg.get('startDate').value) ? dateUtilsService.convertDateToStr(fg.get('startDate').value, \"DD-MM-YYYY\") : null,\n      endDate: dateUtilsService.isValid(fg.get('endDate').value) ? dateUtilsService.convertDateToStr(fg.get('endDate').value, \"DD-MM-YYYY\") : null,\n      divisor: fg.get('divisor').value,\n      claimNip: fg.get('claimNip').value,\n      archiveDt: obj.archiveDt,\n      workingDataOthersInfoList,\n      annualIncomeList\n    };\n    return othersWD;\n  }\n  static createNewOthersFormGroup(startDate, endDate, formBuilder, dateUtilsService) {\n    const othersFormGroup = formBuilder.group({\n      id: new forms_1.FormControl(null, null),\n      workingDataId: new forms_1.FormControl(null, null),\n      startDate: new forms_1.FormControl(startDate, null),\n      endDate: new forms_1.FormControl(endDate, null),\n      divisor: new forms_1.FormControl(6, null),\n      claimNip: new forms_1.FormControl(0, null),\n      annualIncomeList: new forms_1.FormArray([])\n    });\n    const yearMonthStrings = OthersComponent.populateOthersYearMonth(startDate, endDate, dateUtilsService);\n    console.log(\"got Make\", yearMonthStrings);\n    const infoFormGroup = formBuilder.group({});\n    yearMonthStrings.forEach(yearMonthString => {\n      infoFormGroup.addControl(yearMonthString, new forms_1.FormControl(null, null));\n    });\n    othersFormGroup.addControl('workingDataOthersInfoList', infoFormGroup);\n    console.log(\"info\", infoFormGroup);\n    console.log(\"got ADd?\", othersFormGroup);\n    const annualIncomeFormGroup = formBuilder.group({\n      source: new forms_1.FormControl(null, null),\n      assessment: new forms_1.FormControl(null, null),\n      acctgPeriodStrt: new forms_1.FormControl(null, null),\n      acctgPeriodEnd: new forms_1.FormControl(null, null),\n      occupationNature: new forms_1.FormControl(null, null),\n      revenue: new forms_1.FormControl(null, null),\n      adjProfit: new forms_1.FormControl(null, null)\n    });\n    othersFormGroup.get('annualIncomeList').push(annualIncomeFormGroup);\n    return othersFormGroup;\n  }\n  static populateOthersYearMonth(startDate, endDate, dateUtilsService) {\n    const tempRowHeaders = [];\n    if (dateUtilsService.isValid(startDate) && startDate !== null && dateUtilsService.isValid(endDate) && endDate !== null) {\n      const date = new Date(startDate);\n      while (!dateUtilsService.isAfter(date, endDate)) {\n        tempRowHeaders.push(dateUtilsService.convertDateToStr(date, \"MM-YYYY\"));\n        date.setMonth(date.getMonth() + 1);\n      }\n    }\n    return tempRowHeaders;\n  }\n  static populateOthersYearMonthSet(startDate, endDate, dateUtilsService) {\n    const othersYearMonthSet = new Set();\n    if (dateUtilsService.isValid(startDate) && startDate !== null && dateUtilsService.isValid(endDate) && endDate !== null) {\n      const date = new Date(startDate);\n      while (!dateUtilsService.isAfter(date, endDate)) {\n        othersYearMonthSet.add(dateUtilsService.convertDateToStr(date, \"MM-YYYY\"));\n        date.setMonth(date.getMonth() + 1);\n      }\n    }\n    return othersYearMonthSet;\n  }\n  ngOnInit() {\n    console.log(\"test\");\n  }\n  ngOnChanges(changes) {\n    if (changes.seHardCopyDetails?.currentValue) {\n      console.log(\"change currhardcopy\");\n      this.currHardCopyDetails = changes.seHardCopyDetails.currentValue;\n    }\n    if (changes.selectedWDOption?.currentValue) {\n      this.currSelectedOption = changes.selectedWDOption?.currentValue;\n      this.retrieveOthersWD();\n    }\n    if (changes.trgStartDte && this.othersFormGroup !== undefined && this.isActive()) {\n      this.rePopulateOthersYearMonth();\n    }\n  }\n  openSerbTable() {\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/se-claim/serb-table']));\n    console.log(url);\n    window.open(url, \"SERBTable\", 'location=0,menubar=0,status=0,height=750, width=1500');\n  }\n  retrieveOthersWD() {\n    this.othersFormGroup = undefined;\n    //if no changes were recorded, take from db, otherwise take from local unsaved copy\n    if (!this.currSelectedOption.changes && !this.currSelectedOption.newWD) {\n      console.log(\"get from from db\");\n      let params = new http_1.HttpParams();\n      params = params.append(\"workingDataId\", this.currSelectedOption?.obj?.workingDataId);\n      this.seClaimService.retrieveOthersWD(params).subscribe(res => {\n        if (res.data) {\n          const othersWD = res.data;\n          this.rowHeaders = OthersComponent.populateOthersYearMonth(this.dateUtilsService.convertStrToDate(othersWD.startDate, \"DD-MM-YYYY\"), this.dateUtilsService.convertStrToDate(othersWD.endDate, \"DD-MM-YYYY\"), this.dateUtilsService);\n          this.populateOthersForumGroupWithFillerYearMonth(othersWD);\n        }\n      });\n    } else if (this.currSelectedOption.changes && !this.currSelectedOption.newWD) {\n      console.log(\"get from changes WD Map\");\n      this.othersFormGroup = this.workingDataWithChanges.get(this.currSelectedOption?.obj?.workingDataId).formGroup;\n      this.rowHeaders = OthersComponent.populateOthersYearMonth(this.othersFormGroup.get('startDate').value, this.othersFormGroup.get('endDate').value, this.dateUtilsService);\n    } else if (this.currSelectedOption.newWD) {\n      console.log(\"get from new WD Map\");\n      this.othersFormGroup = this.newUnsavedWorkingData.get(this.currSelectedOption?.key.toString()).formGroup;\n      this.rowHeaders = OthersComponent.populateOthersYearMonth(this.othersFormGroup.get('startDate').value, this.othersFormGroup.get('endDate').value, this.dateUtilsService);\n    }\n  }\n  populateOthersForumGroupWithFillerYearMonth(othersWD) {\n    this.othersFormGroup = this.formBuilder.group({\n      id: new forms_1.FormControl(othersWD.id, null),\n      workingDataId: new forms_1.FormControl(othersWD.workingDataId, null),\n      startDate: new forms_1.FormControl(othersWD.startDate === null ? null : this.dateUtilsService.convertStrToDate(othersWD.startDate, \"DD-MM-YYYY\"), null),\n      endDate: new forms_1.FormControl(othersWD.endDate === null ? null : this.dateUtilsService.convertStrToDate(othersWD.endDate, \"DD-MM-YYYY\"), null),\n      divisor: new forms_1.FormControl(othersWD.divisor, null),\n      claimNip: new forms_1.FormControl(othersWD.claimNip, null),\n      annualIncomeList: new forms_1.FormArray([])\n    });\n    const infoFormGroup = this.formBuilder.group({});\n    const yearMonthSetInDb = new Set();\n    othersWD.workingDataOthersInfoList.forEach(othersWDInfo => {\n      const yearMonthString = othersWDInfo.yearMonth.substring(3, 10);\n      yearMonthSetInDb.add(yearMonthString);\n      infoFormGroup.addControl(yearMonthString, new forms_1.FormControl(othersWDInfo.monthlyIncome, null));\n    });\n    const diffRowHeaders = this.rowHeaders.filter(x => !yearMonthSetInDb.has(x));\n    diffRowHeaders.forEach(diffRowHeader => {\n      if (infoFormGroup.get(diffRowHeader) === null) {\n        infoFormGroup.addControl(diffRowHeader, new forms_1.FormControl(null, null));\n      }\n    });\n    this.othersFormGroup.addControl('workingDataOthersInfoList', infoFormGroup);\n    othersWD.annualIncomeList.forEach(annualIncomeWD => {\n      const annualIncomeFormGroup = this.formBuilder.group({\n        source: new forms_1.FormControl(annualIncomeWD.source, null),\n        assessment: new forms_1.FormControl(annualIncomeWD.assessment === null ? null : this.dateUtilsService.convertStrToDate(annualIncomeWD.assessment, \"DD-MM-YYYY\"), null),\n        acctgPeriodStrt: new forms_1.FormControl(annualIncomeWD.acctgStartDate === null ? null : this.dateUtilsService.convertStrToDate(annualIncomeWD.acctgStartDate, \"DD-MM-YYYY\"), null),\n        acctgPeriodEnd: new forms_1.FormControl(annualIncomeWD.acctgEndDate === null ? null : this.dateUtilsService.convertStrToDate(annualIncomeWD.acctgEndDate, \"DD-MM-YYYY\"), null),\n        occupationNature: new forms_1.FormControl(annualIncomeWD.occupationNature, null),\n        revenue: new forms_1.FormControl(annualIncomeWD.revenue, null),\n        adjProfit: new forms_1.FormControl(annualIncomeWD.adjProfit, null)\n      });\n      this.othersFormGroup.get('annualIncomeList').push(annualIncomeFormGroup);\n    });\n    this.othersFormGroup.valueChanges.subscribe(changes => {\n      console.log(\"CHANE!!\");\n      this.currSelectedOption.changes = true;\n      this.saveSEClaimRequest.workingDataSectionInd = true;\n      if (!this.workingDataWithChanges.has(this.currSelectedOption?.obj?.workingDataId)) {\n        this.workingDataWithChanges.set(this.currSelectedOption?.obj?.workingDataId, {\n          obj: this.currSelectedOption.obj,\n          formGroup: this.othersFormGroup\n        });\n      }\n    });\n  }\n  get annualIncomeList() {\n    return this.othersFormGroup.get('annualIncomeList');\n  }\n  get workingDataOthersInfoList() {\n    return this.othersFormGroup.get('workingDataOthersInfoList');\n  }\n  getFormControl(control, name) {\n    return control.get(name);\n  }\n  rePopulateOthersYearMonth() {\n    const divisor = this.othersFormGroup.get('divisor').value;\n    const endDate = this.dateUtilsService.convertStrToDate(this.currHardCopyDetails?.trgStartDte, \"DD-MM-YYYY\");\n    endDate.setMonth(endDate.getMonth() - 1);\n    endDate.setDate(1);\n    const startDate = new Date(endDate);\n    startDate.setMonth(startDate.getMonth() - divisor + 1);\n    this.othersFormGroup.get('startDate').setValue(startDate);\n    this.othersFormGroup.get('endDate').setValue(endDate);\n    const tempRowHeaders = OthersComponent.populateOthersYearMonth(startDate, endDate, this.dateUtilsService);\n    const diffRowHeaders = tempRowHeaders.filter(x => !this.rowHeaders.includes(x));\n    diffRowHeaders.forEach(diffRowHeader => {\n      if (this.workingDataOthersInfoList.get(diffRowHeader) === null) {\n        this.workingDataOthersInfoList.addControl(diffRowHeader, new forms_1.FormControl(null, null));\n      }\n    });\n    this.rowHeaders = tempRowHeaders;\n  }\n  calculateTotal() {\n    let sum = 0;\n    this.rowHeaders.forEach(rowHeader => {\n      sum = sum + this.workingDataOthersInfoList.get(rowHeader).value;\n    });\n    return sum;\n  }\n  proposeNip() {\n    const occupationCode = this.currHardCopyDetails.occupationCode;\n    const startDate = this.dateUtilsService.convertStrToDate(this.currHardCopyDetails.trgStartDte, \"DD-MM-YYYY\");\n    const beforeMay2020 = this.dateUtilsService.isBefore(startDate, new Date(2020, 5, 1));\n    switch (occupationCode) {\n      case \"10\":\n      case \"20\":\n      case \"30\":\n      case \"40\":\n      case \"50\":\n      case \"60\":\n      case \"70\":\n      case \"80\":\n      case \"90\":\n      case \"100\":\n      case \"110\":\n      case \"120\":\n      case \"130\":\n      case \"180\":\n      case \"230\":\n      case \"240\":\n        {\n          return \"Please Check\";\n          // break;\n        }\n\n      case \"140\":\n      case \"190\":\n      case \"220\":\n      case \"990\":\n        {\n          return \"80.00%\";\n          // break;\n        }\n\n      case \"150\":\n      case \"160\":\n      case \"170\":\n      case \"200\":\n        {\n          return beforeMay2020 ? \"80.00%\" : \"75.00%\";\n          // break;\n        }\n\n      case \"210\":\n      case \"250\":\n      case \"260\":\n        {\n          return \"90.00%\";\n          // break;\n        }\n\n      default:\n        {\n          return \"Please Check\";\n          // break;\n        }\n    }\n  }\n\n  refresh() {\n    let params = new http_1.HttpParams();\n    params = params.append(\"nric\", this.currHardCopyDetails?.headerDto?.nsManNric);\n    params = params.append(\"caseId\", this.currHardCopyDetails?.headerDto?.caseId);\n    params = params.append(\"startDate\", this.dateUtilsService.convertDateToStr(this.othersFormGroup.get('startDate').value, \"DD-MM-YYYY\"));\n    params = params.append(\"endDate\", this.dateUtilsService.convertDateToStr(this.othersFormGroup.get('endDate').value, \"DD-MM-YYYY\"));\n    this.seClaimService.retrieveRefreshOthersWD(params).subscribe(res => {\n      if (res.data) {\n        res.data.forEach(othersInfo => {\n          this.workingDataOthersInfoList.get(othersInfo.yearMonth).setValue(othersInfo.monthlyIncome);\n        });\n      }\n    });\n  }\n  copyToItem() {\n    this.totalAmtPay = Number((this.calculateTotal() / this.othersFormGroup.get('divisor').value * this.othersFormGroup.get('claimNip').value / 100).toFixed(2));\n    this.totalAmtPayEvent.emit(this.totalAmtPay);\n  }\n  enableCopytoItem() {\n    const claimItemList = this.itemDetailsSection.itemForm?.get('otherSEItemArr');\n    let aveItem = null;\n    if (claimItemList.length > 0) {\n      aveItem = claimItemList?.controls.filter(x => x.get('itemType').value === 'AVE')[0];\n      return aveItem?.get('latestStatus').value === this.PEND_VERIFY_STATUS || aveItem?.get('latestStatus').value === this.PEND_ACTION_STATUS;\n    } else return false;\n  }\n  isActive() {\n    return this.currSelectedOption?.obj?.archiveDt === 0;\n  }\n  isValidNumber(obj) {\n    return !isNaN(obj);\n  }\n  //allows input on need basis\n  hasValidAuthorityAndStation() {\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_VERIFIER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_VERIFICATION) {\n      return true;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_CERTIFICATION) {\n      return false;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_APPROVAL) {\n      return false;\n    }\n    return false;\n  }\n}\nexports.OthersComponent = OthersComponent;\nOthersComponent.ɵfac = function OthersComponent_Factory(t) {\n  return new (t || OthersComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.SEClaimService), i0.ɵɵdirectiveInject(i3.DateUtilsService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.AccountService));\n};\nOthersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OthersComponent,\n  selectors: [[\"n2-others\"]],\n  inputs: {\n    seHardCopyDetails: \"seHardCopyDetails\",\n    selectedWDOption: \"selectedWDOption\",\n    itemDetailsSection: \"itemDetailsSection\",\n    workingDataWithChanges: \"workingDataWithChanges\",\n    newUnsavedWorkingData: \"newUnsavedWorkingData\",\n    saveSEClaimRequest: \"saveSEClaimRequest\",\n    readOnly: \"readOnly\",\n    station: \"station\",\n    trgStartDte: \"trgStartDte\"\n  },\n  outputs: {\n    totalAmtPayEvent: \"totalAmtPayEvent\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 1,\n  consts: [[\"class\", \"flex gap-2\", 4, \"ngIf\"], [1, \"flex\", \"gap-2\"], [1, \"flex\", \"col-5\"], [\"pTemplate\", \"header\"], [3, \"formGroup\"], [1, \"grid\"], [1, \"flex\", \"col-2\", \"align-items-center\"], [1, \"flex\", \"col-3\", \"align-items-center\"], [4, \"ngIf\"], [\"styleClass\", \"p-datatable-gridlines p-datatable-striped\", 3, \"value\"], [\"pTemplate\", \"body\"], [3, \"style\", 4, \"ngIf\"], [1, \"flex\", \"col-7\", 3, \"annualIncomeFormArray\", \"seHardCopyDetails\", \"isActive\", \"readOnly\", \"station\"], [1, \"flex\", \"col-6\", \"align-items-center\"], [1, \"flex\", \"col-6\", \"align-items-center\", \"justify-content-end\"], [3, \"click\", 4, \"ngIf\"], [3, \"click\"], [\"formControlName\", \"divisor\", 3, \"size\", \"min\", \"max\", \"disabled\", \"onBlur\"], [\"class\", \"p-error\", \"icTranslate\", \"nspay2App.claim.validation.CLM-V002\", 3, \"translateValues\", 4, \"ngIf\"], [\"icTranslate\", \"nspay2App.claim.validation.CLM-V002\", 1, \"p-error\", 3, \"translateValues\"], [1, \"others\"], [\"scope\", \"col\"], [4, \"ngIf\", \"ngIfElse\"], [\"labelOthersInfo\", \"\"], [\"class\", \"others\", 4, \"ngIf\"], [\"mode\", \"decimal\", 3, \"inputStyle\", \"formControl\", \"minFractionDigits\"], [\"labelClaimNip\", \"\"], [1, \"pi\", \"pi-info-circle\", 3, \"click\"], [\"suffix\", \"%\", \"formControlName\", \"claimNip\", 3, \"inputStyle\"], [3, \"disabled\", \"click\"]],\n  template: function OthersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, OthersComponent_div_0_Template, 38, 18, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.othersFormGroup !== undefined);\n    }\n  },\n  dependencies: [i6.NgIf, i4.ɵNgNoValidate, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormControlDirective, i4.FormGroupDirective, i4.FormControlName, i7.PrimeTemplate, i8.Button, i9.Table, i10.InputNumber, i11.TranslateDirective, i12.Panel, i13.AnnualIncomeComponent, i6.DecimalPipe],\n  styles: [\"tr.others[_ngcontent-%COMP%]    > [_ngcontent-%COMP%]:nth-child(1), tr.others[_ngcontent-%COMP%]    > [_ngcontent-%COMP%]:nth-child(3) {\\n  background: none;\\n  background-color: white;\\n  border: none;\\n}\\n\\ntr.others[_ngcontent-%COMP%]    > [_ngcontent-%COMP%]:nth-child(2) {\\n  width: 230px;\\n}\\n\\n[_nghost-%COMP%]     tr.others > td {\\n  padding: 0.5rem 0.5rem;\\n}\\n\\n[_nghost-%COMP%]     .p-panel .p-panel-header {\\n  padding: 0.1em;\\n  height: 70px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm90aGVycy5jb21wb25lbnQuc2NzcyIsIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxccHJvamVjdHMlMjAyXFxuc3BheWlpYXBwXFxzcmNcXG1haW5cXHdlYmFwcFxcYXBwXFxjbGFpbVxcc2UtY2xhaW1cXHNlLWNsYWltLXZlcmlmaWNhdGlvblxcd29ya2luZy1kYXRhLXNlY3Rpb25cXG90aGVyc1xcb3RoZXJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFLGdCQUFBO0VBQ0EsdUJBQUE7RUFDQSxZQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxZQUFBO0FDRUY7O0FEQ0E7RUFDRSxzQkFBQTtBQ0VGOztBREFBO0VBQ0UsY0FBQTtFQUNBLFlBQUE7QUNHRiIsImZpbGUiOiJvdGhlcnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0ci5vdGhlcnMgPjpudGgtY2hpbGQoMSksXHJcbnRyLm90aGVycyA+Om50aC1jaGlsZCgzKSB7XHJcbiAgYmFja2dyb3VuZDpub25lO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIGJvcmRlcjogbm9uZTtcclxufVxyXG50ci5vdGhlcnMgPjpudGgtY2hpbGQoMil7XHJcbiAgd2lkdGg6IDIzMHB4O1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgdHIub3RoZXJzID4gdGR7XHJcbiAgcGFkZGluZzowLjVyZW0gMC41cmVtO1xyXG59XHJcbjpob3N0IDo6bmctZGVlcCAucC1wYW5lbCAucC1wYW5lbC1oZWFkZXJ7XHJcbiAgcGFkZGluZzogLjFlbTtcclxuICBoZWlnaHQ6IDcwcHg7XHJcbn1cclxuIiwidHIub3RoZXJzID4gOm50aC1jaGlsZCgxKSxcbnRyLm90aGVycyA+IDpudGgtY2hpbGQoMykge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiBub25lO1xufVxuXG50ci5vdGhlcnMgPiA6bnRoLWNoaWxkKDIpIHtcbiAgd2lkdGg6IDIzMHB4O1xufVxuXG46aG9zdCA6Om5nLWRlZXAgdHIub3RoZXJzID4gdGQge1xuICBwYWRkaW5nOiAwLjVyZW0gMC41cmVtO1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtcGFuZWwgLnAtcGFuZWwtaGVhZGVyIHtcbiAgcGFkZGluZzogMC4xZW07XG4gIGhlaWdodDogNzBweDtcbn0iXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvY2xhaW0vc2UtY2xhaW0vc2UtY2xhaW0tdmVyaWZpY2F0aW9uL3dvcmtpbmctZGF0YS1zZWN0aW9uL290aGVycy9vdGhlcnMuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi9wcm9qZWN0cyUyMDIvbnNwYXlpaWFwcC9zcmMvbWFpbi93ZWJhcHAvYXBwL2NsYWltL3NlLWNsYWltL3NlLWNsYWltLXZlcmlmaWNhdGlvbi93b3JraW5nLWRhdGEtc2VjdGlvbi9vdGhlcnMvb3RoZXJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFLGdCQUFBO0VBQ0EsdUJBQUE7RUFDQSxZQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxZQUFBO0FDRUY7O0FEQ0E7RUFDRSxzQkFBQTtBQ0VGOztBREFBO0VBQ0UsY0FBQTtFQUNBLFlBQUE7QUNHRjtBRENBLDQvQ0FBNC9DIiwic291cmNlc0NvbnRlbnQiOlsidHIub3RoZXJzID46bnRoLWNoaWxkKDEpLFxyXG50ci5vdGhlcnMgPjpudGgtY2hpbGQoMykge1xyXG4gIGJhY2tncm91bmQ6bm9uZTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXI6IG5vbmU7XHJcbn1cclxudHIub3RoZXJzID46bnRoLWNoaWxkKDIpe1xyXG4gIHdpZHRoOiAyMzBweDtcclxufVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIHRyLm90aGVycyA+IHRke1xyXG4gIHBhZGRpbmc6MC41cmVtIDAuNXJlbTtcclxufVxyXG46aG9zdCA6Om5nLWRlZXAgLnAtcGFuZWwgLnAtcGFuZWwtaGVhZGVye1xyXG4gIHBhZGRpbmc6IC4xZW07XHJcbiAgaGVpZ2h0OiA3MHB4O1xyXG59XHJcbiIsInRyLm90aGVycyA+IDpudGgtY2hpbGQoMSksXG50ci5vdGhlcnMgPiA6bnRoLWNoaWxkKDMpIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogbm9uZTtcbn1cblxudHIub3RoZXJzID4gOm50aC1jaGlsZCgyKSB7XG4gIHdpZHRoOiAyMzBweDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIHRyLm90aGVycyA+IHRkIHtcbiAgcGFkZGluZzogMC41cmVtIDAuNXJlbTtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5wLXBhbmVsIC5wLXBhbmVsLWhlYWRlciB7XG4gIHBhZGRpbmc6IDAuMWVtO1xuICBoZWlnaHQ6IDcwcHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","OthersComponent","constructor","router","seClaimService","dateUtilsService","formBuilder","accountService","core_1","console","log","mapOthersWDToFormGroup","othersWD","othersFormGroup","group","id","forms_1","workingDataId","startDate","convertStrToDate","endDate","divisor","claimNip","annualIncomeList","infoFormGroup","workingDataOthersInfoList","forEach","othersWDInfo","addControl","yearMonth","substring","monthlyIncome","annualIncomeWD","annualIncomeFormGroup","source","assessment","acctgPeriodStrt","acctgStartDate","acctgPeriodEnd","acctgEndDate","occupationNature","revenue","adjProfit","get","push","mapOthersFormGroupToWD","fg","obj","othersYearMonthSet","populateOthersYearMonthSet","value","Object","keys","controls","yearMonthString","has","concat","control","annualIncome","seq","length","isValid","convertDateToStr","archiveDt","createNewOthersFormGroup","yearMonthStrings","populateOthersYearMonth","tempRowHeaders","date","Date","isAfter","setMonth","getMonth","Set","add","ngOnInit","ngOnChanges","changes","seHardCopyDetails","currentValue","currHardCopyDetails","selectedWDOption","currSelectedOption","retrieveOthersWD","trgStartDte","undefined","isActive","rePopulateOthersYearMonth","openSerbTable","url","serializeUrl","createUrlTree","window","open","newWD","params","http_1","append","subscribe","res","data","rowHeaders","populateOthersForumGroupWithFillerYearMonth","workingDataWithChanges","formGroup","newUnsavedWorkingData","key","toString","yearMonthSetInDb","diffRowHeaders","filter","x","diffRowHeader","valueChanges","saveSEClaimRequest","workingDataSectionInd","set","getFormControl","name","setDate","setValue","includes","calculateTotal","sum","rowHeader","proposeNip","occupationCode","beforeMay2020","isBefore","refresh","headerDto","nsManNric","caseId","retrieveRefreshOthersWD","othersInfo","copyToItem","totalAmtPay","Number","toFixed","totalAmtPayEvent","emit","enableCopytoItem","claimItemList","itemDetailsSection","itemForm","aveItem","PEND_VERIFY_STATUS","PEND_ACTION_STATUS","isValidNumber","isNaN","hasValidAuthorityAndStation","hasAnyAuthority","nspay2_constants_1","CLAIMS_VERIFIER","station","STATION_VERIFICATION","CLAIMS_APPROVER","STATION_CERTIFICATION","STATION_APPROVAL","exports","selectors","inputs","readOnly","outputs","features","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\working-data-section\\others\\others.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\working-data-section\\others\\others.component.html"],"sourcesContent":["import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\n\r\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from \"@angular/forms\";\r\nimport {OthersWDInfo} from \"app/claim/se-claim/model/others-info.model\";\r\nimport {AnnualIncomeWD} from \"app/claim/se-claim/model/annual-income-model\";\r\nimport {OthersWD} from \"app/claim/se-claim/model/others.model\";\r\nimport {DateUtilsService} from \"app/core/util/date-utils.service\";\r\nimport {SaveSEClaimRequest} from \"app/claim/se-claim/model/save-se-claim-request.model\";\r\nimport {SEClaimService} from \"app/claim/se-claim/service/se-claim.service\";\r\nimport {HttpParams} from \"@angular/common/http\";\r\nimport {Ns2Response} from \"app/shared/model/ns2-response.model\";\r\nimport {PhdDeliveryWDInfo} from \"app/claim/se-claim/model/phd-delivery-info.model\";\r\nimport {RefreshPhdDeliveryInfo} from \"app/claim/se-claim/model/refresh-phd-delivery-info.model\";\r\nimport {RefreshOthersInfo} from \"app/claim/se-claim/model/refresh-others-info.model\";\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { NSPAY2_ROLES, NSPAY2_STATION } from 'app/nspay2.constants';\r\n\r\n@Component({\r\n  selector: 'n2-others',\r\n  templateUrl: './others.component.html',\r\n  styleUrls: ['./others.component.scss']\r\n})\r\nexport class OthersComponent implements OnInit, OnChanges {\r\n\r\n  @Input() seHardCopyDetails: any = {};\r\n  @Input() selectedWDOption: any = {};\r\n  @Input() itemDetailsSection: any = {};\r\n  @Input() workingDataWithChanges: Map<string, any>;\r\n  @Input() newUnsavedWorkingData: Map<string, any>;\r\n  @Input() saveSEClaimRequest: SaveSEClaimRequest;\r\n  //meant for routing from enquiry\r\n  @Input() readOnly: boolean;\r\n  @Input() station: string;\r\n\r\n  currSelectedOption: any;\r\n  currHardCopyDetails: any = {};\r\n  @Output() totalAmtPayEvent: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Input() trgStartDte: string;\r\n\r\n  totalAmtPay=0;\r\n  readonly PEND_VERIFY_STATUS = \"PVE\";\r\n  readonly PEND_ACTION_STATUS = \"PAC\";\r\n\r\n  othersFormGroup: FormGroup;\r\n\r\n  rowHeaders: string[] = [];\r\n\r\n  constructor(private router: Router,\r\n              private seClaimService: SEClaimService,\r\n              public dateUtilsService: DateUtilsService,\r\n              private formBuilder: FormBuilder,\r\n              public accountService: AccountService\r\n              ) {\r\n    console.log(\"test\");\r\n  }\r\n\r\n  static mapOthersWDToFormGroup(othersWD: OthersWD, formBuilder: FormBuilder, dateUtilsService: DateUtilsService): FormGroup{\r\n\r\n    const othersFormGroup: FormGroup = formBuilder.group({\r\n      id: new FormControl(othersWD.id,null),\r\n      workingDataId: new FormControl(othersWD.workingDataId,null),\r\n      startDate: new FormControl(othersWD.startDate === null? null: dateUtilsService.convertStrToDate(othersWD.startDate, \"DD-MM-YYYY\"),null),\r\n      endDate: new FormControl(othersWD.endDate === null? null : dateUtilsService.convertStrToDate(othersWD.endDate,\"DD-MM-YYYY\"),null),\r\n      divisor: new FormControl(othersWD.divisor,null),\r\n      claimNip: new FormControl(othersWD.claimNip,null),\r\n      annualIncomeList: new FormArray([])\r\n    });\r\n\r\n    const infoFormGroup:FormGroup = formBuilder.group({});\r\n    othersWD.workingDataOthersInfoList.forEach((othersWDInfo: OthersWDInfo) => {\r\n      infoFormGroup.addControl(othersWDInfo.yearMonth.substring(3,10), new FormControl(othersWDInfo.monthlyIncome, null));\r\n    });\r\n    othersFormGroup.addControl('workingDataOthersInfoList',infoFormGroup);\r\n\r\n    othersWD.annualIncomeList.forEach((annualIncomeWD: AnnualIncomeWD) => {\r\n      const annualIncomeFormGroup: FormGroup = formBuilder.group({\r\n        source: new FormControl(annualIncomeWD.source, null),\r\n        assessment: new FormControl(annualIncomeWD.assessment === null? null :dateUtilsService.convertStrToDate(annualIncomeWD.assessment, \"DD-MM-YYYY\"), null),\r\n        acctgPeriodStrt: new FormControl(annualIncomeWD.acctgStartDate === null? null :dateUtilsService.convertStrToDate(annualIncomeWD.acctgStartDate, \"DD-MM-YYYY\"), null),\r\n        acctgPeriodEnd: new FormControl(annualIncomeWD.acctgEndDate === null? null :dateUtilsService.convertStrToDate(annualIncomeWD.acctgEndDate, \"DD-MM-YYYY\"), null),\r\n        occupationNature: new FormControl(annualIncomeWD.occupationNature, null),\r\n        revenue: new FormControl(annualIncomeWD.revenue, null),\r\n        adjProfit: new FormControl(annualIncomeWD.adjProfit, null),\r\n      });\r\n      (othersFormGroup.get('annualIncomeList') as FormArray).push(annualIncomeFormGroup);\r\n    });\r\n\r\n    return othersFormGroup;\r\n  }\r\n\r\n  static mapOthersFormGroupToWD(fg: FormGroup, obj: any, dateUtilsService: DateUtilsService): OthersWD {\r\n\r\n    const workingDataOthersInfoList:OthersWDInfo[] = [];\r\n    const infoFormGroup:FormGroup = fg.get('workingDataOthersInfoList') as FormGroup\r\n    const othersYearMonthSet: Set<string> = OthersComponent.populateOthersYearMonthSet(fg.get('startDate').value, fg.get('endDate').value, dateUtilsService);\r\n    Object.keys(infoFormGroup.controls).forEach((yearMonthString:string) => {\r\n      if(othersYearMonthSet.has(yearMonthString)) {\r\n        const othersWDInfo: OthersWDInfo = {\r\n          id: null,\r\n          yearMonth: \"01-\".concat(yearMonthString),\r\n          monthlyIncome: infoFormGroup.get(yearMonthString).value\r\n        }\r\n        workingDataOthersInfoList.push(othersWDInfo);\r\n      }\r\n    });\r\n\r\n    const annualIncomeList: AnnualIncomeWD[] = [];\r\n    (fg.get('annualIncomeList') as FormArray).controls.forEach((control:AbstractControl) => {\r\n      const annualIncome:AnnualIncomeWD = {\r\n        workingDataId: null,\r\n        seq: annualIncomeList.length + 1,\r\n        source: control.get('source').value,\r\n        assessment: dateUtilsService.isValid(control.get('assessment').value)? dateUtilsService.convertDateToStr(control.get('assessment').value, \"DD-MM-YYYY\"): null,\r\n        acctgStartDate: dateUtilsService.isValid(control.get('acctgPeriodStrt').value)? dateUtilsService.convertDateToStr(control.get('acctgPeriodStrt').value, \"DD-MM-YYYY\"): null,\r\n        acctgEndDate: dateUtilsService.isValid(control.get('acctgPeriodEnd').value)? dateUtilsService.convertDateToStr(control.get('acctgPeriodEnd').value, \"DD-MM-YYYY\"): null,\r\n        occupationNature: control.get('occupationNature').value,\r\n        revenue: control.get('revenue').value,\r\n        adjProfit: control.get('adjProfit').value\r\n      }\r\n      annualIncomeList.push(annualIncome);\r\n    });\r\n\r\n    const othersWD: OthersWD = {\r\n      id: fg.get('id').value,\r\n      workingDataId: fg.get('workingDataId').value,\r\n      startDate: dateUtilsService.isValid(fg.get('startDate').value)? dateUtilsService.convertDateToStr(fg.get('startDate').value, \"DD-MM-YYYY\"): null,\r\n      endDate: dateUtilsService.isValid(fg.get('endDate').value)? dateUtilsService.convertDateToStr(fg.get('endDate').value, \"DD-MM-YYYY\"): null,\r\n      divisor: fg.get('divisor').value,\r\n      claimNip: fg.get('claimNip').value,\r\n      archiveDt: obj.archiveDt,\r\n      workingDataOthersInfoList,\r\n      annualIncomeList\r\n    };\r\n    return othersWD\r\n  }\r\n\r\n  static createNewOthersFormGroup(startDate: Date, endDate: Date, formBuilder: FormBuilder, dateUtilsService: DateUtilsService): FormGroup{\r\n    const othersFormGroup: FormGroup = formBuilder.group({\r\n      id: new FormControl(null,null),\r\n      workingDataId: new FormControl(null,null),\r\n      startDate: new FormControl(startDate,null),\r\n      endDate: new FormControl(endDate,null),\r\n      divisor: new FormControl(6,null),\r\n      claimNip: new FormControl(0,null),\r\n      annualIncomeList: new FormArray([])\r\n    });\r\n\r\n    const yearMonthStrings: string[] = OthersComponent.populateOthersYearMonth(startDate, endDate, dateUtilsService);\r\n    console.log(\"got Make\",yearMonthStrings);\r\n    const infoFormGroup:FormGroup = formBuilder.group({});\r\n    yearMonthStrings.forEach((yearMonthString: string) => {\r\n      infoFormGroup.addControl(yearMonthString, new FormControl(null, null));\r\n    });\r\n    othersFormGroup.addControl('workingDataOthersInfoList',infoFormGroup);\r\n\r\n    console.log(\"info\",infoFormGroup);\r\n    console.log(\"got ADd?\", othersFormGroup);\r\n\r\n    const annualIncomeFormGroup: FormGroup = formBuilder.group({\r\n        source: new FormControl(null, null),\r\n        assessment: new FormControl(null, null),\r\n        acctgPeriodStrt: new FormControl(null, null),\r\n        acctgPeriodEnd: new FormControl(null, null),\r\n        occupationNature: new FormControl(null, null),\r\n        revenue: new FormControl(null, null),\r\n        adjProfit: new FormControl(null, null),\r\n      });\r\n      (othersFormGroup.get('annualIncomeList') as FormArray).push(annualIncomeFormGroup);\r\n\r\n    return othersFormGroup;\r\n  }\r\n\r\n  static populateOthersYearMonth(startDate: Date, endDate: Date, dateUtilsService: DateUtilsService): string[]{\r\n    const tempRowHeaders: string[] = [];\r\n    if(dateUtilsService.isValid(startDate) && startDate!== null && dateUtilsService.isValid(endDate) && endDate!== null) {\r\n      const date: Date = new Date(startDate);\r\n      while (!dateUtilsService.isAfter(date, endDate)) {\r\n        tempRowHeaders.push(dateUtilsService.convertDateToStr(date,\"MM-YYYY\"));\r\n        date.setMonth(date.getMonth() + 1);\r\n      }\r\n    }\r\n    return tempRowHeaders;\r\n  }\r\n\r\n  static populateOthersYearMonthSet(startDate: Date, endDate: Date, dateUtilsService: DateUtilsService): Set<string>{\r\n    const othersYearMonthSet: Set<string> = new Set<string>();\r\n    if(dateUtilsService.isValid(startDate) && startDate!== null && dateUtilsService.isValid(endDate) && endDate!== null) {\r\n      const date: Date = new Date(startDate);\r\n      while (!dateUtilsService.isAfter(date, endDate)) {\r\n        othersYearMonthSet.add(dateUtilsService.convertDateToStr(date,\"MM-YYYY\"));\r\n        date.setMonth(date.getMonth() + 1);\r\n      }\r\n    }\r\n    return othersYearMonthSet;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"test\");\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void{\r\n    if(changes.seHardCopyDetails?.currentValue){\r\n      console.log(\"change currhardcopy\");\r\n      this.currHardCopyDetails=changes.seHardCopyDetails.currentValue;\r\n    }\r\n    if(changes.selectedWDOption?.currentValue) {\r\n      this.currSelectedOption = changes.selectedWDOption?.currentValue;\r\n      this.retrieveOthersWD();\r\n    }\r\n    if(changes.trgStartDte && this.othersFormGroup !== undefined && this.isActive()){\r\n       this.rePopulateOthersYearMonth();\r\n    }\r\n  }\r\n\r\n  openSerbTable(): void{\r\n    const url = this.router.serializeUrl(this.router.createUrlTree(['claim/se-claim/serb-table']));\r\n    console.log(url);\r\n    window.open(url, \"SERBTable\", 'location=0,menubar=0,status=0,height=750, width=1500');\r\n  }\r\n\r\n  retrieveOthersWD(): void {\r\n    this.othersFormGroup = undefined;\r\n    //if no changes were recorded, take from db, otherwise take from local unsaved copy\r\n    if(!this.currSelectedOption.changes && !this.currSelectedOption.newWD) {\r\n      console.log(\"get from from db\")\r\n      let params = new HttpParams();\r\n      params = params.append(\"workingDataId\", this.currSelectedOption?.obj?.workingDataId);\r\n      this.seClaimService.retrieveOthersWD(params)\r\n        .subscribe((res: Ns2Response<OthersWD>) => {\r\n          if (res.data) {\r\n            const othersWD = res.data;\r\n            this.rowHeaders = OthersComponent.populateOthersYearMonth(this.dateUtilsService.convertStrToDate(othersWD.startDate, \"DD-MM-YYYY\"), this.dateUtilsService.convertStrToDate(othersWD.endDate, \"DD-MM-YYYY\"), this.dateUtilsService);\r\n            this.populateOthersForumGroupWithFillerYearMonth(othersWD);\r\n          }\r\n        });\r\n    } else if(this.currSelectedOption.changes && !this.currSelectedOption.newWD) {\r\n      console.log(\"get from changes WD Map\")\r\n      this.othersFormGroup = this.workingDataWithChanges.get(this.currSelectedOption?.obj?.workingDataId).formGroup as FormGroup;\r\n      this.rowHeaders = OthersComponent.populateOthersYearMonth(this.othersFormGroup.get('startDate').value, this.othersFormGroup.get('endDate').value, this.dateUtilsService);\r\n    } else if(this.currSelectedOption.newWD) {\r\n      console.log(\"get from new WD Map\");\r\n      this.othersFormGroup = this.newUnsavedWorkingData.get(this.currSelectedOption?.key.toString()).formGroup as FormGroup;\r\n      this.rowHeaders = OthersComponent.populateOthersYearMonth(this.othersFormGroup.get('startDate').value, this.othersFormGroup.get('endDate').value, this.dateUtilsService);\r\n    }\r\n  }\r\n\r\n  populateOthersForumGroupWithFillerYearMonth(othersWD: OthersWD): void{\r\n\r\n    this.othersFormGroup = this.formBuilder.group({\r\n      id: new FormControl(othersWD.id,null),\r\n      workingDataId: new FormControl(othersWD.workingDataId,null),\r\n      startDate: new FormControl(othersWD.startDate === null? null :this.dateUtilsService.convertStrToDate(othersWD.startDate, \"DD-MM-YYYY\"),null),\r\n      endDate: new FormControl(othersWD.endDate === null? null :this.dateUtilsService.convertStrToDate(othersWD.endDate,\"DD-MM-YYYY\"),null),\r\n      divisor: new FormControl(othersWD.divisor,null),\r\n      claimNip: new FormControl(othersWD.claimNip,null),\r\n      annualIncomeList: new FormArray([])\r\n    });\r\n\r\n    const infoFormGroup:FormGroup = this.formBuilder.group({});\r\n    const yearMonthSetInDb: Set<string> = new Set<string>();\r\n    othersWD.workingDataOthersInfoList.forEach((othersWDInfo: OthersWDInfo) => {\r\n      const yearMonthString = othersWDInfo.yearMonth.substring(3,10);\r\n      yearMonthSetInDb.add(yearMonthString);\r\n      infoFormGroup.addControl(yearMonthString, new FormControl(othersWDInfo.monthlyIncome, null));\r\n    });\r\n\r\n    const diffRowHeaders: string[] = this.rowHeaders.filter( x => !yearMonthSetInDb.has(x));\r\n    diffRowHeaders.forEach((diffRowHeader: string) => {\r\n      if (infoFormGroup.get(diffRowHeader) === null) {\r\n        infoFormGroup.addControl(diffRowHeader, new FormControl(null, null));\r\n      }\r\n    });\r\n\r\n    this.othersFormGroup.addControl('workingDataOthersInfoList',infoFormGroup);\r\n\r\n    othersWD.annualIncomeList.forEach((annualIncomeWD: AnnualIncomeWD) => {\r\n      const annualIncomeFormGroup: FormGroup = this.formBuilder.group({\r\n        source: new FormControl(annualIncomeWD.source, null),\r\n        assessment: new FormControl(annualIncomeWD.assessment === null? null :this.dateUtilsService.convertStrToDate(annualIncomeWD.assessment, \"DD-MM-YYYY\"), null),\r\n        acctgPeriodStrt: new FormControl(annualIncomeWD.acctgStartDate === null? null :this.dateUtilsService.convertStrToDate(annualIncomeWD.acctgStartDate, \"DD-MM-YYYY\"), null),\r\n        acctgPeriodEnd: new FormControl(annualIncomeWD.acctgEndDate === null? null :this.dateUtilsService.convertStrToDate(annualIncomeWD.acctgEndDate, \"DD-MM-YYYY\"), null),\r\n        occupationNature: new FormControl(annualIncomeWD.occupationNature, null),\r\n        revenue: new FormControl(annualIncomeWD.revenue, null),\r\n        adjProfit: new FormControl(annualIncomeWD.adjProfit, null),\r\n      });\r\n      (this.othersFormGroup.get('annualIncomeList') as FormArray).push(annualIncomeFormGroup);\r\n    });\r\n\r\n    this.othersFormGroup.valueChanges.subscribe(changes => {\r\n      console.log(\"CHANE!!\");\r\n\r\n      this.currSelectedOption.changes = true;\r\n      this.saveSEClaimRequest.workingDataSectionInd = true;\r\n      if(!this.workingDataWithChanges.has(this.currSelectedOption?.obj?.workingDataId)){\r\n        this.workingDataWithChanges.set(this.currSelectedOption?.obj?.workingDataId,\r\n          {\r\n            obj: this.currSelectedOption.obj,\r\n            formGroup: this.othersFormGroup\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  get annualIncomeList(): FormArray {\r\n     return this.othersFormGroup.get('annualIncomeList') as FormArray;\r\n  }\r\n\r\n  get workingDataOthersInfoList(): FormGroup {\r\n    return this.othersFormGroup.get('workingDataOthersInfoList') as FormGroup;\r\n  }\r\n\r\n  getFormControl(control: AbstractControl, name: string): FormControl{\r\n    return control.get(name) as FormControl;\r\n  }\r\n\r\n  rePopulateOthersYearMonth(): void{\r\n    const divisor: number = this.othersFormGroup.get('divisor').value;\r\n    const endDate = this.dateUtilsService.convertStrToDate(this.currHardCopyDetails?.trgStartDte, \"DD-MM-YYYY\");\r\n    endDate.setMonth(endDate.getMonth() - 1);\r\n    endDate.setDate(1);\r\n    const startDate: Date = new Date(endDate);\r\n    startDate.setMonth(startDate.getMonth() - divisor + 1);\r\n    this.othersFormGroup.get('startDate').setValue(startDate);\r\n    this.othersFormGroup.get('endDate').setValue(endDate);\r\n\r\n    const tempRowHeaders: string[] = OthersComponent.populateOthersYearMonth(startDate, endDate, this.dateUtilsService);\r\n    const diffRowHeaders: string[] = tempRowHeaders.filter( x => !this.rowHeaders.includes(x));\r\n\r\n    diffRowHeaders.forEach((diffRowHeader: string) => {\r\n      if (this.workingDataOthersInfoList.get(diffRowHeader) === null) {\r\n          this.workingDataOthersInfoList.addControl(diffRowHeader, new FormControl(null, null));\r\n        }\r\n    });\r\n\r\n    this.rowHeaders = tempRowHeaders;\r\n  }\r\n\r\n  calculateTotal(): number{\r\n    let sum = 0;\r\n    this.rowHeaders.forEach((rowHeader:string) => {\r\n      sum = sum + (this.workingDataOthersInfoList.get(rowHeader).value as number);\r\n    });\r\n\r\n    return sum;\r\n  }\r\n\r\n  proposeNip(): string{\r\n    const occupationCode:string = this.currHardCopyDetails.occupationCode;\r\n    const startDate: Date = this.dateUtilsService.convertStrToDate(this.currHardCopyDetails.trgStartDte, \"DD-MM-YYYY\");\r\n    const beforeMay2020:boolean = this.dateUtilsService.isBefore(startDate,new Date(2020,5,1));\r\n    switch (occupationCode) {\r\n      case \"10\":\r\n      case \"20\":\r\n      case \"30\":\r\n      case \"40\":\r\n      case \"50\":\r\n      case \"60\":\r\n      case \"70\":\r\n      case \"80\":\r\n      case \"90\":\r\n      case \"100\":\r\n      case \"110\":\r\n      case \"120\":\r\n      case \"130\":\r\n      case \"180\":\r\n      case \"230\":\r\n      case \"240\":{\r\n        return \"Please Check\";\r\n        // break;\r\n      }\r\n      case \"140\":\r\n      case \"190\":\r\n      case \"220\":\r\n      case \"990\": {\r\n        return \"80.00%\";\r\n        // break;\r\n      }\r\n\r\n      case \"150\":\r\n      case \"160\":\r\n      case \"170\":\r\n      case \"200\": {\r\n        return beforeMay2020? \"80.00%\" : \"75.00%\";\r\n        // break;\r\n      }\r\n      case \"210\":\r\n      case \"250\":\r\n      case \"260\": {\r\n        return \"90.00%\";\r\n        // break;\r\n      }\r\n      default: {\r\n        return \"Please Check\";\r\n        // break;\r\n      }\r\n    }\r\n  }\r\n\r\n  refresh(): void {\r\n    let params = new HttpParams();\r\n    params = params.append(\"nric\",this.currHardCopyDetails?.headerDto?.nsManNric);\r\n    params = params.append(\"caseId\",this.currHardCopyDetails?.headerDto?.caseId);\r\n    params = params.append(\"startDate\",this.dateUtilsService.convertDateToStr(this.othersFormGroup.get('startDate').value, \"DD-MM-YYYY\"));\r\n    params = params.append(\"endDate\",this.dateUtilsService.convertDateToStr(this.othersFormGroup.get('endDate').value, \"DD-MM-YYYY\"));\r\n\r\n    this.seClaimService.retrieveRefreshOthersWD(params)\r\n      .subscribe((res: Ns2Response<RefreshOthersInfo[]>) => {\r\n        if (res.data) {\r\n          res.data.forEach((othersInfo:RefreshOthersInfo) => {\r\n            this.workingDataOthersInfoList.get(othersInfo.yearMonth).setValue(othersInfo.monthlyIncome);\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  copyToItem():void{\r\n    this.totalAmtPay = Number((this.calculateTotal()/this.othersFormGroup.get('divisor').value * this.othersFormGroup.get('claimNip').value /100).toFixed(2));\r\n    this.totalAmtPayEvent.emit(this.totalAmtPay);\r\n  }\r\n\r\n  enableCopytoItem(): boolean{\r\n    const claimItemList = this.itemDetailsSection.itemForm?.get('otherSEItemArr') as FormArray;\r\n    let aveItem = null;\r\n    if(claimItemList.length>0){\r\n      aveItem = claimItemList?.controls.filter(x=> x.get('itemType').value === 'AVE')[0];\r\n      return aveItem?.get('latestStatus').value === this.PEND_VERIFY_STATUS || aveItem?.get('latestStatus').value === this.PEND_ACTION_STATUS;\r\n    }else return false;\r\n  }\r\n\r\n  isActive(): boolean{\r\n    return this.currSelectedOption?.obj?.archiveDt===0;\r\n  }\r\n  isValidNumber(obj: any): boolean{\r\n    return !isNaN(obj);\r\n  }\r\n\r\n  //allows input on need basis\r\n  hasValidAuthorityAndStation(): boolean{\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_VERIFIER) && \r\n      this.station === NSPAY2_STATION.STATION_VERIFICATION){\r\n        return true;\r\n      }\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) && \r\n    this.station === NSPAY2_STATION.STATION_CERTIFICATION) {\r\n      return false;\r\n    }\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) && \r\n    this.station === NSPAY2_STATION.STATION_APPROVAL) {\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n     \r\n}\r\n","<div *ngIf=\"othersFormGroup !== undefined\" class=\"flex gap-2\">\r\n\r\n    <p-panel class = \"flex col-5\" [style] = \"{'width':'100%'}\">\r\n      <ng-template pTemplate=\"header\">\r\n          <div class = \"flex col-6 align-items-center\">\r\n            <div [style] = \"{'font-weight':'bold','margin-left':'0.5em'}\">Gross Income</div>\r\n          </div>\r\n          <div class = \"flex col-6 align-items-center justify-content-end\">\r\n            <p-button (click) = \"refresh()\" *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation()\">Refresh from Past Claim</p-button>\r\n          </div>\r\n      </ng-template>\r\n      <form [formGroup]=\"othersFormGroup\">\r\n        <div class = \"grid\" [style] = \"{'padding-left': '1rem'}\">\r\n          <div class =\"flex col-2 align-items-center\">Period</div>\r\n          <div class =\"flex col-3 align-items-center\">\r\n            {{this.dateUtilsService.convertDateToStr(this.othersFormGroup.get('startDate').value,\"MM-YYYY\")}}\r\n            to\r\n            {{this.dateUtilsService.convertDateToStr(this.othersFormGroup.get('endDate').value,\"MM-YYYY\")}}\r\n          </div>\r\n          <div class =\"flex col-3 align-items-center\">\r\n            <div *ngIf=\"isActive() && !readOnly && hasValidAuthorityAndStation()\">\r\n              (Divisor:\r\n              <p-inputNumber formControlName = \"divisor\"\r\n                             [style] = \"{'margin-right':'0.5em','margin-left':'0.5em'}\"\r\n                             [size] = \"1\" [min] = 1 [max] = 6\r\n                             (onBlur)=\"rePopulateOthersYearMonth()\"\r\n                             [disabled] = \"!isActive()\">\r\n              </p-inputNumber>\r\n              <small *ngIf=\"othersFormGroup.get('divisor')?.touched && !isValidNumber(othersFormGroup.get('divisor')?.value)\"\r\n                class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V002\"\r\n                [translateValues]=\"{ field: 'Divisor' }\">\r\n              </small>\r\n              )\r\n            </div>\r\n            <div *ngIf=\"!isActive() || readOnly || !hasValidAuthorityAndStation()\">\r\n              (Divisor: {{this.othersFormGroup.get('divisor').value}} )\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p-table [value] = \"rowHeaders\"\r\n             styleClass=\"p-datatable-gridlines p-datatable-striped\">\r\n          <ng-template pTemplate=\"header\">\r\n            <tr class =\"others\">\r\n              <th scope=\"col\"></th>\r\n              <th scope=\"col\" [style] = \"{'text-align' : 'center'}\">{{this.othersFormGroup.get('divisor').value}} - Mth Account</th>\r\n              <th scope=\"col\"></th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-rowHeader let-rowIndex = \"rowIndex\">\r\n            <tr class =\"others\">\r\n              <td>{{rowHeader}}</td>\r\n              <td>\r\n                <div *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelOthersInfo\">\r\n                  <p-inputNumber [inputStyle]= \"{'text-align':'right'}\"\r\n                                 [formControl] = \"getFormControl(this.workingDataOthersInfoList, rowHeader)\"\r\n                                 mode=\"decimal\"\r\n                                 [minFractionDigits]=\"2\"\r\n                                >\r\n                  </p-inputNumber>\r\n                  <small *ngIf=\"getFormControl(this.workingDataOthersInfoList, rowHeader)?.touched &&\r\n                  !isValidNumber(getFormControl(this.workingDataOthersInfoList, rowHeader)?.value)\"\r\n                  class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V002\"\r\n                  [translateValues]=\"{ field: (dateUtilsService.convertDateToStr(dateUtilsService.convertStrToDate(rowHeader, 'MM-YYYY'), 'MMM')).concat(' Income') }\">\r\n                </small>\r\n                </div>\r\n                <ng-template #labelOthersInfo>\r\n                  <div [style] = \"{'margin-right':'0.75em', 'text-align':'right'}\">\r\n                    {{this.workingDataOthersInfoList.get(rowHeader).value | number:'1.2-2'}}\r\n                  </div>\r\n                </ng-template>\r\n              </td>\r\n\r\n            </tr>\r\n            <tr *ngIf = \"rowIndex === rowHeaders?.length - 1\" class =\"others\">\r\n              <td>Total</td>\r\n              <td [style]= \"{'border-bottom': '2px solid black', 'border-top': '2px solid black','text-align':'right'}\">\r\n                <div [style] = \"{'margin-right':'0.75em'}\">\r\n                {{this.calculateTotal() | number: '1.2-2'}}\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr *ngIf = \"rowIndex === rowHeaders?.length - 1\" class =\"others\">\r\n              <td>Ave Monthly Inc</td>\r\n              <td [style]= \"{'text-align':'right'}\">\r\n                <div [style] = \"{'margin-right':'0.75em'}\">\r\n                 {{(this.calculateTotal()/this.othersFormGroup.get('divisor').value) | number: '1.2-2'}}\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr *ngIf = \"rowIndex === rowHeaders?.length - 1\" class =\"others\">\r\n              <td>Claim NIP</td>\r\n              <td [style]= \"{'text-align':'right'}\">\r\n                <div *ngIf=\"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelClaimNip\">\r\n                <p-inputNumber [inputStyle]= \"{'text-align':'right'}\" suffix = \"%\" formControlName=\"claimNip\"></p-inputNumber>\r\n                </div>\r\n                <ng-template #labelClaimNip>\r\n                  <div [style] = \"{'margin-right':'0.75em'}\">\r\n                    {{this.othersFormGroup.get('claimNip').value | number :'1.0-0'}}%\r\n                  </div>\r\n                </ng-template>\r\n\r\n              </td>\r\n              <td>\r\n                <span>Proposed NIP: {{proposeNip()}}</span>\r\n                <span>\r\n                  <i (click) = \"openSerbTable()\" [style] = \"{'cursor': 'pointer'}\" class=\"pi pi-info-circle\"></i>\r\n                </span>\r\n              </td>\r\n            </tr>\r\n            <tr *ngIf = \"rowIndex === rowHeaders?.length - 1\" class =\"others\">\r\n              <td>Net Inc Payable</td>\r\n              <td [style]= \"{'border-bottom': '2px solid black', 'border-top': '2px solid black','text-align':'right'}\">\r\n                <div [style] = \"{'margin-right':'0.75em'}\">\r\n                {{(this.calculateTotal()/this.othersFormGroup.get('divisor').value * this.othersFormGroup.get('claimNip').value /100)  | number: '1.2-2'}}\r\n                </div>\r\n              </td>\r\n              <td>Computation Stuff</td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </form>\r\n      <div *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation()\" [style] = \"{'padding-left': '.5rem','padding-top':'.5rem'}\">\r\n        <p-button [disabled] = \"!enableCopytoItem()\" (click) = \"copyToItem()\">Copy to Item</p-button>\r\n      </div>\r\n  </p-panel>\r\n   <n2-annual-income class = \"flex col-7\"\r\n                     [annualIncomeFormArray]=\"this.annualIncomeList\"\r\n                     [seHardCopyDetails] = \"seHardCopyDetails\"\r\n                     [isActive] = \"isActive()\"\r\n                     [readOnly] = \"readOnly\"\r\n                     [station]=\"station\">\r\n   </n2-annual-income>\r\n</div>\r\n\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}