{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IcMenuComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@angular/core\");\nconst router_1 = require(\"@angular/router\");\nconst jquery_1 = tslib_1.__importDefault(require(\"jquery\"));\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i2 = tslib_1.__importStar(require(\"./services\"));\nconst i3 = tslib_1.__importStar(require(\"../global.state\"));\nconst i4 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i5 = tslib_1.__importStar(require(\"./directives/slim-scroll/slim-scroll.directive\"));\nconst i6 = tslib_1.__importStar(require(\"./components/menu-item/menu-item.component\"));\nfunction IcMenuComponent_ic_menu_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ic-menu-item\", 3);\n    i0.ɵɵlistener(\"itemHover\", function IcMenuComponent_ic_menu_item_2_Template_ic_menu_item_itemHover_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.hoverItem($event));\n    })(\"toggleSubMenu\", function IcMenuComponent_ic_menu_item_2_Template_ic_menu_item_toggleSubMenu_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.toggleSubMenu($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"menuItem\", item_r1);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    height: a0\n  };\n};\nconst _c1 = function (a0, a1) {\n  return {\n    top: a0,\n    height: a1\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    \"show-hover-elem\": a0\n  };\n};\nclass IcMenuComponent {\n  constructor(_router, _service, _state) {\n    this._router = _router;\n    this._service = _service;\n    this._state = _state;\n    this.sidebarCollapsed = false;\n    this.expandMenu = new core_1.EventEmitter();\n    this.outOfArea = -200;\n  }\n  updateMenu(newMenuItems) {\n    this.menuItems = newMenuItems;\n    this.selectMenuAndNotify();\n  }\n  selectMenuAndNotify() {\n    if (this.menuItems) {\n      this.menuItems = this._service.selectMenuItem(this.menuItems);\n      this._state.notifyDataChanged('menu.activeLink', this._service.getCurrentItem());\n    }\n  }\n  ngOnInit() {\n    this._onRouteChange = this._router.events.subscribe(event => {\n      if (event instanceof router_1.NavigationEnd) {\n        if (this.menuItems) {\n          this.selectMenuAndNotify();\n        } else {\n          // on page load we have to wait as event is fired before menu elements are prepared\n          setTimeout(() => this.selectMenuAndNotify());\n        }\n      }\n    });\n    this._menuItemsSub = this._service.menuItems.subscribe(this.updateMenu.bind(this));\n  }\n  ngOnDestroy() {\n    if (this._onRouteChange) {\n      this._onRouteChange.unsubscribe();\n    }\n    if (this._menuItemsSub) {\n      this._menuItemsSub.unsubscribe();\n    }\n  }\n  hoverItem($event) {\n    this.showHoverElem = true;\n    this.hoverElemHeight = $event.currentTarget.clientHeight;\n    this.hoverElemTop = $event.currentTarget.getBoundingClientRect().top - 66;\n  }\n  toggleSubMenu($event) {\n    const submenu = (0, jquery_1.default)($event.currentTarget).next();\n    if (this.sidebarCollapsed) {\n      this.expandMenu.emit(null);\n      if (!$event.item.expanded) {\n        $event.item.expanded = true;\n        submenu.slideToggle();\n      }\n    } else {\n      $event.item.expanded = !$event.item.expanded;\n      submenu.slideToggle();\n    }\n    return false;\n  }\n}\nexports.IcMenuComponent = IcMenuComponent;\nIcMenuComponent.ɵfac = function IcMenuComponent_Factory(t) {\n  return new (t || IcMenuComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.IcMenuService), i0.ɵɵdirectiveInject(i3.GlobalState));\n};\nIcMenuComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: IcMenuComponent,\n  selectors: [[\"ic-menu\"]],\n  inputs: {\n    sidebarCollapsed: \"sidebarCollapsed\",\n    menuHeight: \"menuHeight\"\n  },\n  outputs: {\n    expandMenu: \"expandMenu\"\n  },\n  decls: 7,\n  vars: 11,\n  consts: [[\"id\", \"al-sidebar-list\", \"icSlimScroll\", \"\", 1, \"al-sidebar-list\", 3, \"slimScrollOptions\", \"mouseleave\"], [3, \"menuItem\", \"itemHover\", \"toggleSubMenu\", 4, \"ngFor\", \"ngForOf\"], [1, \"sidebar-hover-elem\", 3, \"ngStyle\", \"ngClass\"], [3, \"menuItem\", \"itemHover\", \"toggleSubMenu\"]],\n  template: function IcMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ul\", 0);\n      i0.ɵɵlistener(\"mouseleave\", function IcMenuComponent_Template_ul_mouseleave_0_listener() {\n        return ctx.hoverElemTop = ctx.outOfArea;\n      });\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵtemplate(2, IcMenuComponent_ic_menu_item_2_Template, 1, 1, \"ic-menu-item\", 1);\n      i0.ɵɵtext(3, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \"\\n\");\n      i0.ɵɵelement(5, \"div\", 2);\n      i0.ɵɵtext(6, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"slimScrollOptions\", i0.ɵɵpureFunction1(4, _c0, ctx.menuHeight));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.menuItems);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(6, _c1, ctx.hoverElemTop + \"px\", ctx.hoverElemHeight + \"px\"))(\"ngClass\", i0.ɵɵpureFunction1(9, _c2, ctx.showHoverElem));\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgForOf, i4.NgStyle, i5.IcSlimScrollDirective, i6.IcMenuItemComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtZW51LnNjc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvbGF5b3V0cy9zaWRlYmFyL21lbnUvbWVudS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxvSkFBb0oiLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","IcMenuComponent","constructor","_router","_service","_state","core_1","updateMenu","newMenuItems","menuItems","selectMenuAndNotify","selectMenuItem","notifyDataChanged","getCurrentItem","ngOnInit","_onRouteChange","events","subscribe","event","router_1","setTimeout","_menuItemsSub","bind","ngOnDestroy","unsubscribe","hoverItem","$event","showHoverElem","hoverElemHeight","currentTarget","clientHeight","hoverElemTop","getBoundingClientRect","top","toggleSubMenu","submenu","next","sidebarCollapsed","expandMenu","emit","item","expanded","slideToggle","exports","selectors","inputs","menuHeight","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\layouts\\sidebar\\menu\\menu.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\layouts\\sidebar\\menu\\menu.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { IcMenuService } from './services';\r\nimport { GlobalState } from '../global.state';\r\nimport jQuery from 'jquery';\r\n\r\n@Component({\r\n  selector: 'ic-menu',\r\n  templateUrl: './menu.html',\r\n  styleUrls: ['./menu.scss'],\r\n})\r\nexport class IcMenuComponent implements OnInit, OnDestroy {\r\n  @Input() sidebarCollapsed = false;\r\n  @Input() menuHeight: number | undefined;\r\n\r\n  @Output() expandMenu = new EventEmitter<any>();\r\n\r\n  public menuItems: any;\r\n  public showHoverElem: boolean | undefined;\r\n  public hoverElemHeight: number | undefined;\r\n  public hoverElemTop: number | undefined;\r\n  public outOfArea = -200;\r\n  protected _menuItemsSub: Subscription | undefined;\r\n  protected _onRouteChange: Subscription | undefined;\r\n\r\n  constructor(private _router: Router, private _service: IcMenuService, private _state: GlobalState) {}\r\n\r\n  public updateMenu(newMenuItems: any): void {\r\n    this.menuItems = newMenuItems;\r\n    this.selectMenuAndNotify();\r\n  }\r\n\r\n  public selectMenuAndNotify(): void {\r\n    if (this.menuItems) {\r\n      this.menuItems = this._service.selectMenuItem(this.menuItems);\r\n      this._state.notifyDataChanged('menu.activeLink', this._service.getCurrentItem());\r\n    }\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this._onRouteChange = this._router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        if (this.menuItems) {\r\n          this.selectMenuAndNotify();\r\n        } else {\r\n          // on page load we have to wait as event is fired before menu elements are prepared\r\n          setTimeout(() => this.selectMenuAndNotify());\r\n        }\r\n      }\r\n    });\r\n    this._menuItemsSub = this._service.menuItems.subscribe(this.updateMenu.bind(this));\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this._onRouteChange) {\r\n      this._onRouteChange.unsubscribe();\r\n    }\r\n    if (this._menuItemsSub) {\r\n      this._menuItemsSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  public hoverItem($event: any): void {\r\n    this.showHoverElem = true;\r\n    this.hoverElemHeight = $event.currentTarget.clientHeight;\r\n    this.hoverElemTop = $event.currentTarget.getBoundingClientRect().top - 66;\r\n  }\r\n\r\n  public toggleSubMenu($event: any): boolean {\r\n    const submenu = jQuery($event.currentTarget).next();\r\n\r\n    if (this.sidebarCollapsed) {\r\n      this.expandMenu.emit(null);\r\n      if (!$event.item.expanded) {\r\n        $event.item.expanded = true;\r\n        submenu.slideToggle();\r\n      }\r\n    } else {\r\n      $event.item.expanded = !$event.item.expanded;\r\n      submenu.slideToggle();\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<ul\r\n  id=\"al-sidebar-list\"\r\n  class=\"al-sidebar-list\"\r\n  icSlimScroll\r\n  [slimScrollOptions]=\"{height: menuHeight}\"\r\n  (mouseleave)=\"hoverElemTop=outOfArea\"\r\n>\r\n  <ic-menu-item\r\n    [menuItem]=\"item\"\r\n    (itemHover)=\"hoverItem($event)\"\r\n    (toggleSubMenu)=\"toggleSubMenu($event)\"\r\n    *ngFor=\"let item of menuItems\"\r\n  ></ic-menu-item>\r\n</ul>\r\n<div\r\n  class=\"sidebar-hover-elem\"\r\n  [ngStyle]=\"{top: hoverElemTop + 'px', height: hoverElemHeight + 'px'}\"\r\n  [ngClass]=\"{'show-hover-elem': showHoverElem }\"\r\n></div>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}