{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MetricsRequestComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i2 = tslib_1.__importStar(require(\"@ng-bootstrap/ng-bootstrap\"));\nconst i3 = tslib_1.__importStar(require(\"../../../../shared/language/translate.directive\"));\nfunction MetricsRequestComponent_table_3_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n      \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n      \");\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \"\\n        \");\n    i0.ɵɵelementStart(7, \"ngb-progressbar\", 8);\n    i0.ɵɵtext(8, \"\\n          \");\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n      \");\n    i0.ɵɵelementStart(14, \"td\", 9);\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n      \");\n    i0.ɵɵelementStart(18, \"td\", 9);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(entry_r2.key);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"max\", ctx_r1.requestMetrics[\"all\"].count)(\"value\", entry_r2.value.count)(\"striped\", true)(\"animated\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(entry_r2.value.count);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\\n        \", i0.ɵɵpipeBind2(16, 8, ctx_r1.filterNaN(entry_r2.value.mean), \"1.0-2\"), \"\\n      \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(20, 11, entry_r2.value.max, \"1.0-2\"));\n  }\n}\nfunction MetricsRequestComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 2);\n    i0.ɵɵtext(1, \"\\n  \");\n    i0.ɵɵelementStart(2, \"thead\");\n    i0.ɵɵtext(3, \"\\n    \");\n    i0.ɵɵelementStart(4, \"tr\");\n    i0.ɵɵtext(5, \"\\n      \");\n    i0.ɵɵelementStart(6, \"th\", 3);\n    i0.ɵɵtext(7, \"Code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n      \");\n    i0.ɵɵelementStart(9, \"th\", 4);\n    i0.ɵɵtext(10, \"Count\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n      \");\n    i0.ɵɵelementStart(12, \"th\", 5);\n    i0.ɵɵtext(13, \"Mean\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n      \");\n    i0.ɵɵelementStart(15, \"th\", 6);\n    i0.ɵɵtext(16, \"Max\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n  \");\n    i0.ɵɵelementStart(20, \"tbody\");\n    i0.ɵɵtext(21, \"\\n    \");\n    i0.ɵɵtemplate(22, MetricsRequestComponent_table_3_tr_22_Template, 22, 14, \"tr\", 7);\n    i0.ɵɵpipe(23, \"keyvalue\");\n    i0.ɵɵtext(24, \"\\n  \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(22);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(23, 1, ctx_r0.requestMetrics[\"percode\"]));\n  }\n}\nclass MetricsRequestComponent {\n  filterNaN(input) {\n    return isNaN(input) ? 0 : input;\n  }\n}\nexports.MetricsRequestComponent = MetricsRequestComponent;\nMetricsRequestComponent.ɵfac = function MetricsRequestComponent_Factory(t) {\n  return new (t || MetricsRequestComponent)();\n};\nMetricsRequestComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MetricsRequestComponent,\n  selectors: [[\"ic-metrics-request\"]],\n  inputs: {\n    requestMetrics: \"requestMetrics\",\n    updating: \"updating\"\n  },\n  decls: 5,\n  vars: 1,\n  consts: [[\"id\", \"requestMetrics\", \"icTranslate\", \"metrics.jvm.http.title\"], [\"class\", \"table table-striped\", \"aria-describedby\", \"requestMetrics\", 4, \"ngIf\"], [\"aria-describedby\", \"requestMetrics\", 1, \"table\", \"table-striped\"], [\"scope\", \"col\", \"icTranslate\", \"metrics.jvm.http.table.code\"], [\"scope\", \"col\", \"icTranslate\", \"metrics.jvm.http.table.count\"], [\"scope\", \"col\", \"icTranslate\", \"metrics.jvm.http.table.mean\", 1, \"text-end\"], [\"scope\", \"col\", \"icTranslate\", \"metrics.jvm.http.table.max\", 1, \"text-end\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"success\", 3, \"max\", \"value\", \"striped\", \"animated\"], [1, \"text-end\"]],\n  template: function MetricsRequestComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\", 0);\n      i0.ɵɵtext(1, \"HTTP requests (time in millisecond)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(2, \"\\n\\n\");\n      i0.ɵɵtemplate(3, MetricsRequestComponent_table_3_Template, 26, 3, \"table\", 1);\n      i0.ɵɵtext(4, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.updating && ctx.requestMetrics);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.NgbProgressbar, i3.TranslateDirective, i1.DecimalPipe, i1.KeyValuePipe],\n  encapsulation: 2,\n  changeDetection: 0\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;IAYIA,0BAA+D;IAC7DA;IAAAA,0BAAI;IAAAA,YAAe;IAAAA,iBAAK;IACxBA;IAAAA,0BAAI;IACFA;IAAAA,0CAAoI;IAClIA;IAAAA,4BAAM;IAAAA,aAAuB;IAAAA,iBAAO;IACtCA;IAAAA,iBAAkB;IACpBA;IAAAA,iBAAK;IACLA;IAAAA,8BAAqB;IACnBA,aACF;;IAAAA,iBAAK;IACLA;IAAAA,8BAAqB;IAAAA,aAAuC;;IAAAA,iBAAK;IACnEA;IAAAA,iBAAK;;;;;IAVCA,eAAe;IAAfA,kCAAe;IAEAA,eAAmC;IAAnCA,wDAAmC;IAC5CA,eAAuB;IAAvBA,0CAAuB;IAI/BA,eACF;IADEA,sHACF;IACqBA,eAAuC;IAAvCA,yEAAuC;;;;;IApBlEA,gCAAyG;IACvGA;IAAAA,6BAAO;IACLA;IAAAA,0BAAI;IACFA;IAAAA,6BAA0D;IAAAA,oBAAI;IAAAA,iBAAK;IACnEA;IAAAA,6BAA2D;IAAAA,sBAAK;IAAAA,iBAAK;IACrEA;IAAAA,8BAA2E;IAAAA,qBAAI;IAAAA,iBAAK;IACpFA;IAAAA,8BAA0E;IAAAA,oBAAG;IAAAA,iBAAK;IACpFA;IAAAA,iBAAK;IACPA;IAAAA,iBAAQ;IACRA;IAAAA,8BAAO;IACLA;IAAAA,kFAWK;;IACPA;IAAAA,iBAAQ;IACVA;IAAAA,iBAAQ;;;;IAbkBA,gBAAuC;IAAvCA,iFAAuC;;;ACRjE,MAKaC,uBAAuB;EAWlCC,SAAS,CAACC,KAAa;IACrB,OAAOC,KAAK,CAACD,KAAK,CAAC,GAAG,CAAC,GAAGA,KAAK;EACjC;;AAlBFE;;mBAKaJ,uBAAuB;AAAA;;QAAvBA,uBAAuB;EAAAK;EAAAC;IAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTpCb,6BAA6D;MAAAA,mDAAmC;MAAAA,iBAAK;MAErGA;MAAAA,6EAuBQ;MACRA;;;MAxBoCA,eAAiC;MAAjCA,0DAAiC","names":["i0","MetricsRequestComponent","filterNaN","input","isNaN","exports","selectors","inputs","requestMetrics","updating","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\metrics\\blocks\\metrics-request\\metrics-request.component.html","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\admin\\metrics\\blocks\\metrics-request\\metrics-request.component.ts"],"sourcesContent":["<h3 id=\"requestMetrics\" icTranslate=\"metrics.jvm.http.title\">HTTP requests (time in millisecond)</h3>\r\n\r\n<table class=\"table table-striped\" *ngIf=\"!updating && requestMetrics\" aria-describedby=\"requestMetrics\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\" icTranslate=\"metrics.jvm.http.table.code\">Code</th>\r\n      <th scope=\"col\" icTranslate=\"metrics.jvm.http.table.count\">Count</th>\r\n      <th scope=\"col\" class=\"text-end\" icTranslate=\"metrics.jvm.http.table.mean\">Mean</th>\r\n      <th scope=\"col\" class=\"text-end\" icTranslate=\"metrics.jvm.http.table.max\">Max</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let entry of requestMetrics['percode'] | keyvalue\">\r\n      <td>{{ entry.key }}</td>\r\n      <td>\r\n        <ngb-progressbar [max]=\"requestMetrics['all'].count\" [value]=\"entry.value.count\" [striped]=\"true\" [animated]=\"false\" type=\"success\">\r\n          <span>{{ entry.value.count }}</span>\r\n        </ngb-progressbar>\r\n      </td>\r\n      <td class=\"text-end\">\r\n        {{ filterNaN(entry.value.mean) | number: '1.0-2' }}\r\n      </td>\r\n      <td class=\"text-end\">{{ entry.value.max | number: '1.0-2' }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\nimport { HttpServerRequests } from 'app/admin/metrics/metrics.model';\r\n\r\n@Component({\r\n  selector: 'ic-metrics-request',\r\n  templateUrl: './metrics-request.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MetricsRequestComponent {\r\n  /**\r\n   * object containing http request related metrics\r\n   */\r\n  @Input() requestMetrics?: HttpServerRequests;\r\n\r\n  /**\r\n   * boolean field saying if the metrics are in the process of being updated\r\n   */\r\n  @Input() updating?: boolean;\r\n\r\n  filterNaN(input: number): number {\r\n    return isNaN(input) ? 0 : input;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}