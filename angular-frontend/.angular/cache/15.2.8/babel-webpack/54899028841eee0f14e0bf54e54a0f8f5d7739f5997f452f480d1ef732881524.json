{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InstalmentTabComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@angular/core\");\nconst nspapp_constants_1 = require(\"app/shared/constants/nspapp.constants\");\nconst common_1 = require(\"@angular/common\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/payment/instalment/service/instalment.service\"));\nconst i2 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/shared/confirm/nsp-confirm.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i5 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i6 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i7 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i8 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i9 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i10 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i11 = tslib_1.__importStar(require(\"primeng/tooltip\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/dialog\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/confirmpopup\"));\nconst i15 = tslib_1.__importStar(require(\"primeng/ripple\"));\nconst i16 = tslib_1.__importStar(require(\"../../instalment/instalment-terminate/instalment-terminate.component\"));\nconst i17 = tslib_1.__importStar(require(\"../../../shared/pipe/default-string.pipe\"));\nconst _c0 = [\"dt\"];\nconst _c1 = [\"instalmentTerminateComponent\"];\nfunction InstalmentTabComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n    \");\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵtext(2, \"\\n      \");\n    i0.ɵɵelementStart(3, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function InstalmentTabComponent_ng_template_3_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(1);\n      return i0.ɵɵresetView(ctx_r7.exportCSV(_r0));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n      \");\n    i0.ɵɵelementStart(5, \"div\", 12);\n    i0.ɵɵtext(6, \"\\n        \");\n    i0.ɵɵelementStart(7, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function InstalmentTabComponent_ng_template_3_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onOpenTerminate(ctx_r9.displayTerminateInstalmentDialog));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n        \");\n    i0.ɵɵelement(9, \"p-confirmPopup\", 14);\n    i0.ɵɵtext(10, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n  \");\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"disabled\", (ctx_r1.selectedInstalmentList == null ? null : ctx_r1.selectedInstalmentList.length) === 0);\n  }\n}\nfunction InstalmentTabComponent_ng_template_5_p_tableHeaderCheckbox_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-tableHeaderCheckbox\");\n  }\n}\nfunction InstalmentTabComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n    \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n      \");\n    i0.ɵɵelementStart(3, \"th\", 15);\n    i0.ɵɵtemplate(4, InstalmentTabComponent_ng_template_5_p_tableHeaderCheckbox_4_Template, 1, 0, \"p-tableHeaderCheckbox\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n      \");\n    i0.ɵɵelementStart(6, \"th\", 17);\n    i0.ɵɵtext(7, \"SN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n      \");\n    i0.ɵɵelementStart(9, \"th\", 18);\n    i0.ɵɵtext(10, \"Created By\");\n    i0.ɵɵelement(11, \"p-sortIcon\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n      \");\n    i0.ɵɵelementStart(13, \"th\", 20);\n    i0.ɵɵtext(14, \"Terminated By\");\n    i0.ɵɵelement(15, \"p-sortIcon\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n      \");\n    i0.ɵɵelementStart(17, \"th\", 22);\n    i0.ɵɵtext(18, \"Termination Approved By\");\n    i0.ɵɵelement(19, \"p-sortIcon\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n      \");\n    i0.ɵɵelementStart(21, \"th\", 24);\n    i0.ɵɵtext(22, \"Termination Reason\");\n    i0.ɵɵelement(23, \"p-sortIcon\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \"\\n      \");\n    i0.ɵɵelementStart(25, \"th\", 26);\n    i0.ɵɵtext(26, \"Status\");\n    i0.ɵɵelement(27, \"p-sortIcon\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n      \");\n    i0.ɵɵelementStart(29, \"th\", 28);\n    i0.ɵɵtext(30, \"Last Instalment Refund\");\n    i0.ɵɵelement(31, \"p-sortIcon\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(32, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(33, \"\\n  \");\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.selectableRowsExist);\n  }\n}\nfunction InstalmentTabComponent_ng_template_7_p_tableCheckbox_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-tableCheckbox\", 32);\n  }\n  if (rf & 2) {\n    const instalment_r11 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"value\", instalment_r11);\n  }\n}\nconst _c2 = function (a1) {\n  return [\"/payment/instalment/\", a1];\n};\nfunction InstalmentTabComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n    \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n      \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtemplate(4, InstalmentTabComponent_ng_template_7_p_tableCheckbox_4_Template, 1, 1, \"p-tableCheckbox\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n      \");\n    i0.ɵɵelementStart(6, \"td\")(7, \"a\", 31);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n      \");\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelement(12, \"br\");\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n      \");\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"defaultString\");\n    i0.ɵɵelement(19, \"br\");\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\n      \");\n    i0.ɵɵelementStart(23, \"td\");\n    i0.ɵɵtext(24);\n    i0.ɵɵpipe(25, \"defaultString\");\n    i0.ɵɵelement(26, \"br\");\n    i0.ɵɵtext(27);\n    i0.ɵɵpipe(28, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n      \");\n    i0.ɵɵelementStart(30, \"td\");\n    i0.ɵɵtext(31);\n    i0.ɵɵpipe(32, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(33, \"\\n      \");\n    i0.ɵɵelementStart(34, \"td\");\n    i0.ɵɵtext(35);\n    i0.ɵɵpipe(36, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(37, \"\\n      \");\n    i0.ɵɵelementStart(38, \"td\");\n    i0.ɵɵtext(39);\n    i0.ɵɵpipe(40, \"defaultString\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(41, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n  \");\n  }\n  if (rf & 2) {\n    const instalment_r11 = ctx.$implicit;\n    const i_r12 = ctx.rowIndex;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", (instalment_r11 == null ? null : instalment_r11.status) === \"ONGOING\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(31, _c2, instalment_r11.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i_r12 + 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", instalment_r11.submittedBy, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(14, 12, instalment_r11.submittedDt, \"dd-MM-yyyy '('HHmm')'\"), \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(18, 15, instalment_r11.terminationRequestedBy), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(21, 17, instalment_r11.terminationRequestedDt, \"dd-MM-yyyy '('HHmm')'\"), \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(25, 20, instalment_r11.terminationReviewedBy), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(28, 22, instalment_r11.terminationReviewedDt, \"dd-MM-yyyy '('HHmm')'\"), \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(32, 25, instalment_r11.reason));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(36, 27, ctx_r3.Ns2Status[instalment_r11.status]));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(40, 29, instalment_r11.lastRefundDate));\n  }\n}\nfunction InstalmentTabComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n    \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n      \");\n    i0.ɵɵelementStart(3, \"td\", 33);\n    i0.ɵɵtext(4, \"No Instalment records found.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n  \");\n  }\n}\nconst _c3 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nfunction InstalmentTabComponent_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n    \");\n    i0.ɵɵelementStart(1, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function InstalmentTabComponent_ng_template_17_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.displayTerminateInstalmentDialog.display = false);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\n    \");\n    i0.ɵɵelementStart(3, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function InstalmentTabComponent_ng_template_17_Template_button_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.confirmTerminateSelection($event, \"terminateInstalmentRecords\", ctx_r17.displayTerminateInstalmentDialog));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n  \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c3));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(5, _c3));\n  }\n}\nconst _c4 = function () {\n  return [10, 25, 50];\n};\nconst _c5 = function () {\n  return {\n    width: \"40vw\"\n  };\n};\nconst _c6 = function () {\n  return {\n    \"960px\": \"75vw\"\n  };\n};\nclass InstalmentTabComponent {\n  constructor(instalmentService, toastService, nspConfirmService, n2httpService, exportUtilsService, dateUtilsService, localeId) {\n    this.instalmentService = instalmentService;\n    this.toastService = toastService;\n    this.nspConfirmService = nspConfirmService;\n    this.n2httpService = n2httpService;\n    this.exportUtilsService = exportUtilsService;\n    this.dateUtilsService = dateUtilsService;\n    this.localeId = localeId;\n    this.selectedId = '';\n    this.displayTerminateInstalmentDialog = {\n      display: false\n    };\n    // Enumeration object for decoding common NSPAY2.0 statuses\n    this.Ns2Status = nspapp_constants_1.Ns2Status;\n    this.pageData = {\n      currentPage: 0\n    };\n    this.pageSize = 10;\n    // Selection checkbox handling\n    this.selectAll = false;\n    this.selectedInstalmentList = [];\n    this.selectableRowsExist = false;\n  }\n  ngOnInit() {\n    this.instalmentList = [];\n    this.loading = false;\n  }\n  loadInstalments(event) {\n    this.loading = true;\n    this.lazyLoadEvent = event;\n    setTimeout(() => {\n      const options = this.n2httpService.convertLazyEvent(event, this.pageData, this.pageSize);\n      this.instalmentService.getByNSman(this.selectedId, options).subscribe(res => {\n        if (res.body?.data?.content) {\n          this.instalmentList = res.body.data.content;\n          this.selectableRecords = this.instalmentList.filter(value => this.Ns2Status[value.status] === nspapp_constants_1.Ns2Status.ONGOING).length;\n          this.selectableRowsExist = this.selectableRecords > 0;\n          this.totalRecords = res.body.data.totalElements;\n        } else {\n          this.instalmentList = [];\n          this.totalRecords = 0;\n          this.selectableRowsExist = false;\n          this.toastService.info('No records found');\n        }\n        this.loading = false;\n      }, error => {\n        // eslint-disable-next-line no-console\n        console.log(error.message);\n      });\n    }, 1000);\n  }\n  onSelectionChange(value = []) {\n    this.selectAll = value.length === this.selectableRecords;\n    this.selectedInstalmentList = value;\n  }\n  onSelectAllChange(event) {\n    const checked = event.checked;\n    if (checked) {\n      this.selectedInstalmentList = this.instalmentList.filter(value => this.Ns2Status[value.status] === nspapp_constants_1.Ns2Status.ONGOING);\n      this.selectAll = true;\n    } else {\n      this.selectedInstalmentList = [];\n      this.selectAll = false;\n    }\n  }\n  onPage(event) {\n    this.pageSize = event.rows;\n    this.pageData.currentPage = event.first / event.rows;\n    // Reset selection when loading another page\n    this.selectedInstalmentList = [];\n    this.selectAll = false;\n  }\n  exportCSV(dataTable) {\n    const options = this.n2httpService.convertLazyEvent(this.lazyLoadEvent, 0, this.totalRecords);\n    this.instalmentService.getByNSman(this.selectedId, options).subscribe(resp => {\n      if (resp.body?.data?.content) {\n        const data = resp.body?.data?.content;\n        const columns = [{\n          field: 'sn',\n          header: 'SN',\n          index: 0\n        }, {\n          field: 'createdBy',\n          header: 'Transaction Id',\n          index: 1\n        }, {\n          field: 'terminateBy',\n          header: 'Terminated By',\n          index: 2\n        }, {\n          field: 'terminateApprovedBy',\n          header: 'Termination Approved By',\n          index: 3\n        }, {\n          field: 'terminateReason',\n          header: 'Termination Reason',\n          index: 4\n        }, {\n          field: 'status',\n          header: 'Status',\n          index: 5\n        }, {\n          field: 'lastRefundDate',\n          header: 'Last Instalment Refund',\n          index: 6\n        }];\n        const dtoList = [];\n        console.log(\"data\", data);\n        data.forEach((d, index) => {\n          const dto = {\n            sn: index + 1,\n            createdBy: `${String(d.submittedBy ? d.submittedBy : \"\")} ${String(this.dateUtilsService.formatStrDate(d.submittedDt, \"DD-MM-YYYY (HHmm)\"))}`,\n            terminateBy: `${String(d.terminationRequestedBy ? d.terminationRequestedBy : \"\")} ${String(this.dateUtilsService.formatStrDate(d.terminationRequestedDt, \"DD-MM-YYYY (HHmm)\"))}`,\n            terminateApprovedBy: `${String(d.terminationReviewedBy ? d.terminationReviewedBy : \"\")} ${String(this.dateUtilsService.formatStrDate(d.terminationReviewedDt, \"DD-MM-YYYY (HHmm)\"))}`,\n            terminateReason: d.reason,\n            status: this.Ns2Status[d.status],\n            lastRefundDate: d.lastRefundDate\n          };\n          dtoList.push(dto);\n        });\n        this.exportUtilsService.exportCSV(dataTable, dtoList, resp.body.data.total_no_of_elems, columns, \"data_\".concat((0, common_1.formatDate)(new Date(), \"dd-MM-YYYY\", this.localeId)));\n      }\n    }, error => {\n      console.log(error.error?.error_desc);\n      this.loading = false;\n    });\n  }\n  onOpenTerminate(dialog) {\n    // Populate terminate dialog's data table\n    // console.log(this.selectedInstalments);\n    this.instalmentTerminateComponent.instalmentRecordsToTerminate = this.selectedInstalmentList;\n    dialog.display = true;\n  }\n  confirmTerminateSelection(event, key, dialog) {\n    this.nspConfirmService.onConfirmPopup(event, key, dialog, () => {\n      this.terminateSelection();\n    });\n  }\n  terminateSelection() {\n    this.selectedInstalmentList.forEach(instalment => {\n      instalment.reason = this.instalmentTerminateComponent.terminateInstalmentForm.get('reason').value;\n    });\n    this.instalmentService.terminate(this.selectedInstalmentList).subscribe(res => {\n      if (res.body?.data) {\n        this.toastService.success(res.body?.success_message);\n        this.resetDataTable();\n      }\n    }, error => {\n      console.log(error.message);\n    });\n  }\n  resetDataTable() {\n    this.selectAll = false;\n    this.selectedInstalmentList = [];\n    this.table.filters = {};\n    this.pageData.currentPage = 0;\n    this.pageSize = 10;\n    this.table.reset();\n  }\n}\nexports.InstalmentTabComponent = InstalmentTabComponent;\nInstalmentTabComponent.ɵfac = function InstalmentTabComponent_Factory(t) {\n  return new (t || InstalmentTabComponent)(i0.ɵɵdirectiveInject(i1.InstalmentService), i0.ɵɵdirectiveInject(i2.CustomToastService), i0.ɵɵdirectiveInject(i3.NspConfirmationService), i0.ɵɵdirectiveInject(i4.Ns2HttpService), i0.ɵɵdirectiveInject(i5.ExportUtilsService), i0.ɵɵdirectiveInject(i6.DateUtilsService), i0.ɵɵdirectiveInject(core_1.LOCALE_ID));\n};\nInstalmentTabComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InstalmentTabComponent,\n  selectors: [[\"n2-instalment-tab\"]],\n  viewQuery: function InstalmentTabComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.instalmentTerminateComponent = _t.first);\n    }\n  },\n  inputs: {\n    selectedId: \"selectedId\"\n  },\n  decls: 22,\n  vars: 20,\n  consts: [[\"styleClass\", \"p-datatable-gridlines\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"value\", \"selection\", \"selectAll\", \"paginator\", \"rows\", \"rowsPerPageOptions\", \"showCurrentPageReport\", \"lazy\", \"totalRecords\", \"loading\", \"selectionChange\", \"selectAllChange\", \"onLazyLoad\", \"onPage\"], [\"dt\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"header\", \"Terminate Instalment Plan\", 3, \"visible\", \"breakpoints\", \"draggable\", \"resizable\", \"modal\", \"visibleChange\"], [\"instalmentTerminateComponent\", \"\"], [\"pTemplate\", \"footer\"], [\"key\", \"confirmTerminateInstalment\"], [1, \"flex\", \"justify-content-between\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-file\", \"pTooltip\", \"CSV\", \"tooltipPosition\", \"bottom\", 3, \"click\"], [1, \"col-6\", \"flex\", \"justify-content-end\", 2, \"padding\", \"0\"], [\"type\", \"button\", \"pButton\", \"\", \"label\", \"Terminate\", \"pTooltip\", \"Terminate Instalment Records\", \"tooltipPosition\", \"bottom\", 3, \"disabled\", \"click\"], [\"key\", \"terminateInstalmentRecords\"], [\"scope\", \"col\", 2, \"width\", \"3%\"], [4, \"ngIf\"], [\"scope\", \"col\", 2, \"width\", \"5%\"], [\"scope\", \"col\", \"pSortableColumn\", \"createdBy\"], [\"field\", \"createdBy\"], [\"scope\", \"col\", \"pSortableColumn\", \"terminationRequestedDt\"], [\"field\", \"terminationRequestedDt\"], [\"scope\", \"col\", \"pSortableColumn\", \"terminationReviewedDt\"], [\"field\", \"terminationReviewedDt\"], [\"scope\", \"col\", \"pSortableColumn\", \"reason\"], [\"field\", \"reason\"], [\"scope\", \"col\", \"pSortableColumn\", \"status\"], [\"field\", \"status\"], [\"scope\", \"col\", \"pSortableColumn\", \"lastInstalmentRefund\"], [\"field\", \"lastInstalmentRefund\"], [3, \"value\", 4, \"ngIf\"], [3, \"routerLink\"], [3, \"value\"], [\"colspan\", \"8\"], [\"pButton\", \"\", \"label\", \"Cancel\", 1, \"p-button-danger\", 3, \"click\"], [\"pButton\", \"\", \"label\", \"Submit\", 3, \"click\"]],\n  template: function InstalmentTabComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-table\", 0, 1);\n      i0.ɵɵlistener(\"selectionChange\", function InstalmentTabComponent_Template_p_table_selectionChange_0_listener($event) {\n        return ctx.selectedInstalmentList = $event;\n      })(\"selectionChange\", function InstalmentTabComponent_Template_p_table_selectionChange_0_listener($event) {\n        return ctx.onSelectionChange($event);\n      })(\"selectAllChange\", function InstalmentTabComponent_Template_p_table_selectAllChange_0_listener($event) {\n        return ctx.onSelectAllChange($event);\n      })(\"onLazyLoad\", function InstalmentTabComponent_Template_p_table_onLazyLoad_0_listener($event) {\n        return ctx.loadInstalments($event);\n      })(\"onPage\", function InstalmentTabComponent_Template_p_table_onPage_0_listener($event) {\n        return ctx.onPage($event);\n      });\n      i0.ɵɵtext(2, \"\\n  \");\n      i0.ɵɵtemplate(3, InstalmentTabComponent_ng_template_3_Template, 13, 1, \"ng-template\", 2);\n      i0.ɵɵtext(4, \"\\n  \");\n      i0.ɵɵtemplate(5, InstalmentTabComponent_ng_template_5_Template, 34, 1, \"ng-template\", 3);\n      i0.ɵɵtext(6, \"\\n  \");\n      i0.ɵɵtemplate(7, InstalmentTabComponent_ng_template_7_Template, 43, 33, \"ng-template\", 4);\n      i0.ɵɵtext(8, \"\\n\\n  \");\n      i0.ɵɵtemplate(9, InstalmentTabComponent_ng_template_9_Template, 7, 0, \"ng-template\", 5);\n      i0.ɵɵtext(10, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(11, \"\\n\\n\\n\");\n      i0.ɵɵelementStart(12, \"p-dialog\", 6);\n      i0.ɵɵlistener(\"visibleChange\", function InstalmentTabComponent_Template_p_dialog_visibleChange_12_listener($event) {\n        return ctx.displayTerminateInstalmentDialog.display = $event;\n      });\n      i0.ɵɵtext(13, \"\\n\\n  \");\n      i0.ɵɵelement(14, \"n2-instalment-terminate\", null, 7);\n      i0.ɵɵtext(16, \"\\n  \");\n      i0.ɵɵtemplate(17, InstalmentTabComponent_ng_template_17_Template, 5, 6, \"ng-template\", 8);\n      i0.ɵɵtext(18, \"\\n  \");\n      i0.ɵɵelement(19, \"p-confirmPopup\", 9);\n      i0.ɵɵtext(20, \"\\n\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(21, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"value\", ctx.instalmentList)(\"selection\", ctx.selectedInstalmentList)(\"selectAll\", ctx.selectAll)(\"paginator\", true)(\"rows\", 10)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(17, _c4))(\"showCurrentPageReport\", true)(\"lazy\", true)(\"totalRecords\", ctx.totalRecords)(\"loading\", ctx.loading);\n      i0.ɵɵadvance(12);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(18, _c5));\n      i0.ɵɵproperty(\"visible\", ctx.displayTerminateInstalmentDialog.display)(\"breakpoints\", i0.ɵɵpureFunction0(19, _c6))(\"draggable\", false)(\"resizable\", false)(\"modal\", true);\n    }\n  },\n  dependencies: [i7.NgIf, i8.PrimeTemplate, i9.ButtonDirective, i10.RouterLink, i11.Tooltip, i12.Table, i12.SortableColumn, i12.SortIcon, i12.TableCheckbox, i12.TableHeaderCheckbox, i13.Dialog, i14.ConfirmPopup, i15.Ripple, i16.InstalmentTerminateComponent, i7.DatePipe, i17.DefaultStringPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbnN0YWxtZW50LXRhYi5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvcGF5bWVudC9vdmVycGF5bWVudC9pbnN0YWxtZW50LXRhYi9pbnN0YWxtZW50LXRhYi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsNEtBQTRLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;AACA;AASA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ICMIA;IAAAA,+BAA0C;IACxCA;IAAAA,kCAAwH;IAAhEA;MAAAA;MAAA;MAAA;MAAA,OAASA,oCAAa;IAAA,EAAC;IAAyCA,iBAAS;IACjIA;IAAAA,+BAA+D;IAC7DA;IAAAA,kCAA+N;IAA/KA;MAAAA;MAAA;MAAA,OAASA,8EAAiD;IAAA,EAAC;IAAoHA,iBAAS;IACxOA;IAAAA,qCAAkE;IACpEA;IAAAA,iBAAM;IACRA;IAAAA,iBAAM;IACRA;;;;IAJmLA,eAAiD;IAAjDA,sHAAiD;;;;;IAO/LA,wCAA2E;;;;;IAD9GA;IAAAA,0BAAI;IACFA;IAAAA,8BAAiC;IAAAA,0HAA2E;IAAAA,iBAAK;IACjHA;IAAAA,8BAAkC;IAAAA,kBAAE;IAAAA,iBAAK;IACzCA;IAAAA,8BAA4C;IAAAA,2BAAU;IAAAA,kCAA2C;IAAAA,iBAAK;IACtGA;IAAAA,+BAAyD;IAAAA,8BAAa;IAAAA,kCAAwD;IAAAA,iBAAK;IACnIA;IAAAA,+BAAwD;IAAAA,wCAAuB;IAAAA,kCAAuD;IAAAA,iBAAK;IAC3IA;IAAAA,+BAAyC;IAAAA,mCAAkB;IAAAA,kCAAwC;IAAAA,iBAAK;IACxGA;IAAAA,+BAAyC;IAAAA,uBAAM;IAAAA,kCAAwC;IAAAA,iBAAK;IAC5FA;IAAAA,+BAAuD;IAAAA,uCAAsB;IAAAA,kCAAsD;IAAAA,iBAAK;IAC1IA;IAAAA,iBAAK;IACPA;;;;IAT6DA,eAAyB;IAAzBA,iDAAyB;;;;;IAY9EA,sCAAkG;;;;IAAvCA,sCAAoB;;;;;;;;IADrFA;IAAAA,0BAAI;IACFA;IAAAA,0BAAI;IAAAA,8GAAkG;IAAAA,iBAAK;IAC3GA;IAAAA,0BAAI;IAA0DA,YAAS;IAAAA,iBAAI;IAC3EA;IAAAA,2BAAI;IAAAA,aAA2B;IAAAA,sBAAM;IAACA,aAA6D;;IAAAA,iBAAK;IACxGA;IAAAA,2BAAI;IAAAA,aAAuD;;IAAAA,sBAAM;IAACA,aAAwE;;IAAAA,iBAAK;IAC/IA;IAAAA,2BAAI;IAAAA,aAAsD;;IAAAA,sBAAM;IAACA,aAAuE;;IAAAA,iBAAK;IAC7IA;IAAAA,2BAAI;IAAAA,aAAqC;;IAAAA,iBAAK;IAC9CA;IAAAA,2BAAI;IAAAA,aAA+C;;IAAAA,iBAAK;IACxDA;IAAAA,2BAAI;IAAAA,aAA6C;;IAAAA,iBAAK;IACxDA;IAAAA,iBAAK;IACPA;;;;;;IAT2BA,eAAsC;IAAtCA,4FAAsC;IACtDA,eAAsD;IAAtDA,2EAAsD;IAACA,eAAS;IAATA,+BAAS;IACnEA,eAA2B;IAA3BA,0DAA2B;IAAOA,eAA6D;IAA7DA,2GAA6D;IAC/FA,eAAuD;IAAvDA,6FAAuD;IAAOA,eAAwE;IAAxEA,sHAAwE;IACtIA,eAAsD;IAAtDA,4FAAsD;IAAOA,eAAuE;IAAvEA,qHAAuE;IACpIA,eAAqC;IAArCA,mEAAqC;IACrCA,eAA+C;IAA/CA,qFAA+C;IAC/CA,eAA6C;IAA7CA,2EAA6C;;;;;IAKnDA;IAAAA,0BAAI;IACFA;IAAAA,8BAAgB;IAAAA,4CAA4B;IAAAA,iBAAK;IACnDA;IAAAA,iBAAK;IACPA;;;;;;;;;;;;IAUEA;IAAAA,kCACoE;IADbA;MAAAA;MAAA;MAAA,OAASA,kEAAyC,KAAK;IAAA,EAAC;IAC3CA,iBAAS;IAC7EA;IAAAA,kCACoE;IADrCA;MAAAA;MAAA;MAAA,OAASA,yDAAkC,4BAA4B,2CAAmC;IAAA,EAAC;IACtEA,iBAAS;IAC/EA;;;IAHUA,eAA2D;IAA3DA,yCAA2D;IAE3DA,eAA2D;IAA3DA,yCAA2D;;;;;;;;;;;;;;;;ADtDvE,MAKaC,sBAAsB;EA+BjCC,YACUC,iBAAoC,EACpCC,YAAgC,EAChCC,iBAAyC,EACzCC,aAA6B,EAC7BC,kBAAsC,EACtCC,gBAAkC,EACbC,QAAgB;IANrC,sBAAiB,GAAjBN,iBAAiB;IACjB,iBAAY,GAAZC,YAAY;IACZ,sBAAiB,GAAjBC,iBAAiB;IACjB,kBAAa,GAAbC,aAAa;IACb,uBAAkB,GAAlBC,kBAAkB;IAClB,qBAAgB,GAAhBC,gBAAgB;IACK,aAAQ,GAARC,QAAQ;IApC9B,eAAU,GAAG,EAAE;IAGxB,qCAAgC,GAAQ;MAAEC,OAAO,EAAE;IAAK,CAAE;IAG1D;IACA,cAAS,GAAiCC,4BAAS;IAMnD,aAAQ,GAA4B;MAClCC,WAAW,EAAE;KACd;IACD,aAAQ,GAAG,EAAE;IAGb;IACA,cAAS,GAAG,KAAK;IACjB,2BAAsB,GAAsB,EAAE;IAC9C,wBAAmB,GAAG,KAAK;EAgB3B;EAEAC,QAAQ;IACN,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACC,OAAO,GAAG,KAAK;EACtB;EAEAC,eAAe,CAACC,KAAoB;IAClC,IAAI,CAACF,OAAO,GAAG,IAAI;IACnB,IAAI,CAACG,aAAa,GAAGD,KAAK;IAE1BE,UAAU,CAAC,MAAK;MACd,MAAMC,OAAO,GAAG,IAAI,CAACd,aAAa,CAACe,gBAAgB,CAACJ,KAAK,EAAE,IAAI,CAACK,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC;MAExF,IAAI,CAACpB,iBAAiB,CAACqB,UAAU,CAAC,IAAI,CAACC,UAAU,EAAEL,OAAO,CAAC,CAACM,SAAS,CAClEC,GAAsB,IAAI;QACzB,IAAIA,GAAG,CAACC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAE;UAC3B,IAAI,CAAChB,cAAc,GAAGa,GAAG,CAACC,IAAI,CAACC,IAAI,CAACC,OAAO;UAC3C,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACjB,cAAc,CAACkB,MAAM,CAACC,KAAK,IAAI,IAAI,CAACC,SAAS,CAACD,KAAK,CAACE,MAAM,CAAC,KAAKxB,4BAAS,CAACyB,OAAO,CAAC,CAACC,MAAM;UACvH,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAACP,iBAAiB,GAAG,CAAC;UACrD,IAAI,CAACQ,YAAY,GAAGZ,GAAG,CAACC,IAAI,CAACC,IAAI,CAACW,aAAa;SAChD,MAAM;UACL,IAAI,CAAC1B,cAAc,GAAG,EAAE;UACxB,IAAI,CAACyB,YAAY,GAAG,CAAC;UACrB,IAAI,CAACD,mBAAmB,GAAG,KAAK;UAChC,IAAI,CAAClC,YAAY,CAACqC,IAAI,CAAC,kBAAkB,CAAC;;QAE5C,IAAI,CAAC1B,OAAO,GAAG,KAAK;MACtB,CAAC,EACA2B,KAAwB,IAAI;QAC3B;QACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;MAC5B,CAAC,CACF;IACH,CAAC,EAAE,IAAI,CAAC;EACV;EAEAC,iBAAiB,CAACb,QAAe,EAAE;IACjC,IAAI,CAACc,SAAS,GAAGd,KAAK,CAACI,MAAM,KAAK,IAAI,CAACN,iBAAiB;IACxD,IAAI,CAACiB,sBAAsB,GAAGf,KAAK;EACrC;EAEAgB,iBAAiB,CAAChC,KAAU;IAC1B,MAAMiC,OAAO,GAAGjC,KAAK,CAACiC,OAAO;IAE7B,IAAIA,OAAO,EAAE;MACX,IAAI,CAACF,sBAAsB,GAAG,IAAI,CAAClC,cAAc,CAACkB,MAAM,CAACC,KAAK,IAAI,IAAI,CAACC,SAAS,CAACD,KAAK,CAACE,MAAM,CAAC,KAAKxB,4BAAS,CAACyB,OAAO,CAAE;MACtH,IAAI,CAACW,SAAS,GAAG,IAAI;KACtB,MAAM;MACL,IAAI,CAACC,sBAAsB,GAAG,EAAE;MAChC,IAAI,CAACD,SAAS,GAAG,KAAK;;EAE1B;EAEAI,MAAM,CAAClC,KAAU;IACf,IAAI,CAACM,QAAQ,GAAGN,KAAK,CAACmC,IAAI;IAC1B,IAAI,CAAC9B,QAAQ,CAACV,WAAW,GAAGK,KAAK,CAACoC,KAAK,GAAGpC,KAAK,CAACmC,IAAI;IACpD;IACA,IAAI,CAACJ,sBAAsB,GAAG,EAAE;IAChC,IAAI,CAACD,SAAS,GAAG,KAAK;EACxB;EAEAO,SAAS,CAACC,SAAgB;IACxB,MAAMnC,OAAO,GAAG,IAAI,CAACd,aAAa,CAACe,gBAAgB,CAAC,IAAI,CAACH,aAAa,EAAE,CAAC,EAAE,IAAI,CAACqB,YAAY,CAAC;IAE7F,IAAI,CAACpC,iBAAiB,CAACqB,UAAU,CAAC,IAAI,CAACC,UAAU,EAAEL,OAAO,CAAC,CAACM,SAAS,CACnE8B,IAAI,IAAG;MACL,IAAGA,IAAI,CAAC5B,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAE;QAE3B,MAAMD,IAAI,GAAG2B,IAAI,CAAC5B,IAAI,EAAEC,IAAI,EAAEC,OAAO;QAErC,MAAM2B,OAAO,GACb,CACE;UAACC,KAAK,EAAE,IAAI;UAAEC,MAAM,EAAE,IAAI;UAAEC,KAAK,EAAE;QAAC,CAAC,EACrC;UAACF,KAAK,EAAE,WAAW;UAAEC,MAAM,EAAE,gBAAgB;UAAEC,KAAK,EAAE;QAAC,CAAC,EACxD;UAACF,KAAK,EAAE,aAAa;UAAEC,MAAM,EAAE,eAAe;UAAEC,KAAK,EAAE;QAAC,CAAC,EACzD;UAACF,KAAK,EAAE,qBAAqB;UAAEC,MAAM,EAAE,yBAAyB;UAAEC,KAAK,EAAE;QAAC,CAAC,EAC3E;UAACF,KAAK,EAAE,iBAAiB;UAAEC,MAAM,EAAE,oBAAoB;UAAEC,KAAK,EAAE;QAAC,CAAC,EAClE;UAACF,KAAK,EAAE,QAAQ;UAAEC,MAAM,EAAE,QAAQ;UAAEC,KAAK,EAAE;QAAC,CAAC,EAC7C;UAACF,KAAK,EAAE,gBAAgB;UAAEC,MAAM,EAAE,wBAAwB;UAAEC,KAAK,EAAE;QAAC,CAAC,CACtE;QAED,MAAMC,OAAO,GAAS,EAAE;QACxBlB,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEf,IAAI,CAAC;QACzBA,IAAI,CAACiC,OAAO,CAAC,CAACC,CAAkB,EAAEH,KAAa,KAAI;UACjD,MAAMI,GAAG,GAAG;YACVC,EAAE,EAAEL,KAAK,GAAG,CAAC;YACbM,SAAS,EAAE,GAAGC,MAAM,CAACJ,CAAC,CAACK,WAAW,GAAGL,CAAC,CAACK,WAAW,GAAG,EAAE,CAAC,IAAID,MAAM,CAAC,IAAI,CAAC3D,gBAAgB,CAAC6D,aAAa,CAACN,CAAC,CAACO,WAAW,EAAE,mBAAmB,CAAC,CAAC,EAAE;YAC7IC,WAAW,EAAE,GAAGJ,MAAM,CAACJ,CAAC,CAACS,sBAAsB,GAAGT,CAAC,CAACS,sBAAsB,GAAG,EAAE,CAAC,IAAIL,MAAM,CAAC,IAAI,CAAC3D,gBAAgB,CAAC6D,aAAa,CAACN,CAAC,CAACU,sBAAsB,EAAE,mBAAmB,CAAC,CAAC,EAAE;YAChLC,mBAAmB,EAAE,GAAGP,MAAM,CAACJ,CAAC,CAACY,qBAAqB,GAAGZ,CAAC,CAACY,qBAAqB,GAAG,EAAE,CAAC,IAAIR,MAAM,CAAC,IAAI,CAAC3D,gBAAgB,CAAC6D,aAAa,CAACN,CAAC,CAACa,qBAAqB,EAAE,mBAAmB,CAAC,CAAC,EAAE;YACrLC,eAAe,EAAEd,CAAC,CAACe,MAAM;YACzB3C,MAAM,EAAE,IAAI,CAACD,SAAS,CAAC6B,CAAC,CAAC5B,MAAM,CAAC;YAChC4C,cAAc,EAAEhB,CAAC,CAACgB;WACnB;UACDlB,OAAO,CAACmB,IAAI,CAAChB,GAAG,CAAC;QACnB,CAAC,CAAC;QACF,IAAI,CAACzD,kBAAkB,CAAC+C,SAAS,CAACC,SAAS,EAAEM,OAAO,EAACL,IAAI,CAAC5B,IAAI,CAACC,IAAI,CAACoD,iBAAiB,EAAExB,OAAO,EAC5F,OAAO,CAACyB,MAAM,CAAC,uBAAU,EAAC,IAAIC,IAAI,EAAE,EAAC,YAAY,EAAE,IAAI,CAAC1E,QAAQ,CAAC,CAAC,CAAC;;IAEzE,CAAC,EACDiC,KAAK,IAAG;MACNC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACA,KAAK,EAAE0C,UAAU,CAAC;MACpC,IAAI,CAACrE,OAAO,GAAG,KAAK;IACtB,CAAC,CAAC;EACN;EAGAsE,eAAe,CAACC,MAAW;IACzB;IACA;IACA,IAAI,CAACC,4BAA4B,CAACC,4BAA4B,GAAG,IAAI,CAACxC,sBAAsB;IAC5FsC,MAAM,CAAC5E,OAAO,GAAG,IAAI;EACvB;EAEA+E,yBAAyB,CAACxE,KAAY,EAAEyE,GAAW,EAAEJ,MAAW;IAC9D,IAAI,CAACjF,iBAAiB,CAACsF,cAAc,CAAC1E,KAAK,EAAEyE,GAAG,EAAEJ,MAAM,EAAE,MAAK;MAC7D,IAAI,CAACM,kBAAkB,EAAE;IAC3B,CAAC,CAAC;EACJ;EAEAA,kBAAkB;IAChB,IAAI,CAAC5C,sBAAsB,CAACc,OAAO,CAAE+B,UAA0B,IAAG;MAChEA,UAAU,CAACf,MAAM,GAAG,IAAI,CAACS,4BAA4B,CAACO,uBAAuB,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC9D,KAAK;IACnG,CAAC,CAAC;IACF,IAAI,CAAC9B,iBAAiB,CAAC6F,SAAS,CAAC,IAAI,CAAChD,sBAAsB,CAAC,CAACtB,SAAS,CACpEC,GAAsB,IAAI;MACzB,IAAIA,GAAG,CAACC,IAAI,EAAEC,IAAI,EAAE;QAClB,IAAI,CAACzB,YAAY,CAAC6F,OAAO,CAACtE,GAAG,CAACC,IAAI,EAAEsE,eAAe,CAAC;QACpD,IAAI,CAACC,cAAc,EAAE;;IAEzB,CAAC,EACAzD,KAAwB,IAAI;MAC3BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC5B,CAAC,CAAC;EACN;EAEAsD,cAAc;IACZ,IAAI,CAACpD,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,sBAAsB,GAAG,EAAE;IAChC,IAAI,CAACoD,KAAK,CAACC,OAAO,GAAG,EAAE;IACvB,IAAI,CAAC/E,QAAQ,CAACV,WAAW,GAAG,CAAC;IAC7B,IAAI,CAACW,QAAQ,GAAG,EAAE;IAClB,IAAI,CAAC6E,KAAK,CAACE,KAAK,EAAE;EACpB;;AA5LFC;;mBAKatG,sBAAsB,kSAsCvBuG,gBAAS;AAAA;;QAtCRvG,sBAAsB;EAAAwG;EAAAC;IAAA;;;;;;;;;;;;;;;;;;MCpBnC1G,qCAiB8B;MAd5BA;QAAA;MAAA,EAAsC;QAAA,OACnB2G,6BAAyB;MAAA,EADN;QAAA,OAGnBA,6BAAyB;MAAA,EAHN;QAAA,OAaxBA,2BAAuB;MAAA,EAbC;QAAA,OAc1BA,kBAAc;MAAA,EAdY;MAetC3G;MAAAA,wFAQc;MACdA;MAAAA,wFAWc;MACdA;MAAAA,yFAWc;MAEdA;MAAAA,uFAIc;MAChBA;MAAAA,iBAAU;MAGVA;MAAAA,oCAE2F;MAF9CA;QAAA;MAAA,EAAsD;MAIjGA;MAAAA,oDAAiF;MACjFA;MAAAA,yFAKc;MACdA;MAAAA,qCAAkE;MAEpEA;MAAAA,iBAAW;MACXA;;;MAxEEA,0CAAwB;MA4DhBA,gBAAyB;MAAzBA,0CAAyB;MAFUA,sEAAsD","names":["i0","InstalmentTabComponent","constructor","instalmentService","toastService","nspConfirmService","n2httpService","exportUtilsService","dateUtilsService","localeId","display","nspapp_constants_1","currentPage","ngOnInit","instalmentList","loading","loadInstalments","event","lazyLoadEvent","setTimeout","options","convertLazyEvent","pageData","pageSize","getByNSman","selectedId","subscribe","res","body","data","content","selectableRecords","filter","value","Ns2Status","status","ONGOING","length","selectableRowsExist","totalRecords","totalElements","info","error","console","log","message","onSelectionChange","selectAll","selectedInstalmentList","onSelectAllChange","checked","onPage","rows","first","exportCSV","dataTable","resp","columns","field","header","index","dtoList","forEach","d","dto","sn","createdBy","String","submittedBy","formatStrDate","submittedDt","terminateBy","terminationRequestedBy","terminationRequestedDt","terminateApprovedBy","terminationReviewedBy","terminationReviewedDt","terminateReason","reason","lastRefundDate","push","total_no_of_elems","concat","Date","error_desc","onOpenTerminate","dialog","instalmentTerminateComponent","instalmentRecordsToTerminate","confirmTerminateSelection","key","onConfirmPopup","terminateSelection","instalment","terminateInstalmentForm","get","terminate","success","success_message","resetDataTable","table","filters","reset","exports","core_1","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payment\\overpayment\\instalment-tab\\instalment-tab.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payment\\overpayment\\instalment-tab\\instalment-tab.component.html"],"sourcesContent":["import {HttpErrorResponse, HttpResponse} from '@angular/common/http';\r\nimport {Component, Inject, Input, LOCALE_ID, OnInit, ViewChild} from '@angular/core';\r\nimport {IInstalmentPlan} from 'app/payment/instalment/model/instalment-plan.model';\r\nimport {InstalmentService} from 'app/payment/instalment/service/instalment.service';\r\nimport {LazyLoadEvent} from 'primeng/api';\r\nimport {Table} from \"primeng/table\";\r\nimport {CustomToastService} from \"app/layouts/service/customtoast.service\";\r\nimport {NspConfirmationService} from \"app/shared/confirm/nsp-confirm.service\";\r\nimport {Ns2HttpService} from \"app/shared/service/ns2-http.service\";\r\nimport {InstalmentTerminateComponent} from \"app/payment/instalment/instalment-terminate/instalment-terminate.component\";\r\nimport { Ns2Status } from 'app/shared/constants/nspapp.constants';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'n2-instalment-tab',\r\n  templateUrl: './instalment-tab.component.html',\r\n  styleUrls: ['./instalment-tab.component.scss']\r\n})\r\nexport class InstalmentTabComponent implements OnInit {\r\n\r\n  @Input() selectedId = '';\r\n\r\n  instalmentList: IInstalmentPlan[];\r\n  displayTerminateInstalmentDialog: any = { display: false };\r\n\r\n\r\n  // Enumeration object for decoding common NSPAY2.0 statuses\r\n  Ns2Status: { [key: string]: Ns2Status } = Ns2Status\r\n\r\n  // Lazy loading\r\n  loading: boolean;\r\n  totalRecords: number;\r\n  selectableRecords: number;\r\n  pageData: { currentPage: number } = {\r\n    currentPage: 0\r\n  }\r\n  pageSize = 10;\r\n  lazyLoadEvent: LazyLoadEvent;\r\n\r\n  // Selection checkbox handling\r\n  selectAll = false;\r\n  selectedInstalmentList: IInstalmentPlan[] = [];\r\n  selectableRowsExist = false;\r\n\r\n  @ViewChild('dt') table: Table;\r\n\r\n  @ViewChild('instalmentTerminateComponent')\r\n  private instalmentTerminateComponent: InstalmentTerminateComponent;\r\n\r\n  constructor(\r\n    private instalmentService: InstalmentService,\r\n    private toastService: CustomToastService,\r\n    private nspConfirmService: NspConfirmationService,\r\n    private n2httpService: Ns2HttpService,\r\n    private exportUtilsService: ExportUtilsService,\r\n    private dateUtilsService: DateUtilsService,\r\n    @Inject(LOCALE_ID) protected localeId: string\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.instalmentList = [];\r\n    this.loading = false;\r\n  }\r\n\r\n  loadInstalments(event: LazyLoadEvent): void {\r\n    this.loading = true;\r\n    this.lazyLoadEvent = event;\r\n    \r\n    setTimeout(() => {\r\n      const options = this.n2httpService.convertLazyEvent(event, this.pageData, this.pageSize);\r\n      \r\n      this.instalmentService.getByNSman(this.selectedId, options).subscribe(\r\n        (res: HttpResponse<any>) => {\r\n          if (res.body?.data?.content) {\r\n            this.instalmentList = res.body.data.content;\r\n            this.selectableRecords = this.instalmentList.filter(value => this.Ns2Status[value.status] === Ns2Status.ONGOING).length;\r\n            this.selectableRowsExist = this.selectableRecords > 0;\r\n            this.totalRecords = res.body.data.totalElements;\r\n          } else {\r\n            this.instalmentList = [];\r\n            this.totalRecords = 0;\r\n            this.selectableRowsExist = false;\r\n            this.toastService.info('No records found');\r\n          }\r\n          this.loading = false;\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          // eslint-disable-next-line no-console\r\n          console.log(error.message);\r\n        }\r\n      );\r\n    }, 1000);\r\n  }\r\n\r\n  onSelectionChange(value: any[] = []): void {\r\n    this.selectAll = value.length === this.selectableRecords;\r\n    this.selectedInstalmentList = value;\r\n  }\r\n\r\n  onSelectAllChange(event: any): void {\r\n    const checked = event.checked;\r\n\r\n    if (checked) {\r\n      this.selectedInstalmentList = this.instalmentList.filter(value => this.Ns2Status[value.status] === Ns2Status.ONGOING );\r\n      this.selectAll = true;\r\n    } else {\r\n      this.selectedInstalmentList = [];\r\n      this.selectAll = false;\r\n    }\r\n  }\r\n\r\n  onPage(event: any): void {\r\n    this.pageSize = event.rows;\r\n    this.pageData.currentPage = event.first / event.rows;\r\n    // Reset selection when loading another page\r\n    this.selectedInstalmentList = [];\r\n    this.selectAll = false;\r\n  }\r\n\r\n  exportCSV(dataTable: Table): void {\r\n    const options = this.n2httpService.convertLazyEvent(this.lazyLoadEvent, 0, this.totalRecords);\r\n\r\n    this.instalmentService.getByNSman(this.selectedId, options).subscribe(\r\n      resp => {\r\n        if(resp.body?.data?.content) {\r\n\r\n          const data = resp.body?.data?.content;\r\n\r\n          const columns = \r\n          [\r\n            {field: 'sn', header: 'SN', index: 0},\r\n            {field: 'createdBy', header: 'Transaction Id', index: 1},\r\n            {field: 'terminateBy', header: 'Terminated By', index: 2},\r\n            {field: 'terminateApprovedBy', header: 'Termination Approved By', index: 3},\r\n            {field: 'terminateReason', header: 'Termination Reason', index: 4},\r\n            {field: 'status', header: 'Status', index: 5},\r\n            {field: 'lastRefundDate', header: 'Last Instalment Refund', index: 6},\r\n          ];\r\n\r\n          const dtoList:any[] = [];\r\n          console.log(\"data\", data);\r\n          data.forEach((d: IInstalmentPlan, index: number) => {\r\n            const dto = {\r\n              sn: index + 1,\r\n              createdBy: `${String(d.submittedBy ? d.submittedBy : \"\")} ${String(this.dateUtilsService.formatStrDate(d.submittedDt, \"DD-MM-YYYY (HHmm)\"))}`,\r\n              terminateBy: `${String(d.terminationRequestedBy ? d.terminationRequestedBy : \"\")} ${String(this.dateUtilsService.formatStrDate(d.terminationRequestedDt, \"DD-MM-YYYY (HHmm)\"))}`,\r\n              terminateApprovedBy: `${String(d.terminationReviewedBy ? d.terminationReviewedBy : \"\")} ${String(this.dateUtilsService.formatStrDate(d.terminationReviewedDt, \"DD-MM-YYYY (HHmm)\"))}`,\r\n              terminateReason: d.reason,\r\n              status: this.Ns2Status[d.status],\r\n              lastRefundDate: d.lastRefundDate\r\n            }\r\n            dtoList.push(dto);\r\n          });\r\n          this.exportUtilsService.exportCSV(dataTable, dtoList,resp.body.data.total_no_of_elems, columns, \r\n            \"data_\".concat(formatDate(new Date(),\"dd-MM-YYYY\", this.localeId)));\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error.error?.error_desc);\r\n        this.loading = false;\r\n      })\r\n  }\r\n\r\n\r\n  onOpenTerminate(dialog: any): void {\r\n    // Populate terminate dialog's data table\r\n    // console.log(this.selectedInstalments);\r\n    this.instalmentTerminateComponent.instalmentRecordsToTerminate = this.selectedInstalmentList;\r\n    dialog.display = true;\r\n  }\r\n\r\n  confirmTerminateSelection(event: Event, key: string, dialog: any): void {\r\n    this.nspConfirmService.onConfirmPopup(event, key, dialog, () => {\r\n      this.terminateSelection();\r\n    });\r\n  }\r\n\r\n  terminateSelection(): void {\r\n    this.selectedInstalmentList.forEach((instalment:IInstalmentPlan)=>{\r\n      instalment.reason = this.instalmentTerminateComponent.terminateInstalmentForm.get('reason').value;\r\n    });\r\n    this.instalmentService.terminate(this.selectedInstalmentList).subscribe(\r\n      (res: HttpResponse<any>) => {\r\n        if (res.body?.data) {\r\n          this.toastService.success(res.body?.success_message);\r\n          this.resetDataTable();\r\n        }\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  resetDataTable(): void {\r\n    this.selectAll = false;\r\n    this.selectedInstalmentList = [];\r\n    this.table.filters = {};\r\n    this.pageData.currentPage = 0;\r\n    this.pageSize = 10;\r\n    this.table.reset();\r\n  }\r\n}\r\n","<p-table\r\n  #dt\r\n  [value]='instalmentList'\r\n  [(selection)]=\"selectedInstalmentList\"\r\n  (selectionChange)=\"onSelectionChange($event)\"\r\n  [selectAll]=\"selectAll\"\r\n  (selectAllChange)=\"onSelectAllChange($event)\"\r\n  styleClass='p-datatable-gridlines'\r\n  [paginator]='true'\r\n  [rows]='10'\r\n  currentPageReportTemplate='Showing {first} to {last} of {totalRecords} entries'\r\n  [rowsPerPageOptions]='[10,25,50]'\r\n  [showCurrentPageReport]='true'\r\n  [lazy]='true'\r\n  [totalRecords]='totalRecords'\r\n  [loading]='loading'\r\n  (onLazyLoad)='loadInstalments($event)'\r\n  (onPage) = \"onPage($event)\">\r\n  <ng-template pTemplate='caption'>\r\n    <div class='flex justify-content-between'>\r\n      <button type='button' pButton pRipple icon='pi pi-file' (click)='exportCSV(dt)' pTooltip='CSV' tooltipPosition='bottom'></button>\r\n      <div style=\"padding: 0\" class='col-6 flex justify-content-end'>\r\n        <button type='button' pButton label='Terminate' (click)=\"onOpenTerminate(displayTerminateInstalmentDialog)\" pTooltip='Terminate Instalment Records' tooltipPosition='bottom' [disabled]=\"selectedInstalmentList?.length === 0\"></button>\r\n        <p-confirmPopup key='terminateInstalmentRecords'></p-confirmPopup>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template pTemplate='header'>\r\n    <tr>\r\n      <th scope=\"col\" style=\"width:3%\"><p-tableHeaderCheckbox *ngIf=\"selectableRowsExist\"></p-tableHeaderCheckbox></th>\r\n      <th scope=\"col\" style='width: 5%'>SN</th>\r\n      <th scope=\"col\" pSortableColumn='createdBy'>Created By<p-sortIcon field='createdBy'></p-sortIcon></th>\r\n      <th scope=\"col\" pSortableColumn='terminationRequestedDt'>Terminated By<p-sortIcon field='terminationRequestedDt'></p-sortIcon></th>\r\n      <th scope=\"col\" pSortableColumn='terminationReviewedDt'>Termination Approved By<p-sortIcon field='terminationReviewedDt'></p-sortIcon></th>\r\n      <th scope=\"col\" pSortableColumn='reason'>Termination Reason<p-sortIcon field='reason'></p-sortIcon></th>\r\n      <th scope=\"col\" pSortableColumn='status'>Status<p-sortIcon field='status'></p-sortIcon></th>\r\n      <th scope=\"col\" pSortableColumn='lastInstalmentRefund'>Last Instalment Refund<p-sortIcon field='lastInstalmentRefund'></p-sortIcon></th>\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template pTemplate='body' let-instalment let-i='rowIndex'>\r\n    <tr>\r\n      <td><p-tableCheckbox  *ngIf=\"instalment?.status === 'ONGOING'\" [value]=\"instalment\"></p-tableCheckbox></td>\r\n      <td><a [routerLink]=\"['/payment/instalment/', instalment.id]\">{{i + 1}}</a></td>\r\n      <td>{{instalment.submittedBy}} <br /> {{instalment.submittedDt | date:'dd-MM-yyyy \\'(\\'HHmm\\')\\''}}</td>\r\n      <td>{{instalment.terminationRequestedBy | defaultString }} <br /> {{instalment.terminationRequestedDt | date:'dd-MM-yyyy \\'(\\'HHmm\\')\\''}}</td>\r\n      <td>{{instalment.terminationReviewedBy | defaultString }} <br /> {{instalment.terminationReviewedDt | date:'dd-MM-yyyy \\'(\\'HHmm\\')\\''}}</td>\r\n      <td>{{instalment.reason | defaultString}}</td>\r\n      <td>{{Ns2Status[instalment.status]| defaultString}}</td>\r\n      <td>{{instalment.lastRefundDate | defaultString}}</td>\r\n    </tr>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate='emptymessage'>\r\n    <tr>\r\n      <td colspan='8'>No Instalment records found.</td>\r\n    </tr>\r\n  </ng-template>\r\n</p-table>\r\n\r\n\r\n<p-dialog header='Terminate Instalment Plan' [(visible)]='displayTerminateInstalmentDialog.display'\r\n          [breakpoints]=\"{'960px': '75vw'}\"\r\n          [style]=\"{width: '40vw'}\" [draggable]='false' [resizable]='false' [modal]='true'>\r\n\r\n  <n2-instalment-terminate #instalmentTerminateComponent></n2-instalment-terminate>\r\n  <ng-template pTemplate='footer'>\r\n    <button pButton class='p-button-danger' label='Cancel' (click)='displayTerminateInstalmentDialog.display=false'\r\n            [style]=\"{'margin-left': '.5em' , 'margin-bottom': '.5em'}\"></button>\r\n    <button pButton label='Submit' (click)=\"confirmTerminateSelection($event, 'terminateInstalmentRecords', displayTerminateInstalmentDialog)\"\r\n            [style]=\"{'margin-left': '.5em' , 'margin-bottom': '.5em'}\"></button>\r\n  </ng-template>\r\n  <p-confirmPopup key='confirmTerminateInstalment'></p-confirmPopup>\r\n\r\n</p-dialog>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}