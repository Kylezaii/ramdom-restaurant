{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NspConfirmationService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i2 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i3 = tslib_1.__importStar(require(\"primeng/dynamicdialog\"));\nclass NspConfirmationService {\n  constructor(confirmationService, messageService, toastService, dialogService) {\n    this.confirmationService = confirmationService;\n    this.messageService = messageService;\n    this.toastService = toastService;\n    this.dialogService = dialogService;\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  onConfirm(inputKey, currDialog, proceedMethods, rejectFunction) {\n    this.confirmationService.confirm({\n      message: 'Good to go?',\n      header: 'Confirmation',\n      key: inputKey,\n      icon: 'pi pi-exclamation-triangle',\n      acceptLabel: 'Proceed',\n      rejectLabel: 'Edit',\n      accept() {\n        if (currDialog) {\n          currDialog.display = false;\n        }\n        proceedMethods?.call(null);\n      },\n      reject: rejectFunction\n    });\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  onConfirmPopup(event, inputKey, currDialog, proceedMethods, rejectFunction) {\n    this.confirmationService.confirm({\n      target: event.target,\n      message: 'Good to go?',\n      header: 'Confirmation',\n      key: inputKey,\n      icon: 'pi pi-exclamation-triangle',\n      acceptLabel: 'Proceed',\n      rejectLabel: 'Edit',\n      accept() {\n        if (currDialog) {\n          currDialog.display = false;\n        }\n        proceedMethods?.call(null);\n      },\n      reject: rejectFunction\n    });\n  }\n  //overload with custom confirm msg\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  onConfirmPopupMsg(event, confirmMsg, inputKey, currDialog, proceedMethods, rejectFunction) {\n    this.confirmationService.confirm({\n      target: event.target,\n      message: confirmMsg,\n      header: 'Confirmation',\n      key: inputKey,\n      icon: 'pi pi-exclamation-triangle',\n      acceptLabel: 'Proceed',\n      rejectLabel: 'Edit',\n      accept() {\n        if (currDialog) {\n          currDialog.display = false;\n        }\n        proceedMethods?.call(null);\n      },\n      reject: rejectFunction\n    });\n  }\n  onConfirmPopupRef(event, inputKey, dialogRef, output) {\n    this.confirmationService.confirm({\n      target: event.target,\n      message: 'Good to go?',\n      header: 'Confirmation',\n      key: inputKey,\n      icon: 'pi pi-exclamation-triangle',\n      acceptLabel: 'Proceed',\n      rejectLabel: 'Edit',\n      accept() {\n        if (dialogRef) {\n          if (output) {\n            dialogRef.close(output);\n          } else {\n            dialogRef.close();\n          }\n        }\n      },\n      reject(type) {\n        //\n      }\n    });\n  }\n  confirm(inputKey, currDialog) {\n    console.log('inputKey is ' + inputKey);\n    this.confirmationService.confirm({\n      message: 'Good to go?',\n      header: 'Confirmation',\n      key: inputKey,\n      icon: 'pi pi-exclamation-triangle',\n      acceptLabel: 'Proceed',\n      rejectLabel: 'Edit',\n      accept: () => {\n        if (currDialog) {\n          currDialog.display = false;\n        }\n        // this.messageService.add({severity:'success', summary:'Yuka', detail:'Yuka 2'});\n        this.toastService.add({\n          severity: 'success',\n          summary: 'Success',\n          detail: 'Request has been submitted for approval'\n        });\n      },\n      reject(type) {\n        //\n      }\n    });\n  }\n  confirmRef(inputKey, dialogRef, output) {\n    this.confirmationService.confirm({\n      message: 'Good to go?',\n      header: 'Confirmation',\n      key: inputKey,\n      icon: 'pi pi-exclamation-triangle',\n      acceptLabel: 'Proceed',\n      rejectLabel: 'Edit',\n      accept: () => {\n        if (dialogRef) {\n          if (output) {\n            dialogRef.close(output);\n          } else {\n            dialogRef.close();\n          }\n          // this.messageService.add({severity:'success', summary:'Yuka', detail:'Yuka 2'});\n          this.toastService.add({\n            severity: 'success',\n            summary: 'Success',\n            detail: 'Request has been submitted for approval'\n          });\n        }\n      },\n      reject(type) {\n        //\n      }\n    });\n  }\n}\nexports.NspConfirmationService = NspConfirmationService;\nNspConfirmationService.ɵfac = function NspConfirmationService_Factory(t) {\n  return new (t || NspConfirmationService)(i0.ɵɵinject(i1.ConfirmationService), i0.ɵɵinject(i1.MessageService), i0.ɵɵinject(i2.CustomToastService), i0.ɵɵinject(i3.DialogService));\n};\nNspConfirmationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NspConfirmationService,\n  factory: NspConfirmationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["NspConfirmationService","constructor","confirmationService","messageService","toastService","dialogService","onConfirm","inputKey","currDialog","proceedMethods","rejectFunction","confirm","message","header","key","icon","acceptLabel","rejectLabel","accept","display","call","reject","onConfirmPopup","event","target","onConfirmPopupMsg","confirmMsg","onConfirmPopupRef","dialogRef","output","close","type","console","log","add","severity","summary","detail","confirmRef","exports","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\shared\\confirm\\nsp-confirm.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {ConfirmationService, MessageService} from 'primeng/api';\r\nimport {DialogService, DynamicDialogRef} from 'primeng/dynamicdialog';\r\nimport {CustomToastService} from 'app/layouts/service/customtoast.service';\r\n\r\n@Injectable({\r\n  providedIn:'root'\r\n})\r\nexport class NspConfirmationService {\r\n\r\n\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  private accept?: Function;\r\n\r\n  constructor(\r\n    private confirmationService: ConfirmationService,\r\n    private messageService: MessageService,\r\n    private toastService: CustomToastService,\r\n    private dialogService: DialogService\r\n  ) {\r\n  }\r\n\r\n\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  onConfirm(inputKey: string, currDialog?: any, proceedMethods?: Function, rejectFunction?: Function): void {\r\n    this.confirmationService.confirm({\r\n      message: 'Good to go?',\r\n      header: 'Confirmation',\r\n      key: inputKey,\r\n      icon: 'pi pi-exclamation-triangle',\r\n      acceptLabel: 'Proceed',\r\n      rejectLabel: 'Edit',\r\n      accept() {\r\n        if (currDialog) {\r\n          currDialog.display = false;\r\n        }\r\n        proceedMethods?.call(null);\r\n      },\r\n      reject: rejectFunction\r\n    });\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  onConfirmPopup(event: Event, inputKey: string, currDialog?: any, proceedMethods?: Function, rejectFunction?: Function): void {\r\n    this.confirmationService.confirm({\r\n      target: event.target,\r\n      message: 'Good to go?',\r\n      header: 'Confirmation',\r\n      key: inputKey,\r\n      icon: 'pi pi-exclamation-triangle',\r\n      acceptLabel: 'Proceed',\r\n      rejectLabel: 'Edit',\r\n      accept() {\r\n        if (currDialog) {\r\n          currDialog.display = false;\r\n        }\r\n        proceedMethods?.call(null);\r\n      },\r\n      reject: rejectFunction\r\n    });\r\n  }\r\n\r\n  //overload with custom confirm msg\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  onConfirmPopupMsg(event: Event,  confirmMsg: string, inputKey: string, currDialog?: any, proceedMethods?: Function, rejectFunction?: Function): void {\r\n    this.confirmationService.confirm({\r\n      target: event.target,\r\n      message: confirmMsg,\r\n      header: 'Confirmation',\r\n      key: inputKey,\r\n      icon: 'pi pi-exclamation-triangle',\r\n      acceptLabel: 'Proceed',\r\n      rejectLabel: 'Edit',\r\n      accept() {\r\n        if (currDialog) {\r\n          currDialog.display = false;\r\n        }\r\n        proceedMethods?.call(null);\r\n      },\r\n      reject: rejectFunction\r\n    });\r\n  }\r\n\r\n  onConfirmPopupRef(event: Event, inputKey: string, dialogRef?: DynamicDialogRef, output?: any): void {\r\n    this.confirmationService.confirm({\r\n      target: event.target,\r\n      message: 'Good to go?',\r\n      header: 'Confirmation',\r\n      key: inputKey,\r\n      icon: 'pi pi-exclamation-triangle',\r\n      acceptLabel: 'Proceed',\r\n      rejectLabel: 'Edit',\r\n      accept() {\r\n\r\n        if (dialogRef) {\r\n          if (output) {\r\n            dialogRef.close(output);\r\n          } else {\r\n            dialogRef.close();\r\n          }\r\n        }\r\n      },\r\n      reject(type: any) {\r\n        //\r\n      }\r\n    });\r\n  }\r\n\r\n  confirm(inputKey: string, currDialog?: any): void {\r\n    console.log('inputKey is ' + inputKey);\r\n    this.confirmationService.confirm({\r\n      message: 'Good to go?',\r\n      header: 'Confirmation',\r\n      key: inputKey,\r\n      icon: 'pi pi-exclamation-triangle',\r\n      acceptLabel: 'Proceed',\r\n      rejectLabel: 'Edit',\r\n      accept: () => {\r\n\r\n        if (currDialog) {\r\n          currDialog.display = false;\r\n        }\r\n        // this.messageService.add({severity:'success', summary:'Yuka', detail:'Yuka 2'});\r\n        this.toastService.add({\r\n          severity: 'success',\r\n          summary: 'Success',\r\n          detail: 'Request has been submitted for approval'\r\n        });\r\n\r\n      },\r\n      reject(type: any) {\r\n        //\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  confirmRef(inputKey: string, dialogRef?: DynamicDialogRef, output?: any): void {\r\n    this.confirmationService.confirm({\r\n      message: 'Good to go?',\r\n      header: 'Confirmation',\r\n      key: inputKey,\r\n      icon: 'pi pi-exclamation-triangle',\r\n      acceptLabel: 'Proceed',\r\n      rejectLabel: 'Edit',\r\n      accept: () => {\r\n\r\n        if (dialogRef) {\r\n          if (output) {\r\n            dialogRef.close(output);\r\n          } else {\r\n            dialogRef.close();\r\n          }\r\n          // this.messageService.add({severity:'success', summary:'Yuka', detail:'Yuka 2'});\r\n          this.toastService.add({\r\n            severity: 'success',\r\n            summary: 'Success',\r\n            detail: 'Request has been submitted for approval'\r\n          });\r\n\r\n        }\r\n      },\r\n      reject(type: any) {\r\n        //\r\n      }\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}