{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/D1347074/Desktop/projects 2/nspayiiapp/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InsuranceIncomeTaxComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@angular/common\");\nconst http_1 = require(\"@angular/common/http\");\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst moment_1 = tslib_1.__importDefault(require(\"moment\"));\nconst rxjs_1 = require(\"rxjs\");\nconst claim_json_1 = tslib_1.__importDefault(require(\"../../../../../../i18n/en/claim.json\"));\nconst nspay2_constants_1 = require(\"app/nspay2.constants\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i2 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/shared/confirm/nsp-confirm.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/claim/se-claim/service/se-claim.service\"));\nconst i5 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i6 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i7 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i8 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i9 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i10 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i11 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/confirmpopup\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/messages\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/inputnumber\"));\nconst i15 = tslib_1.__importStar(require(\"../../../../../shared/language/translate.directive\"));\nconst _c0 = [\"mthlyTable\"];\nconst _c1 = [\"consolTable\"];\nfunction InsuranceIncomeTaxComponent_p_messages_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n    \");\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.claimJson.nspay2App.claim.warning[\"CLM-W014\"]);\n  }\n}\nfunction InsuranceIncomeTaxComponent_p_messages_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-messages\", 3);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵtemplate(2, InsuranceIncomeTaxComponent_p_messages_0_ng_template_2_Template, 4, 1, \"ng-template\", 4);\n    i0.ɵɵtext(3, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceIncomeTaxComponent_p_messages_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n    \");\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.claimJson.nspay2App.claim.warning[\"CLM-W015\"]);\n  }\n}\nfunction InsuranceIncomeTaxComponent_p_messages_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-messages\", 3);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵtemplate(2, InsuranceIncomeTaxComponent_p_messages_2_ng_template_2_Template, 4, 1, \"ng-template\", 6);\n    i0.ɵɵtext(3, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c2 = function () {\n  return {\n    \"display\": \"inline\"\n  };\n};\nconst _c3 = function () {\n  return {\n    \"display\": \"inline\",\n    \"margin-left\": \"2em\"\n  };\n};\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_3_fieldset_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"fieldset\");\n    i0.ɵɵtext(1, \"\\n                                            \");\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3, \"\\n                                                \");\n    i0.ɵɵelementStart(4, \"input\", 31);\n    i0.ɵɵlistener(\"click\", function InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_3_fieldset_15_Template_input_click_4_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r22.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                                                \");\n    i0.ɵɵelementStart(6, \"label\", 32);\n    i0.ɵɵtext(7, \"Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n\\n                                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n                                            \");\n    i0.ɵɵelementStart(10, \"div\");\n    i0.ɵɵtext(11, \"\\n                                                \");\n    i0.ɵɵelementStart(12, \"input\", 33);\n    i0.ɵɵlistener(\"click\", function InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_3_fieldset_15_Template_input_click_12_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r24.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n                                                \");\n    i0.ɵɵelementStart(14, \"label\", 32);\n    i0.ɵɵtext(15, \"Consolidated\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n                                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c3));\n    i0.ɵɵadvance(8);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c3));\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_3_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                                            \");\n    i0.ɵɵelementStart(1, \"fieldset\", 34);\n    i0.ɵɵtext(2, \"\\n                                                \");\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4, \"\\n                                                    \");\n    i0.ɵɵelementStart(5, \"input\", 31);\n    i0.ɵɵlistener(\"click\", function InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_3_ng_template_17_Template_input_click_5_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r25.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                                                    \");\n    i0.ɵɵelementStart(7, \"label\", 32);\n    i0.ɵɵtext(8, \"Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n\\n                                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n                                                \");\n    i0.ɵɵelementStart(11, \"div\");\n    i0.ɵɵtext(12, \"\\n                                                    \");\n    i0.ɵɵelementStart(13, \"input\", 33);\n    i0.ɵɵlistener(\"click\", function InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_3_ng_template_17_Template_input_click_13_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r27 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r27.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                                    \");\n    i0.ɵɵelementStart(15, \"label\", 32);\n    i0.ɵɵtext(16, \"Consolidated\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n                                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n                                        \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c3));\n    i0.ɵɵadvance(8);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c3));\n  }\n}\nconst _c4 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_3_button_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_3_button_25_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r28.refreshOtherClaim());\n    });\n    i0.ɵɵtext(1, \"\\n                                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext(4);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c4));\n    i0.ɵɵproperty(\"disabled\", !ctx_r20.enableRefreshOClaim());\n  }\n}\nconst _c5 = function () {\n  return {\n    \"text-align\": \"center\"\n  };\n};\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_3_th_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const class_r30 = ctx.$implicit;\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c5));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(class_r30.value.yrmthReCon);\n  }\n}\nconst _c6 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-right\": \".5em\"\n  };\n};\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                    \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                        \");\n    i0.ɵɵelement(3, \"th\", 21);\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"th\", 21);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementStart(7, \"form\", 1);\n    i0.ɵɵtext(8, \"\\n                                \");\n    i0.ɵɵelementStart(9, \"div\", 22);\n    i0.ɵɵtext(10, \"\\n                                    \");\n    i0.ɵɵelementStart(11, \"div\", 23);\n    i0.ɵɵtext(12, \"\\n                                        \");\n    i0.ɵɵelementStart(13, \"p-button\", 24);\n    i0.ɵɵlistener(\"click\", function InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_3_Template_p_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r32);\n      i0.ɵɵnextContext();\n      const _r14 = i0.ɵɵreference(1);\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r31.exportToCSV(_r14));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                        \");\n    i0.ɵɵtemplate(15, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_3_fieldset_15_Template, 18, 9, \"fieldset\", 25);\n    i0.ɵɵtext(16, \"\\n                                        \");\n    i0.ɵɵtemplate(17, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_3_ng_template_17_Template, 20, 9, \"ng-template\", null, 26, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(19, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n                                    \");\n    i0.ɵɵelement(21, \"p-confirmPopup\", 27);\n    i0.ɵɵtext(22, \"\\n\\n                                    \");\n    i0.ɵɵelementStart(23, \"div\", 28);\n    i0.ɵɵtext(24, \"\\n                                        \");\n    i0.ɵɵtemplate(25, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_3_button_25_Template, 2, 4, \"button\", 29);\n    i0.ɵɵtext(26, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n                    \");\n    i0.ɵɵelementStart(32, \"tr\");\n    i0.ɵɵtext(33, \"\\n                        \");\n    i0.ɵɵelementStart(34, \"th\", 21);\n    i0.ɵɵtext(35, \"Month/Year\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(36, \"\\n                        \");\n    i0.ɵɵelementStart(37, \"th\", 21);\n    i0.ɵɵtext(38, \"Annual\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(39, \"\\n                        \");\n    i0.ɵɵtemplate(40, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_3_th_40_Template, 2, 4, \"th\", 30);\n    i0.ɵɵtext(41, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n                \");\n  }\n  if (rf & 2) {\n    const _r18 = i0.ɵɵreference(18);\n    const ctx_r15 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵattribute(\"colspan\", ctx_r15.incomeTaxInsurArrayMthly.controls.length + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r15.captionGroup);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(10, _c6));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.isActive() && !ctx_r15.readOnly && ctx_r15.hasValidAuthorityAndStation())(\"ngIfElse\", _r18);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.isActive() && !ctx_r15.readOnly && ctx_r15.hasValidAuthorityAndStation());\n    i0.ɵɵadvance(12);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(11, _c5));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r15.incomeTaxInsurArrayMthly.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_1_td_12_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 41);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_1_td_12_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n  }\n  if (rf & 2) {\n    const data_r48 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(3, 1, data_r48.get(\"firstYrCommission\").value, \"1.2-2\"), \"\\n                                \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_1_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵtemplate(2, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_1_td_12_p_inputNumber_2_Template, 1, 1, \"p-inputNumber\", 39);\n    i0.ɵɵtext(3, \"\\n                            \");\n    i0.ɵɵtemplate(4, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_1_td_12_ng_template_4_Template, 5, 4, \"ng-template\", null, 40, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r49 = ctx.index;\n    const _r51 = i0.ɵɵreference(5);\n    const ctx_r47 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r49);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r47.isActive() && !ctx_r47.readOnly && ctx_r47.hasValidAuthorityAndStation())(\"ngIfElse\", _r51);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \" \");\n    i0.ɵɵelementStart(7, \"div\", 36);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(10, \"\\n                        \");\n    i0.ɵɵtext(11, \"\\n                        \");\n    i0.ɵɵtemplate(12, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_1_td_12_Template, 7, 3, \"td\", 37);\n    i0.ɵɵtext(13, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r35 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r35.cols[0]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\\n                            \", i0.ɵɵpipeBind2(9, 3, ctx_r35.getSumOfCurrRow(\"firstYrCommission\"), \"1.2-2\"), \" \\u00A0pa\\n                        \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r35.incomeTaxInsurArrayMthly.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_3_td_11_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 44);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_3_td_11_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n  }\n  if (rf & 2) {\n    const data_r55 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(3, 1, data_r55.get(\"singlePremium\").value, \"1.2-2\"), \"\\n                                \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_3_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵtemplate(2, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_3_td_11_p_inputNumber_2_Template, 1, 1, \"p-inputNumber\", 42);\n    i0.ɵɵtext(3, \"\\n                            \");\n    i0.ɵɵtemplate(4, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_3_td_11_ng_template_4_Template, 5, 4, \"ng-template\", null, 43, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r56 = ctx.index;\n    const _r58 = i0.ɵɵreference(5);\n    const ctx_r54 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r56);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r54.isActive() && !ctx_r54.readOnly && ctx_r54.hasValidAuthorityAndStation())(\"ngIfElse\", _r58);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 36);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                        \");\n    i0.ɵɵtext(10, \"\\n                        \");\n    i0.ɵɵtemplate(11, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_3_td_11_Template, 7, 3, \"td\", 37);\n    i0.ɵɵtext(12, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r36 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r36.cols[1]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n                            \", i0.ɵɵpipeBind2(8, 3, ctx_r36.getSumOfCurrRow(\"singlePremium\"), \"1.2-2\"), \" \\u00A0pa\\n                        \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r36.incomeTaxInsurArrayMthly.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_5_td_11_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 47);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_5_td_11_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n  }\n  if (rf & 2) {\n    const data_r62 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(3, 1, data_r62.get(\"prdCommission\").value, \"1.2-2\"), \"\\n                                \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_5_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵtemplate(2, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_5_td_11_p_inputNumber_2_Template, 1, 1, \"p-inputNumber\", 45);\n    i0.ɵɵtext(3, \"\\n                            \");\n    i0.ɵɵtemplate(4, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_5_td_11_ng_template_4_Template, 5, 4, \"ng-template\", null, 46, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r63 = ctx.index;\n    const _r65 = i0.ɵɵreference(5);\n    const ctx_r61 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r63);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r61.isActive() && !ctx_r61.readOnly && ctx_r61.hasValidAuthorityAndStation())(\"ngIfElse\", _r65);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 36);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                        \");\n    i0.ɵɵtext(10, \"\\n                        \");\n    i0.ɵɵtemplate(11, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_5_td_11_Template, 7, 3, \"td\", 37);\n    i0.ɵɵtext(12, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r37 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r37.cols[2]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n                            \", i0.ɵɵpipeBind2(8, 3, ctx_r37.getSumOfCurrRow(\"prdCommission\"), \"1.2-2\"), \" \\u00A0pa\\n                        \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r37.incomeTaxInsurArrayMthly.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_7_td_11_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 51);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_7_td_11_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n  }\n  if (rf & 2) {\n    const data_r69 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(3, 1, data_r69.get(\"generalInsurance\").value, \"1.2-2\"), \"\\n                                \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_7_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵtemplate(2, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_7_td_11_p_inputNumber_2_Template, 1, 1, \"p-inputNumber\", 49);\n    i0.ɵɵtext(3, \"\\n                            \");\n    i0.ɵɵtemplate(4, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_7_td_11_ng_template_4_Template, 5, 4, \"ng-template\", null, 50, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r70 = ctx.index;\n    const _r72 = i0.ɵɵreference(5);\n    const ctx_r68 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r70);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r68.isActive() && !ctx_r68.readOnly && ctx_r68.hasValidAuthorityAndStation())(\"ngIfElse\", _r72);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 36);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                        \");\n    i0.ɵɵtext(10, \"\\n                        \");\n    i0.ɵɵtemplate(11, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_7_td_11_Template, 7, 3, \"td\", 37);\n    i0.ɵɵtext(12, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r38 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r38.cols[3]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n                            \", i0.ɵɵpipeBind2(8, 3, ctx_r38.getSumOfCurrRow(\"generalInsurance\"), \"1.2-2\"), \" \\u00A0pa\\n                        \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r38.incomeTaxInsurArrayMthly.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_9_td_11_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 54);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_9_td_11_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n  }\n  if (rf & 2) {\n    const data_r76 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(3, 1, data_r76.get(\"otherCommission\").value, \"1.2-2\"), \"\\n                                \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_9_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵtemplate(2, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_9_td_11_p_inputNumber_2_Template, 1, 1, \"p-inputNumber\", 52);\n    i0.ɵɵtext(3, \"\\n                            \");\n    i0.ɵɵtemplate(4, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_9_td_11_ng_template_4_Template, 5, 4, \"ng-template\", null, 53, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r77 = ctx.index;\n    const _r79 = i0.ɵɵreference(5);\n    const ctx_r75 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r77);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r75.isActive() && !ctx_r75.readOnly && ctx_r75.hasValidAuthorityAndStation())(\"ngIfElse\", _r79);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 36);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                        \");\n    i0.ɵɵtext(10, \"\\n                        \");\n    i0.ɵɵtemplate(11, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_9_td_11_Template, 7, 3, \"td\", 37);\n    i0.ɵɵtext(12, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r39 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r39.cols[4]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n                            \", i0.ɵɵpipeBind2(8, 3, ctx_r39.getSumOfCurrRow(\"otherCommission\"), \"1.2-2\"), \" \\u00A0pa\\n                        \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r39.incomeTaxInsurArrayMthly.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_11_td_11_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 57);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_11_td_11_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n  }\n  if (rf & 2) {\n    const data_r83 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(3, 1, data_r83.get(\"prdBonus\").value, \"1.2-2\"), \"\\n                                \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_11_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵtemplate(2, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_11_td_11_p_inputNumber_2_Template, 1, 1, \"p-inputNumber\", 55);\n    i0.ɵɵtext(3, \"\\n                            \");\n    i0.ɵɵtemplate(4, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_11_td_11_ng_template_4_Template, 5, 4, \"ng-template\", null, 56, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r84 = ctx.index;\n    const _r86 = i0.ɵɵreference(5);\n    const ctx_r82 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r84);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r82.isActive() && !ctx_r82.readOnly && ctx_r82.hasValidAuthorityAndStation())(\"ngIfElse\", _r86);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 36);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                        \");\n    i0.ɵɵtext(10, \"\\n                        \");\n    i0.ɵɵtemplate(11, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_11_td_11_Template, 7, 3, \"td\", 37);\n    i0.ɵɵtext(12, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r40 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r40.cols[5]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n                            \", i0.ɵɵpipeBind2(8, 3, ctx_r40.getSumOfCurrRow(\"prdBonus\"), \"1.2-2\"), \" \\u00A0pa\\n                        \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r40.incomeTaxInsurArrayMthly.controls);\n  }\n}\nconst _c7 = function () {\n  return {\n    \"border-bottom\": \"2px solid black\",\n    \"border-top\": \"2px solid black\"\n  };\n};\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_13_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"div\", 36);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r91 = ctx.index;\n    const ctx_r89 = i0.ɵɵnextContext(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c7));\n    i0.ɵɵproperty(\"formGroupName\", i_r91);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(4, 4, ctx_r89.getTotalPayableCol(i_r91, ctx_r89.incomeTaxInsurArrayMthly), \"1.2-2\"), \"\\n                            \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 36);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                        \");\n    i0.ɵɵtemplate(10, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_13_td_10_Template, 6, 8, \"td\", 58);\n    i0.ɵɵtext(11, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r41 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r41.cols[6]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c7));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                            \", i0.ɵɵpipeBind2(8, 5, ctx_r41.getSumOfTotalPayable(), \"1.2-2\"), \" \\u00A0pa\\n                        \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r41.incomeTaxInsurArrayMthly.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_15_td_11_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 61);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_15_td_11_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n  }\n  if (rf & 2) {\n    const data_r93 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(3, 1, data_r93.get(\"renewalCommission\").value, \"1.2-2\"), \"\\n                                \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_15_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵtemplate(2, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_15_td_11_p_inputNumber_2_Template, 1, 1, \"p-inputNumber\", 59);\n    i0.ɵɵtext(3, \"\\n                            \");\n    i0.ɵɵtemplate(4, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_15_td_11_ng_template_4_Template, 5, 4, \"ng-template\", null, 60, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r94 = ctx.index;\n    const _r96 = i0.ɵɵreference(5);\n    const ctx_r92 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r94);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r92.isActive() && !ctx_r92.readOnly && ctx_r92.hasValidAuthorityAndStation())(\"ngIfElse\", _r96);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 36);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                        \");\n    i0.ɵɵtext(10, \"\\n                        \");\n    i0.ɵɵtemplate(11, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_15_td_11_Template, 7, 3, \"td\", 37);\n    i0.ɵɵtext(12, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r42 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r42.cols[7]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n                            \", i0.ɵɵpipeBind2(8, 3, ctx_r42.getSumOfCurrRow(\"renewalCommission\"), \"1.2-2\"), \" \\u00A0pa\\n                        \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r42.incomeTaxInsurArrayMthly.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_17_td_11_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 64);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_17_td_11_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n  }\n  if (rf & 2) {\n    const data_r100 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(3, 1, data_r100.get(\"overridingCommission\").value, \"1.2-2\"), \"\\n                                \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_17_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵtemplate(2, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_17_td_11_p_inputNumber_2_Template, 1, 1, \"p-inputNumber\", 62);\n    i0.ɵɵtext(3, \"\\n                            \");\n    i0.ɵɵtemplate(4, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_17_td_11_ng_template_4_Template, 5, 4, \"ng-template\", null, 63, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r101 = ctx.index;\n    const _r103 = i0.ɵɵreference(5);\n    const ctx_r99 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r101);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r99.isActive() && !ctx_r99.readOnly && ctx_r99.hasValidAuthorityAndStation())(\"ngIfElse\", _r103);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 36);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                        \");\n    i0.ɵɵtext(10, \"\\n                        \");\n    i0.ɵɵtemplate(11, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_17_td_11_Template, 7, 3, \"td\", 37);\n    i0.ɵɵtext(12, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r43 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r43.cols[8]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n                            \", i0.ɵɵpipeBind2(8, 3, ctx_r43.getSumOfCurrRow(\"overridingCommission\"), \"1.2-2\"), \" \\u00A0pa\\n                        \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r43.incomeTaxInsurArrayMthly.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_19_td_11_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 67);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_19_td_11_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                            \");\n  }\n  if (rf & 2) {\n    const data_r107 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", i0.ɵɵpipeBind2(3, 1, data_r107.get(\"otherNonPayable\").value, \"1.2-2\"), \"\\n                                \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_19_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵtemplate(2, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_19_td_11_p_inputNumber_2_Template, 1, 1, \"p-inputNumber\", 65);\n    i0.ɵɵtext(3, \"\\n                            \");\n    i0.ɵɵtemplate(4, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_19_td_11_ng_template_4_Template, 5, 4, \"ng-template\", null, 66, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r108 = ctx.index;\n    const _r110 = i0.ɵɵreference(5);\n    const ctx_r106 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r108);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r106.isActive() && !ctx_r106.readOnly && ctx_r106.hasValidAuthorityAndStation())(\"ngIfElse\", _r110);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 36);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                        \");\n    i0.ɵɵtext(10, \"\\n                        \");\n    i0.ɵɵtemplate(11, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_19_td_11_Template, 7, 3, \"td\", 37);\n    i0.ɵɵtext(12, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r44 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r44.cols[9]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\n                            \", i0.ɵɵpipeBind2(8, 3, ctx_r44.getSumOfCurrRow(\"otherNonPayable\"), \"1.2-2\"), \" \\u00A0pa\\n                        \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r44.incomeTaxInsurArrayMthly.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_21_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"div\", 36);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r115 = ctx.index;\n    const ctx_r113 = i0.ɵɵnextContext(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c7));\n    i0.ɵɵproperty(\"formGroupName\", i_r115);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(4, 4, ctx_r113.getTotalNonPayableCol(i_r115, ctx_r113.incomeTaxInsurArrayMthly), \"1.2-2\"), \"\\n                            \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 36);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                        \");\n    i0.ɵɵtemplate(10, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_21_td_10_Template, 6, 8, \"td\", 58);\n    i0.ɵɵtext(11, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r45 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r45.cols[10]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c7));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                            \", i0.ɵɵpipeBind2(8, 5, ctx_r45.getSumOfTotalNonPayable(), \"1.2-2\"), \" \\u00A0pa\\n                        \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r45.incomeTaxInsurArrayMthly.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_23_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementStart(2, \"div\", 36);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r118 = ctx.index;\n    const ctx_r116 = i0.ɵɵnextContext(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c7));\n    i0.ɵɵproperty(\"formGroupName\", i_r118);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", i0.ɵɵpipeBind2(4, 4, ctx_r116.getTotalNonPayableCol(i_r118, ctx_r116.incomeTaxInsurArrayMthly) + ctx_r116.getTotalPayableCol(i_r118, ctx_r116.incomeTaxInsurArrayMthly), \"1.2-2\"), \"\\n                            \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                        \");\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 36);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n                        \");\n    i0.ɵɵtemplate(10, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_23_td_10_Template, 6, 8, \"td\", 58);\n    i0.ɵɵtext(11, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r46.cols[11]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c7));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                            \", i0.ɵɵpipeBind2(8, 5, ctx_r46.getSumOfTotalNonPayable() + ctx_r46.getSumOfTotalPayable(), \"1.2-2\"), \" \\u00A0pa\\n                        \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r46.incomeTaxInsurArrayMthly.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n\\n                    \");\n    i0.ɵɵtemplate(1, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_1_Template, 14, 6, \"tr\", 2);\n    i0.ɵɵtext(2, \"\\n                    \");\n    i0.ɵɵtemplate(3, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_3_Template, 13, 6, \"tr\", 2);\n    i0.ɵɵtext(4, \"\\n                    \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_5_Template, 13, 6, \"tr\", 2);\n    i0.ɵɵtext(6, \"\\n                    \");\n    i0.ɵɵtemplate(7, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_7_Template, 13, 6, \"tr\", 2);\n    i0.ɵɵtext(8, \"\\n                    \");\n    i0.ɵɵtemplate(9, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_9_Template, 13, 6, \"tr\", 2);\n    i0.ɵɵtext(10, \"\\n                    \");\n    i0.ɵɵtemplate(11, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_11_Template, 13, 6, \"tr\", 2);\n    i0.ɵɵtext(12, \"\\n                    \");\n    i0.ɵɵtemplate(13, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_13_Template, 12, 9, \"tr\", 2);\n    i0.ɵɵtext(14, \"\\n                    \");\n    i0.ɵɵtemplate(15, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_15_Template, 13, 6, \"tr\", 2);\n    i0.ɵɵtext(16, \"\\n                    \");\n    i0.ɵɵtemplate(17, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_17_Template, 13, 6, \"tr\", 2);\n    i0.ɵɵtext(18, \"\\n                    \");\n    i0.ɵɵtemplate(19, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_19_Template, 13, 6, \"tr\", 2);\n    i0.ɵɵtext(20, \"\\n                    \");\n    i0.ɵɵtemplate(21, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_21_Template, 12, 9, \"tr\", 2);\n    i0.ɵɵtext(22, \"\\n                    \");\n    i0.ɵɵtemplate(23, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_tr_23_Template, 12, 9, \"tr\", 2);\n    i0.ɵɵtext(24, \"\\n\\n                \");\n  }\n  if (rf & 2) {\n    const rowIndex_r34 = ctx.rowIndex;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r34 == 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r34 == 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r34 == 2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r34 == 3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r34 == 4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r34 == 5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r34 == 6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r34 == 7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r34 == 8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r34 == 9);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r34 == 10);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r34 == 11);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_p_table_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-table\", 17, 18);\n    i0.ɵɵtext(2, \"\\n                \");\n    i0.ɵɵtemplate(3, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_3_Template, 43, 12, \"ng-template\", 19);\n    i0.ɵɵtext(4, \"\\n                \");\n    i0.ɵɵtext(5, \"\\n                \");\n    i0.ɵɵtemplate(6, InsuranceIncomeTaxComponent_div_6_p_table_4_ng_template_6_Template, 25, 12, \"ng-template\", 20);\n    i0.ɵɵtext(7, \"\\n            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r5.incomeTaxInsurArrayMthly.controls)(\"filterDelay\", 0)(\"loading\", ctx_r5.loading);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_4_fieldset_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r128 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"fieldset\");\n    i0.ɵɵtext(1, \"\\n                                                \");\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3, \"\\n                                                    \");\n    i0.ɵɵelementStart(4, \"input\", 31);\n    i0.ɵɵlistener(\"click\", function InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_4_fieldset_15_Template_input_click_4_listener($event) {\n      i0.ɵɵrestoreView(_r128);\n      const ctx_r127 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r127.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                                                    \");\n    i0.ɵɵelementStart(6, \"label\", 32);\n    i0.ɵɵtext(7, \"Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n\\n                                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n                                                \");\n    i0.ɵɵelementStart(10, \"div\");\n    i0.ɵɵtext(11, \"\\n                                                    \");\n    i0.ɵɵelementStart(12, \"input\", 33);\n    i0.ɵɵlistener(\"click\", function InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_4_fieldset_15_Template_input_click_12_listener($event) {\n      i0.ɵɵrestoreView(_r128);\n      const ctx_r129 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r129.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n                                                    \");\n    i0.ɵɵelementStart(14, \"label\", 32);\n    i0.ɵɵtext(15, \"Consolidated\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n                                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c3));\n    i0.ɵɵadvance(8);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c3));\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_4_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r131 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                                                \");\n    i0.ɵɵelementStart(1, \"fieldset\", 34);\n    i0.ɵɵtext(2, \"\\n                                                    \");\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4, \"\\n                                                        \");\n    i0.ɵɵelementStart(5, \"input\", 31);\n    i0.ɵɵlistener(\"click\", function InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_4_ng_template_17_Template_input_click_5_listener($event) {\n      i0.ɵɵrestoreView(_r131);\n      const ctx_r130 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r130.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                                                        \");\n    i0.ɵɵelementStart(7, \"label\", 32);\n    i0.ɵɵtext(8, \"Monthly\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n\\n                                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n                                                    \");\n    i0.ɵɵelementStart(11, \"div\");\n    i0.ɵɵtext(12, \"\\n                                                        \");\n    i0.ɵɵelementStart(13, \"input\", 33);\n    i0.ɵɵlistener(\"click\", function InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_4_ng_template_17_Template_input_click_13_listener($event) {\n      i0.ɵɵrestoreView(_r131);\n      const ctx_r132 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r132.confirmSwitch($event, \"confirmWarning\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                                        \");\n    i0.ɵɵelementStart(15, \"label\", 32);\n    i0.ɵɵtext(16, \"Consolidated\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n                                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n                                            \");\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c3));\n    i0.ɵɵadvance(8);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c3));\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_4_button_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r134 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_4_button_25_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r134);\n      const ctx_r133 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r133.refreshOtherClaim());\n    });\n    i0.ɵɵtext(1, \"\\n                                        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r125 = i0.ɵɵnextContext(4);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c4));\n    i0.ɵɵproperty(\"disabled\", !ctx_r125.enableRefreshOClaim());\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_4_th_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const class_r135 = ctx.$implicit;\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c5));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(class_r135.value.yrmthReCon);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r137 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n                        \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                            \");\n    i0.ɵɵelement(3, \"th\", 21);\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵelementStart(5, \"th\", 21);\n    i0.ɵɵtext(6, \"\\n                                \");\n    i0.ɵɵelementStart(7, \"form\", 1);\n    i0.ɵɵtext(8, \"\\n                                    \");\n    i0.ɵɵelementStart(9, \"div\", 22);\n    i0.ɵɵtext(10, \"\\n                                        \");\n    i0.ɵɵelementStart(11, \"div\", 23);\n    i0.ɵɵtext(12, \"\\n                                            \");\n    i0.ɵɵelementStart(13, \"p-button\", 24);\n    i0.ɵɵlistener(\"click\", function InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_4_Template_p_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r137);\n      i0.ɵɵnextContext();\n      const _r119 = i0.ɵɵreference(2);\n      const ctx_r136 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r136.exportToCSV(_r119));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                            \");\n    i0.ɵɵtemplate(15, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_4_fieldset_15_Template, 18, 9, \"fieldset\", 25);\n    i0.ɵɵtext(16, \"\\n                                            \");\n    i0.ɵɵtemplate(17, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_4_ng_template_17_Template, 20, 9, \"ng-template\", null, 26, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(19, \"\\n                                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n                                        \");\n    i0.ɵɵelement(21, \"p-confirmPopup\", 27);\n    i0.ɵɵtext(22, \"\\n\\n                                        \");\n    i0.ɵɵelementStart(23, \"div\", 28);\n    i0.ɵɵtext(24, \"\\n                                            \");\n    i0.ɵɵtemplate(25, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_4_button_25_Template, 2, 4, \"button\", 29);\n    i0.ɵɵtext(26, \"\\n                                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n                        \");\n    i0.ɵɵelementStart(32, \"tr\");\n    i0.ɵɵtext(33, \"\\n                            \");\n    i0.ɵɵelementStart(34, \"th\", 21);\n    i0.ɵɵtext(35, \"Month/Year\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(36, \"\\n                            \");\n    i0.ɵɵelementStart(37, \"th\", 21);\n    i0.ɵɵtext(38, \"Annual\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(39, \"\\n                            \");\n    i0.ɵɵtext(40, \"\\n                            \");\n    i0.ɵɵtemplate(41, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_4_th_41_Template, 2, 4, \"th\", 30);\n    i0.ɵɵpipe(42, \"slice\");\n    i0.ɵɵtext(43, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(44, \"\\n                    \");\n  }\n  if (rf & 2) {\n    const _r123 = i0.ɵɵreference(18);\n    const ctx_r120 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵattribute(\"colspan\", ctx_r120.incomeTaxInsurArrayConsol.controls.length + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r120.captionGroup);\n    i0.ɵɵadvance(6);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(13, _c6));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r120.isActive() && !ctx_r120.readOnly && ctx_r120.hasValidAuthorityAndStation())(\"ngIfElse\", _r123);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r120.isActive() && !ctx_r120.readOnly && ctx_r120.hasValidAuthorityAndStation());\n    i0.ɵɵadvance(12);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(14, _c5));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(42, 10, ctx_r120.incomeTaxInsurArrayConsol.controls, 1));\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_3_td_5_p_inputNumber_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 71);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_3_td_5_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const data_r153 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                            \", i0.ɵɵpipeBind2(3, 1, data_r153.get(\"firstYrCommission\").value, \"1.2-2\"), \"\\n                                        \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_3_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵtext(2, \"\\n                                    \");\n    i0.ɵɵtemplate(3, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_3_td_5_p_inputNumber_3_Template, 1, 1, \"p-inputNumber\", 69);\n    i0.ɵɵtext(4, \"\\n                                    \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_3_td_5_ng_template_5_Template, 5, 4, \"ng-template\", null, 70, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(7, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r154 = ctx.index;\n    const _r156 = i0.ɵɵreference(6);\n    const ctx_r152 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r154);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r152.isActive() && !ctx_r152.readOnly && ctx_r152.hasValidAuthorityAndStation() && i_r154 === 0)(\"ngIfElse\", _r156);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_3_td_5_Template, 8, 3, \"td\", 37);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r140 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r140.cols[0]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r140.incomeTaxInsurArrayConsol.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_5_td_5_p_inputNumber_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 74);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_5_td_5_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const data_r160 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                            \", i0.ɵɵpipeBind2(3, 1, data_r160.get(\"singlePremium\").value, \"1.2-2\"), \"\\n                                        \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_5_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵtext(2, \"\\n                                    \");\n    i0.ɵɵtemplate(3, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_5_td_5_p_inputNumber_3_Template, 1, 1, \"p-inputNumber\", 72);\n    i0.ɵɵtext(4, \"\\n                                    \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_5_td_5_ng_template_5_Template, 5, 4, \"ng-template\", null, 73, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(7, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r161 = ctx.index;\n    const _r163 = i0.ɵɵreference(6);\n    const ctx_r159 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r161);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r159.isActive() && !ctx_r159.readOnly && ctx_r159.hasValidAuthorityAndStation() && i_r161 === 0)(\"ngIfElse\", _r163);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_5_td_5_Template, 8, 3, \"td\", 37);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r141 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r141.cols[1]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r141.incomeTaxInsurArrayConsol.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_7_td_5_p_inputNumber_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 77);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_7_td_5_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const data_r167 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                            \", i0.ɵɵpipeBind2(3, 1, data_r167.get(\"prdCommission\").value, \"1.2-2\"), \"\\n                                        \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_7_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵtext(2, \"\\n                                    \");\n    i0.ɵɵtemplate(3, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_7_td_5_p_inputNumber_3_Template, 1, 1, \"p-inputNumber\", 75);\n    i0.ɵɵtext(4, \"\\n                                    \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_7_td_5_ng_template_5_Template, 5, 4, \"ng-template\", null, 76, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(7, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r168 = ctx.index;\n    const _r170 = i0.ɵɵreference(6);\n    const ctx_r166 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r168);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r166.isActive() && !ctx_r166.readOnly && ctx_r166.hasValidAuthorityAndStation() && i_r168 === 0)(\"ngIfElse\", _r170);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_7_td_5_Template, 8, 3, \"td\", 37);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r142 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r142.cols[2]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r142.incomeTaxInsurArrayConsol.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_9_td_5_p_inputNumber_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 80);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_9_td_5_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const data_r174 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                            \", i0.ɵɵpipeBind2(3, 1, data_r174.get(\"generalInsurance\").value, \"1.2-2\"), \"\\n                                        \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_9_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵtext(2, \"\\n                                    \");\n    i0.ɵɵtemplate(3, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_9_td_5_p_inputNumber_3_Template, 1, 1, \"p-inputNumber\", 78);\n    i0.ɵɵtext(4, \"\\n                                    \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_9_td_5_ng_template_5_Template, 5, 4, \"ng-template\", null, 79, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(7, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r175 = ctx.index;\n    const _r177 = i0.ɵɵreference(6);\n    const ctx_r173 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r175);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r173.isActive() && !ctx_r173.readOnly && ctx_r173.hasValidAuthorityAndStation() && i_r175 === 0)(\"ngIfElse\", _r177);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_9_td_5_Template, 8, 3, \"td\", 37);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r143 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r143.cols[3]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r143.incomeTaxInsurArrayConsol.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_11_td_5_p_inputNumber_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 83);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_11_td_5_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const data_r181 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                            \", i0.ɵɵpipeBind2(3, 1, data_r181.get(\"otherCommission\").value, \"1.2-2\"), \"\\n                                        \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_11_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵtext(2, \"\\n                                    \");\n    i0.ɵɵtemplate(3, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_11_td_5_p_inputNumber_3_Template, 1, 1, \"p-inputNumber\", 81);\n    i0.ɵɵtext(4, \"\\n                                    \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_11_td_5_ng_template_5_Template, 5, 4, \"ng-template\", null, 82, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(7, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r182 = ctx.index;\n    const _r184 = i0.ɵɵreference(6);\n    const ctx_r180 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r182);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r180.isActive() && !ctx_r180.readOnly && ctx_r180.hasValidAuthorityAndStation() && i_r182 === 0)(\"ngIfElse\", _r184);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_11_td_5_Template, 8, 3, \"td\", 37);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r144 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r144.cols[4]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r144.incomeTaxInsurArrayConsol.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_13_td_5_p_inputNumber_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 86);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_13_td_5_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const data_r188 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                            \", i0.ɵɵpipeBind2(3, 1, data_r188.get(\"prdBonus\").value, \"1.2-2\"), \"\\n                                        \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_13_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵtext(2, \"\\n                                    \");\n    i0.ɵɵtemplate(3, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_13_td_5_p_inputNumber_3_Template, 1, 1, \"p-inputNumber\", 84);\n    i0.ɵɵtext(4, \"\\n                                    \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_13_td_5_ng_template_5_Template, 5, 4, \"ng-template\", null, 85, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(7, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r189 = ctx.index;\n    const _r191 = i0.ɵɵreference(6);\n    const ctx_r187 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r189);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r187.isActive() && !ctx_r187.readOnly && ctx_r187.hasValidAuthorityAndStation() && i_r189 === 0)(\"ngIfElse\", _r191);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_13_td_5_Template, 8, 3, \"td\", 37);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r145 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r145.cols[5]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r145.incomeTaxInsurArrayConsol.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_15_td_5_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u00A0pa\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_15_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵelementStart(2, \"div\", 36);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_15_td_5_span_5_Template, 2, 0, \"span\", 2);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r196 = ctx.index;\n    const ctx_r194 = i0.ɵɵnextContext(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c7));\n    i0.ɵɵproperty(\"formGroupName\", i_r196);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(4, 5, ctx_r194.getTotalPayableCol(i_r196, ctx_r194.incomeTaxInsurArrayConsol), \"1.2-2\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i_r196 === 0);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_15_td_5_Template, 8, 9, \"td\", 58);\n    i0.ɵɵtext(6, \"\\n\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r146 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r146.cols[6]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r146.incomeTaxInsurArrayConsol.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_17_td_5_p_inputNumber_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 88);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_17_td_5_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const data_r199 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                            \", i0.ɵɵpipeBind2(3, 1, data_r199.get(\"renewalCommission\").value, \"1.2-2\"), \"\\n                                        \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_17_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵtext(2, \"\\n                                    \");\n    i0.ɵɵtemplate(3, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_17_td_5_p_inputNumber_3_Template, 1, 1, \"p-inputNumber\", 87);\n    i0.ɵɵtext(4, \"\\n                                    \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_17_td_5_ng_template_5_Template, 5, 4, \"ng-template\", null, 85, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(7, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r200 = ctx.index;\n    const _r202 = i0.ɵɵreference(6);\n    const ctx_r198 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r200);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r198.isActive() && !ctx_r198.readOnly && ctx_r198.hasValidAuthorityAndStation() && i_r200 === 0)(\"ngIfElse\", _r202);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_17_td_5_Template, 8, 3, \"td\", 37);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r147 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r147.cols[7]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r147.incomeTaxInsurArrayConsol.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_19_td_5_p_inputNumber_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 91);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_19_td_5_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const data_r206 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                            \", i0.ɵɵpipeBind2(3, 1, data_r206.get(\"overridingCommission\").value, \"1.2-2\"), \"\\n                                        \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_19_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵtext(2, \"\\n                                    \");\n    i0.ɵɵtemplate(3, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_19_td_5_p_inputNumber_3_Template, 1, 1, \"p-inputNumber\", 89);\n    i0.ɵɵtext(4, \"\\n                                    \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_19_td_5_ng_template_5_Template, 5, 4, \"ng-template\", null, 90, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(7, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r207 = ctx.index;\n    const _r209 = i0.ɵɵreference(6);\n    const ctx_r205 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r207);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r205.isActive() && !ctx_r205.readOnly && ctx_r205.hasValidAuthorityAndStation() && i_r207 === 0)(\"ngIfElse\", _r209);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_19_td_5_Template, 8, 3, \"td\", 37);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r148 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r148.cols[8]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r148.incomeTaxInsurArrayConsol.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_21_td_5_p_inputNumber_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-inputNumber\", 94);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"minFractionDigits\", 2);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_21_td_5_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                        \");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                    \");\n  }\n  if (rf & 2) {\n    const data_r213 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                            \", i0.ɵɵpipeBind2(3, 1, data_r213.get(\"otherNonPayable\").value, \"1.2-2\"), \"\\n                                        \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_21_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵtext(2, \"\\n                                    \");\n    i0.ɵɵtemplate(3, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_21_td_5_p_inputNumber_3_Template, 1, 1, \"p-inputNumber\", 92);\n    i0.ɵɵtext(4, \"\\n                                    \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_21_td_5_ng_template_5_Template, 5, 4, \"ng-template\", null, 93, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(7, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r214 = ctx.index;\n    const _r216 = i0.ɵɵreference(6);\n    const ctx_r212 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"formGroupName\", i_r214);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r212.isActive() && !ctx_r212.readOnly && ctx_r212.hasValidAuthorityAndStation() && i_r214 === 0)(\"ngIfElse\", _r216);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_21_td_5_Template, 8, 3, \"td\", 37);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r149 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r149.cols[9]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r149.incomeTaxInsurArrayConsol.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_23_td_5_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u00A0pa\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_23_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵelementStart(2, \"div\", 36);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_23_td_5_span_5_Template, 2, 0, \"span\", 2);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r221 = ctx.index;\n    const ctx_r219 = i0.ɵɵnextContext(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c7));\n    i0.ɵɵproperty(\"formGroupName\", i_r221);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(4, 5, ctx_r219.getTotalNonPayableCol(i_r221, ctx_r219.incomeTaxInsurArrayConsol), \"1.2-2\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i_r221 === 0);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_23_td_5_Template, 8, 9, \"td\", 58);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r150 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r150.cols[10]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r150.incomeTaxInsurArrayConsol.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_25_td_5_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u00A0pa\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_25_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1, \"\\n                                    \");\n    i0.ɵɵelementStart(2, \"div\", 36);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_25_td_5_span_5_Template, 2, 0, \"span\", 2);\n    i0.ɵɵtext(6, \"\\n                                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n                                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r225 = ctx.index;\n    const ctx_r223 = i0.ɵɵnextContext(5);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c7));\n    i0.ɵɵproperty(\"formGroupName\", i_r225);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n                                        \", i0.ɵɵpipeBind2(4, 5, ctx_r223.getTotalNonPayableCol(i_r225, ctx_r223.incomeTaxInsurArrayConsol) + ctx_r223.getTotalPayableCol(i_r225, ctx_r223.incomeTaxInsurArrayConsol), \"1.2-2\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i_r225 === 0);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"\\n                                \");\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                                \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_25_td_5_Template, 8, 9, \"td\", 58);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r151 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r151.cols[11]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r151.incomeTaxInsurArrayConsol.controls);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                    \");\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵtext(2, \"\\n                            \");\n    i0.ɵɵtemplate(3, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_3_Template, 7, 2, \"tr\", 2);\n    i0.ɵɵtext(4, \"\\n                            \");\n    i0.ɵɵtemplate(5, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_5_Template, 7, 2, \"tr\", 2);\n    i0.ɵɵtext(6, \"\\n                            \");\n    i0.ɵɵtemplate(7, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_7_Template, 7, 2, \"tr\", 2);\n    i0.ɵɵtext(8, \"\\n                            \");\n    i0.ɵɵtemplate(9, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_9_Template, 7, 2, \"tr\", 2);\n    i0.ɵɵtext(10, \"\\n                            \");\n    i0.ɵɵtemplate(11, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_11_Template, 7, 2, \"tr\", 2);\n    i0.ɵɵtext(12, \"\\n                            \");\n    i0.ɵɵtemplate(13, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_13_Template, 7, 2, \"tr\", 2);\n    i0.ɵɵtext(14, \"\\n                            \");\n    i0.ɵɵtemplate(15, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_15_Template, 7, 2, \"tr\", 2);\n    i0.ɵɵtext(16, \"\\n                            \");\n    i0.ɵɵtemplate(17, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_17_Template, 7, 2, \"tr\", 2);\n    i0.ɵɵtext(18, \"\\n                            \");\n    i0.ɵɵtemplate(19, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_19_Template, 7, 2, \"tr\", 2);\n    i0.ɵɵtext(20, \"\\n                            \");\n    i0.ɵɵtemplate(21, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_21_Template, 7, 2, \"tr\", 2);\n    i0.ɵɵtext(22, \"\\n                            \");\n    i0.ɵɵtemplate(23, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_23_Template, 7, 2, \"tr\", 2);\n    i0.ɵɵtext(24, \"\\n                            \");\n    i0.ɵɵtemplate(25, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_tr_25_Template, 7, 2, \"tr\", 2);\n    i0.ɵɵtext(26, \"\\n                    \");\n  }\n  if (rf & 2) {\n    const rowIndex_r139 = ctx.rowIndex;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r139 == 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r139 == 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r139 == 2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r139 == 3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r139 == 4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r139 == 5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r139 == 6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r139 == 7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r139 == 8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r139 == 9);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r139 == 10);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rowIndex_r139 == 11);\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                \");\n    i0.ɵɵelementStart(1, \"p-table\", 17, 68);\n    i0.ɵɵtext(3, \"\\n                    \");\n    i0.ɵɵtemplate(4, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_4_Template, 45, 15, \"ng-template\", 19);\n    i0.ɵɵtext(5, \"\\n                    \");\n    i0.ɵɵtext(6, \"\\n                        \");\n    i0.ɵɵtemplate(7, InsuranceIncomeTaxComponent_div_6_ng_template_9_ng_template_7_Template, 27, 12, \"ng-template\", 20);\n    i0.ɵɵtext(8, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n            \");\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r7.incomeTaxInsurArrayConsol.controls)(\"filterDelay\", 0)(\"loading\", ctx_r7.loading);\n  }\n}\nconst _c8 = function () {\n  return {\n    \"width\": \"5em\",\n    \"text-align\": \"right\"\n  };\n};\nfunction InsuranceIncomeTaxComponent_div_6_p_inputNumber_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-inputNumber\", 95);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"maxlength\", 3)(\"inputStyle\", i0.ɵɵpureFunction0(2, _c8));\n  }\n}\nconst _c9 = function () {\n  return {\n    field: \"Claim NIP\"\n  };\n};\nfunction InsuranceIncomeTaxComponent_div_6_small_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 96);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c9));\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_ng_template_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                \", ctx_r11.incomeTaxInsurForm.controls[\"footerGroup\"].get(\"claimNip\").value, \"%\\n                            \");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_span_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r12.actualNipComputation, \")\");\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r228 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 97);\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵtext(2, \"\\n                        \");\n    i0.ɵɵelementStart(3, \"p-button\", 98);\n    i0.ɵɵlistener(\"click\", function InsuranceIncomeTaxComponent_div_6_div_46_Template_p_button_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r228);\n      const ctx_r227 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r227.copyToItem($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r13.enableCopytoItem());\n  }\n}\nfunction InsuranceIncomeTaxComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"div\", 7);\n    i0.ɵɵtext(3, \"\\n            \");\n    i0.ɵɵtemplate(4, InsuranceIncomeTaxComponent_div_6_p_table_4_Template, 8, 3, \"p-table\", 8);\n    i0.ɵɵtext(5, \"\\n\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n        \");\n    i0.ɵɵelementStart(7, \"div\", 9);\n    i0.ɵɵtext(8, \"\\n            \");\n    i0.ɵɵtemplate(9, InsuranceIncomeTaxComponent_div_6_ng_template_9_Template, 10, 3, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(11, \"\\n            \");\n    i0.ɵɵelementStart(12, \"div\", 11);\n    i0.ɵɵtext(13, \"\\n                \");\n    i0.ɵɵelementStart(14, \"form\", 1);\n    i0.ɵɵtext(15, \"\\n                    \");\n    i0.ɵɵelementStart(16, \"div\", 12);\n    i0.ɵɵtext(17, \"\\n                        \");\n    i0.ɵɵelementStart(18, \"div\");\n    i0.ɵɵtext(19, \"Claim NIP:\\n                            \");\n    i0.ɵɵtemplate(20, InsuranceIncomeTaxComponent_div_6_p_inputNumber_20_Template, 2, 3, \"p-inputNumber\", 13);\n    i0.ɵɵtext(21, \"\\n                            \");\n    i0.ɵɵtemplate(22, InsuranceIncomeTaxComponent_div_6_small_22_Template, 2, 2, \"small\", 14);\n    i0.ɵɵtext(23, \"\\n                            \");\n    i0.ɵɵtemplate(24, InsuranceIncomeTaxComponent_div_6_ng_template_24_Template, 1, 1, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(26, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \"\\n\\n                        \");\n    i0.ɵɵelementStart(28, \"div\");\n    i0.ɵɵtext(29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n                        \");\n    i0.ɵɵelementStart(31, \"div\");\n    i0.ɵɵtext(32);\n    i0.ɵɵtemplate(33, InsuranceIncomeTaxComponent_div_6_span_33_Template, 2, 1, \"span\", 2);\n    i0.ɵɵtext(34, \"\\n\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(35, \"\\n                        \");\n    i0.ɵɵelementStart(36, \"div\");\n    i0.ɵɵtext(37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(38, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(39, \"\\n                    \");\n    i0.ɵɵelementStart(40, \"div\", 12);\n    i0.ɵɵtext(41, \"\\n                        \");\n    i0.ɵɵelementStart(42, \"div\");\n    i0.ɵɵtext(43);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(44, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(45, \"\\n                    \");\n    i0.ɵɵtemplate(46, InsuranceIncomeTaxComponent_div_6_div_46_Template, 5, 1, \"div\", 16);\n    i0.ɵɵtext(47, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(48, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(49, \"\\n\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(50, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r6 = i0.ɵɵreference(10);\n    const _r10 = i0.ɵɵreference(25);\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_5_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.incomeTaxInsurForm.controls[\"captionGroup\"].get(\"radioOption\").value === \"MTH\")(\"ngIfElse\", _r6);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.footerGroup);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isActive() && !ctx_r2.readOnly && ctx_r2.hasValidAuthorityAndStation())(\"ngIfElse\", _r10);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx_r2.incomeTaxInsurForm.controls[\"footerGroup\"].get(\"claimNip\")) == null ? null : tmp_5_0.touched) && !ctx_r2.isValidNumber((tmp_5_0 = ctx_r2.incomeTaxInsurForm.controls[\"footerGroup\"].get(\"claimNip\")) == null ? null : tmp_5_0.value));\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"Proposed NIP: \", ctx_r2.proposedNip, \" %\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Actual NIP:\\n\\n                                \", ctx_r2.getActualNip(), \"% \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isEmpty(ctx_r2.actualNipComputation));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Overriding Commission: \", ctx_r2.getOverridingCommPerc(), \" %\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate2(\"Total Amount Payable:\\n                            \", ctx_r2.getTotalAmtPayable(), \"\\n                            (\", ctx_r2.getTotalAmtPayableDesc(), \")\\n                    \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isActive() && !ctx_r2.readOnly && ctx_r2.hasValidAuthorityAndStation());\n  }\n}\nclass InsuranceIncomeTaxComponent {\n  constructor(formBuilder, dateUtilsService, nspConfirmService, seClaimService, toastService, confirmationService, exportUtilsService, accountService, cd, localeId) {\n    this.formBuilder = formBuilder;\n    this.dateUtilsService = dateUtilsService;\n    this.nspConfirmService = nspConfirmService;\n    this.seClaimService = seClaimService;\n    this.toastService = toastService;\n    this.confirmationService = confirmationService;\n    this.exportUtilsService = exportUtilsService;\n    this.accountService = accountService;\n    this.cd = cd;\n    this.localeId = localeId;\n    this.radioOptions = [{\n      name: 'Monthly',\n      key: 'MTH'\n    }, {\n      name: 'Consolidated',\n      key: 'CON'\n    }];\n    this.loading = true;\n    this.currHardCopyDetails = {};\n    this.currIrasDetails = {};\n    this.seHardCopyDetails = {};\n    this.selectedWDOption = {};\n    this.itemDetailsSection = {};\n    this.irasDetails = {};\n    this.subscr = new rxjs_1.Subscription();\n    this.yrmthList = [];\n    this.PEND_VERIFY_STATUS = \"PVE\";\n    this.PEND_ACTION_STATUS = \"PAC\";\n    this.totalAmtPayEvent = new core_1.EventEmitter();\n    this.colMthRange = [];\n    this.dataSet = {};\n    this.actualNipComputation = \"\";\n    this.formGroupObj = undefined;\n    this.overridingCommissionPerc = 0;\n    this.displayActualNip = false;\n    this.annualtotalComm = 0;\n    this.tradeIncome = 0;\n    this.proposedNip = 0;\n    this.actualNip = 0;\n    this.overridingCommission = 0;\n    this.incomeTaxInsurForm = this.formBuilder.group({\n      id: new forms_1.FormControl(null, null),\n      workingDataId: new forms_1.FormControl('', null),\n      consolidated: new forms_1.FormControl(false, null),\n      incomeTaxInsurArrayMthly: this.formBuilder.array([]),\n      incomeTaxInsurArrayConsol: this.formBuilder.array([]),\n      year: 0,\n      captionGroup: this.formBuilder.group({\n        radioOption: new forms_1.FormControl(this.radioOptions[0].key, null)\n      }),\n      footerGroup: this.formBuilder.group({\n        claimNip: new forms_1.FormControl(0, null)\n      }),\n      yrmthList: new forms_1.FormControl(null, null)\n    });\n    this.claimJson = claim_json_1.default;\n  }\n  static createNewITXInsurFormGroup(selectedYearOption, formBuilder, dateUtilsService) {\n    console.log(\"mila\");\n    const incomeTaxInsurFormGroup = formBuilder.group({\n      id: new forms_1.FormControl(null, null),\n      workingDataId: new forms_1.FormControl('', null),\n      consolidated: new forms_1.FormControl(false, null),\n      incomeTaxInsurArrayMthly: formBuilder.array([]),\n      incomeTaxInsurArrayConsol: formBuilder.array([]),\n      year: 0,\n      captionGroup: formBuilder.group({\n        radioOption: new forms_1.FormControl('MTH', null)\n      }),\n      footerGroup: formBuilder.group({\n        claimNip: new forms_1.FormControl(0, null),\n        proposedNip: new forms_1.FormControl(0, null)\n      }),\n      yrmthList: new forms_1.FormControl([], null)\n    });\n    //range is jan to dec of year of working data\n    const claimStartYr = selectedYearOption;\n    const claimStartDt = (0, moment_1.default)(new Date(claimStartYr, 0, 1));\n    const claimEndDt = (0, moment_1.default)(new Date(claimStartYr, 11, 31));\n    const colStartDt = claimStartDt.clone();\n    const colEndDt = claimEndDt.clone();\n    const colMthRange = [];\n    for (let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')) {\n      colMthRange.push(mth.format(\"DD-MM-YYYY\"));\n    }\n    const yrmthList = colMthRange.map(x => (0, moment_1.default)(dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\n    incomeTaxInsurFormGroup.get('yrmthList')?.setValue(yrmthList);\n    const newDataList = [];\n    let dataRecon = [];\n    // construct empty for mthly view\n    dataRecon = InsuranceIncomeTaxComponent.staticConstructConsolidatedHeaderData(newDataList, false, true, false, incomeTaxInsurFormGroup.get('yrmthList').value);\n    InsuranceIncomeTaxComponent.staticConstructForm(newDataList, incomeTaxInsurFormGroup.get('incomeTaxInsurArrayMthly'), incomeTaxInsurFormGroup.get('consolidated').value, formBuilder);\n    //construct empty for consolidated view\n    dataRecon = InsuranceIncomeTaxComponent.staticConstructConsolidatedHeaderData(newDataList, true, true, false, incomeTaxInsurFormGroup.get('yrmthList').value);\n    InsuranceIncomeTaxComponent.staticConstructForm(newDataList, incomeTaxInsurFormGroup.get('incomeTaxInsurArrayConsol'), incomeTaxInsurFormGroup.get('consolidated').value, formBuilder);\n    return incomeTaxInsurFormGroup;\n  }\n  static mapInsurITXFormGroupToWD(fg, obj) {\n    const dataList = [];\n    const insurITXWD = {\n      id: fg.get('id')?.value,\n      workingDataId: obj.workingDataId,\n      workingDataTypeCode: obj.workingDataTypeCode,\n      year: fg?.get('year')?.value || obj.year,\n      consolidated: fg?.get('consolidated')?.value,\n      claimNip: fg?.get('footerGroup.claimNip')?.value,\n      archiveDt: obj.archiveDt,\n      dataList\n    };\n    if (fg !== undefined && fg !== null) {\n      if (fg.get('consolidated').value) {\n        const control = fg.get('incomeTaxInsurArrayConsol').controls[0];\n        const subWD = {\n          firstYrCommission: control.get(\"firstYrCommission\").value,\n          singlePremium: control.get(\"singlePremium\").value,\n          prdCommission: control.get(\"prdCommission\").value,\n          generalInsurance: control.get(\"generalInsurance\").value,\n          otherCommission: control.get(\"otherCommission\").value,\n          prdBonus: control.get(\"prdBonus\").value,\n          renewalCommission: control.get(\"renewalCommission\").value,\n          overridingCommission: control.get(\"overridingCommission\").value,\n          otherNonPayable: control.get(\"otherNonPayable\").value\n        };\n        dataList.push(subWD);\n      } else {\n        console.log(\"the real data\", fg.get('incomeTaxInsurArrayMthly').controls);\n        fg.get('incomeTaxInsurArrayMthly').controls.forEach(control => {\n          const subWD = {\n            yrmth: control.get(\"yrmthReCon\").value,\n            firstYrCommission: control.get(\"firstYrCommission\").value,\n            singlePremium: control.get(\"singlePremium\").value,\n            prdCommission: control.get(\"prdCommission\").value,\n            generalInsurance: control.get(\"generalInsurance\").value,\n            otherCommission: control.get(\"otherCommission\").value,\n            prdBonus: control.get(\"prdBonus\").value,\n            renewalCommission: control.get(\"renewalCommission\").value,\n            overridingCommission: control.get(\"overridingCommission\").value,\n            otherNonPayable: control.get(\"otherNonPayable\").value\n          };\n          dataList.push(subWD);\n        });\n      }\n    }\n    console.log(\"whole saved is\", insurITXWD);\n    return insurITXWD;\n  }\n  static mapInsurITXWDToFormGroup(insurITXWD, formBuilder, dateUtilsService) {\n    const incomeTaxInsurForm = formBuilder.group({\n      workingDataId: new forms_1.FormControl(insurITXWD.workingDataId),\n      id: new forms_1.FormControl(insurITXWD.id, null),\n      consolidated: new forms_1.FormControl(false, null),\n      incomeTaxInsurArrayMthly: formBuilder.array([]),\n      incomeTaxInsurArrayConsol: formBuilder.array([]),\n      year: 0,\n      captionGroup: formBuilder.group({\n        radioOption: new forms_1.FormControl('MTH', null)\n      }),\n      footerGroup: formBuilder.group({\n        claimNip: new forms_1.FormControl(0, null)\n      }),\n      yrmthList: new forms_1.FormControl(null, null)\n    });\n    InsuranceIncomeTaxComponent.staticGenerateYrMth(insurITXWD, dateUtilsService, incomeTaxInsurForm.get('yrmthList'));\n    let dataRecon = [];\n    const newDataList = [];\n    if (insurITXWD.consolidated === true) {\n      //expect 1\n      if (insurITXWD.dataList) {\n        incomeTaxInsurForm.get('captionGroup.radioOption').setValue('CON');\n        // construct populated for consolidated view\n        dataRecon = InsuranceIncomeTaxComponent.staticConstructConsolidatedHeaderData(insurITXWD.dataList, true, false, false, incomeTaxInsurForm.get('yrmthList').value);\n        InsuranceIncomeTaxComponent.staticConstructForm(dataRecon, incomeTaxInsurForm.get('incomeTaxInsurArrayConsol'), incomeTaxInsurForm.get('consolidated').value, formBuilder);\n        // construct empty for mthly view\n        dataRecon = InsuranceIncomeTaxComponent.staticConstructConsolidatedHeaderData(newDataList, false, true, false, incomeTaxInsurForm.get('yrmthList').value);\n        InsuranceIncomeTaxComponent.staticConstructForm(newDataList, incomeTaxInsurForm.get('incomeTaxInsurArrayMthly'), incomeTaxInsurForm.get('consolidated').value, formBuilder);\n      }\n    } else {\n      //list of mthly records\n      if (insurITXWD.dataList) {\n        incomeTaxInsurForm.get('captionGroup.radioOption').setValue('MTH');\n        // construct populated for mthly view\n        dataRecon = InsuranceIncomeTaxComponent.staticConstructConsolidatedHeaderData(insurITXWD.dataList, false, false, false, incomeTaxInsurForm.get('yrmthList').value);\n        InsuranceIncomeTaxComponent.staticConstructForm(dataRecon, incomeTaxInsurForm.get('incomeTaxInsurArrayMthly'), incomeTaxInsurForm.get('consolidated').value, formBuilder);\n        //construct empty for consolidated view\n        dataRecon = InsuranceIncomeTaxComponent.staticConstructConsolidatedHeaderData(newDataList, true, true, false, incomeTaxInsurForm.get('yrmthList').value);\n        InsuranceIncomeTaxComponent.staticConstructForm(newDataList, incomeTaxInsurForm.get('incomeTaxInsurArrayConsol'), incomeTaxInsurForm.get('consolidated').value, formBuilder);\n      }\n    }\n    incomeTaxInsurForm.get('footerGroup.claimNip').setValue(insurITXWD?.claimNip);\n    incomeTaxInsurForm.get('consolidated').setValue(insurITXWD?.consolidated);\n    return incomeTaxInsurForm;\n  }\n  static staticConstructConsolidatedHeaderData(dataList, consolidated, empty, newForm, yrmthList) {\n    //logic\n    //12 columns of 12 mths from claimstartdate/trgStartDte - 13 mths to trgStartDte - 1 mths\n    const sanitizedDataList = [];\n    let sortedData;\n    if (consolidated || empty || newForm) {\n      yrmthList.forEach((yrmth, colIndex) => {\n        dataList.push({\n          yrmthReCon: yrmth\n        });\n      });\n      sortedData = dataList;\n    } else {\n      yrmthList.forEach(yrmth => {\n        for (let i = 0; i < dataList.length; i++) {\n          if (dataList[i].yrmth === yrmth && sanitizedDataList.findIndex(x => x.yrmth === yrmth) < 0) {\n            sanitizedDataList.push(dataList[i]);\n          }\n        }\n      });\n      yrmthList.forEach(yrmth => {\n        const index = sanitizedDataList.findIndex(x => x.yrmth === yrmth);\n        if (index < 0) {\n          sanitizedDataList.push({\n            yrmthReCon: yrmth\n          });\n        } else {\n          sanitizedDataList[index].yrmthReCon = yrmth;\n        }\n      });\n      sortedData = sanitizedDataList.sort((a, b) => (0, moment_1.default)(a.yrmthReCon, \"MM-YYYY\") < (0, moment_1.default)(b.yrmthReCon, \"MM-YYYY\") ? -1 : 1);\n    }\n    return sortedData;\n  }\n  static staticGenerateYrMth(data, dateUtilsService, yrmthListCtrl) {\n    //range is jan to dec of year of working data\n    const claimStartYr = data.year;\n    const claimStartDt = (0, moment_1.default)(new Date(claimStartYr, 0, 1));\n    const claimEndDt = (0, moment_1.default)(new Date(claimStartYr, 11, 31));\n    const colStartDt = claimStartDt.clone();\n    const colEndDt = claimEndDt.clone();\n    let yrmthList = [];\n    const colMthRange = [];\n    for (let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')) {\n      colMthRange.push(mth.format(\"DD-MM-YYYY\"));\n    }\n    yrmthList = colMthRange.map(x => (0, moment_1.default)(dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\n    yrmthListCtrl?.setValue(yrmthList);\n  }\n  static staticConstructForm(dataList, formArr, consolidated, formBuilder) {\n    console.log(\"the before\", dataList);\n    dataList.forEach(x => {\n      formArr.push(InsuranceIncomeTaxComponent.staticAddRow(x, consolidated, formBuilder));\n    });\n  }\n  static staticAddRow(dataEntry, consolidated, formBuilder) {\n    //does validation to makesure the yrmth tallies to yrmthRecon other wise default to 0\n    const formObj = {\n      yrmth: new forms_1.FormControl(dataEntry?.yrmth, null),\n      yrmthReCon: new forms_1.FormControl(dataEntry?.yrmthReCon, null),\n      firstYrCommission: new forms_1.FormControl(null, null),\n      singlePremium: new forms_1.FormControl(null, null),\n      prdCommission: new forms_1.FormControl(null, null),\n      generalInsurance: new forms_1.FormControl(null, null),\n      otherCommission: new forms_1.FormControl(null, null),\n      prdBonus: new forms_1.FormControl(null, null),\n      renewalCommission: new forms_1.FormControl(null, null),\n      overridingCommission: new forms_1.FormControl(null, null),\n      otherNonPayable: new forms_1.FormControl(null, null)\n    };\n    //if it tallies, use result from db or is of consolidated type (use first row)\n    if (dataEntry?.yrmth === dataEntry?.yrmthReCon && dataEntry?.yrmth !== undefined || consolidated) {\n      formObj.yrmth.setValue(dataEntry?.yrmth);\n      formObj.yrmthReCon.setValue(dataEntry?.yrmthReCon);\n      formObj.firstYrCommission.setValue(dataEntry?.firstYrCommission);\n      formObj.singlePremium.setValue(dataEntry?.singlePremium);\n      formObj.prdCommission.setValue(dataEntry?.prdCommission);\n      formObj.generalInsurance.setValue(dataEntry?.generalInsurance);\n      formObj.otherCommission.setValue(dataEntry?.otherCommission);\n      formObj.prdBonus.setValue(dataEntry?.prdBonus);\n      formObj.renewalCommission.setValue(dataEntry?.renewalCommission);\n      formObj.overridingCommission.setValue(dataEntry?.overridingCommission);\n      formObj.otherNonPayable.setValue(dataEntry?.otherNonPayable);\n    }\n    return formBuilder.group(formObj);\n  }\n  ngOnInit() {\n    this.cols = [\"First Year Commission\", \"Single Premium\", \"Production Commission\", \"General Insurance\", \"Other Commission\", \"Production Bonus\", \"Total Payable Commission\", \"Renewal Commission\", \"Overriding Commission\", \"Other Non-Payable Commission\", \"Total Non-Payable Components\", \"Total Commission\"];\n    console.log(\"cols\", this.cols);\n  }\n  ngOnChanges(changes) {\n    if (changes.irasDetails?.currentValue) {\n      console.log(\"the iras\", changes.irasDetails.currentValue);\n      this.currIrasDetails = changes.irasDetails?.currentValue;\n    }\n    if (changes.seHardCopyDetails?.currentValue) {\n      this.currHardCopyDetails = changes.seHardCopyDetails?.currentValue;\n    }\n    if (changes.selectedWDOption?.currentValue) {\n      this.currSelectedOption = changes.selectedWDOption?.currentValue;\n      console.log(\"changed selection\", this.currSelectedOption);\n      this.subscr.unsubscribe();\n      this.retrieveInsurWD();\n    }\n  }\n  getYrmthList() {\n    return this.incomeTaxInsurForm.get('yrmthList').value;\n  }\n  ngAfterViewChecked() {\n    this.cd.detectChanges();\n  }\n  roundVal(value) {\n    return Math.round(value);\n  }\n  get incomeTaxInsurArrayMthly() {\n    return this.incomeTaxInsurForm?.get('incomeTaxInsurArrayMthly');\n  }\n  get incomeTaxInsurArrayConsol() {\n    return this.incomeTaxInsurForm?.get('incomeTaxInsurArrayConsol');\n  }\n  get footerGroup() {\n    return this.incomeTaxInsurForm?.get('footerGroup');\n  }\n  get captionGroup() {\n    return this.incomeTaxInsurForm?.get('captionGroup');\n  }\n  constructForm(dataList, formArr, consolidated) {\n    console.log(\"the before\", dataList);\n    dataList.forEach(x => {\n      formArr.push(this.addRow(x, consolidated));\n    });\n  }\n  addRow(dataEntry, consolidated) {\n    //does validation to makesure the yrmth tallies to yrmthRecon other wise default to 0\n    const formObj = {\n      yrmth: new forms_1.FormControl(dataEntry?.yrmth, null),\n      yrmthReCon: new forms_1.FormControl(dataEntry?.yrmthReCon, null),\n      firstYrCommission: new forms_1.FormControl(null, null),\n      singlePremium: new forms_1.FormControl(null, null),\n      prdCommission: new forms_1.FormControl(null, null),\n      generalInsurance: new forms_1.FormControl(null, null),\n      otherCommission: new forms_1.FormControl(null, null),\n      prdBonus: new forms_1.FormControl(null, null),\n      renewalCommission: new forms_1.FormControl(null, null),\n      overridingCommission: new forms_1.FormControl(null, null),\n      otherNonPayable: new forms_1.FormControl(null, null)\n    };\n    //if it tallies, use result from db or is of consolidated type (use first row)\n    if (dataEntry?.yrmth === dataEntry?.yrmthReCon && dataEntry?.yrmth !== undefined || consolidated) {\n      formObj.yrmth.setValue(dataEntry?.yrmth);\n      formObj.yrmthReCon.setValue(dataEntry?.yrmthReCon);\n      formObj.firstYrCommission.setValue(dataEntry?.firstYrCommission);\n      formObj.singlePremium.setValue(dataEntry?.singlePremium);\n      formObj.prdCommission.setValue(dataEntry?.prdCommission);\n      formObj.generalInsurance.setValue(dataEntry?.generalInsurance);\n      formObj.otherCommission.setValue(dataEntry?.otherCommission);\n      formObj.prdBonus.setValue(dataEntry?.prdBonus);\n      formObj.renewalCommission.setValue(dataEntry?.renewalCommission);\n      formObj.overridingCommission.setValue(dataEntry?.overridingCommission);\n      formObj.otherNonPayable.setValue(dataEntry?.otherNonPayable);\n    }\n    return this.formBuilder.group(formObj);\n  }\n  isActive() {\n    return this.currSelectedOption?.obj.archiveDt === 0;\n  }\n  copyToItem(event) {\n    this.totalAmtPayEvent.emit(this.getTotalAmtPayable());\n  }\n  enableRefreshOClaim() {\n    // return this.captionGroup.get('radioOption').value==='MTH';\n    return this.incomeTaxInsurForm.get('captionGroup.radioOption').value === 'MTH';\n  }\n  confirmFile(event, key) {\n    console.log(\"clicing option\");\n    this.nspConfirmService.onConfirmPopupMsg(event, \"All Working Data fields will be cleared\", key, null, () => {\n      console.log(\"confirm change option\");\n    });\n  }\n  disableNonActive() {\n    return this.currSelectedOption?.obj.archiveDt !== 0;\n  }\n  retrieveInsurWD() {\n    //if no changes were recorded, or newly archived take from db, otherwise take from local unsaved copy\n    if (!this.currSelectedOption?.changes && !this.currSelectedOption.newWD || this.currSelectedOption.newArchived && this.currSelectedOption?.obj.workingDataId !== null) {\n      console.log(\"newly archived is \", this.currSelectedOption.newArchived);\n      let params = new http_1.HttpParams();\n      params = params.append(\"workingDataId\", this.currSelectedOption?.obj.workingDataId);\n      this.seClaimService.retrieveInsurWD({\n        params\n      }).subscribe(resp => {\n        if (resp) {\n          if (resp.status === 200 && resp.body.data) {\n            this.generateYrMth(resp.body.data);\n            this.populateIncomeTaxInsurForm(resp.body.data, false, null);\n            this.valueChangeSubscribe();\n          }\n        }\n      }, error => {\n        console.log(\"error is\" + String(error?.error?.error_desc));\n        this.toastService.error(String(error?.error?.error_desc));\n      });\n    } else if (this.currSelectedOption.changes && !this.currSelectedOption.newWD) {\n      console.log(\"get from changes WD Map\", this.workingDataWithChanges.get(this.currSelectedOption?.obj.workingDataId));\n      this.incomeTaxInsurForm = this.workingDataWithChanges.get(this.currSelectedOption?.obj?.workingDataId).formGroup;\n      this.yrmthList = this.incomeTaxInsurForm.get('yrmthList').value;\n      this.setRadioOption(this.incomeTaxInsurForm.get('consolidated').value);\n      this.loading = false;\n    } else if (this.currSelectedOption.newWD) {\n      console.log(\"get from new WD Map\");\n      console.log(\"selected key\", this.currSelectedOption?.key.toString());\n      this.incomeTaxInsurForm = this.newUnsavedWorkingData.get(this.currSelectedOption?.key.toString()).formGroup;\n      if (this.incomeTaxInsurForm.get('consolidated')) {\n        this.setRadioOption(this.incomeTaxInsurForm.get('consolidated').value);\n        //defaulted to monthly\n      } else this.setRadioOption(false);\n      this.loading = false;\n    }\n  }\n  confirmSwitch(e, type) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const value = e.target.value;\n      console.log(\"incoming value\", value);\n      if (value !== _this.incomeTaxInsurForm.get('captionGroup.radioOption').value) {\n        e.preventDefault();\n        const confirm = yield _this.showConfirm(e, type);\n        if (!confirm) {\n          return;\n        } else {\n          _this.incomeTaxInsurForm.get('captionGroup.radioOption').setValue(value);\n          _this.incomeTaxInsurForm.get('consolidated').setValue(value === 'CON');\n          _this.clearForm(value);\n        }\n      }\n    })();\n  }\n  showConfirm(e, type) {\n    return new Promise(resolve => {\n      this.confirmationService.confirm({\n        target: e.target,\n        message: 'All Working Data fields will be cleared',\n        header: 'Confirmation',\n        key: type,\n        icon: 'pi pi-exclamation-triangle',\n        acceptLabel: 'Proceed',\n        rejectLabel: 'Cancel',\n        accept() {\n          return resolve(true);\n        }\n      });\n    });\n  }\n  setRadioOption(consolidated) {\n    if (consolidated) {\n      this.incomeTaxInsurForm.get('captionGroup.radioOption').setValue('CON');\n    } else this.incomeTaxInsurForm.get('captionGroup.radioOption').setValue('MTH');\n  }\n  generateYrMth(data) {\n    //range is jan to dec of year of working data\n    const claimStartYr = data.year;\n    const claimStartDt = (0, moment_1.default)(new Date(claimStartYr, 0, 1));\n    const claimEndDt = (0, moment_1.default)(new Date(claimStartYr, 11, 31));\n    const colStartDt = claimStartDt.clone();\n    const colEndDt = claimEndDt.clone();\n    this.colMthRange = [];\n    for (let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')) {\n      this.colMthRange.push(mth.format(\"DD-MM-YYYY\"));\n    }\n    this.yrmthList = this.colMthRange.map(x => (0, moment_1.default)(this.dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\n    const cloneYrmthList = JSON.parse(JSON.stringify(this.yrmthList));\n    console.log(\"clone is\", cloneYrmthList);\n    this.incomeTaxInsurForm.get('yrmthList').setValue(cloneYrmthList);\n  }\n  clearForm(radioKey) {\n    if (radioKey === \"MTH\") {\n      this.incomeTaxInsurArrayConsol.controls.forEach(control => {\n        control.get('firstYrCommission').setValue(null);\n      });\n      this.incomeTaxInsurArrayConsol.controls.forEach(control => {\n        control.get('singlePremium').setValue(null);\n      });\n      this.incomeTaxInsurArrayConsol.controls.forEach(control => {\n        control.get('prdCommission').setValue(null);\n      });\n      this.incomeTaxInsurArrayConsol.controls.forEach(control => {\n        control.get('generalInsurance').setValue(null);\n      });\n      this.incomeTaxInsurArrayConsol.controls.forEach(control => {\n        control.get('otherCommission').setValue(null);\n      });\n      this.incomeTaxInsurArrayConsol.controls.forEach(control => {\n        control.get('prdBonus').setValue(null);\n      });\n      this.incomeTaxInsurArrayConsol.controls.forEach(control => {\n        control.get('renewalCommission').setValue(null);\n      });\n      this.incomeTaxInsurArrayConsol.controls.forEach(control => {\n        control.get('overridingCommission').setValue(null);\n      });\n      this.incomeTaxInsurArrayConsol.controls.forEach(control => {\n        control.get('otherNonPayable').setValue(null);\n      });\n    } else {\n      this.incomeTaxInsurArrayMthly.controls.forEach(control => {\n        control.get('firstYrCommission').setValue(null);\n      });\n      this.incomeTaxInsurArrayMthly.controls.forEach(control => {\n        control.get('singlePremium').setValue(null);\n      });\n      this.incomeTaxInsurArrayMthly.controls.forEach(control => {\n        control.get('prdCommission').setValue(null);\n      });\n      this.incomeTaxInsurArrayMthly.controls.forEach(control => {\n        control.get('generalInsurance').setValue(null);\n      });\n      this.incomeTaxInsurArrayMthly.controls.forEach(control => {\n        control.get('otherCommission').setValue(null);\n      });\n      this.incomeTaxInsurArrayMthly.controls.forEach(control => {\n        control.get('prdBonus').setValue(null);\n      });\n      this.incomeTaxInsurArrayMthly.controls.forEach(control => {\n        control.get('renewalCommission').setValue(null);\n      });\n      this.incomeTaxInsurArrayMthly.controls.forEach(control => {\n        control.get('overridingCommission').setValue(null);\n      });\n      this.incomeTaxInsurArrayMthly.controls.forEach(control => {\n        control.get('otherNonPayable').setValue(null);\n      });\n    }\n  }\n  isValidNumber(obj) {\n    return !isNaN(obj);\n  }\n  populateIncomeTaxInsurForm(data, newForm, radioKey) {\n    this.incomeTaxInsurForm = this.formBuilder.group({\n      id: new forms_1.FormControl(null, null),\n      workingDataId: new forms_1.FormControl('', null),\n      consolidated: new forms_1.FormControl(false, null),\n      incomeTaxInsurArrayMthly: this.formBuilder.array([]),\n      incomeTaxInsurArrayConsol: this.formBuilder.array([]),\n      year: data.year,\n      captionGroup: this.formBuilder.group({\n        radioOption: new forms_1.FormControl('MTH', null)\n      }),\n      footerGroup: this.formBuilder.group({\n        claimNip: new forms_1.FormControl(0, null),\n        proposedNip: new forms_1.FormControl(0, null)\n      }),\n      yrmthList: new forms_1.FormControl([], null)\n    });\n    this.setFormFooter(data);\n    const newDataList = [];\n    let dataRecon = [];\n    console.log(\"new form is\", this.incomeTaxInsurForm);\n    if (newForm) {\n      //default to mthly\n      if (!radioKey) {\n        this.incomeTaxInsurForm.get('captionGroup.radioOption').setValue('MTH');\n        this.incomeTaxInsurForm.get('consolidated').setValue(false);\n      } else {\n        this.incomeTaxInsurForm.get('captionGroup.radioOption').setValue(radioKey);\n        this.incomeTaxInsurForm.get('consolidated').setValue(radioKey === \"CON\");\n      }\n      // construct populated for mthly view\n      dataRecon = this.constructConsolidatedHeaderData(data.dataList, false, false, newForm);\n      this.constructForm(dataRecon, this.incomeTaxInsurArrayMthly, false);\n      //construct empty for consolidated view\n      this.constructConsolidatedHeaderData(newDataList, true, true, newForm);\n      this.constructForm(newDataList, this.incomeTaxInsurArrayConsol, true);\n    } else {\n      if (data.consolidated === true) {\n        //expect 1\n        if (data.dataList) {\n          this.incomeTaxInsurForm.get('captionGroup.radioOption').setValue('CON');\n          // construct populated for consolidated view\n          dataRecon = this.constructConsolidatedHeaderData(data.dataList, true, false, newForm);\n          this.constructForm(dataRecon, this.incomeTaxInsurArrayConsol, true);\n          // construct empty for mthly view\n          this.constructConsolidatedHeaderData(newDataList, false, true, newForm);\n          this.constructForm(newDataList, this.incomeTaxInsurArrayMthly, false);\n        } else {\n          console.log(\"empty\");\n        }\n      } else {\n        //list of mthly records\n        if (data.dataList) {\n          // this.captionGroup.get('radioOption').setValue('MTH');\n          this.incomeTaxInsurForm.get('captionGroup.radioOption').setValue('MTH');\n          // construct populated for mthly view\n          dataRecon = this.constructConsolidatedHeaderData(data.dataList, false, false, newForm);\n          this.constructForm(dataRecon, this.incomeTaxInsurArrayMthly, false);\n          //construct empty for consolidated view\n          this.constructConsolidatedHeaderData(newDataList, true, true, newForm);\n          this.constructForm(newDataList, this.incomeTaxInsurArrayConsol, true);\n          console.log(\"tinga\", this.incomeTaxInsurArrayMthly.controls);\n        }\n      }\n    }\n    this.loading = false;\n    return this.incomeTaxInsurForm;\n  }\n  valueChangeSubscribe() {\n    this.subscr = this.captionGroup.get('radioOption').valueChanges.subscribe(x => {\n      this.incomeTaxInsurForm.get(\"consolidated\").setValue(this.captionGroup.get('radioOption').value === \"CON\");\n    });\n    this.incomeTaxInsurForm.valueChanges.subscribe(() => {\n      this.currSelectedOption.changes = true;\n      this.saveSEClaimRequest.workingDataSectionInd = true;\n      if (!this.workingDataWithChanges.has(this.currSelectedOption?.obj?.workingDataId) || this.workingDataWithChanges.has(this.currSelectedOption?.obj?.workingDataId) && this.currSelectedOption.newArchived) {\n        console.log(\"puting to id\", this.currSelectedOption?.obj?.workingDataId);\n        console.log(\"during subscribe\", this.incomeTaxInsurForm.controls);\n        this.workingDataWithChanges.set(this.currSelectedOption?.obj?.workingDataId, {\n          obj: this.currSelectedOption.obj,\n          // formGroup:\n          formGroup: this.incomeTaxInsurForm\n        });\n        this.currSelectedOption.newArchived = false;\n      }\n    });\n  }\n  constructConsolidatedHeaderData(dataList, consolidated, empty, newForm) {\n    //logic\n    //12 columns of 12 mths from claimstartdate/trgStartDte - 13 mths to trgStartDte - 1 mths\n    const sanitizedDataList = [];\n    let sortedData;\n    if (consolidated || empty || newForm) {\n      console.log(\"before yrmthlist\", this.yrmthList);\n      this.colMthRange.forEach((mth, colIndex) => {\n        dataList.push({\n          yrmthReCon: (0, moment_1.default)(this.dateUtilsService.convertStrToDate(mth, \"DD-MM-YYYY\")).format(\"MM-YYYY\")\n        });\n      });\n      sortedData = dataList;\n    } else {\n      this.yrmthList.forEach(yrmth => {\n        for (let i = 0; i < dataList.length; i++) {\n          if (dataList[i].yrmth === yrmth && sanitizedDataList.findIndex(x => x.yrmth === yrmth) < 0) {\n            sanitizedDataList.push(dataList[i]);\n          }\n        }\n      });\n      this.yrmthList.forEach(yrmth => {\n        const index = sanitizedDataList.findIndex(x => x.yrmth === yrmth);\n        if (index < 0) {\n          sanitizedDataList.push({\n            yrmthReCon: yrmth\n          });\n        } else {\n          sanitizedDataList[index].yrmthReCon = yrmth;\n        }\n      });\n      sortedData = sanitizedDataList.sort((a, b) => (0, moment_1.default)(a.yrmthReCon, \"MM-YYYY\") < (0, moment_1.default)(b.yrmthReCon, \"MM-YYYY\") ? -1 : 1);\n    }\n    return sortedData;\n  }\n  setFormFooter(dataSet) {\n    this.incomeTaxInsurForm.get('footerGroup.claimNip').setValue(dataSet?.claimNip || 0);\n  }\n  getForm() {\n    console.log(\"rikza\", this.incomeTaxInsurArrayConsol.controls);\n    console.log(\"the item component within insur income\", this.itemDetailsSection.itemForm?.get('otherSEItemArr'));\n  }\n  refreshOtherClaim() {\n    let params = new http_1.HttpParams();\n    params = params.append(\"nric\", this.currHardCopyDetails?.headerDto.nsManNric);\n    params = params.append(\"yrmthList\", JSON.stringify(this.yrmthList));\n    params = params.append(\"caseId\", this.currHardCopyDetails?.headerDto.caseId);\n    this.seClaimService.retrieveRefreshOtherInsurClaims({\n      params\n    }).subscribe(resp => {\n      if (resp) {\n        if (resp.status === 200 && resp.body.data) {\n          resp.body.data.forEach(y => {\n            const ctrl = this.incomeTaxInsurArrayMthly.controls.find(x => x.get('yrmthReCon').value === y.yrmth);\n            this.refreshOtherClaimSetValue(ctrl, y);\n          });\n          const unrefreshed = this.incomeTaxInsurArrayMthly.controls.filter(x => !resp.body.data.map(y => y.yrmth).includes(x.get('yrmthReCon').value));\n          unrefreshed.forEach(ctrl => {\n            this.refreshOtherClaimSetValue(ctrl, null);\n          });\n        }\n      }\n    });\n  }\n  refreshOtherClaimSetValue(ctrl, data) {\n    if (ctrl) {\n      ctrl.get('firstYrCommission').setValue(data?.firstYrCommission || 0);\n      ctrl.get('generalInsurance').setValue(data?.generalInsurance || 0);\n      ctrl.get('otherCommission').setValue(data?.otherCommission || 0);\n      ctrl.get('otherNonPayable').setValue(data?.otherNonPayable || 0);\n      ctrl.get('overridingCommission').setValue(data?.overridingCommission || 0);\n      ctrl.get('prdBonus').setValue(data?.prdBonus || 0);\n      ctrl.get('prdCommission').setValue(data?.prdCommission || 0);\n      ctrl.get('renewalCommission').setValue(data?.renewalCommission || 0);\n      ctrl.get('singlePremium').setValue(data?.singlePremium || 0);\n    }\n  }\n  enableCopytoItem() {\n    const claimItemList = this.itemDetailsSection.itemForm?.get('otherSEItemArr');\n    let itxItem = null;\n    if (claimItemList.length > 0) {\n      itxItem = claimItemList?.controls.filter(x => x.get('itemType').value === 'ITX')[0];\n      return itxItem?.get('latestStatus').value === this.PEND_VERIFY_STATUS || itxItem?.get('latestStatus').value === this.PEND_ACTION_STATUS;\n    } else return false;\n  }\n  tester() {\n    console.log(\"the test\", this.incomeTaxInsurForm);\n  }\n  getSumOfCurrRow(formCtrlName) {\n    let sum = 0;\n    for (let colIndex = 0; colIndex <= this.incomeTaxInsurArrayMthly?.controls.length - 1; colIndex++) {\n      sum += this.incomeTaxInsurArrayMthly?.controls[colIndex].get(formCtrlName).value;\n    }\n    return sum;\n  }\n  getTotalPayableCol(colIndex, formArr) {\n    let sum = 0;\n    sum = Number(formArr.controls[colIndex].get('firstYrCommission').value || 0) + Number(formArr.controls[colIndex].get('singlePremium').value || 0) + Number(formArr.controls[colIndex].get('prdCommission').value || 0) + Number(formArr.controls[colIndex].get('generalInsurance').value || 0) + Number(formArr.controls[colIndex].get('otherCommission').value || 0) + Number(formArr.controls[colIndex].get('prdBonus').value || 0);\n    return sum;\n  }\n  getSumOfTotalPayable() {\n    let sum = 0;\n    sum = Number(this.getSumOfCurrRow('firstYrCommission')) + Number(this.getSumOfCurrRow('singlePremium')) + Number(this.getSumOfCurrRow('prdCommission')) + Number(this.getSumOfCurrRow('generalInsurance')) + Number(this.getSumOfCurrRow('otherCommission')) + Number(this.getSumOfCurrRow('prdBonus'));\n    return sum;\n  }\n  getTotalNonPayableCol(colIndex, formArr) {\n    let sum = 0;\n    sum = Number(formArr.controls[colIndex]?.get('renewalCommission').value || 0) + Number(formArr.controls[colIndex]?.get('overridingCommission').value || 0) + Number(formArr.controls[colIndex]?.get('otherNonPayable').value || 0);\n    return sum;\n  }\n  getSumOfTotalNonPayable() {\n    let sum = 0;\n    sum = Number(this.getSumOfCurrRow('renewalCommission')) + Number(this.getSumOfCurrRow('overridingCommission')) + Number(this.getSumOfCurrRow('otherNonPayable'));\n    return sum;\n  }\n  //priority is Actual then provisional for ITX\n  getActualNip() {\n    this.displayActualNip = true;\n    let irasRecord;\n    let actualNip = 0;\n    let actualNipComputation = \"\";\n    let proposedNip = 0;\n    let annualtotalComm = 0;\n    let tradeIncome = 0;\n    let displayActualNip = false;\n    if (this.incomeTaxInsurForm.get('captionGroup.radioOption').value === 'MTH') {\n      annualtotalComm = this.getSumOfTotalNonPayable() + this.getSumOfTotalPayable();\n      //if actual\n      if (this.getOverridingCommPerc() < 20) {\n        if (this.irasDetails?.filter(x => x.basis === \"2\").length > 0) {\n          irasRecord = this.irasDetails?.filter(x => x.basis === \"2\")[0];\n          if (irasRecord.incomeYr === this.incomeTaxInsurForm.get('year').value) {\n            tradeIncome = irasRecord.tradeIncome;\n            actualNip = tradeIncome / annualtotalComm * 100 || 0;\n            actualNipComputation = `${tradeIncome}/${annualtotalComm} * 100%`;\n            proposedNip = actualNip >= 80 ? 80 : actualNip;\n            displayActualNip = true;\n          } else {\n            proposedNip = 75;\n          }\n          //if provisional\n        } else if (this.irasDetails?.filter(x => x.basis === \"1\").length > 0) {\n          irasRecord = this.irasDetails?.filter(x => x.basis === \"1\")[0];\n          if (irasRecord.incomeYr === this.incomeTaxInsurForm.get('year').value) {\n            tradeIncome = irasRecord.tradeIncome;\n            actualNip = this.tradeIncome / annualtotalComm * 100 || 0;\n            actualNipComputation = `${tradeIncome}/${annualtotalComm} * 100%`;\n            proposedNip = actualNip;\n            displayActualNip = true;\n          } else {\n            proposedNip = 75;\n          }\n        } else {\n          proposedNip = 75;\n        }\n      } else if (this.getOverridingCommPerc() >= 20) {\n        if (this.irasDetails?.filter(x => x.basis === \"2\").length > 0) {\n          irasRecord = this.irasDetails?.filter(x => x.basis === \"2\")[0];\n          console.log(\"iras record \", irasRecord);\n          console.log(\"incometax year  \", this.incomeTaxInsurForm.get('year').value);\n          if (irasRecord.incomeYr === this.incomeTaxInsurForm.get('year').value) {\n            tradeIncome = irasRecord.tradeIncome;\n            actualNip = (tradeIncome / annualtotalComm * 100 || 0) + (100 - tradeIncome / annualtotalComm * 100 || 0) / 2;\n            console.log(\"actual nuip \", actualNip);\n            actualNipComputation = `[${tradeIncome}/${annualtotalComm} * 100%] + [100%- ${tradeIncome}/${annualtotalComm} * 100%]/2`;\n            proposedNip = actualNip >= 80 ? 80 : actualNip;\n            displayActualNip = true;\n          }\n          //if provisional\n        } else if (this.irasDetails?.filter(x => x.basis === \"1\").length > 0) {\n          irasRecord = this.irasDetails?.filter(x => x.basis === \"1\")[0];\n          if (irasRecord.incomeYr === this.incomeTaxInsurForm.get('year').value) {\n            tradeIncome = irasRecord.tradeIncome;\n            actualNip = (tradeIncome / annualtotalComm * 100 || 0) + (100 - tradeIncome / annualtotalComm * 100 || 0) / 2;\n            actualNipComputation = `[${tradeIncome}/${annualtotalComm} * 100%] + [100%- ${tradeIncome}/${annualtotalComm} * 100%]/2`;\n            proposedNip = actualNip;\n            displayActualNip = true;\n          } else {\n            proposedNip = 80;\n          }\n        } else {\n          proposedNip = 80;\n        }\n      }\n    } else {\n      //consolidated\n      annualtotalComm = this.getTotalNonPayableCol(0, this.incomeTaxInsurArrayConsol) + this.getTotalPayableCol(0, this.incomeTaxInsurArrayConsol);\n      if (this.getOverridingCommPerc() < 20) {\n        if (this.irasDetails?.filter(x => x.basis === \"2\").length > 0) {\n          irasRecord = this.irasDetails?.filter(x => x.basis === \"2\")[0];\n          if (irasRecord.incomeYr === this.incomeTaxInsurForm.get('year').value) {\n            tradeIncome = irasRecord.tradeIncome;\n            actualNip = tradeIncome / annualtotalComm * 100 || 0;\n            actualNipComputation = `${tradeIncome}/${annualtotalComm} * 100%`;\n            proposedNip = actualNip >= 80 ? 80 : actualNip;\n            displayActualNip = true;\n          } else {\n            proposedNip = 75;\n          }\n          //if provisional\n        } else if (this.irasDetails?.filter(x => x.basis === \"1\").length > 0) {\n          irasRecord = this.irasDetails?.filter(x => x.basis === \"1\")[0];\n          if (irasRecord.incomeYr === this.incomeTaxInsurForm.get('year').value) {\n            tradeIncome = irasRecord.tradeIncome;\n            actualNip = tradeIncome / annualtotalComm * 100 || 0;\n            actualNipComputation = `${tradeIncome}/${annualtotalComm} * 100%`;\n            proposedNip = actualNip;\n            displayActualNip = true;\n          } else {\n            proposedNip = 75;\n          }\n        } else {\n          proposedNip = 75;\n        }\n      } else if (this.getOverridingCommPerc() >= 20) {\n        if (this.irasDetails?.filter(x => x.basis === \"2\").length > 0) {\n          irasRecord = this.irasDetails?.filter(x => x.basis === \"2\")[0];\n          if (irasRecord.incomeYr === this.incomeTaxInsurForm.get('year').value) {\n            tradeIncome = irasRecord.tradeIncome;\n            actualNip = (tradeIncome / annualtotalComm * 100 || 0) + (100 - tradeIncome / annualtotalComm * 100 || 0) / 2;\n            actualNipComputation = `[${tradeIncome}/${annualtotalComm} * 100%] + [100%- ${tradeIncome}/${annualtotalComm} * 100%]/2`;\n            proposedNip = actualNip >= 80 ? 80 : actualNip;\n            displayActualNip = true;\n          } else {\n            proposedNip = 80;\n          }\n          //if provisional\n        } else if (this.irasDetails?.filter(x => x.basis === \"1\").length > 0) {\n          irasRecord = this.irasDetails?.filter(x => x.basis === \"1\")[0];\n          if (irasRecord.incomeYr === this.incomeTaxInsurForm.get('year').value) {\n            tradeIncome = irasRecord.tradeIncome;\n            annualtotalComm = this.getTotalNonPayableCol(0, this.incomeTaxInsurArrayConsol) + this.getTotalPayableCol(0, this.incomeTaxInsurArrayConsol);\n            actualNip = (tradeIncome / annualtotalComm * 100 || 0) + (100 - tradeIncome / annualtotalComm * 100 || 0) / 2;\n            actualNipComputation = `[${tradeIncome}/${annualtotalComm} * 100%] + [100%- ${tradeIncome}/${annualtotalComm} * 100%]/2`;\n            proposedNip = actualNip;\n            displayActualNip = true;\n          } else {\n            proposedNip = 80;\n          }\n        } else {\n          proposedNip = 80;\n        }\n      }\n    }\n    this.proposedNip = this.roundVal(proposedNip);\n    this.actualNipComputation = actualNipComputation;\n    this.displayActualNip = displayActualNip;\n    return this.roundVal(actualNip);\n  }\n  getOverridingCommPerc() {\n    let rslt = 0;\n    if (this.incomeTaxInsurForm.get('captionGroup.radioOption').value === 'MTH') {\n      rslt = this.getSumOfCurrRow('overridingCommission') / (this.getSumOfTotalNonPayable() + this.getSumOfTotalPayable()) * 100 || 0;\n    } else {\n      rslt = this.incomeTaxInsurArrayConsol.controls[0].get('overridingCommission').value / (this.getTotalNonPayableCol(0, this.incomeTaxInsurArrayConsol) + this.getTotalPayableCol(0, this.incomeTaxInsurArrayConsol)) * 100 || 0;\n    }\n    return this.roundVal(rslt);\n  }\n  getTotalAmtPayable() {\n    let amtPayable = 0;\n    if (this.incomeTaxInsurForm.get('captionGroup.radioOption').value === 'MTH') {\n      amtPayable = this.footerGroup.get('claimNip').value / 100 * this.getSumOfTotalPayable() + 0.42 * this.getSumOfCurrRow('firstYrCommission');\n    } else {\n      amtPayable = this.footerGroup.get('claimNip').value / 100 * this.getTotalPayableCol(0, this.incomeTaxInsurArrayConsol) + 0.42 * this.incomeTaxInsurArrayConsol.controls[0].get('firstYrCommission').value;\n    }\n    return this.roundVal(amtPayable);\n  }\n  getTotalAmtPayableDesc() {\n    let amtPayableDesc = \"\";\n    if (this.incomeTaxInsurForm.get('captionGroup.radioOption').value === 'MTH') {\n      amtPayableDesc = `${String(this.footerGroup.get('claimNip').value)} % * TPC(${String(this.getSumOfTotalPayable())})\n      + 42% * FYC (${this.getSumOfCurrRow('firstYrCommission')}  `;\n    } else {\n      amtPayableDesc = `${String(this.footerGroup.get('claimNip').value)} % * TPC(${String(this.getTotalPayableCol(0, this.incomeTaxInsurArrayConsol))})\n      + 42% * FYC (${String(this.incomeTaxInsurArrayConsol.controls[0].get('firstYrCommission').value)}) `;\n    }\n    return amtPayableDesc;\n  }\n  isTradeIncomeMorethanTotalCommision() {\n    let irasRecord;\n    //if actual\n    if (this.irasDetails?.filter(x => x.basis === \"2\").length > 0) {\n      irasRecord = this.irasDetails?.filter(x => x.basis === \"2\")[0];\n      //if provisional\n    } else if (this.irasDetails?.filter(x => x.basis === \"1\").length > 0) {\n      irasRecord = this.irasDetails?.filter(x => x.basis === \"1\")[0];\n    }\n    if (this.incomeTaxInsurForm.get('captionGroup.radioOption').value === 'MTH') {\n      return irasRecord?.tradeIncome > this.getSumOfTotalNonPayable() + this.getSumOfTotalPayable();\n    } else {\n      return irasRecord?.tradeIncome > this.getTotalNonPayableCol(0, this.incomeTaxInsurArrayConsol) + this.getTotalPayableCol(0, this.incomeTaxInsurArrayConsol);\n    }\n  }\n  isEmpty(input) {\n    return input === null || input === undefined || input === \"\";\n  }\n  isWorkingDataTotalPayableNotEqualItemAnnualAmt() {\n    const claimItemList = this.itemDetailsSection.itemForm?.get('otherSEItemArr');\n    let itxItem = null;\n    let annualtotalPayable = 0;\n    if (claimItemList.length > 0) {\n      itxItem = claimItemList?.controls.find(x => x.get('itemType').value === 'ITX');\n      const annualIncome = (itxItem?.get('otherSEItemTableArr')).controls[0].get('annualIncome')?.value;\n      if (this.incomeTaxInsurForm.get('captionGroup.radioOption').value === 'MTH') {\n        annualtotalPayable = this.getSumOfTotalPayable();\n      } else {\n        annualtotalPayable = this.getTotalPayableCol(0, this.incomeTaxInsurArrayConsol);\n      }\n      return annualtotalPayable !== annualIncome;\n    } else return false;\n  }\n  exportToCSV(dataTable) {\n    console.log(\"export to csv\");\n    const columns = [{\n      field: 'rowHeader',\n      header: \" \",\n      index: 0,\n      customExportHeader: \" \"\n    }, {\n      field: 'annualAccount',\n      header: \"Annual\",\n      index: 1\n    }];\n    for (let i = 0; i < this.yrmthList.length; i++) {\n      columns.push({\n        field: String(this.yrmthList[i]),\n        header: String(this.yrmthList[i]),\n        index: i\n      });\n    }\n    const dtoList = [{\n      rowHeader: 'First Year Commission'\n    }, {\n      rowHeader: 'Single Premium'\n    }, {\n      rowHeader: 'Production Commission'\n    }, {\n      rowHeader: \"General Insurance\"\n    }, {\n      rowHeader: \"Other Commission\"\n    }, {\n      rowHeader: \"Production Bonus\"\n    }, {\n      rowHeader: \"Total Payable Commission\"\n    }, {\n      rowHeader: \"Renewal Commission\"\n    }, {\n      rowHeader: \"Overriding Commission\"\n    }, {\n      rowHeader: \"Other Non-Payable Commission\"\n    }, {\n      rowHeader: \"Total Non-Payable Components\"\n    }, {\n      rowHeader: \"Total Commission\"\n    }];\n    const dataList = [];\n    let subWD;\n    if (this.incomeTaxInsurForm?.get('captionGroup.radioOption').value === 'CON') {\n      this.exportAddConsol(dataList, subWD, dtoList);\n    } else {\n      this.exportAddMthly(dataList, subWD, dtoList);\n    }\n    this.exportUtilsService.exportCSV(dataTable, dtoList, 10, columns, \"insurance_income_tax_\".concat((0, common_1.formatDate)(new Date(), \"dd-MM-YYYY\", this.localeId)));\n  }\n  exportAddConsol(dataList, subWD, dtoList) {\n    const control = this.incomeTaxInsurForm.get('incomeTaxInsurArrayConsol').controls[0];\n    subWD = {\n      firstYrCommission: control.get(\"firstYrCommission\").value,\n      singlePremium: control.get(\"singlePremium\").value,\n      prdCommission: control.get(\"prdCommission\").value,\n      generalInsurance: control.get(\"generalInsurance\").value,\n      otherCommission: control.get(\"otherCommission\").value,\n      prdBonus: control.get(\"prdBonus\").value,\n      renewalCommission: control.get(\"renewalCommission\").value,\n      overridingCommission: control.get(\"overridingCommission\").value,\n      otherNonPayable: control.get(\"otherNonPayable\").value\n    };\n    dataList.push(subWD);\n    dataList.forEach(x => {\n      //add consol\n      dtoList[0]['annualAccount'] = x.firstYrCommission;\n      dtoList[1]['annualAccount'] = x.singlePremium;\n      dtoList[2]['annualAccount'] = x.prdCommission;\n      dtoList[3]['annualAccount'] = x.generalInsurance;\n      dtoList[4]['annualAccount'] = x.otherCommission;\n      dtoList[5]['annualAccount'] = x.prdBonus;\n      dtoList[6]['annualAccount'] = x.firstYrCommission + x.singlePremium + x.prdCommission + x.generalInsurance + x.otherCommission + x.prdBonus; //total payable commission\n      dtoList[7]['annualAccount'] = x.renewalCommission;\n      dtoList[8]['annualAccount'] = x.overridingCommission;\n      dtoList[9]['annualAccount'] = x.otherNonPayable;\n      dtoList[10]['annualAccount'] = x.renewalCommission + x.overridingCommission + x.otherNonPayable;\n      dtoList[11]['mtannualAccounthAccount'] = +dtoList[6]['annualAccount'] + +dtoList[10]['annualAccount'];\n    });\n  }\n  exportAddMthly(dataList, subWD, dtoList) {\n    //mthly\n    console.log(\"the lada \", this.incomeTaxInsurForm.get('incomeTaxInsurArrayMthly'));\n    this.incomeTaxInsurForm.get('incomeTaxInsurArrayMthly').controls.forEach(control => {\n      subWD = {\n        yrmth: control.get(\"yrmthReCon\").value,\n        firstYrCommission: control.get(\"firstYrCommission\").value,\n        singlePremium: control.get(\"singlePremium\").value,\n        prdCommission: control.get(\"prdCommission\").value,\n        generalInsurance: control.get(\"generalInsurance\").value,\n        otherCommission: control.get(\"otherCommission\").value,\n        prdBonus: control.get(\"prdBonus\").value,\n        renewalCommission: control.get(\"renewalCommission\").value,\n        overridingCommission: control.get(\"overridingCommission\").value,\n        otherNonPayable: control.get(\"otherNonPayable\").value\n      };\n      dataList.push(subWD);\n    });\n    dataList.forEach(x => {\n      dtoList[0][x.yrmth] = x.firstYrCommission;\n      dtoList[1][x.yrmth] = x.singlePremium;\n      dtoList[2][x.yrmth] = x.prdCommission;\n      dtoList[3][x.yrmth] = x.generalInsurance;\n      dtoList[4][x.yrmth] = x.otherCommission;\n      dtoList[5][x.yrmth] = x.prdBonus;\n      dtoList[6][x.yrmth] = x.firstYrCommission + x.singlePremium + x.prdCommission + x.generalInsurance + x.otherCommission + x.prdBonus;\n      dtoList[7][x.yrmth] = x.renewalCommission;\n      dtoList[8][x.yrmth] = x.overridingCommission;\n      dtoList[9][x.yrmth] = x.otherNonPayable;\n      dtoList[10][x.yrmth] = x.renewalCommission + x.overridingCommission + x.otherNonPayable;\n      dtoList[11][x.yrmth] = +dtoList[6][x.yrmth] + +dtoList[10][x.yrmth];\n    });\n    dtoList[0]['annualAccount'] = this.getSumByField(dataList.map(x => {\n      return x.firstYrCommission;\n    }));\n    dtoList[1]['annualAccount'] = this.getSumByField(dataList.map(x => {\n      return x.singlePremium;\n    }));\n    dtoList[2]['annualAccount'] = this.getSumByField(dataList.map(x => {\n      return x.prdCommission;\n    }));\n    dtoList[3]['annualAccount'] = this.getSumByField(dataList.map(x => {\n      return x.generalInsurance;\n    }));\n    dtoList[4]['annualAccount'] = this.getSumByField(dataList.map(x => {\n      return x.otherCommission;\n    }));\n    dtoList[5]['annualAccount'] = this.getSumByField(dataList.map(x => {\n      return x.prdBonus;\n    }));\n    dtoList[6]['annualAccount'] = +dtoList[0]['annualAccount'] + +dtoList[1]['annualAccount'] + +dtoList[2]['annualAccount'] + +dtoList[3]['annualAccount'] + +dtoList[4]['annualAccount'] + +dtoList[5]['annualAccount']; //total payable commission\n    dtoList[7]['annualAccount'] = this.getSumByField(dataList.map(x => {\n      return x.renewalCommission;\n    }));\n    dtoList[8]['annualAccount'] = this.getSumByField(dataList.map(x => {\n      return x.overridingCommission;\n    }));\n    dtoList[9]['annualAccount'] = this.getSumByField(dataList.map(x => {\n      return x.otherNonPayable;\n    }));\n    dtoList[10]['annualAccount'] = +dtoList[7]['annualAccount'] + +dtoList[8]['annualAccount'] + +dtoList[9]['annualAccount'];\n    dtoList[11]['annualAccount'] = +dtoList[6]['annualAccount'] + +dtoList[10]['annualAccount'];\n  }\n  getSumByField(fieldArray) {\n    const initValue = 0;\n    const sum = fieldArray.reduce((accumulator, currentValue) => accumulator + currentValue, initValue);\n    return sum;\n  }\n  //allows input on need basis\n  hasValidAuthorityAndStation() {\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_VERIFIER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_VERIFICATION) {\n      return true;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_CERTIFICATION) {\n      return false;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_APPROVAL) {\n      return false;\n    }\n    return false;\n  }\n}\nexports.InsuranceIncomeTaxComponent = InsuranceIncomeTaxComponent;\nInsuranceIncomeTaxComponent.ɵfac = function InsuranceIncomeTaxComponent_Factory(t) {\n  return new (t || InsuranceIncomeTaxComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DateUtilsService), i0.ɵɵdirectiveInject(i3.NspConfirmationService), i0.ɵɵdirectiveInject(i4.SEClaimService), i0.ɵɵdirectiveInject(i5.CustomToastService), i0.ɵɵdirectiveInject(i6.ConfirmationService), i0.ɵɵdirectiveInject(i7.ExportUtilsService), i0.ɵɵdirectiveInject(i8.AccountService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(core_1.LOCALE_ID));\n};\nInsuranceIncomeTaxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InsuranceIncomeTaxComponent,\n  selectors: [[\"n2-insurance-income-tax\"]],\n  viewQuery: function InsuranceIncomeTaxComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mthlyTable = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.consolTable = _t.first);\n    }\n  },\n  inputs: {\n    seHardCopyDetails: \"seHardCopyDetails\",\n    selectedWDOption: \"selectedWDOption\",\n    itemDetailsSection: \"itemDetailsSection\",\n    workingDataWithChanges: \"workingDataWithChanges\",\n    newUnsavedWorkingData: \"newUnsavedWorkingData\",\n    saveSEClaimRequest: \"saveSEClaimRequest\",\n    irasDetails: \"irasDetails\",\n    trgStartDte: \"trgStartDte\",\n    readOnly: \"readOnly\",\n    station: \"station\"\n  },\n  outputs: {\n    totalAmtPayEvent: \"totalAmtPayEvent\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 9,\n  vars: 4,\n  consts: [[\"severity\", \"warn\", 4, \"ngIf\"], [3, \"formGroup\"], [4, \"ngIf\"], [\"severity\", \"warn\"], [\"key\", \"CLM-W014\", \"pTemplate\", \"\"], [1, \"ml-2\"], [\"key\", \"CLM-W015\", \"pTemplate\", \"\"], [\"formArrayName\", \"incomeTaxInsurArrayMthly\"], [\"styleClass\", \"p-datatable-gridlines p-datatable-striped\", \"responsiveLayout\", \"scroll\", 3, \"value\", \"filterDelay\", \"loading\", 4, \"ngIf\", \"ngIfElse\"], [\"formArrayName\", \"incomeTaxInsurArrayConsol\"], [\"consolOption\", \"\"], [1, \"grid\", 2, \"margin-top\", \"1em\", \"margin-left\", \"220px\"], [1, \"col-12\", \"justify-content-start\", \"gap-4\", \"flex\", \"align-items-center\"], [\"formControlName\", \"claimNip\", \"suffix\", \"%\", 3, \"maxlength\", \"inputStyle\", 4, \"ngIf\", \"ngIfElse\"], [\"class\", \"p-error\", \"icTranslate\", \"nspay2App.claim.validation.CLM-V002\", 3, \"translateValues\", 4, \"ngIf\"], [\"labelClaimNip\", \"\"], [\"class\", \"col\", 4, \"ngIf\"], [\"styleClass\", \"p-datatable-gridlines p-datatable-striped\", \"responsiveLayout\", \"scroll\", 3, \"value\", \"filterDelay\", \"loading\"], [\"mthlyTable\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"scope\", \"col\"], [1, \"grid\"], [1, \"col-6\", \"nsp-align-left\"], [\"icon\", \"pi pi-file-o\", 3, \"click\"], [3, \"style\", 4, \"ngIf\", \"ngIfElse\"], [\"disabledRadio\", \"\"], [\"key\", \"confirmWarning\", \"header\", \"Confirmation\", \"icon\", \"fa fa-question-circle\", \"width\", \"425\"], [1, \"col-6\", \"nsp-align-right\"], [\"id\", \"refreshOtherClaim\", \"pButton\", \"\", \"label\", \"Refresh from Other Claim\", 3, \"style\", \"disabled\", \"click\", 4, \"ngIf\"], [\"scope\", \"col\", 3, \"style\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"custom-radio\", \"type\", \"radio\", \"value\", \"MTH\", \"formControlName\", \"radioOption\", 1, \"p-radiobutton\", 3, \"click\"], [1, \"custom-control-label\"], [\"id\", \"con-custom-radio\", \"type\", \"radio\", \"value\", \"CON\", \"formControlName\", \"radioOption\", 1, \"p-radiobutton\", 3, \"click\"], [\"disabled\", \"\"], [\"id\", \"refreshOtherClaim\", \"pButton\", \"\", \"label\", \"Refresh from Other Claim\", 3, \"disabled\", \"click\"], [2, \"text-align\", \"right\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [3, \"formGroupName\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"firstYrCommission\", \"id\", \"firstYrCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelFirstYrCommission\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"firstYrCommission\", \"id\", \"firstYrCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"singlePremium\", \"id\", \"singlePremium\", \"mode\", \"decimal\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelSinglePremium\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"singlePremium\", \"id\", \"singlePremium\", \"mode\", \"decimal\", 3, \"minFractionDigits\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"prdCommission\", \"id\", \"prdCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelPrdCommission\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"prdCommission\", \"id\", \"prdCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\"], [2, \"width\", \"200px\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"generalInsurance\", \"id\", \"generalInsurance\", \"mode\", \"decimal\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelGeneralInsurance\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"generalInsurance\", \"id\", \"generalInsurance\", \"mode\", \"decimal\", 3, \"minFractionDigits\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"otherCommission\", \"id\", \"otherCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelOtherCommission\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"otherCommission\", \"id\", \"otherCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"prdBonus\", \"id\", \"prdBonus\", \"mode\", \"decimal\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelPrdBonus\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"prdBonus\", \"id\", \"prdBonus\", \"mode\", \"decimal\", 3, \"minFractionDigits\"], [3, \"style\", \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"renewalCommission\", \"id\", \"renewalCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelRenewalCommission\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"renewalCommission\", \"id\", \"renewalCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"overridingCommission\", \"id\", \"overridingCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelOverridingCommission\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"overridingCommission\", \"id\", \"overridingCommission\", \"mode\", \"decimal\", 3, \"minFractionDigits\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"otherNonPayable\", \"id\", \"otherNonPayable\", \"mode\", \"decimal\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelOtherNonPayable\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"otherNonPayable\", \"id\", \"otherNonPayable\", \"mode\", \"decimal\", 3, \"minFractionDigits\"], [\"consolTable\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"firstYrCommission\", \"id\", \"firstYrCommission\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelConsolFirstYrCommission\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"firstYrCommission\", \"id\", \"firstYrCommission\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"singlePremium\", \"id\", \"singlePremium\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelConsolSinglePremium\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"singlePremium\", \"id\", \"singlePremium\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"prdCommission\", \"id\", \"prdCommission\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelConsolPrdCommission\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"prdCommission\", \"id\", \"prdCommission\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"generalInsurance\", \"id\", \"generalInsurance\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelConsolGeneralInsurance\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"generalInsurance\", \"id\", \"generalInsurance\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"otherCommission\", \"id\", \"otherCommission\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelConsolOtherCommission\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"otherCommission\", \"id\", \"otherCommission\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"prdBonus\", \"id\", \"prdBonus\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelConsolPrdBonus\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"prdBonus\", \"id\", \"prdBonus\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"renewalCommission\", \"id\", \"renewalCommission\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"renewalCommission\", \"id\", \"renewalCommission\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"overridingCommission\", \"id\", \"overridingCommission\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelConsolOverridingCommission\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"overridingCommission\", \"id\", \"overridingCommission\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"otherNonPayable\", \"id\", \"otherNonPayable\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\", 4, \"ngIf\", \"ngIfElse\"], [\"labelConsolOtherNonPayable\", \"\"], [\"inputStyleClass\", \"nsp-align-right\", \"formControlName\", \"otherNonPayable\", \"id\", \"otherNonPayable\", \"mode\", \"decimal\", \"suffix\", \" pa\", 3, \"minFractionDigits\"], [\"formControlName\", \"claimNip\", \"suffix\", \"%\", 3, \"maxlength\", \"inputStyle\"], [\"icTranslate\", \"nspay2App.claim.validation.CLM-V002\", 1, \"p-error\", 3, \"translateValues\"], [1, \"col\"], [\"label\", \"Copy to Item\", 3, \"disabled\", \"click\"]],\n  template: function InsuranceIncomeTaxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, InsuranceIncomeTaxComponent_p_messages_0_Template, 4, 0, \"p-messages\", 0);\n      i0.ɵɵtext(1, \"\\n\");\n      i0.ɵɵtemplate(2, InsuranceIncomeTaxComponent_p_messages_2_Template, 4, 0, \"p-messages\", 0);\n      i0.ɵɵtext(3, \"\\n\\n\\n\\n\\n\");\n      i0.ɵɵelementStart(4, \"form\", 1);\n      i0.ɵɵtext(5, \"\\n    \");\n      i0.ɵɵtemplate(6, InsuranceIncomeTaxComponent_div_6_Template, 51, 13, \"div\", 2);\n      i0.ɵɵtext(7, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \"\\n\\n\\n\\n\\n\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isWorkingDataTotalPayableNotEqualItemAnnualAmt());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isTradeIncomeMorethanTotalCommision());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.incomeTaxInsurForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.currSelectedOption !== undefined);\n    }\n  },\n  dependencies: [i9.NgForOf, i9.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i6.PrimeTemplate, i10.ButtonDirective, i10.Button, i11.Table, i12.ConfirmPopup, i13.Messages, i14.InputNumber, i15.TranslateDirective, i9.SlicePipe, i9.DecimalPipe],\n  styles: [\"[_nghost-%COMP%]     .p-datatable.p-datatable-striped .p-datatable-tbody > tr > :nth-child(1) {\\n  min-width: 220px;\\n  background: none;\\n  border: none;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable.p-datatable-striped .p-datatable-thead > tr > :nth-child(1) {\\n  min-width: 220px;\\n  background: none;\\n  border: none;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable.p-datatable-striped .p-datatable-tbody > tr > :nth-child(2) {\\n  min-width: 220px;\\n  width: 220px;\\n}\\n\\n[_nghost-%COMP%]     .grid-top-bold .td {\\n  border-bottom: 1px solid black;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable .p-datatable-tfoot > tr > td {\\n  text-align: left;\\n  padding: 1rem 1rem;\\n  border: none;\\n  border-width: none;\\n  font-weight: 600; \\n  color: #343a40;\\n  background: transparent;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable .p-datatable-thead > tr > th {\\n  position: sticky;\\n  top: 0px;\\n}\\n\\n[_nghost-%COMP%]     .transparent-input .p-inputtext {\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n  font-size: 1rem;\\n  color: #495057;\\n  background: #ffffff;\\n  padding: 0.75rem 0.75rem;\\n  border: none;\\n  -webkit-appearance: none;\\n          appearance: none;\\n}\\n\\n[_nghost-%COMP%]     .transparent-input .p-inputtext:enabled:focus {\\n  outline: 0 none;\\n  border-color: transparent;\\n}\\n\\n[_nghost-%COMP%]     .transparent-input .p-inputtext.ng-dirty.ng-invalid {\\n  border-color: transparent;\\n}\\n\\n[_nghost-%COMP%]     .transparent-input .p-inputtext:enabled:hover {\\n  border-color: transparent;\\n}\\n\\ninput[type=radio][_ngcontent-%COMP%] {\\n  width: 22px;\\n  height: 22px;\\n}\\n\\n.p-radiobutton[_ngcontent-%COMP%] {\\n  appearance: none;\\n  \\n  -webkit-appearance: none;\\n  border: 2px solid #ced4da;\\n  background-color: var(--bg-color);\\n  border-radius: 50%;\\n}\\n\\n.p-radiobutton[_ngcontent-%COMP%]:focus-visible {\\n  outline-offset: 0;\\n}\\n\\n#custom-radio[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:hover {\\n  outline-color: #14B8A6;\\n}\\n\\n#custom-radio[_ngcontent-%COMP%]:checked {\\n  outline-color: #14B8A6;\\n  background-color: #ffffff;\\n  border: 6px solid #14B8A6;\\n}\\n\\n#con-custom-radio[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:hover {\\n  outline-color: #14B8A6;\\n}\\n\\n#con-custom-radio[_ngcontent-%COMP%]:checked {\\n  outline-color: #14B8A6;\\n  background-color: #ffffff;\\n  border: 6px solid #14B8A6;\\n}\\n\\n@keyframes _ngcontent-%COMP%_outline-checked {\\n  0% {\\n    outline-offset: 0;\\n  }\\n  100% {\\n    outline-offset: -0.2rem;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","InsuranceIncomeTaxComponent","constructor","formBuilder","dateUtilsService","nspConfirmService","seClaimService","toastService","confirmationService","exportUtilsService","accountService","cd","localeId","name","key","rxjs_1","core_1","undefined","group","id","forms_1","workingDataId","consolidated","incomeTaxInsurArrayMthly","array","incomeTaxInsurArrayConsol","year","captionGroup","radioOption","radioOptions","footerGroup","claimNip","yrmthList","claimJson","claim_json_1","createNewITXInsurFormGroup","selectedYearOption","console","log","incomeTaxInsurFormGroup","proposedNip","claimStartYr","claimStartDt","Date","claimEndDt","colStartDt","clone","colEndDt","colMthRange","mth","isSameOrBefore","add","push","format","map","x","convertStrToDate","get","setValue","newDataList","dataRecon","staticConstructConsolidatedHeaderData","value","staticConstructForm","mapInsurITXFormGroupToWD","fg","obj","dataList","insurITXWD","workingDataTypeCode","archiveDt","control","controls","subWD","firstYrCommission","singlePremium","prdCommission","generalInsurance","otherCommission","prdBonus","renewalCommission","overridingCommission","otherNonPayable","forEach","yrmth","mapInsurITXWDToFormGroup","incomeTaxInsurForm","staticGenerateYrMth","empty","newForm","sanitizedDataList","sortedData","colIndex","yrmthReCon","i","length","findIndex","index","sort","a","b","data","yrmthListCtrl","formArr","staticAddRow","dataEntry","formObj","ngOnInit","cols","ngOnChanges","changes","irasDetails","currentValue","currIrasDetails","seHardCopyDetails","currHardCopyDetails","selectedWDOption","currSelectedOption","subscr","unsubscribe","retrieveInsurWD","getYrmthList","ngAfterViewChecked","detectChanges","roundVal","Math","round","constructForm","addRow","isActive","copyToItem","event","totalAmtPayEvent","emit","getTotalAmtPayable","enableRefreshOClaim","confirmFile","onConfirmPopupMsg","disableNonActive","newWD","newArchived","params","http_1","append","subscribe","resp","status","body","generateYrMth","populateIncomeTaxInsurForm","valueChangeSubscribe","error","String","error_desc","workingDataWithChanges","formGroup","setRadioOption","loading","toString","newUnsavedWorkingData","confirmSwitch","e","type","target","preventDefault","confirm","showConfirm","clearForm","Promise","resolve","message","header","icon","acceptLabel","rejectLabel","accept","cloneYrmthList","JSON","parse","stringify","radioKey","isValidNumber","isNaN","setFormFooter","constructConsolidatedHeaderData","valueChanges","saveSEClaimRequest","workingDataSectionInd","has","set","dataSet","getForm","itemDetailsSection","itemForm","refreshOtherClaim","headerDto","nsManNric","caseId","retrieveRefreshOtherInsurClaims","y","ctrl","find","refreshOtherClaimSetValue","unrefreshed","filter","includes","enableCopytoItem","claimItemList","itxItem","PEND_VERIFY_STATUS","PEND_ACTION_STATUS","tester","getSumOfCurrRow","formCtrlName","sum","getTotalPayableCol","Number","getSumOfTotalPayable","getTotalNonPayableCol","getSumOfTotalNonPayable","getActualNip","displayActualNip","irasRecord","actualNip","actualNipComputation","annualtotalComm","tradeIncome","getOverridingCommPerc","basis","incomeYr","rslt","amtPayable","getTotalAmtPayableDesc","amtPayableDesc","isTradeIncomeMorethanTotalCommision","isEmpty","input","isWorkingDataTotalPayableNotEqualItemAnnualAmt","annualtotalPayable","annualIncome","exportToCSV","dataTable","columns","field","customExportHeader","dtoList","rowHeader","exportAddConsol","exportAddMthly","exportCSV","concat","getSumByField","fieldArray","initValue","reduce","accumulator","hasValidAuthorityAndStation","hasAnyAuthority","nspay2_constants_1","CLAIMS_VERIFIER","station","STATION_VERIFICATION","CLAIMS_APPROVER","STATION_CERTIFICATION","STATION_APPROVAL","exports","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\working-data-section\\insurance-income-tax\\insurance-income-tax.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\working-data-section\\insurance-income-tax\\insurance-income-tax.component.html"],"sourcesContent":["import { formatDate } from '@angular/common';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Component, DoCheck, EventEmitter, Inject, Input, KeyValueDiffers, LOCALE_ID, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { faDisease } from '@fortawesome/free-solid-svg-icons';\r\nimport { InsurITXSubWD } from 'app/claim/se-claim/model/insur-income-tax-sub-data.model';\r\nimport { InsurITXWD } from 'app/claim/se-claim/model/insur-income-tax.model';\r\nimport { SaveSEClaimRequest } from 'app/claim/se-claim/model/save-se-claim-request.model';\r\nimport { SEClaimService } from 'app/claim/se-claim/service/se-claim.service';\r\n\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\nimport { NspConfirmationService } from 'app/shared/confirm/nsp-confirm.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport moment from 'moment';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { Table } from 'primeng/table';\r\nimport { filter, startWith, Subscription } from 'rxjs';\r\nimport claim from '../../../../../../i18n/en/claim.json';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { NSPAY2_ROLES, NSPAY2_STATION } from 'app/nspay2.constants';\r\n\r\n@Component({\r\n  selector: 'n2-insurance-income-tax',\r\n  templateUrl: './insurance-income-tax.component.html',\r\n  styleUrls: ['./insurance-income-tax.component.scss']\r\n})\r\nexport class InsuranceIncomeTaxComponent implements OnInit, OnChanges {\r\n\r\n  radioOptions: any[] = [{name: 'Monthly', key: 'MTH'}, {name: 'Consolidated', key: 'CON'}];\r\n  loading = true;\r\n  cols: any[];\r\n  currHardCopyDetails: any = {};\r\n  currIrasDetails : any = {};\r\n  currSelectedOption: any;\r\n  @Input() seHardCopyDetails:any = {};\r\n  @Input() selectedWDOption:any = {};\r\n  @Input() itemDetailsSection: any = {};\r\n  @Input() workingDataWithChanges: Map<string, any>;\r\n  @Input() newUnsavedWorkingData: Map<string, any>;\r\n  @Input() saveSEClaimRequest: SaveSEClaimRequest;\r\n  @Input() irasDetails: any = {};\r\n  @Input() trgStartDte: string;\r\n  //meant for routing from enquiry\r\n  @Input() readOnly: boolean;\r\n  @Input() station: string;\r\n\r\n  subscr:Subscription = new Subscription();\r\n\r\n  yrmthList: string[] = [];\r\n\r\n  readonly PEND_VERIFY_STATUS = \"PVE\";\r\n  readonly PEND_ACTION_STATUS = \"PAC\";\r\n\r\n  @Output()  totalAmtPayEvent: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  //impt\r\n  year: number;\r\n  colMthRange:any[] = [];\r\n  dataSet: any = {\r\n  }\r\n  actualNipComputation = \"\";\r\n  formGroupObj:any = undefined;\r\n  overridingCommissionPerc = 0;\r\n  displayActualNip = false;\r\n  annualtotalComm = 0;\r\n  tradeIncome = 0;\r\n  proposedNip=0;\r\n  actualNip=0;\r\n  overridingCommission=0;\r\n  claimJson: any;\r\n\r\n  incomeTaxInsurForm: FormGroup  = this.formBuilder.group({\r\n    id: new FormControl(null, null),\r\n    workingDataId: new FormControl('',null),\r\n    consolidated: new FormControl(false, null),\r\n    incomeTaxInsurArrayMthly: this.formBuilder.array([]),\r\n    incomeTaxInsurArrayConsol: this.formBuilder.array([]),\r\n    year: 0,\r\n    captionGroup: this.formBuilder.group({\r\n      radioOption: new FormControl(this.radioOptions[0].key, null)\r\n    }),\r\n    footerGroup:this.formBuilder.group({\r\n      claimNip: new FormControl(0, null),\r\n    }),\r\n    yrmthList: new FormControl(null, null),\r\n\r\n  });\r\n  @ViewChild('mthlyTable', {static: false})\r\n  private mthlyTable!: Table;\r\n  @ViewChild('consolTable', {static: false})\r\n  private consolTable!: Table;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    public dateUtilsService: DateUtilsService,\r\n    private nspConfirmService: NspConfirmationService,\r\n    private seClaimService: SEClaimService,\r\n    private toastService: CustomToastService,\r\n    private confirmationService: ConfirmationService,\r\n    private exportUtilsService: ExportUtilsService,\r\n    public accountService: AccountService,\r\n    private cd: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) protected localeId: string\r\n\r\n  ) {\r\n    this.claimJson = claim;\r\n\r\n  }\r\n\r\n  static createNewITXInsurFormGroup(selectedYearOption: number, formBuilder: FormBuilder, dateUtilsService: DateUtilsService): FormGroup{\r\n    console.log(\"mila\");\r\n    const incomeTaxInsurFormGroup: FormGroup  = formBuilder.group({\r\n      id: new FormControl(null, null),\r\n      workingDataId: new FormControl('',null),\r\n      consolidated: new FormControl(false, null),\r\n      incomeTaxInsurArrayMthly: formBuilder.array([]),\r\n      incomeTaxInsurArrayConsol: formBuilder.array([]),\r\n      year: 0,\r\n      captionGroup: formBuilder.group({\r\n        radioOption: new FormControl('MTH', null)\r\n      }),\r\n      footerGroup:formBuilder.group({\r\n        claimNip: new FormControl(0, null),\r\n        proposedNip: new FormControl(0, null),\r\n      }),\r\n      yrmthList:new FormControl([], null)\r\n    });\r\n\r\n    //range is jan to dec of year of working data\r\n    const claimStartYr = selectedYearOption;\r\n    const claimStartDt = moment(new Date(claimStartYr, 0,1));\r\n    const claimEndDt = moment(new Date(claimStartYr, 11,31));\r\n    const colStartDt = claimStartDt.clone();\r\n    const colEndDt = claimEndDt.clone();\r\n\r\n    const colMthRange = [];\r\n    for(let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')){\r\n      colMthRange.push(mth.format(\"DD-MM-YYYY\"));\r\n    }\r\n    const yrmthList  = colMthRange.map(x=>  moment(dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\r\n    incomeTaxInsurFormGroup.get('yrmthList')?.setValue(yrmthList);\r\n    const newDataList:any[] = [];\r\n    let dataRecon:any[] = [];\r\n\r\n    // construct empty for mthly view\r\n    dataRecon = InsuranceIncomeTaxComponent.staticConstructConsolidatedHeaderData(newDataList, false, true, false,incomeTaxInsurFormGroup.get('yrmthList').value);\r\n    InsuranceIncomeTaxComponent.staticConstructForm(newDataList, incomeTaxInsurFormGroup.get('incomeTaxInsurArrayMthly') as FormArray,incomeTaxInsurFormGroup.get('consolidated').value,  formBuilder);\r\n\r\n    //construct empty for consolidated view\r\n    dataRecon = InsuranceIncomeTaxComponent.staticConstructConsolidatedHeaderData(newDataList, true, true, false, incomeTaxInsurFormGroup.get('yrmthList').value);\r\n    InsuranceIncomeTaxComponent.staticConstructForm(newDataList, incomeTaxInsurFormGroup.get('incomeTaxInsurArrayConsol') as FormArray, incomeTaxInsurFormGroup.get('consolidated').value, formBuilder);\r\n\r\n    return incomeTaxInsurFormGroup;\r\n  }\r\n\r\n  static mapInsurITXFormGroupToWD(fg:FormGroup, obj: any): InsurITXWD{\r\n    const dataList: InsurITXSubWD[] = [];\r\n    const insurITXWD: InsurITXWD = {\r\n      id: fg.get('id')?.value,\r\n      workingDataId: obj.workingDataId,\r\n      workingDataTypeCode: obj.workingDataTypeCode,\r\n      year: fg?.get('year')?.value || obj.year,\r\n      consolidated:  fg?.get('consolidated')?.value,\r\n      claimNip: fg?.get('footerGroup.claimNip')?.value,\r\n      archiveDt: obj.archiveDt,\r\n      dataList\r\n    };\r\n    if(fg!==undefined && fg!==null){\r\n      if(fg.get('consolidated').value) {\r\n        const control = (fg.get('incomeTaxInsurArrayConsol') as FormArray).controls[0];\r\n        const subWD: InsurITXSubWD = {\r\n          firstYrCommission: control.get(\"firstYrCommission\").value,\r\n          singlePremium: control.get(\"singlePremium\").value,\r\n          prdCommission:control.get(\"prdCommission\").value,\r\n          generalInsurance: control.get(\"generalInsurance\").value,\r\n          otherCommission: control.get(\"otherCommission\").value,\r\n          prdBonus: control.get(\"prdBonus\").value,\r\n          renewalCommission: control.get(\"renewalCommission\").value,\r\n          overridingCommission: control.get(\"overridingCommission\").value,\r\n          otherNonPayable: control.get(\"otherNonPayable\").value,\r\n        }\r\n        dataList.push(subWD);\r\n      }else {\r\n        console.log(\"the real data\", (fg.get('incomeTaxInsurArrayMthly') as FormArray).controls);\r\n        (fg.get('incomeTaxInsurArrayMthly') as FormArray).controls.forEach((control: AbstractControl) => {\r\n          const subWD: InsurITXSubWD = {\r\n            yrmth: control.get(\"yrmthReCon\").value,\r\n            firstYrCommission: control.get(\"firstYrCommission\").value,\r\n            singlePremium: control.get(\"singlePremium\").value,\r\n            prdCommission:control.get(\"prdCommission\").value,\r\n            generalInsurance: control.get(\"generalInsurance\").value,\r\n            otherCommission: control.get(\"otherCommission\").value,\r\n            prdBonus: control.get(\"prdBonus\").value,\r\n            renewalCommission: control.get(\"renewalCommission\").value,\r\n            overridingCommission: control.get(\"overridingCommission\").value,\r\n            otherNonPayable: control.get(\"otherNonPayable\").value,\r\n          }\r\n          dataList.push(subWD);\r\n        }\r\n        );\r\n      }\r\n    }\r\n    console.log(\"whole saved is\", insurITXWD)\r\n    return insurITXWD;\r\n  }\r\n\r\n  static mapInsurITXWDToFormGroup(insurITXWD: InsurITXWD, formBuilder: FormBuilder, dateUtilsService: DateUtilsService): FormGroup{\r\n    const incomeTaxInsurForm: FormGroup  = formBuilder.group({\r\n      workingDataId: new FormControl(insurITXWD.workingDataId),\r\n      id: new FormControl(insurITXWD.id, null),\r\n      consolidated: new FormControl(false, null),\r\n      incomeTaxInsurArrayMthly: formBuilder.array([]),\r\n      incomeTaxInsurArrayConsol: formBuilder.array([]),\r\n      year: 0,\r\n      captionGroup: formBuilder.group({\r\n        radioOption: new FormControl('MTH', null)\r\n      }),\r\n      footerGroup: formBuilder.group({\r\n        claimNip: new FormControl(0, null),\r\n      }),\r\n      yrmthList: new FormControl(null, null),\r\n\r\n    });\r\n    InsuranceIncomeTaxComponent.staticGenerateYrMth(insurITXWD,dateUtilsService, incomeTaxInsurForm.get('yrmthList'));\r\n    let dataRecon:any[] = [];\r\n    const newDataList:any[] = [];\r\n\r\n    if(insurITXWD.consolidated === true){\r\n      //expect 1\r\n      if(insurITXWD.dataList){\r\n        incomeTaxInsurForm.get('captionGroup.radioOption').setValue('CON');\r\n\r\n        // construct populated for consolidated view\r\n        dataRecon = InsuranceIncomeTaxComponent.staticConstructConsolidatedHeaderData(insurITXWD.dataList, true, false, false, incomeTaxInsurForm.get('yrmthList').value);\r\n        InsuranceIncomeTaxComponent.staticConstructForm(dataRecon, incomeTaxInsurForm.get('incomeTaxInsurArrayConsol') as FormArray, incomeTaxInsurForm.get('consolidated').value, formBuilder);\r\n\r\n        // construct empty for mthly view\r\n        dataRecon = InsuranceIncomeTaxComponent.staticConstructConsolidatedHeaderData(newDataList, false, true, false,incomeTaxInsurForm.get('yrmthList').value);\r\n        InsuranceIncomeTaxComponent.staticConstructForm(newDataList, incomeTaxInsurForm.get('incomeTaxInsurArrayMthly') as FormArray,incomeTaxInsurForm.get('consolidated').value,  formBuilder);\r\n      }\r\n    }else{\r\n      //list of mthly records\r\n      if(insurITXWD.dataList){\r\n        incomeTaxInsurForm.get('captionGroup.radioOption').setValue('MTH');\r\n\r\n        // construct populated for mthly view\r\n        dataRecon = InsuranceIncomeTaxComponent.staticConstructConsolidatedHeaderData(insurITXWD.dataList, false, false, false, incomeTaxInsurForm.get('yrmthList').value);\r\n        InsuranceIncomeTaxComponent.staticConstructForm(dataRecon, incomeTaxInsurForm.get('incomeTaxInsurArrayMthly') as FormArray, incomeTaxInsurForm.get('consolidated').value, formBuilder);\r\n\r\n        //construct empty for consolidated view\r\n        dataRecon = InsuranceIncomeTaxComponent.staticConstructConsolidatedHeaderData(newDataList, true, true, false, incomeTaxInsurForm.get('yrmthList').value);\r\n        InsuranceIncomeTaxComponent.staticConstructForm(newDataList, incomeTaxInsurForm.get('incomeTaxInsurArrayConsol') as FormArray, incomeTaxInsurForm.get('consolidated').value, formBuilder);\r\n      }\r\n    }\r\n    incomeTaxInsurForm.get('footerGroup.claimNip').setValue(insurITXWD?.claimNip);\r\n    incomeTaxInsurForm.get('consolidated').setValue(insurITXWD?.consolidated);\r\n    return incomeTaxInsurForm;\r\n  }\r\n\r\n  static staticConstructConsolidatedHeaderData(dataList: any[], consolidated: boolean, empty: boolean, newForm:boolean, yrmthList: any[]): any[]{\r\n    //logic\r\n    //12 columns of 12 mths from claimstartdate/trgStartDte - 13 mths to trgStartDte - 1 mths\r\n    const sanitizedDataList:any[] =[];\r\n    let sortedData;\r\n     if(consolidated || empty || newForm){\r\n      yrmthList.forEach((yrmth:any, colIndex:number)=>{\r\n        dataList.push({yrmthReCon: yrmth});\r\n      });\r\n       sortedData = dataList;\r\n     }else{\r\n       yrmthList.forEach(yrmth =>{\r\n         for(let i=0; i< dataList.length; i++){\r\n           if(dataList[i].yrmth===yrmth && sanitizedDataList.findIndex(x=>x.yrmth === yrmth)<0){\r\n             sanitizedDataList.push(dataList[i]);\r\n           }\r\n         }\r\n       });\r\n       yrmthList.forEach(yrmth =>{\r\n         const index = sanitizedDataList.findIndex(x=> x.yrmth ===  yrmth);\r\n         if(index<0){\r\n           sanitizedDataList.push({yrmthReCon: yrmth});\r\n         }else{\r\n           sanitizedDataList[index].yrmthReCon = yrmth;\r\n         }\r\n       })\r\n       sortedData = sanitizedDataList.sort((a:any, b:any)=>moment(a.yrmthReCon,\"MM-YYYY\") < moment(b.yrmthReCon,\"MM-YYYY\") ? -1 : 1);\r\n     }\r\n     return sortedData;\r\n   }\r\n\r\n  static staticGenerateYrMth(data: any, dateUtilsService: DateUtilsService, yrmthListCtrl: AbstractControl): void{\r\n    //range is jan to dec of year of working data\r\n    const claimStartYr =  data.year;\r\n    const claimStartDt = moment(new Date(claimStartYr, 0,1));\r\n    const claimEndDt = moment(new Date(claimStartYr, 11,31));\r\n    const colStartDt = claimStartDt.clone();\r\n    const colEndDt = claimEndDt.clone();\r\n    let yrmthList:string[] = [];\r\n    const colMthRange = [];\r\n    for(let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')){\r\n      colMthRange.push(mth.format(\"DD-MM-YYYY\"));\r\n    }\r\n    yrmthList = colMthRange.map(x=>  moment(dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\r\n    yrmthListCtrl?.setValue(yrmthList);\r\n}\r\n\r\nstatic staticConstructForm(dataList: any[], formArr: FormArray, consolidated: boolean, formBuilder: FormBuilder): void {\r\n  console.log(\"the before\", dataList);\r\n  dataList.forEach(x=>{\r\n    formArr.push(InsuranceIncomeTaxComponent.staticAddRow(x, consolidated, formBuilder));\r\n  })\r\n}\r\n\r\nstatic staticAddRow(dataEntry: any, consolidated: boolean, formBuilder: FormBuilder) : FormGroup{\r\n  //does validation to makesure the yrmth tallies to yrmthRecon other wise default to 0\r\n  const formObj =  {\r\n    yrmth: new FormControl(dataEntry?.yrmth , null),\r\n    yrmthReCon: new FormControl(dataEntry?.yrmthReCon, null),\r\n    firstYrCommission: new FormControl(null, null),\r\n    singlePremium: new FormControl(null, null),\r\n    prdCommission: new FormControl(null, null),\r\n    generalInsurance: new FormControl(null, null),\r\n    otherCommission: new FormControl(null, null),\r\n    prdBonus: new FormControl(null, null),\r\n    renewalCommission:new FormControl(null, null),\r\n    overridingCommission: new FormControl(null, null),\r\n    otherNonPayable: new FormControl(null, null),\r\n  }\r\n\r\n //if it tallies, use result from db or is of consolidated type (use first row)\r\n if((dataEntry?.yrmth===dataEntry?.yrmthReCon && dataEntry?.yrmth!==undefined) || consolidated){\r\n      formObj.yrmth.setValue(dataEntry?.yrmth);\r\n      formObj.yrmthReCon.setValue(dataEntry?.yrmthReCon);\r\n      formObj.firstYrCommission.setValue(dataEntry?.firstYrCommission);\r\n      formObj.singlePremium.setValue(dataEntry?.singlePremium);\r\n      formObj.prdCommission.setValue(dataEntry?.prdCommission);\r\n      formObj.generalInsurance.setValue(dataEntry?.generalInsurance);\r\n      formObj.otherCommission.setValue(dataEntry?.otherCommission);\r\n      formObj.prdBonus.setValue(dataEntry?.prdBonus);\r\n      formObj.renewalCommission.setValue(dataEntry?.renewalCommission);\r\n      formObj.overridingCommission.setValue(dataEntry?.overridingCommission);\r\n      formObj.otherNonPayable.setValue(dataEntry?.otherNonPayable);\r\n  }\r\n  return formBuilder.group(formObj);\r\n}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.cols = [\r\n      \"First Year Commission\",\r\n      \"Single Premium\",\r\n      \"Production Commission\",\r\n      \"General Insurance\",\r\n      \"Other Commission\",\r\n      \"Production Bonus\",\r\n      \"Total Payable Commission\",\r\n      \"Renewal Commission\",\r\n      \"Overriding Commission\",\r\n      \"Other Non-Payable Commission\",\r\n      \"Total Non-Payable Components\",\r\n      \"Total Commission\",\r\n    ];\r\n    console.log(\r\n      \"cols\", this.cols\r\n    )\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void{\r\n\r\n    if(changes.irasDetails?.currentValue){\r\n      console.log(\"the iras\", changes.irasDetails.currentValue)\r\n      this.currIrasDetails = changes.irasDetails?.currentValue;\r\n    }\r\n    if(changes.seHardCopyDetails?.currentValue ){\r\n      this.currHardCopyDetails=changes.seHardCopyDetails?.currentValue;\r\n    }\r\n    if(changes.selectedWDOption?.currentValue){\r\n      this.currSelectedOption = changes.selectedWDOption?.currentValue;\r\n      console.log(\"changed selection\",this.currSelectedOption);\r\n      this.subscr.unsubscribe();\r\n      this.retrieveInsurWD();\r\n    }\r\n  }\r\n\r\n\r\n  getYrmthList(): string[]\r\n  {\r\n    return this.incomeTaxInsurForm.get('yrmthList').value as string[];\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  roundVal (value: number) {\r\n    return Math.round(value);\r\n  }\r\n\r\n  get incomeTaxInsurArrayMthly(): FormArray {\r\n    return this.incomeTaxInsurForm?.get('incomeTaxInsurArrayMthly') as FormArray\r\n  }\r\n\r\n  get incomeTaxInsurArrayConsol(): FormArray {\r\n    return this.incomeTaxInsurForm?.get('incomeTaxInsurArrayConsol') as FormArray\r\n  }\r\n\r\n  get footerGroup(): FormGroup {\r\n    return this.incomeTaxInsurForm?.get('footerGroup') as FormGroup\r\n  }\r\n\r\n  get captionGroup(): FormGroup {\r\n    return this.incomeTaxInsurForm?.get('captionGroup') as FormGroup\r\n  }\r\n\r\n  constructForm(dataList: any[], formArr: FormArray, consolidated: boolean): void {\r\n    console.log(\"the before\", dataList);\r\n    dataList.forEach(x=>{\r\n      formArr.push(this.addRow(x, consolidated));\r\n    })\r\n  }\r\n\r\n  addRow(dataEntry: any, consolidated: boolean) : FormGroup{\r\n    //does validation to makesure the yrmth tallies to yrmthRecon other wise default to 0\r\n    const formObj =  {\r\n      yrmth: new FormControl(dataEntry?.yrmth , null),\r\n      yrmthReCon: new FormControl(dataEntry?.yrmthReCon, null),\r\n      firstYrCommission: new FormControl(null, null),\r\n      singlePremium: new FormControl(null, null),\r\n      prdCommission: new FormControl(null, null),\r\n      generalInsurance: new FormControl(null, null),\r\n      otherCommission: new FormControl(null, null),\r\n      prdBonus: new FormControl(null, null),\r\n      renewalCommission:new FormControl(null, null),\r\n      overridingCommission: new FormControl(null, null),\r\n      otherNonPayable: new FormControl(null, null),\r\n    }\r\n\r\n   //if it tallies, use result from db or is of consolidated type (use first row)\r\n   if((dataEntry?.yrmth===dataEntry?.yrmthReCon && dataEntry?.yrmth!==undefined) || consolidated){\r\n        formObj.yrmth.setValue(dataEntry?.yrmth);\r\n        formObj.yrmthReCon.setValue(dataEntry?.yrmthReCon);\r\n        formObj.firstYrCommission.setValue(dataEntry?.firstYrCommission);\r\n        formObj.singlePremium.setValue(dataEntry?.singlePremium);\r\n        formObj.prdCommission.setValue(dataEntry?.prdCommission);\r\n        formObj.generalInsurance.setValue(dataEntry?.generalInsurance);\r\n        formObj.otherCommission.setValue(dataEntry?.otherCommission);\r\n        formObj.prdBonus.setValue(dataEntry?.prdBonus);\r\n        formObj.renewalCommission.setValue(dataEntry?.renewalCommission);\r\n        formObj.overridingCommission.setValue(dataEntry?.overridingCommission);\r\n        formObj.otherNonPayable.setValue(dataEntry?.otherNonPayable);\r\n    }\r\n    return this.formBuilder.group(formObj);\r\n  }\r\n\r\n  isActive(): boolean{\r\n    return this.currSelectedOption?.obj.archiveDt===0;\r\n  }\r\n\r\n  copyToItem(event: any):void{\r\n    this.totalAmtPayEvent.emit(this.getTotalAmtPayable());\r\n  }\r\n\r\n  enableRefreshOClaim():boolean{\r\n    // return this.captionGroup.get('radioOption').value==='MTH';\r\n    return this.incomeTaxInsurForm.get('captionGroup.radioOption').value==='MTH'\r\n  }\r\n\r\n  confirmFile(event: any, key: string){\r\n    console.log(\"clicing option\");\r\n    this.nspConfirmService.onConfirmPopupMsg(event, \"All Working Data fields will be cleared\",key, null,  ()=>{\r\n      console.log(\"confirm change option\");\r\n    });\r\n  }\r\n\r\n  disableNonActive(): boolean{\r\n    return this.currSelectedOption?.obj.archiveDt!==0;\r\n  }\r\n\r\n  retrieveInsurWD():void{\r\n    //if no changes were recorded, or newly archived take from db, otherwise take from local unsaved copy\r\n    if((!this.currSelectedOption?.changes && !this.currSelectedOption.newWD)\r\n    || (this.currSelectedOption.newArchived && (this.currSelectedOption?.obj.workingDataId!==null))) {\r\n      console.log(\"newly archived is \", this.currSelectedOption.newArchived )\r\n\r\n      let params = new HttpParams();\r\n      params = params.append(\"workingDataId\", this.currSelectedOption?.obj.workingDataId);\r\n      this.seClaimService.retrieveInsurWD({params}).subscribe((resp:any) => {\r\n        if(resp){\r\n            if(resp.status === 200 && resp.body.data){\r\n              this.generateYrMth(resp.body.data);\r\n              this.populateIncomeTaxInsurForm(resp.body.data, false, null);\r\n              this.valueChangeSubscribe();\r\n\r\n            }\r\n          }\r\n        },\r\n        (error: any) => {\r\n          console.log(\"error is\" + String(error?.error?.error_desc));\r\n          this.toastService.error(String(error?.error?.error_desc));\r\n        });\r\n\r\n    }else if(this.currSelectedOption.changes && !this.currSelectedOption.newWD) {\r\n      console.log(\"get from changes WD Map\", this.workingDataWithChanges.get(this.currSelectedOption?.obj.workingDataId))\r\n      this.incomeTaxInsurForm = this.workingDataWithChanges.get(this.currSelectedOption?.obj?.workingDataId).formGroup as FormGroup;\r\n      this.yrmthList = this.incomeTaxInsurForm.get('yrmthList').value;\r\n      this.setRadioOption(this.incomeTaxInsurForm.get('consolidated').value);\r\n      this.loading = false;\r\n\r\n    }else if(this.currSelectedOption.newWD) {\r\n      console.log(\"get from new WD Map\");\r\n      console.log(\"selected key\",this.currSelectedOption?.key.toString())\r\n      this.incomeTaxInsurForm = this.newUnsavedWorkingData.get(this.currSelectedOption?.key.toString()).formGroup as FormGroup;\r\n      if(this.incomeTaxInsurForm.get('consolidated')){\r\n        this.setRadioOption(this.incomeTaxInsurForm.get('consolidated').value);\r\n        //defaulted to monthly\r\n      }else this.setRadioOption(false);\r\n      this.loading = false;\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  async confirmSwitch(e: Event,  type: string) {\r\n    const value = (e.target as HTMLInputElement).value;\r\n    console.log(\"incoming value\",value)\r\n    if (value !== this.incomeTaxInsurForm.get('captionGroup.radioOption').value) {\r\n      e.preventDefault();\r\n      const confirm = await this.showConfirm(e,type);\r\n      if (!confirm) {\r\n        return;\r\n      }else{\r\n        this.incomeTaxInsurForm.get('captionGroup.radioOption').setValue(value);\r\n        this.incomeTaxInsurForm.get('consolidated').setValue(value === 'CON')\r\n        this.clearForm(value);\r\n      }\r\n    }\r\n  }\r\n\r\n  showConfirm(e: Event, type: string) {\r\n    return new Promise((resolve) => {\r\n      this.confirmationService.confirm({\r\n        target: e.target,\r\n        message: 'All Working Data fields will be cleared',\r\n        header: 'Confirmation',\r\n        key: type,\r\n        icon: 'pi pi-exclamation-triangle',\r\n        acceptLabel: 'Proceed',\r\n        rejectLabel: 'Cancel',\r\n        accept() {\r\n          return resolve(true)\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n  setRadioOption(consolidated: boolean): void{\r\n    if(consolidated){\r\n      this.incomeTaxInsurForm.get('captionGroup.radioOption').setValue('CON');\r\n    }else this.incomeTaxInsurForm.get('captionGroup.radioOption').setValue('MTH');\r\n  }\r\n\r\n  generateYrMth(data: any): void{\r\n       //range is jan to dec of year of working data\r\n       const claimStartYr =  data.year;\r\n       const claimStartDt = moment(new Date(claimStartYr, 0,1));\r\n       const claimEndDt = moment(new Date(claimStartYr, 11,31));\r\n       const colStartDt = claimStartDt.clone();\r\n       const colEndDt = claimEndDt.clone();\r\n\r\n       this.colMthRange = [];\r\n       for(let mth = colStartDt; mth.isSameOrBefore(colEndDt); mth.add(1, 'month')){\r\n         this.colMthRange.push(mth.format(\"DD-MM-YYYY\"));\r\n       }\r\n       this.yrmthList = this.colMthRange.map(x=>  moment(this.dateUtilsService.convertStrToDate(x, \"DD-MM-YYYY\")).format(\"MM-YYYY\"));\r\n       const cloneYrmthList = JSON.parse(JSON.stringify(this.yrmthList))\r\n       console.log(\"clone is\", cloneYrmthList)\r\n       this.incomeTaxInsurForm.get('yrmthList').setValue(cloneYrmthList);\r\n\r\n  }\r\n\r\n  clearForm(radioKey: string): void{\r\n\r\n    if(radioKey === \"MTH\"){\r\n      this.incomeTaxInsurArrayConsol.controls.forEach((control: AbstractControl)=>{\r\n        control.get('firstYrCommission').setValue(null);\r\n      })\r\n      this.incomeTaxInsurArrayConsol.controls.forEach((control: AbstractControl)=>{\r\n        control.get('singlePremium').setValue(null);\r\n      })\r\n      this.incomeTaxInsurArrayConsol.controls.forEach((control: AbstractControl)=>{\r\n        control.get('prdCommission').setValue(null);\r\n      })\r\n      this.incomeTaxInsurArrayConsol.controls.forEach((control: AbstractControl)=>{\r\n        control.get('generalInsurance').setValue(null);\r\n      })\r\n      this.incomeTaxInsurArrayConsol.controls.forEach((control: AbstractControl)=>{\r\n        control.get('otherCommission').setValue(null);\r\n      })\r\n      this.incomeTaxInsurArrayConsol.controls.forEach((control: AbstractControl)=>{\r\n        control.get('prdBonus').setValue(null);\r\n      })\r\n      this.incomeTaxInsurArrayConsol.controls.forEach((control: AbstractControl)=>{\r\n        control.get('renewalCommission').setValue(null);\r\n      })\r\n      this.incomeTaxInsurArrayConsol.controls.forEach((control: AbstractControl)=>{\r\n        control.get('overridingCommission').setValue(null);\r\n      })\r\n      this.incomeTaxInsurArrayConsol.controls.forEach((control: AbstractControl)=>{\r\n        control.get('otherNonPayable').setValue(null);\r\n      })\r\n    }else{\r\n      this.incomeTaxInsurArrayMthly.controls.forEach((control: AbstractControl)=>{\r\n        control.get('firstYrCommission').setValue(null);\r\n      })\r\n      this.incomeTaxInsurArrayMthly.controls.forEach((control: AbstractControl)=>{\r\n        control.get('singlePremium').setValue(null);\r\n      })\r\n      this.incomeTaxInsurArrayMthly.controls.forEach((control: AbstractControl)=>{\r\n        control.get('prdCommission').setValue(null);\r\n      })\r\n      this.incomeTaxInsurArrayMthly.controls.forEach((control: AbstractControl)=>{\r\n        control.get('generalInsurance').setValue(null);\r\n      })\r\n      this.incomeTaxInsurArrayMthly.controls.forEach((control: AbstractControl)=>{\r\n        control.get('otherCommission').setValue(null);\r\n      })\r\n      this.incomeTaxInsurArrayMthly.controls.forEach((control: AbstractControl)=>{\r\n        control.get('prdBonus').setValue(null);\r\n      })\r\n      this.incomeTaxInsurArrayMthly.controls.forEach((control: AbstractControl)=>{\r\n        control.get('renewalCommission').setValue(null);\r\n      })\r\n      this.incomeTaxInsurArrayMthly.controls.forEach((control: AbstractControl)=>{\r\n        control.get('overridingCommission').setValue(null);\r\n      })\r\n      this.incomeTaxInsurArrayMthly.controls.forEach((control: AbstractControl)=>{\r\n        control.get('otherNonPayable').setValue(null);\r\n      })\r\n    }\r\n  }\r\n\r\n  isValidNumber(obj: any): boolean{\r\n    return !isNaN(obj);\r\n  }\r\n\r\n  populateIncomeTaxInsurForm(data: any, newForm: boolean, radioKey: string): FormGroup{\r\n    this.incomeTaxInsurForm  = this.formBuilder.group({\r\n      id: new FormControl(null, null),\r\n      workingDataId: new FormControl('',null),\r\n      consolidated: new FormControl(false, null),\r\n      incomeTaxInsurArrayMthly: this.formBuilder.array([]),\r\n      incomeTaxInsurArrayConsol: this.formBuilder.array([]),\r\n      year: data.year,\r\n      captionGroup: this.formBuilder.group({\r\n        radioOption:new FormControl('MTH', null)\r\n      }),\r\n      footerGroup:this.formBuilder.group({\r\n        claimNip: new FormControl(0, null),\r\n        proposedNip: new FormControl(0, null),\r\n      }),\r\n      yrmthList:new FormControl([], null)\r\n    });\r\n\r\n    this.setFormFooter(data);\r\n    const newDataList: any[] = [];\r\n    let dataRecon:any[] = [];\r\n\r\n    console.log(\"new form is\", this.incomeTaxInsurForm)\r\n    if(newForm){\r\n      //default to mthly\r\n      if(!radioKey){\r\n        this.incomeTaxInsurForm.get('captionGroup.radioOption').setValue('MTH');\r\n        this.incomeTaxInsurForm.get('consolidated').setValue(false);\r\n      }else {\r\n        this.incomeTaxInsurForm.get('captionGroup.radioOption').setValue(radioKey);\r\n        this.incomeTaxInsurForm.get('consolidated').setValue(radioKey===\"CON\");\r\n\r\n      }\r\n      // construct populated for mthly view\r\n      dataRecon = this.constructConsolidatedHeaderData(data.dataList, false, false, newForm);\r\n      this.constructForm(dataRecon, this.incomeTaxInsurArrayMthly, false);\r\n\r\n      //construct empty for consolidated view\r\n      this.constructConsolidatedHeaderData(newDataList, true, true, newForm);\r\n      this.constructForm(newDataList, this.incomeTaxInsurArrayConsol, true);\r\n\r\n    }else {\r\n      if(data.consolidated === true){\r\n        //expect 1\r\n        if(data.dataList){\r\n          this.incomeTaxInsurForm.get('captionGroup.radioOption').setValue('CON');\r\n          // construct populated for consolidated view\r\n          dataRecon = this.constructConsolidatedHeaderData(data.dataList, true, false, newForm);\r\n          this.constructForm(dataRecon, this.incomeTaxInsurArrayConsol, true);\r\n\r\n          // construct empty for mthly view\r\n          this.constructConsolidatedHeaderData(newDataList, false, true, newForm);\r\n          this.constructForm(newDataList, this.incomeTaxInsurArrayMthly, false);\r\n        }else{\r\n          console.log(\"empty\")\r\n        }\r\n      }else{\r\n        //list of mthly records\r\n        if(data.dataList){\r\n          // this.captionGroup.get('radioOption').setValue('MTH');\r\n          this.incomeTaxInsurForm.get('captionGroup.radioOption').setValue('MTH');\r\n\r\n          // construct populated for mthly view\r\n          dataRecon = this.constructConsolidatedHeaderData(data.dataList, false, false, newForm);\r\n          this.constructForm(dataRecon, this.incomeTaxInsurArrayMthly, false);\r\n\r\n          //construct empty for consolidated view\r\n          this.constructConsolidatedHeaderData(newDataList, true, true, newForm);\r\n          this.constructForm(newDataList, this.incomeTaxInsurArrayConsol, true);\r\n          console.log(\"tinga\",this.incomeTaxInsurArrayMthly.controls)\r\n        }\r\n      }\r\n    }\r\n    this.loading = false;\r\n    return this.incomeTaxInsurForm;\r\n  }\r\n\r\n  valueChangeSubscribe():void{\r\n    this.subscr = this.captionGroup.get('radioOption').valueChanges.subscribe(x=>{\r\n      this.incomeTaxInsurForm.get(\"consolidated\").setValue(this.captionGroup.get('radioOption').value===\"CON\")\r\n    })\r\n  this.incomeTaxInsurForm.valueChanges.subscribe(() => {\r\n      this.currSelectedOption.changes = true;\r\n      this.saveSEClaimRequest.workingDataSectionInd = true;\r\n      if(!this.workingDataWithChanges.has(this.currSelectedOption?.obj?.workingDataId)\r\n       ||\r\n      (this.workingDataWithChanges.has(this.currSelectedOption?.obj?.workingDataId) && this.currSelectedOption.newArchived)\r\n      ){\r\n        console.log(\"puting to id\",this.currSelectedOption?.obj?.workingDataId);\r\n        console.log(\"during subscribe\", this.incomeTaxInsurForm.controls)\r\n        this.workingDataWithChanges.set(this.currSelectedOption?.obj?.workingDataId,\r\n          {\r\n            obj: this.currSelectedOption.obj,\r\n            // formGroup:\r\n            formGroup: this.incomeTaxInsurForm,\r\n          });\r\n        this.currSelectedOption.newArchived = false;\r\n      }\r\n    });\r\n\r\n  }\r\n  constructConsolidatedHeaderData(dataList: any[], consolidated: boolean, empty: boolean, newForm:boolean): any[]{\r\n   //logic\r\n   //12 columns of 12 mths from claimstartdate/trgStartDte - 13 mths to trgStartDte - 1 mths\r\n   const sanitizedDataList:any[] =[];\r\n   let sortedData;\r\n    if(consolidated || empty || newForm){\r\n      console.log(\"before yrmthlist\", this.yrmthList)\r\n      this.colMthRange.forEach((mth:any, colIndex:number)=>{\r\n        dataList.push({yrmthReCon: moment(this.dateUtilsService.convertStrToDate(mth, \"DD-MM-YYYY\")).format(\"MM-YYYY\")});\r\n      });\r\n      sortedData = dataList;\r\n    }else{\r\n      this.yrmthList.forEach(yrmth =>{\r\n        for(let i=0; i< dataList.length; i++){\r\n          if(dataList[i].yrmth===yrmth && sanitizedDataList.findIndex(x=>x.yrmth === yrmth)<0){\r\n            sanitizedDataList.push(dataList[i]);\r\n          }\r\n        }\r\n      });\r\n      this.yrmthList.forEach(yrmth =>{\r\n        const index = sanitizedDataList.findIndex(x=> x.yrmth ===  yrmth);\r\n        if(index<0){\r\n          sanitizedDataList.push({yrmthReCon: yrmth});\r\n        }else{\r\n          sanitizedDataList[index].yrmthReCon = yrmth;\r\n        }\r\n      })\r\n      sortedData = sanitizedDataList.sort((a:any, b:any)=>moment(a.yrmthReCon,\"MM-YYYY\") < moment(b.yrmthReCon,\"MM-YYYY\") ? -1 : 1);\r\n    }\r\n    return sortedData;\r\n  }\r\n\r\n  setFormFooter(dataSet: any): void{\r\n    this.incomeTaxInsurForm.get('footerGroup.claimNip').setValue(dataSet?.claimNip || 0);\r\n  }\r\n\r\n  getForm(){\r\n    console.log(\"rikza\", this.incomeTaxInsurArrayConsol.controls);\r\n    console.log(\"the item component within insur income\", this.itemDetailsSection.itemForm?.get('otherSEItemArr') as FormArray);\r\n\r\n  }\r\n\r\n  refreshOtherClaim(): void{\r\n    let params = new HttpParams();\r\n    params = params.append(\"nric\", this.currHardCopyDetails?.headerDto.nsManNric);\r\n    params = params.append(\"yrmthList\", JSON.stringify(this.yrmthList));\r\n    params = params.append(\"caseId\", this.currHardCopyDetails?.headerDto.caseId);\r\n\r\n    this.seClaimService.retrieveRefreshOtherInsurClaims({params}).subscribe((resp:any) => {\r\n      if(resp){\r\n        if(resp.status === 200 && resp.body.data){\r\n          resp.body.data.forEach((y:any)=> {\r\n            const ctrl = this.incomeTaxInsurArrayMthly.controls.find(x=> x.get('yrmthReCon').value === y.yrmth)\r\n            this.refreshOtherClaimSetValue(ctrl, y);\r\n          });\r\n          const unrefreshed = this.incomeTaxInsurArrayMthly.controls.filter(x=> !(resp.body.data.map((y:any)=> y.yrmth as string)).includes(x.get('yrmthReCon').value));\r\n          unrefreshed.forEach(ctrl=> {\r\n            this.refreshOtherClaimSetValue(ctrl, null);\r\n          })\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  refreshOtherClaimSetValue(ctrl: AbstractControl, data: any): void{\r\n    if(ctrl){\r\n      ctrl.get('firstYrCommission').setValue(data?.firstYrCommission || 0);\r\n      ctrl.get('generalInsurance').setValue(data?.generalInsurance || 0);\r\n      ctrl.get('otherCommission').setValue(data?.otherCommission || 0);\r\n      ctrl.get('otherNonPayable').setValue(data?.otherNonPayable || 0);\r\n      ctrl.get('overridingCommission').setValue(data?.overridingCommission || 0);\r\n      ctrl.get('prdBonus').setValue(data?.prdBonus || 0);\r\n      ctrl.get('prdCommission').setValue(data?.prdCommission || 0);\r\n      ctrl.get('renewalCommission').setValue(data?.renewalCommission || 0);\r\n      ctrl.get('singlePremium').setValue(data?.singlePremium || 0);\r\n    }\r\n  }\r\n\r\n  enableCopytoItem(): boolean{\r\n    const claimItemList = this.itemDetailsSection.itemForm?.get('otherSEItemArr') as FormArray;\r\n    let itxItem = null;\r\n    if(claimItemList.length>0){\r\n      itxItem = claimItemList?.controls.filter(x=> x.get('itemType').value === 'ITX')[0];\r\n      return itxItem?.get('latestStatus').value === this.PEND_VERIFY_STATUS || itxItem?.get('latestStatus').value === this.PEND_ACTION_STATUS;\r\n    }else return false;\r\n  }\r\n\r\n  tester(){\r\n    console.log(\"the test\", this.incomeTaxInsurForm);\r\n  }\r\n\r\n  getSumOfCurrRow(formCtrlName: string): number\r\n  {\r\n    let sum = 0;\r\n\r\n    for(let colIndex=0; colIndex<= this.incomeTaxInsurArrayMthly?.controls.length-1; colIndex++ ){\r\n      sum+=this.incomeTaxInsurArrayMthly?.controls[colIndex].get(formCtrlName).value;\r\n    }\r\n    return sum;\r\n  }\r\n\r\n  getTotalPayableCol(colIndex: number, formArr: FormArray):number{\r\n    let sum = 0;\r\n    sum =\r\n    Number(formArr.controls[colIndex].get('firstYrCommission').value|| 0 )\r\n    +  Number(formArr.controls[colIndex].get('singlePremium').value|| 0 )\r\n    +  Number(formArr.controls[colIndex].get('prdCommission').value|| 0 )\r\n    +  Number(formArr.controls[colIndex].get('generalInsurance').value|| 0 )\r\n    +  Number(formArr.controls[colIndex].get('otherCommission').value|| 0 )\r\n    +  Number(formArr.controls[colIndex].get('prdBonus').value|| 0 )\r\n\r\n      return sum;\r\n  }\r\n\r\n  getSumOfTotalPayable(): number\r\n  {\r\n    let sum = 0;\r\n    sum =\r\n    Number(this.getSumOfCurrRow('firstYrCommission'))\r\n    + Number(this.getSumOfCurrRow('singlePremium'))\r\n    + Number(this.getSumOfCurrRow('prdCommission'))\r\n    + Number(this.getSumOfCurrRow('generalInsurance'))\r\n    + Number(this.getSumOfCurrRow('otherCommission'))\r\n    + Number(this.getSumOfCurrRow('prdBonus'))\r\n\r\n    return sum;\r\n  }\r\n\r\n  getTotalNonPayableCol(colIndex: number, formArr: FormArray):number{\r\n    let sum = 0;\r\n    sum =\r\n    Number(formArr.controls[colIndex]?.get('renewalCommission').value|| 0 )\r\n    +  Number(formArr.controls[colIndex]?.get('overridingCommission').value|| 0 )\r\n    +  Number(formArr.controls[colIndex]?.get('otherNonPayable').value|| 0 )\r\n\r\n\r\n      return sum;\r\n  }\r\n\r\n  getSumOfTotalNonPayable(): number\r\n  {\r\n    let sum = 0;\r\n    sum =\r\n    Number(this.getSumOfCurrRow('renewalCommission'))\r\n    + Number(this.getSumOfCurrRow('overridingCommission'))\r\n    + Number(this.getSumOfCurrRow('otherNonPayable'))\r\n\r\n    return sum;\r\n  }\r\n\r\n  //priority is Actual then provisional for ITX\r\n  getActualNip(): number{\r\n    this.displayActualNip = true;\r\n    let irasRecord;\r\n    let actualNip = 0;\r\n    let actualNipComputation = \"\";\r\n    let proposedNip = 0;\r\n    let annualtotalComm = 0;\r\n    let tradeIncome = 0;\r\n    let displayActualNip = false;\r\n    if(this.incomeTaxInsurForm.get('captionGroup.radioOption').value==='MTH'){\r\n\r\n      annualtotalComm = this.getSumOfTotalNonPayable() +this. getSumOfTotalPayable();\r\n\r\n      //if actual\r\n      if(this.getOverridingCommPerc()<20 ){\r\n        if(this.irasDetails?.filter((x:any)=> x.basis === \"2\").length>0){\r\n          irasRecord = this.irasDetails?.filter((x:any)=> x.basis === \"2\")[0];\r\n          if(irasRecord.incomeYr === this.incomeTaxInsurForm.get('year').value){\r\n            tradeIncome = irasRecord.tradeIncome;\r\n            actualNip =  tradeIncome/annualtotalComm * 100 || 0;\r\n            actualNipComputation = `${tradeIncome}/${annualtotalComm} * 100%`;\r\n            proposedNip = actualNip>=80? 80: actualNip;\r\n            displayActualNip = true;\r\n          }else {\r\n            proposedNip = 75;\r\n          }\r\n        //if provisional\r\n        }else if(this.irasDetails?.filter((x:any)=> x.basis === \"1\").length>0){\r\n          irasRecord = this.irasDetails?.filter((x:any)=> x.basis === \"1\")[0];\r\n          if(irasRecord.incomeYr === this.incomeTaxInsurForm.get('year').value){\r\n            tradeIncome = irasRecord.tradeIncome;\r\n            actualNip =  this.tradeIncome/annualtotalComm * 100 || 0;\r\n            actualNipComputation = `${tradeIncome}/${annualtotalComm} * 100%`;\r\n            proposedNip = actualNip;\r\n            displayActualNip = true;\r\n          }else {\r\n            proposedNip = 75;\r\n          }\r\n        }else{\r\n          proposedNip = 75;\r\n        }\r\n\r\n      }else if(this.getOverridingCommPerc()>=20){\r\n        if(this.irasDetails?.filter((x:any)=> x.basis === \"2\").length>0){\r\n          irasRecord = this.irasDetails?.filter((x:any)=> x.basis === \"2\")[0];\r\n          console.log(\"iras record \", irasRecord)\r\n          console.log(\"incometax year  \", this.incomeTaxInsurForm.get('year').value)\r\n\r\n          if(irasRecord.incomeYr === this.incomeTaxInsurForm.get('year').value){\r\n            tradeIncome = irasRecord.tradeIncome;\r\n            actualNip =  (tradeIncome/annualtotalComm * 100|| 0) + (100 - tradeIncome/annualtotalComm *100|| 0)/2;\r\n            console.log(\"actual nuip \", actualNip)\r\n\r\n            actualNipComputation = `[${tradeIncome}/${annualtotalComm} * 100%] + [100%- ${tradeIncome}/${annualtotalComm} * 100%]/2`;\r\n            proposedNip = actualNip>=80? 80: actualNip;\r\n            displayActualNip = true;\r\n          }\r\n        //if provisional\r\n        }else if(this.irasDetails?.filter((x:any)=> x.basis === \"1\").length>0){\r\n          irasRecord = this.irasDetails?.filter((x:any)=> x.basis === \"1\")[0];\r\n          if(irasRecord.incomeYr === this.incomeTaxInsurForm.get('year').value){\r\n            tradeIncome = irasRecord.tradeIncome;\r\n            actualNip =  (tradeIncome/annualtotalComm * 100|| 0) + (100 -tradeIncome/annualtotalComm *100|| 0)/2;\r\n            actualNipComputation = `[${tradeIncome}/${annualtotalComm} * 100%] + [100%- ${tradeIncome}/${annualtotalComm} * 100%]/2`;\r\n            proposedNip = actualNip;\r\n            displayActualNip = true;\r\n          }else{\r\n            proposedNip = 80;\r\n          }\r\n        }else{\r\n          proposedNip = 80;\r\n        }\r\n      }\r\n    }else{\r\n      //consolidated\r\n      annualtotalComm = this.getTotalNonPayableCol(0, this.incomeTaxInsurArrayConsol) + this.getTotalPayableCol(0, this.incomeTaxInsurArrayConsol);\r\n\r\n      if(this.getOverridingCommPerc()<20 ){\r\n        if(this.irasDetails?.filter((x:any)=> x.basis === \"2\").length>0){\r\n          irasRecord = this.irasDetails?.filter((x:any)=> x.basis === \"2\")[0];\r\n          if(irasRecord.incomeYr === this.incomeTaxInsurForm.get('year').value){\r\n            tradeIncome = irasRecord.tradeIncome;\r\n            actualNip =  tradeIncome/annualtotalComm * 100|| 0;\r\n            actualNipComputation = `${tradeIncome}/${annualtotalComm} * 100%`;\r\n            proposedNip = actualNip>=80? 80: actualNip;\r\n            displayActualNip = true;\r\n          }else {\r\n            proposedNip = 75;\r\n          }\r\n        //if provisional\r\n        }else if(this.irasDetails?.filter((x:any)=> x.basis === \"1\").length>0){\r\n          irasRecord = this.irasDetails?.filter((x:any)=> x.basis === \"1\")[0];\r\n          if(irasRecord.incomeYr === this.incomeTaxInsurForm.get('year').value){\r\n            tradeIncome = irasRecord.tradeIncome;\r\n            actualNip =  tradeIncome/annualtotalComm * 100|| 0;\r\n            actualNipComputation = `${tradeIncome}/${annualtotalComm} * 100%`;\r\n            proposedNip = actualNip;\r\n            displayActualNip = true;\r\n          }else {\r\n            proposedNip = 75;\r\n          }\r\n        }else{\r\n          proposedNip = 75;\r\n\r\n        }\r\n\r\n      }else if(this.getOverridingCommPerc()>=20){\r\n        if(this.irasDetails?.filter((x:any)=> x.basis === \"2\").length>0){\r\n          irasRecord =this.irasDetails?.filter((x:any)=> x.basis === \"2\")[0];\r\n          if(irasRecord.incomeYr === this.incomeTaxInsurForm.get('year').value){\r\n            tradeIncome = irasRecord.tradeIncome;\r\n            actualNip =  (tradeIncome/annualtotalComm * 100 || 0) + (100 - tradeIncome/annualtotalComm *100 || 0)/2;\r\n            actualNipComputation = `[${tradeIncome}/${annualtotalComm} * 100%] + [100%- ${tradeIncome}/${annualtotalComm} * 100%]/2`;\r\n            proposedNip = actualNip>=80? 80: actualNip;\r\n            displayActualNip = true;\r\n          }else{\r\n            proposedNip = 80;\r\n          }\r\n        //if provisional\r\n        }else if(this.irasDetails?.filter((x:any)=> x.basis === \"1\").length>0){\r\n          irasRecord = this.irasDetails?.filter((x:any)=> x.basis === \"1\")[0];\r\n          if(irasRecord.incomeYr === this.incomeTaxInsurForm.get('year').value){\r\n            tradeIncome = irasRecord.tradeIncome;\r\n            annualtotalComm = this.getTotalNonPayableCol(0, this.incomeTaxInsurArrayConsol) + this.getTotalPayableCol(0, this.incomeTaxInsurArrayConsol)\r\n            actualNip =  (tradeIncome/annualtotalComm * 100|| 0) + (100 - tradeIncome/annualtotalComm *100|| 0)/2;\r\n            actualNipComputation = `[${tradeIncome}/${annualtotalComm} * 100%] + [100%- ${tradeIncome}/${annualtotalComm} * 100%]/2`;\r\n            proposedNip =actualNip;\r\n            displayActualNip = true;\r\n          }else{\r\n            proposedNip = 80;\r\n          }\r\n        }else{\r\n          proposedNip = 80;\r\n        }\r\n\r\n      }\r\n\r\n\r\n    }\r\n    this.proposedNip = this.roundVal(proposedNip);\r\n    this.actualNipComputation = actualNipComputation;\r\n    this.displayActualNip = displayActualNip;\r\n    return this.roundVal(actualNip);\r\n\r\n  }\r\n\r\n  getOverridingCommPerc(): number{\r\n    let rslt = 0;\r\n    if(this.incomeTaxInsurForm.get('captionGroup.radioOption').value==='MTH'){\r\n      rslt = this.getSumOfCurrRow('overridingCommission')/(this.getSumOfTotalNonPayable() +this. getSumOfTotalPayable()) * 100 || 0;\r\n    }else{\r\n      rslt = this.incomeTaxInsurArrayConsol.controls[0].get('overridingCommission').value/\r\n      (this.getTotalNonPayableCol(0, this.incomeTaxInsurArrayConsol) + this.getTotalPayableCol(0, this.incomeTaxInsurArrayConsol)) * 100 || 0\r\n    }\r\n    return this.roundVal(rslt);\r\n  }\r\n\r\n  getTotalAmtPayable(): number{\r\n    let amtPayable = 0;\r\n    if(this.incomeTaxInsurForm.get('captionGroup.radioOption').value==='MTH'){\r\n      amtPayable = this.footerGroup.get('claimNip').value /100 *\r\n      this.getSumOfTotalPayable() + 0.42 * this.getSumOfCurrRow('firstYrCommission');\r\n    }else {\r\n      amtPayable = this.footerGroup.get('claimNip').value /100 * this.getTotalPayableCol(0, this.incomeTaxInsurArrayConsol) + 0.42 *\r\n      this.incomeTaxInsurArrayConsol.controls[0].get('firstYrCommission').value\r\n    }\r\n    return this.roundVal(amtPayable);\r\n  }\r\n\r\n  getTotalAmtPayableDesc(): string{\r\n    let amtPayableDesc = \"\";\r\n    if(this.incomeTaxInsurForm.get('captionGroup.radioOption').value==='MTH'){\r\n      amtPayableDesc = `${String(this.footerGroup.get('claimNip').value)} % * TPC(${String(this.getSumOfTotalPayable())})\r\n      + 42% * FYC (${this.getSumOfCurrRow('firstYrCommission')}  `;\r\n    }else{\r\n      amtPayableDesc = `${String(this.footerGroup.get('claimNip').value)} % * TPC(${String(this.getTotalPayableCol(0, this.incomeTaxInsurArrayConsol))})\r\n      + 42% * FYC (${String(this.incomeTaxInsurArrayConsol.controls[0].get('firstYrCommission').value)}) `;\r\n    }\r\n    return amtPayableDesc;\r\n\r\n  }\r\n\r\n  isTradeIncomeMorethanTotalCommision(): boolean{\r\n    let irasRecord;\r\n    //if actual\r\n    if(this.irasDetails?.filter((x:any)=> x.basis === \"2\").length>0){\r\n      irasRecord = this.irasDetails?.filter((x:any)=> x.basis === \"2\")[0];\r\n    //if provisional\r\n    }else if(this.irasDetails?.filter((x:any)=> x.basis === \"1\").length>0){\r\n      irasRecord = this.irasDetails?.filter((x:any)=> x.basis === \"1\")[0];\r\n    }\r\n    if(this.incomeTaxInsurForm.get('captionGroup.radioOption').value==='MTH'){\r\n      return irasRecord?.tradeIncome> (this.getSumOfTotalNonPayable() + this.getSumOfTotalPayable());\r\n    }else{\r\n      return irasRecord?.tradeIncome > (this.getTotalNonPayableCol(0, this.incomeTaxInsurArrayConsol) + this.getTotalPayableCol(0, this.incomeTaxInsurArrayConsol));\r\n    }\r\n  }\r\n\r\n  isEmpty(input: string):boolean{\r\n    return input===null || input===undefined || input === \"\";\r\n  }\r\n\r\n  isWorkingDataTotalPayableNotEqualItemAnnualAmt(): boolean{\r\n    const claimItemList = this.itemDetailsSection.itemForm?.get('otherSEItemArr') as FormArray;\r\n    let itxItem = null;\r\n    let annualtotalPayable = 0;\r\n    if(claimItemList.length>0){\r\n      itxItem = claimItemList?.controls.find(x=> x.get('itemType').value === 'ITX');\r\n      const annualIncome = (itxItem?.get('otherSEItemTableArr') as FormArray).controls[0].get('annualIncome')?.value;\r\n      if(this.incomeTaxInsurForm.get('captionGroup.radioOption').value==='MTH'){\r\n        annualtotalPayable = this. getSumOfTotalPayable();\r\n      }else {\r\n        annualtotalPayable = this.getTotalPayableCol(0, this.incomeTaxInsurArrayConsol);\r\n      }\r\n      return annualtotalPayable !== annualIncome;\r\n\r\n    }else return false;\r\n  }\r\n\r\n  exportToCSV(dataTable: Table): void{\r\n    console.log(\"export to csv\");\r\n    const columns =\r\n    [{field: 'rowHeader', header: \" \", index: 0, customExportHeader: \" \"},\r\n    {field: 'annualAccount', header: \"Annual\", index: 1}]\r\n\r\n    for(let i = 0; i< this.yrmthList.length; i++ ){\r\n      columns.push({field: String(this.yrmthList[i]), header:String(this.yrmthList[i]), index: i});\r\n    }\r\n    const dtoList:any[] = [\r\n      {rowHeader: 'First Year Commission'},\r\n      {rowHeader: 'Single Premium'},\r\n      {rowHeader: 'Production Commission'},\r\n      {rowHeader: \"General Insurance\"},\r\n      {rowHeader: \"Other Commission\"},\r\n      {rowHeader: \"Production Bonus\"},\r\n      {rowHeader: \"Total Payable Commission\"},\r\n      {rowHeader: \"Renewal Commission\"},\r\n      {rowHeader: \"Overriding Commission\"},\r\n      {rowHeader: \"Other Non-Payable Commission\"},\r\n      {rowHeader: \"Total Non-Payable Components\"},\r\n      {rowHeader: \"Total Commission\"},\r\n\r\n    ];\r\n    const dataList: InsurITXSubWD[] = [];\r\n    let subWD: InsurITXSubWD;\r\n    if(this.incomeTaxInsurForm?.get('captionGroup.radioOption').value==='CON'){\r\n      this.exportAddConsol(dataList, subWD, dtoList);\r\n    }else{\r\n      this.exportAddMthly(dataList, subWD, dtoList);\r\n    }\r\n    this.exportUtilsService.exportCSV(dataTable, dtoList,10, columns,\r\n      \"insurance_income_tax_\".concat(formatDate(new Date(),\"dd-MM-YYYY\", this.localeId)));\r\n  }\r\n\r\n  exportAddConsol(dataList: InsurITXSubWD[], subWD: InsurITXSubWD, dtoList: any[]){\r\n    const control = (this.incomeTaxInsurForm.get('incomeTaxInsurArrayConsol') as FormArray).controls[0];\r\n    subWD = {\r\n      firstYrCommission: control.get(\"firstYrCommission\").value,\r\n      singlePremium: control.get(\"singlePremium\").value,\r\n      prdCommission:control.get(\"prdCommission\").value,\r\n      generalInsurance: control.get(\"generalInsurance\").value,\r\n      otherCommission: control.get(\"otherCommission\").value,\r\n      prdBonus: control.get(\"prdBonus\").value,\r\n      renewalCommission: control.get(\"renewalCommission\").value,\r\n      overridingCommission: control.get(\"overridingCommission\").value,\r\n      otherNonPayable: control.get(\"otherNonPayable\").value,\r\n    }\r\n    dataList.push(subWD);\r\n\r\n    dataList.forEach(x=>{\r\n\r\n      //add consol\r\n      dtoList[0]['annualAccount'] = x.firstYrCommission;\r\n      dtoList[1]['annualAccount'] = x.singlePremium;\r\n      dtoList[2]['annualAccount'] = x.prdCommission;\r\n      dtoList[3]['annualAccount'] = x.generalInsurance;\r\n      dtoList[4]['annualAccount'] = x.otherCommission;\r\n      dtoList[5]['annualAccount'] = x.prdBonus;\r\n      dtoList[6]['annualAccount'] = x.firstYrCommission + x.singlePremium + x.prdCommission + x.generalInsurance + x.otherCommission + x.prdBonus;//total payable commission\r\n      dtoList[7]['annualAccount'] = x.renewalCommission;\r\n      dtoList[8]['annualAccount'] = x.overridingCommission;\r\n      dtoList[9]['annualAccount'] = x.otherNonPayable;\r\n      dtoList[10]['annualAccount'] = x.renewalCommission + x.overridingCommission + x.otherNonPayable;\r\n      dtoList[11]['mtannualAccounthAccount'] = +dtoList[6]['annualAccount'] + +dtoList[10]['annualAccount']\r\n\r\n    });\r\n  }\r\n\r\n\r\n  exportAddMthly(dataList: InsurITXSubWD[], subWD: InsurITXSubWD, dtoList: any[]){\r\n    //mthly\r\n    console.log(\"the lada \", this.incomeTaxInsurForm.get('incomeTaxInsurArrayMthly'));\r\n    (this.incomeTaxInsurForm.get('incomeTaxInsurArrayMthly') as FormArray).controls.forEach((control: AbstractControl) => {\r\n      subWD = {\r\n        yrmth: control.get(\"yrmthReCon\").value,\r\n        firstYrCommission: control.get(\"firstYrCommission\").value,\r\n        singlePremium: control.get(\"singlePremium\").value,\r\n        prdCommission:control.get(\"prdCommission\").value,\r\n        generalInsurance: control.get(\"generalInsurance\").value,\r\n        otherCommission: control.get(\"otherCommission\").value,\r\n        prdBonus: control.get(\"prdBonus\").value,\r\n        renewalCommission: control.get(\"renewalCommission\").value,\r\n        overridingCommission: control.get(\"overridingCommission\").value,\r\n        otherNonPayable: control.get(\"otherNonPayable\").value,\r\n      }\r\n      dataList.push(subWD);\r\n    });\r\n\r\n     dataList.forEach(x=>{\r\n      dtoList[0][x.yrmth] = x.firstYrCommission;\r\n      dtoList[1][x.yrmth] = x.singlePremium;\r\n      dtoList[2][x.yrmth] = x.prdCommission;\r\n      dtoList[3][x.yrmth] = x.generalInsurance;\r\n      dtoList[4][x.yrmth] = x.otherCommission;\r\n      dtoList[5][x.yrmth] = x.prdBonus;\r\n      dtoList[6][x.yrmth] = x.firstYrCommission + x.singlePremium + x.prdCommission + x.generalInsurance + x.otherCommission + x.prdBonus;\r\n      dtoList[7][x.yrmth] = x.renewalCommission;\r\n      dtoList[8][x.yrmth] = x.overridingCommission;\r\n      dtoList[9][x.yrmth] = x.otherNonPayable;\r\n      dtoList[10][x.yrmth] = x.renewalCommission + x.overridingCommission + x.otherNonPayable;\r\n      dtoList[11][x.yrmth] = +dtoList[6][x.yrmth] + +dtoList[10][x.yrmth]\r\n    });\r\n    dtoList[0]['annualAccount'] = this.getSumByField(dataList.map(x=> {return x.firstYrCommission}));\r\n    dtoList[1]['annualAccount'] = this.getSumByField(dataList.map(x=> {return x.singlePremium}));\r\n    dtoList[2]['annualAccount'] = this.getSumByField(dataList.map(x=> {return x.prdCommission}));\r\n    dtoList[3]['annualAccount'] = this.getSumByField(dataList.map(x=> {return x.generalInsurance}));\r\n    dtoList[4]['annualAccount'] = this.getSumByField(dataList.map(x=> {return x.otherCommission}));\r\n    dtoList[5]['annualAccount'] = this.getSumByField(dataList.map(x=> {return x.prdBonus}));\r\n    dtoList[6]['annualAccount'] =  +dtoList[0]['annualAccount'] + +dtoList[1]['annualAccount'] + +dtoList[2]['annualAccount'] + +dtoList[3]['annualAccount'] + +dtoList[4]['annualAccount'] + +dtoList[5]['annualAccount'];//total payable commission\r\n    dtoList[7]['annualAccount'] = this.getSumByField(dataList.map(x=> {return x.renewalCommission}));\r\n    dtoList[8]['annualAccount'] = this.getSumByField(dataList.map(x=> {return x.overridingCommission}));\r\n    dtoList[9]['annualAccount'] = this.getSumByField(dataList.map(x=> {return x.otherNonPayable}));\r\n    dtoList[10]['annualAccount'] = +dtoList[7]['annualAccount'] + +dtoList[8]['annualAccount'] + +dtoList[9]['annualAccount'];\r\n    dtoList[11]['annualAccount'] = +dtoList[6]['annualAccount'] + +dtoList[10]['annualAccount'];\r\n\r\n  }\r\n\r\n  getSumByField(fieldArray: number[]): number{\r\n    const initValue = 0;\r\n    const sum = fieldArray.reduce((accumulator, currentValue) => accumulator + currentValue, initValue);\r\n    return sum;\r\n  }\r\n\r\n    //allows input on need basis\r\n    hasValidAuthorityAndStation(): boolean{\r\n      if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_VERIFIER) &&\r\n        this.station === NSPAY2_STATION.STATION_VERIFICATION){\r\n          return true;\r\n        }\r\n      if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) &&\r\n      this.station === NSPAY2_STATION.STATION_CERTIFICATION) {\r\n        return false;\r\n      }\r\n      if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) &&\r\n      this.station === NSPAY2_STATION.STATION_APPROVAL) {\r\n        return false;\r\n      }\r\n      return false;\r\n    }\r\n\r\n}\r\n","<p-messages severity=\"warn\" *ngIf = \"isWorkingDataTotalPayableNotEqualItemAnnualAmt()\">\r\n    <ng-template key=\"CLM-W014\" pTemplate >\r\n        <div class=\"ml-2\">{{ claimJson.nspay2App.claim.warning['CLM-W014'] }}</div>\r\n    </ng-template>\r\n</p-messages>\r\n<p-messages severity=\"warn\" *ngIf = \"isTradeIncomeMorethanTotalCommision()\">\r\n    <ng-template key=\"CLM-W015\" pTemplate >\r\n        <div class=\"ml-2\">{{ claimJson.nspay2App.claim.warning['CLM-W015'] }}</div>\r\n    </ng-template>\r\n</p-messages>\r\n\r\n\r\n\r\n\r\n<form [formGroup] = \"incomeTaxInsurForm\">\r\n    <div *ngIf = \"currSelectedOption!==undefined\">\r\n        <div formArrayName = \"incomeTaxInsurArrayMthly\">\r\n            <p-table *ngIf = \" incomeTaxInsurForm.controls['captionGroup'].get('radioOption').value==='MTH'; else consolOption\"\r\n\r\n            [value]=\"this.incomeTaxInsurArrayMthly.controls\"\r\n\r\n            [filterDelay]=\"0\"\r\n            [loading] = \"loading\"\r\n            styleClass=\"p-datatable-gridlines p-datatable-striped\"\r\n            responsiveLayout=\"scroll\"\r\n            #mthlyTable\r\n            >\r\n                <ng-template pTemplate=\"header\">\r\n                    <tr>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\" [attr.colspan]=\"this.incomeTaxInsurArrayMthly.controls.length + 1\">\r\n                            <form [formGroup] = \"captionGroup\">\r\n                                <div class=\"grid\">\r\n                                    <div class = \"col-6 nsp-align-left\">\r\n                                        <p-button icon=\"pi pi-file-o\"  (click) = \"exportToCSV(mthlyTable)\" [style]=\"{'margin-left': '.5em', 'margin-right': '.5em'}\"\r\n                                        ></p-button>\r\n                                        <fieldset *ngIf=\"isActive() && !readOnly && hasValidAuthorityAndStation(); else disabledRadio\" [style]=\"{'display':'inline'}\">\r\n                                            <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                <input\r\n                                                id=\"custom-radio\"\r\n                                                class = \"p-radiobutton\"\r\n                                                type=\"radio\"\r\n                                                (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                value=\"MTH\"\r\n                                                formControlName=\"radioOption\"\r\n                                                />\r\n                                                <label class=\"custom-control-label\">Monthly</label>\r\n\r\n                                            </div>\r\n                                            <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                <input\r\n                                                id=\"con-custom-radio\"\r\n                                                class = \"p-radiobutton\"\r\n                                                type=\"radio\"\r\n                                                (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                value=\"CON\"\r\n                                                formControlName=\"radioOption\"\r\n                                                />\r\n                                                <label class=\"custom-control-label\">Consolidated</label>\r\n                                            </div>\r\n                                        </fieldset>\r\n                                        <ng-template #disabledRadio>\r\n                                            <fieldset disabled [style]=\"{'display':'inline'}\">\r\n                                                <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                    <input\r\n                                                    id=\"custom-radio\"\r\n                                                    class = \"p-radiobutton\"\r\n                                                    type=\"radio\"\r\n                                                    (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                    value=\"MTH\"\r\n                                                    formControlName=\"radioOption\"\r\n                                                    />\r\n                                                    <label class=\"custom-control-label\">Monthly</label>\r\n\r\n                                                </div>\r\n                                                <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                    <input\r\n                                                    id=\"con-custom-radio\"\r\n                                                    class = \"p-radiobutton\"\r\n                                                    type=\"radio\"\r\n                                                    (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                    value=\"CON\"\r\n                                                    formControlName=\"radioOption\"\r\n                                                    />\r\n                                                    <label class=\"custom-control-label\">Consolidated</label>\r\n                                                </div>\r\n                                            </fieldset>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                    <p-confirmPopup key = \"confirmWarning\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n\r\n                                    <div class = \"col-6 nsp-align-right\">\r\n                                        <button *ngIf=\"isActive() && !readOnly && hasValidAuthorityAndStation()\" id = \"refreshOtherClaim\" (click)=\"refreshOtherClaim()\"\r\n                                        pButton label=\"Refresh from Other Claim\" [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\"\r\n                                        [disabled] = !enableRefreshOClaim()>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </th>\r\n                    </tr>\r\n                    <tr >\r\n                        <th scope=\"col\">Month/Year</th>\r\n                        <th scope=\"col\" [style]=\"{'text-align': 'center'}\">Annual</th>\r\n                        <th scope=\"col\" [style]=\"{'text-align': 'center'}\" *ngFor=\"let class of incomeTaxInsurArrayMthly.controls\">{{class.value.yrmthReCon}}</th>\r\n                    </tr>\r\n                </ng-template>\r\n                <!-- use matrix otherwise it will not work honestly i have no idea how this even worked-magic -->\r\n                <ng-template pTemplate=\"body\" let-columns = \"cols\" let-rowIndex = \"rowIndex\">\r\n\r\n                    <tr  *ngIf=\"rowIndex== 0\"  >\r\n                        <td>{{ cols[0] }}</td>\r\n                        <td> <div style=\"text-align:right\">\r\n                            {{ getSumOfCurrRow('firstYrCommission') | number : '1.2-2'}} &nbsp;pa\r\n                        </div></td>\r\n                        <!-- *ngIf=\"i + 1!==0\" -->\r\n                        <td *ngFor=\"let data of incomeTaxInsurArrayMthly.controls; let i = index\" [formGroupName] = \"i\">\r\n                            <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"firstYrCommission\"\r\n                            id=\"firstYrCommission\" mode=\"decimal\" [minFractionDigits]=\"2\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelFirstYrCommission\"></p-inputNumber>\r\n                            <ng-template #labelFirstYrCommission>\r\n                                <div style=\"text-align:right\">\r\n                                    {{ data.get('firstYrCommission').value | number : '1.2-2'}}\r\n                                </div>\r\n                            </ng-template>\r\n                        </td>\r\n                    </tr>\r\n                    <tr  *ngIf=\"rowIndex== 1\" >\r\n                        <td>{{ cols[1] }}</td>\r\n                        <td><div style=\"text-align:right\">\r\n                            {{ getSumOfCurrRow('singlePremium') | number : '1.2-2'}} &nbsp;pa\r\n                        </div></td>\r\n                        <!-- *ngIf=\"i + 1!==0\" -->\r\n                        <td  *ngFor=\"let data of incomeTaxInsurArrayMthly.controls; let i = index\" [formGroupName] = \"i\">\r\n                            <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"singlePremium\"\r\n                            id=\"singlePremium\" mode=\"decimal\" [minFractionDigits]=\"2\"   *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelSinglePremium\"></p-inputNumber>\r\n                            <ng-template #labelSinglePremium>\r\n                                <div style=\"text-align:right\">\r\n                                    {{ data.get('singlePremium').value | number : '1.2-2'}}\r\n                                </div>\r\n                            </ng-template>\r\n                        </td>\r\n                    </tr>\r\n                    <tr  *ngIf=\"rowIndex== 2\">\r\n                        <td>{{ cols[2] }}</td>\r\n                        <td><div style=\"text-align:right\">\r\n                            {{ getSumOfCurrRow('prdCommission') | number : '1.2-2'}} &nbsp;pa\r\n                        </div></td>\r\n                        <!-- *ngIf=\"i + 1!==0\" -->\r\n                        <td *ngFor=\"let data of incomeTaxInsurArrayMthly.controls; let i = index\" [formGroupName] = \"i\">\r\n                            <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"prdCommission\"\r\n                            id=\"prdCommission\" mode=\"decimal\" [minFractionDigits]=\"2\"   *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelPrdCommission\"></p-inputNumber>\r\n                            <ng-template #labelPrdCommission>\r\n                                <div style=\"text-align:right\">\r\n                                    {{ data.get('prdCommission').value | number : '1.2-2'}}\r\n                                </div>\r\n                            </ng-template>\r\n                        </td>\r\n                    </tr>\r\n                    <tr  *ngIf=\"rowIndex== 3\">\r\n                        <td style=\"width:200px\">{{ cols[3] }}</td>\r\n                        <td><div style=\"text-align:right\">\r\n                            {{ getSumOfCurrRow('generalInsurance') | number : '1.2-2'}} &nbsp;pa\r\n                        </div></td>\r\n                        <!-- *ngIf=\"i + 1!==0\" -->\r\n                        <td *ngFor=\"let data of incomeTaxInsurArrayMthly.controls; let i = index\" [formGroupName] = \"i\">\r\n                            <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"generalInsurance\"\r\n                            id=\"generalInsurance\" mode=\"decimal\" [minFractionDigits]=\"2\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelGeneralInsurance\"></p-inputNumber>\r\n                            <ng-template #labelGeneralInsurance>\r\n                                <div style=\"text-align:right\">\r\n                                    {{ data.get('generalInsurance').value | number : '1.2-2'}}\r\n                                </div>\r\n                            </ng-template>\r\n                        </td>\r\n                    </tr>\r\n                    <tr  *ngIf=\"rowIndex== 4\">\r\n                        <td style=\"width:200px\">{{ cols[4] }}</td>\r\n                        <td><div style=\"text-align:right\">\r\n                            {{ getSumOfCurrRow('otherCommission') | number : '1.2-2'}} &nbsp;pa\r\n                        </div></td>\r\n                        <!-- *ngIf=\"i + 1!==0\" -->\r\n                        <td *ngFor=\"let data of incomeTaxInsurArrayMthly.controls; let i = index\" [formGroupName] = \"i\">\r\n                            <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"otherCommission\"\r\n                            id=\"otherCommission\" mode=\"decimal\" [minFractionDigits]=\"2\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelOtherCommission\"></p-inputNumber>\r\n                            <ng-template #labelOtherCommission>\r\n                                <div style=\"text-align:right\">\r\n                                    {{ data.get('otherCommission').value | number : '1.2-2'}}\r\n                                </div>\r\n                            </ng-template>\r\n                        </td>\r\n                    </tr>\r\n                    <tr  *ngIf=\"rowIndex== 5\">\r\n                        <td style=\"width:200px\">{{ cols[5] }}</td>\r\n                        <td><div style=\"text-align:right\">\r\n                            {{ getSumOfCurrRow('prdBonus') | number : '1.2-2'}} &nbsp;pa\r\n                        </div></td>\r\n                        <!-- *ngIf=\"i + 1!==0\" -->\r\n                        <td *ngFor=\"let data of incomeTaxInsurArrayMthly.controls; let i = index\" [formGroupName] = \"i\">\r\n                            <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"prdBonus\"\r\n                            id=\"prdBonus\" mode=\"decimal\" [minFractionDigits]=\"2\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelPrdBonus\"></p-inputNumber>\r\n                            <ng-template #labelPrdBonus>\r\n                                <div style=\"text-align:right\">\r\n                                    {{ data.get('prdBonus').value | number : '1.2-2'}}\r\n                                </div>\r\n                            </ng-template>\r\n                        </td>\r\n                    </tr>\r\n                    <tr  *ngIf=\"rowIndex== 6\">\r\n                        <td  style=\"width:200px\">{{ cols[6] }}</td>\r\n                        <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\" ><div style=\"text-align:right\">\r\n                            {{ getSumOfTotalPayable() | number : '1.2-2'}} &nbsp;pa\r\n                        </div></td>\r\n                        <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\" *ngFor=\"let data of incomeTaxInsurArrayMthly.controls; let i = index\" [formGroupName] = \"i\">\r\n                            <div style=\"text-align:right\">\r\n                                {{ getTotalPayableCol(i, incomeTaxInsurArrayMthly) | number : '1.2-2'}}\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr  *ngIf=\"rowIndex== 7\">\r\n                        <td style=\"width:200px\">{{ cols[7] }}</td>\r\n                        <td><div style=\"text-align:right\">\r\n                            {{ getSumOfCurrRow('renewalCommission') | number : '1.2-2'}} &nbsp;pa\r\n                        </div></td>\r\n                        <!-- *ngIf=\"i + 1!==0\" -->\r\n                        <td *ngFor=\"let data of incomeTaxInsurArrayMthly.controls; let i = index\" [formGroupName] = \"i\">\r\n                            <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"renewalCommission\"\r\n                            id=\"renewalCommission\" mode=\"decimal\" [minFractionDigits]=\"2\" *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelRenewalCommission\"></p-inputNumber>\r\n                            <ng-template #labelRenewalCommission>\r\n                                <div style=\"text-align:right\">\r\n                                    {{ data.get('renewalCommission').value | number : '1.2-2'}}\r\n                                </div>\r\n                            </ng-template>\r\n                        </td>\r\n                    </tr>\r\n                    <tr  *ngIf=\"rowIndex== 8\">\r\n                        <td style=\"width:200px\">{{ cols[8] }}</td>\r\n                        <td><div style=\"text-align:right\">\r\n                            {{ getSumOfCurrRow('overridingCommission') | number : '1.2-2'}} &nbsp;pa\r\n                        </div></td>\r\n                        <!-- *ngIf=\"i + 1!==0\" -->\r\n                        <td *ngFor=\"let data of incomeTaxInsurArrayMthly.controls; let i = index\" [formGroupName] = \"i\">\r\n                            <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"overridingCommission\"\r\n                            id=\"overridingCommission\" mode=\"decimal\" [minFractionDigits]=\"2\"   *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelOverridingCommission\"></p-inputNumber>\r\n                            <ng-template #labelOverridingCommission>\r\n                                <div style=\"text-align:right\">\r\n                                    {{ data.get('overridingCommission').value | number : '1.2-2'}}\r\n                                </div>\r\n                            </ng-template>\r\n                        </td>\r\n                    </tr>\r\n                    <tr  *ngIf=\"rowIndex== 9\">\r\n                        <td style=\"width:200px\">{{ cols[9] }}</td>\r\n                        <td><div style=\"text-align:right\">\r\n                            {{ getSumOfCurrRow('otherNonPayable') | number : '1.2-2'}} &nbsp;pa\r\n                        </div></td>\r\n                        <!-- *ngIf=\"i + 1!==0\" -->\r\n                        <td *ngFor=\"let data of incomeTaxInsurArrayMthly.controls; let i = index\" [formGroupName] = \"i\">\r\n                            <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"otherNonPayable\"\r\n                            id=\"otherNonPayable\" mode=\"decimal\" [minFractionDigits]=\"2\"   *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation(); else labelOtherNonPayable\"></p-inputNumber>\r\n                            <ng-template #labelOtherNonPayable>\r\n                                <div style=\"text-align:right\">\r\n                                    {{ data.get('otherNonPayable').value | number : '1.2-2'}}\r\n                                </div>\r\n                            </ng-template>\r\n                        </td>\r\n                    </tr>\r\n                    <tr  *ngIf=\"rowIndex== 10\">\r\n                        <td  style=\"width:200px\">{{ cols[10] }}</td>\r\n                        <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\" ><div style=\"text-align:right\">\r\n                            {{ getSumOfTotalNonPayable() | number : '1.2-2'}} &nbsp;pa\r\n                        </div></td>\r\n                        <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\" *ngFor=\"let data of incomeTaxInsurArrayMthly.controls; let i = index\" [formGroupName] = \"i\">\r\n                            <div style=\"text-align:right\">\r\n                                {{ getTotalNonPayableCol(i, incomeTaxInsurArrayMthly) | number : '1.2-2'}}\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr  *ngIf=\"rowIndex== 11\">\r\n                        <td  style=\"width:200px\">{{ cols[11] }}</td>\r\n                        <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\" ><div style=\"text-align:right\">\r\n                            {{ getSumOfTotalNonPayable() + getSumOfTotalPayable() | number : '1.2-2'}} &nbsp;pa\r\n                        </div></td>\r\n                        <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\" *ngFor=\"let data of incomeTaxInsurArrayMthly.controls; let i = index\" [formGroupName] = \"i\">\r\n                            <div style=\"text-align:right\">\r\n                                {{ getTotalNonPayableCol(i, incomeTaxInsurArrayMthly) + getTotalPayableCol(i, incomeTaxInsurArrayMthly) | number : '1.2-2'}}\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n\r\n                </ng-template>\r\n            </p-table>\r\n\r\n        </div>\r\n        <div formArrayName = \"incomeTaxInsurArrayConsol\">\r\n            <ng-template #consolOption>\r\n                <p-table\r\n                [value]=\"this.incomeTaxInsurArrayConsol.controls\"\r\n                [filterDelay]=\"0\"\r\n                [loading] = \"loading\"\r\n                styleClass=\"p-datatable-gridlines p-datatable-striped\"\r\n                responsiveLayout=\"scroll\"\r\n                #consolTable\r\n                >\r\n                    <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                            <th scope=\"col\"></th>\r\n                            <th scope=\"col\" [attr.colspan]=\"this.incomeTaxInsurArrayConsol.controls.length + 1\">\r\n                                <form [formGroup] = \"captionGroup\">\r\n                                    <div class=\"grid\">\r\n                                        <div class = \"col-6 nsp-align-left\">\r\n                                            <p-button icon=\"pi pi-file-o\"  (click) = \"exportToCSV(consolTable)\" [style]=\"{'margin-left': '.5em', 'margin-right': '.5em'}\" ></p-button>\r\n                                            <fieldset *ngIf=\"isActive() && !readOnly && hasValidAuthorityAndStation(); else disabledRadio\" [style]=\"{'display':'inline'}\">\r\n                                                <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                    <input\r\n                                                    id=\"custom-radio\"\r\n                                                    class = \"p-radiobutton\"\r\n                                                    type=\"radio\"\r\n                                                    (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                    value=\"MTH\"\r\n                                                    formControlName=\"radioOption\"\r\n                                                    />\r\n                                                    <label class=\"custom-control-label\">Monthly</label>\r\n\r\n                                                </div>\r\n                                                <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                    <input\r\n                                                    id=\"con-custom-radio\"\r\n                                                    class = \"p-radiobutton\"\r\n                                                    type=\"radio\"\r\n                                                    (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                    value=\"CON\"\r\n                                                    formControlName=\"radioOption\"\r\n                                                    />\r\n                                                    <label class=\"custom-control-label\">Consolidated</label>\r\n                                                </div>\r\n                                            </fieldset>\r\n                                            <ng-template #disabledRadio>\r\n                                                <fieldset disabled [style]=\"{'display':'inline'}\">\r\n                                                    <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                        <input\r\n                                                        id=\"custom-radio\"\r\n                                                        class = \"p-radiobutton\"\r\n                                                        type=\"radio\"\r\n                                                        (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                        value=\"MTH\"\r\n                                                        formControlName=\"radioOption\"\r\n                                                        />\r\n                                                        <label class=\"custom-control-label\">Monthly</label>\r\n\r\n                                                    </div>\r\n                                                    <div [style]=\"{'display': 'inline','margin-left':'2em'}\">\r\n                                                        <input\r\n                                                        id=\"con-custom-radio\"\r\n                                                        class = \"p-radiobutton\"\r\n                                                        type=\"radio\"\r\n                                                        (click)=\"confirmSwitch($event, 'confirmWarning')\"\r\n                                                        value=\"CON\"\r\n                                                        formControlName=\"radioOption\"\r\n                                                        />\r\n                                                        <label class=\"custom-control-label\">Consolidated</label>\r\n                                                    </div>\r\n                                                </fieldset>\r\n                                            </ng-template>\r\n                                        </div>\r\n                                        <p-confirmPopup key = \"confirmWarning\" header=\"Confirmation\" icon=\"fa fa-question-circle\" width=\"425\"></p-confirmPopup>\r\n\r\n                                        <div class = \"col-6 nsp-align-right\">\r\n                                            <button *ngIf=\"isActive() && !readOnly && hasValidAuthorityAndStation()\" id = \"refreshOtherClaim\" (click)=\"refreshOtherClaim()\" pButton label=\"Refresh from Other Claim\" [style]=\"{'margin-left': '.5em', 'margin-bottom': '.5em'}\"\r\n                                            [disabled] = !enableRefreshOClaim()>\r\n                                        </button>\r\n                                        </div>\r\n                                    </div>\r\n                            </form>\r\n                            </th>\r\n                        </tr>\r\n                        <tr >\r\n                            <th scope=\"col\">Month/Year</th>\r\n                            <th scope=\"col\" [style]=\"{'text-align': 'center'}\">Annual</th>\r\n                            <!-- skip first rowIndex -->\r\n                            <th scope=\"col\" [style]=\"{'text-align': 'center'}\" *ngFor=\"let class of incomeTaxInsurArrayConsol.controls | slice: 1\">{{class.value.yrmthReCon}}</th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <!-- use matrix otherwise it will not work honestly i have no idea how this even worked-magic -->\r\n                        <ng-template pTemplate=\"body\" let-columns = \"cols\" let-rowIndex = \"rowIndex\">\r\n                    <!-- totalled -->\r\n                    <!-- the val;lll {{ incomeTaxInsurArray.controls[0].get('firstYrCommission').value }} -->\r\n                            <tr  *ngIf=\"rowIndex== 0\"  >\r\n                                <td>{{ cols[0] }}</td>\r\n                                <td *ngFor=\"let data of incomeTaxInsurArrayConsol.controls; let i = index\" [formGroupName] = \"i\">\r\n                                    <!-- *ngIf=\"i===0\"  -->\r\n                                    <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"firstYrCommission\"\r\n                                    id=\"firstYrCommission\" mode=\"decimal\" [minFractionDigits]=\"2\" suffix=\" pa\"   *ngIf = \"isActive() && !readOnly  && hasValidAuthorityAndStation() && i===0; else labelConsolFirstYrCommission\"\r\n                                    ></p-inputNumber>\r\n                                    <ng-template #labelConsolFirstYrCommission>\r\n                                        <div style=\"text-align:right\">\r\n                                            {{ data.get('firstYrCommission').value | number : '1.2-2'}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 1\" >\r\n                                <td style=\"width:200px\">{{ cols[1] }}</td>\r\n                                <td  *ngFor=\"let data of incomeTaxInsurArrayConsol.controls; let i = index\" [formGroupName] = \"i\">\r\n                                    <!-- *ngIf=\"i===0\" -->\r\n                                    <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"singlePremium\"\r\n                                    id=\"singlePremium\" mode=\"decimal\" [minFractionDigits]=\"2\" suffix=\" pa\"   *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation()  && i===0; else labelConsolSinglePremium\"></p-inputNumber>\r\n                                    <ng-template #labelConsolSinglePremium>\r\n                                        <div style=\"text-align:right\">\r\n                                            {{ data.get('singlePremium').value | number : '1.2-2'}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 2\">\r\n                                <td style=\"width:200px\">{{ cols[2] }}</td>\r\n                                <td *ngFor=\"let data of incomeTaxInsurArrayConsol.controls; let i = index\" [formGroupName] = \"i\">\r\n                                    <!-- *ngIf=\"i===0\" -->\r\n                                    <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"prdCommission\"\r\n                                    id=\"prdCommission\" mode=\"decimal\" [minFractionDigits]=\"2\" suffix=\" pa\"  *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation()  && i===0; else labelConsolPrdCommission\"></p-inputNumber>\r\n                                    <ng-template #labelConsolPrdCommission>\r\n                                        <div style=\"text-align:right\">\r\n                                            {{ data.get('prdCommission').value | number : '1.2-2'}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 3\">\r\n                                <td style=\"width:200px\">{{ cols[3] }}</td>\r\n                                <td *ngFor=\"let data of incomeTaxInsurArrayConsol.controls; let i = index\" [formGroupName] = \"i\">\r\n                                    <!-- *ngIf=\"i===0\" -->\r\n                                    <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"generalInsurance\"\r\n                                    id=\"generalInsurance\" mode=\"decimal\" [minFractionDigits]=\"2\" suffix=\" pa\"   *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation()  && i===0; else labelConsolGeneralInsurance\"></p-inputNumber>\r\n                                    <ng-template #labelConsolGeneralInsurance>\r\n                                        <div style=\"text-align:right\">\r\n                                            {{ data.get('generalInsurance').value | number : '1.2-2'}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 4\">\r\n                                <td style=\"width:200px\">{{ cols[4] }}</td>\r\n                                <td *ngFor=\"let data of incomeTaxInsurArrayConsol.controls; let i = index\" [formGroupName] = \"i\">\r\n                                    <!-- *ngIf=\"i===0\" -->\r\n                                    <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"otherCommission\"\r\n                                    id=\"otherCommission\" mode=\"decimal\" [minFractionDigits]=\"2\" suffix=\" pa\" *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation()  && i===0; else labelConsolOtherCommission\"></p-inputNumber>\r\n                                    <ng-template #labelConsolOtherCommission>\r\n                                        <div style=\"text-align:right\">\r\n                                            {{ data.get('otherCommission').value | number : '1.2-2'}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 5\">\r\n                                <td style=\"width:200px\">{{ cols[5] }}</td>\r\n                                <td *ngFor=\"let data of incomeTaxInsurArrayConsol.controls; let i = index\" [formGroupName] = \"i\">\r\n                                    <!-- *ngIf=\"i===0\"  -->\r\n                                    <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"prdBonus\"\r\n                                    id=\"prdBonus\" mode=\"decimal\" [minFractionDigits]=\"2\" suffix=\" pa\"  *ngIf = \"isActive() && !readOnly  && hasValidAuthorityAndStation() && i===0; else labelConsolPrdBonus\"></p-inputNumber>\r\n                                    <ng-template #labelConsolPrdBonus>\r\n                                        <div style=\"text-align:right\">\r\n                                            {{ data.get('prdBonus').value | number : '1.2-2'}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 6\">\r\n                                <td  style=\"width:200px\">{{ cols[6] }}</td>\r\n                                <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\" *ngFor=\"let data of incomeTaxInsurArrayConsol.controls; let i = index\" [formGroupName] = \"i\">\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ getTotalPayableCol(i, incomeTaxInsurArrayConsol) | number : '1.2-2'}} <span *ngIf=\"i===0\">&nbsp;pa</span>\r\n                                    </div>\r\n                                </td>\r\n\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 7\">\r\n                                <td style=\"width:200px\">{{ cols[7] }}</td>\r\n                                <td *ngFor=\"let data of incomeTaxInsurArrayConsol.controls; let i = index\" [formGroupName] = \"i\">\r\n                                    <!-- *ngIf=\"i===0\"  -->\r\n                                    <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"renewalCommission\"\r\n                                    id=\"renewalCommission\" mode=\"decimal\" [minFractionDigits]=\"2\" suffix=\" pa\" *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation()  && i===0; else labelConsolPrdBonus\"></p-inputNumber>\r\n                                    <ng-template #labelConsolPrdBonus>\r\n                                        <div style=\"text-align:right\">\r\n                                            {{ data.get('renewalCommission').value | number : '1.2-2'}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 8\">\r\n                                <td style=\"width:200px\">{{ cols[8] }}</td>\r\n                                <td *ngFor=\"let data of incomeTaxInsurArrayConsol.controls; let i = index\" [formGroupName] = \"i\">\r\n                                    <!-- *ngIf=\"i===0\" -->\r\n                                    <p-inputNumber inputStyleClass = \"nsp-align-right\" formControlName = \"overridingCommission\"\r\n                                    id=\"overridingCommission\" mode=\"decimal\" [minFractionDigits]=\"2\" suffix=\" pa\" *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation()  && i===0; else labelConsolOverridingCommission\"></p-inputNumber>\r\n                                    <ng-template #labelConsolOverridingCommission>\r\n                                        <div style=\"text-align:right\">\r\n                                            {{ data.get('overridingCommission').value | number : '1.2-2'}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 9\">\r\n                                <td style=\"width:200px\">{{ cols[9] }}</td>\r\n                                <td *ngFor=\"let data of incomeTaxInsurArrayConsol.controls; let i = index\" [formGroupName] = \"i\">\r\n                                    <!-- *ngIf=\"i===0\" -->\r\n                                    <p-inputNumber  inputStyleClass = \"nsp-align-right\" formControlName = \"otherNonPayable\"\r\n                                    id=\"otherNonPayable\" mode=\"decimal\" [minFractionDigits]=\"2\" suffix=\" pa\" *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation()  && i===0; else labelConsolOtherNonPayable\"></p-inputNumber>\r\n                                    <ng-template #labelConsolOtherNonPayable>\r\n                                        <div style=\"text-align:right\">\r\n                                            {{ data.get('otherNonPayable').value | number : '1.2-2'}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 10\">\r\n                                <td  style=\"width:200px\">{{ cols[10] }}</td>\r\n                                <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\" *ngFor=\"let data of incomeTaxInsurArrayConsol.controls; let i = index\" [formGroupName] = \"i\">\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ getTotalNonPayableCol(i, incomeTaxInsurArrayConsol) | number : '1.2-2'}} <span *ngIf=\"i===0\">&nbsp;pa</span>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr  *ngIf=\"rowIndex== 11\">\r\n                                <td  style=\"width:200px\">{{ cols[11] }}</td>\r\n                                <td [style]=\"{'border-bottom': '2px solid black', 'border-top': '2px solid black'}\" *ngFor=\"let data of incomeTaxInsurArrayConsol.controls; let i = index\" [formGroupName] = \"i\">\r\n                                    <div style=\"text-align:right\">\r\n                                        {{ getTotalNonPayableCol(i, incomeTaxInsurArrayConsol) + getTotalPayableCol(i, incomeTaxInsurArrayConsol) | number : '1.2-2'}} <span *ngIf=\"i===0\">&nbsp;pa</span>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n            </ng-template>\r\n            <div class=\"grid\" style=\"margin-top:1em; margin-left: 220px\">\r\n                <form [formGroup] = \"footerGroup\">\r\n                    <div class = \"col-12 justify-content-start gap-4 flex align-items-center\" >\r\n                        <div>Claim NIP:\r\n                            <p-inputNumber *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation();else labelClaimNip\"\r\n                            [maxlength]=3 [inputStyle]=\"{'width': '5em', 'text-align':'right'}\" formControlName = \"claimNip\"\r\n                            suffix=\"%\">\r\n                            </p-inputNumber>\r\n                            <small *ngIf=\"incomeTaxInsurForm.controls['footerGroup'].get('claimNip')?.touched && !isValidNumber(incomeTaxInsurForm.controls['footerGroup'].get('claimNip')?.value)\"\r\n                            class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V002\"\r\n                            [translateValues]=\"{ field: 'Claim NIP' }\">\r\n                            </small>\r\n                            <ng-template #labelClaimNip>\r\n                                {{  incomeTaxInsurForm.controls['footerGroup'].get('claimNip').value }}%\r\n                            </ng-template>\r\n                        </div>\r\n\r\n                        <div>Proposed NIP: {{ proposedNip }} %</div>\r\n                        <div>Actual NIP:\r\n\r\n                                {{ getActualNip()}}% <span *ngIf = \"!isEmpty(actualNipComputation)\">({{ actualNipComputation }})</span>\r\n\r\n                        </div>\r\n                        <div>Overriding Commission: {{ getOverridingCommPerc() }} %</div>\r\n                    </div>\r\n                    <div class = \"col-12 justify-content-start gap-4 flex align-items-center\" >\r\n                        <div>Total Amount Payable:\r\n                            {{getTotalAmtPayable()}}\r\n                            ({{ getTotalAmtPayableDesc()}})\r\n                    </div>\r\n                    </div>\r\n                    <div class = \"col\" *ngIf = \"isActive() && !readOnly && hasValidAuthorityAndStation()\" >\r\n                        <!-- (click)=\"tester()\" -->\r\n                        <p-button label=\"Copy to Item\"  (click)=\"copyToItem($event)\" [disabled] = \"!enableCopytoItem()\"\r\n                        ></p-button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}