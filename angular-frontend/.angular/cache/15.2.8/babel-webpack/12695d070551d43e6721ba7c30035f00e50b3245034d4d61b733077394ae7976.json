{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ItemDetailsSectionComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst http_1 = require(\"@angular/common/http\");\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst insert_item_dialog_component_1 = require(\"./insert-item-dialog/insert-item-dialog.component\");\nconst operators_1 = require(\"rxjs/operators\");\nconst nspay2_constants_1 = require(\"app/nspay2.constants\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"app/ng-connect\"));\nconst i2 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i3 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i4 = tslib_1.__importStar(require(\"primeng/dynamicdialog\"));\nconst i5 = tslib_1.__importStar(require(\"app/claim/service/claim.service\"));\nconst i6 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i7 = tslib_1.__importStar(require(\"../../service/se-claim.service\"));\nconst i8 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i9 = tslib_1.__importStar(require(\"app/shared/service/formula.service\"));\nconst i10 = tslib_1.__importStar(require(\"app/core/auth/account.service\"));\nconst i11 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/card\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i15 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i16 = tslib_1.__importStar(require(\"primeng/dropdown\"));\nconst i17 = tslib_1.__importStar(require(\"primeng/divider\"));\nconst i18 = tslib_1.__importStar(require(\"../../../../shared/language/translate.directive\"));\nconst i19 = tslib_1.__importStar(require(\"primeng/accordion\"));\nconst i20 = tslib_1.__importStar(require(\"primeng/togglebutton\"));\nfunction ItemDetailsSectionComponent_ng_template_3_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n              \");\n    i0.ɵɵtext(2, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ItemDetailsSectionComponent_ng_template_3_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n              \");\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ItemDetailsSectionComponent_ng_template_3_div_12_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.onOpenInsertEditItem(false, true, null, null));\n    });\n    i0.ɵɵtext(3, \"\\n              \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ItemDetailsSectionComponent_ng_template_3_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n              \");\n    i0.ɵɵelementStart(2, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ItemDetailsSectionComponent_ng_template_3_div_14_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onOpenInsertEditItem(false, false, null, null));\n    });\n    i0.ɵɵtext(3, \"\\n              \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ItemDetailsSectionComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n      \");\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵtext(2, \"\\n        \");\n    i0.ɵɵelementStart(3, \"label\", 7);\n    i0.ɵɵtext(4, \"Item Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n      \");\n    i0.ɵɵelementStart(7, \"div\", 8);\n    i0.ɵɵtext(8, \"\\n          \");\n    i0.ɵɵtemplate(9, ItemDetailsSectionComponent_ng_template_3_div_9_Template, 3, 0, \"div\", 9);\n    i0.ɵɵtext(10, \"\\n\\n          \");\n    i0.ɵɵtext(11, \"\\n          \");\n    i0.ɵɵtemplate(12, ItemDetailsSectionComponent_ng_template_3_div_12_Template, 5, 0, \"div\", 9);\n    i0.ɵɵtext(13, \"\\n          \");\n    i0.ɵɵtemplate(14, ItemDetailsSectionComponent_ng_template_3_div_14_Template, 5, 0, \"div\", 9);\n    i0.ɵɵtext(15, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n    \");\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.currHardCopyDetails == null ? null : ctx_r1.currHardCopyDetails.headerDto == null ? null : ctx_r1.currHardCopyDetails.headerDto.claimOption) === \"2\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.currHardCopyDetails == null ? null : ctx_r1.currHardCopyDetails.headerDto == null ? null : ctx_r1.currHardCopyDetails.headerDto.claimOption) === \"2\" && _r0.selected && ctx_r1.enableNoExistingVRental() && ctx_r1.currHardCopyDetails.occupationCode === ctx_r1.PRIVATE_HIRER_OCCUP_CODE && !ctx_r1.readOnly && ctx_r1.hasValidAuthorityAndStation());\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.currHardCopyDetails == null ? null : ctx_r1.currHardCopyDetails.headerDto == null ? null : ctx_r1.currHardCopyDetails.headerDto.claimOption) !== \"2\" && _r0.selected && !ctx_r1.readOnly && ctx_r1.hasValidAuthorityAndStation());\n  }\n}\nconst _c0 = function () {\n  return {\n    \"margin-right\": \"0.5em\"\n  };\n};\nfunction ItemDetailsSectionComponent_div_7_p_card_4_p_toggleButton_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-toggleButton\", 26);\n  }\n  if (rf & 2) {\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(2, _c0));\n  }\n}\nconst _c1 = function () {\n  return {\n    \"width\": \"15em\"\n  };\n};\nfunction ItemDetailsSectionComponent_div_7_p_card_4_p_dropdown_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-dropdown\", 27);\n  }\n  if (rf & 2) {\n    const item_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c1));\n    i0.ɵɵproperty(\"options\", ctx_r16.getOptionList(item_r13))(\"disabled\", ctx_r16.hasConflictAppClaims);\n  }\n}\nconst _c2 = function () {\n  return {\n    field: \"Item Status\"\n  };\n};\nfunction ItemDetailsSectionComponent_div_7_p_card_4_small_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 28);\n    i0.ɵɵtext(1, \"\\n                            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction0(1, _c2));\n  }\n}\nconst _c3 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nfunction ItemDetailsSectionComponent_div_7_p_card_4_p_button_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 29);\n    i0.ɵɵlistener(\"onClick\", function ItemDetailsSectionComponent_div_7_p_card_4_p_button_27_Template_p_button_onClick_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      const item_r13 = ctx_r25.$implicit;\n      const i_r14 = ctx_r25.index;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.onOpenInsertEditItem(true, false, item_r13.value.claimItemId, i_r14));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c3));\n    i0.ɵɵproperty(\"disabled\", ctx_r18.hasConflictAppClaims && item_r13.get(\"latestStatus\").value === \"PAP\" && (ctx_r18.station === \"S\" || ctx_r18.station === \"A\"));\n  }\n}\nfunction ItemDetailsSectionComponent_div_7_p_card_4_p_button_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 30);\n    i0.ɵɵlistener(\"click\", function ItemDetailsSectionComponent_div_7_p_card_4_p_button_29_Template_p_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const i_r14 = i0.ɵɵnextContext().index;\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r28.deleteItem(i_r14));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(2, _c3));\n  }\n}\nfunction ItemDetailsSectionComponent_div_7_p_card_4_ng_template_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"div\", 31);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n                            \");\n  }\n  if (rf & 2) {\n    const item_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                                    \", ctx_r21.getItemStatusDesc(item_r13.value.latestStatus), \"\\n                                \");\n  }\n}\nfunction ItemDetailsSectionComponent_div_7_p_card_4_div_42_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                                    \");\n    i0.ɵɵelementStart(3, \"th\", 35);\n    i0.ɵɵtext(4, \"Accounting Start\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                                    \");\n    i0.ɵɵelementStart(6, \"th\", 35);\n    i0.ɵɵtext(7, \"Accounting End\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                                    \");\n    i0.ɵɵelementStart(9, \"th\", 35);\n    i0.ɵɵtext(10, \"Annual Income\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n                                    \");\n    i0.ɵɵelementStart(12, \"th\", 35);\n    i0.ɵɵtext(13, \"Approved Amt\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n                                    \");\n    i0.ɵɵelementStart(15, \"th\", 35);\n    i0.ɵɵtext(16, \"Divisor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n                            \");\n  }\n}\nfunction ItemDetailsSectionComponent_div_7_p_card_4_div_42_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n                                \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n                                    \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n                                    \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                                    \");\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n                                    \");\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n                                    \");\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n                                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n                            \");\n  }\n  if (rf & 2) {\n    const innerItem_r35 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(innerItem_r35.value.acctgStartDate);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(innerItem_r35.value.acctgEndDate);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(11, 5, innerItem_r35.value.annualIncome, \"1.2-2\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(15, 8, innerItem_r35.value.apprAmt, \"1.2-2\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(innerItem_r35.value.acctgDivisor);\n  }\n}\nfunction ItemDetailsSectionComponent_div_7_p_card_4_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n                        \");\n    i0.ɵɵelement(2, \"p-divider\");\n    i0.ɵɵtext(3, \"\\n                        \");\n    i0.ɵɵelementStart(4, \"div\", 32);\n    i0.ɵɵtext(5, \"\\n                        \");\n    i0.ɵɵelementStart(6, \"p-table\", 33);\n    i0.ɵɵtext(7, \"\\n                            \");\n    i0.ɵɵtemplate(8, ItemDetailsSectionComponent_div_7_p_card_4_div_42_ng_template_8_Template, 19, 0, \"ng-template\", 2);\n    i0.ɵɵtext(9, \"\\n                            \");\n    i0.ɵɵtemplate(10, ItemDetailsSectionComponent_div_7_p_card_4_div_42_ng_template_10_Template, 21, 11, \"ng-template\", 34);\n    i0.ɵɵtext(11, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n                    \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"value\", ctx_r22.getTable(item_r13))(\"loading\", ctx_r22.loading);\n  }\n}\nconst _c4 = function () {\n  return {\n    \"width\": \"100%\"\n  };\n};\nfunction ItemDetailsSectionComponent_div_7_p_card_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-card\", 14);\n    i0.ɵɵtext(1, \"\\n                    \");\n    i0.ɵɵelementStart(2, \"div\", 15);\n    i0.ɵɵtext(3, \"\\n                        \");\n    i0.ɵɵelementStart(4, \"div\", 16);\n    i0.ɵɵtext(5, \"\\n                                \");\n    i0.ɵɵtemplate(6, ItemDetailsSectionComponent_div_7_p_card_4_p_toggleButton_6_Template, 1, 3, \"p-toggleButton\", 17);\n    i0.ɵɵtext(7, \"\\n                                \");\n    i0.ɵɵelementStart(8, \"div\", 18)(9, \"b\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(11, \"\\n                                \");\n    i0.ɵɵelementStart(12, \"div\", 18);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\n                                \");\n    i0.ɵɵelementStart(16, \"div\", 18);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\n                            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \"\\n                        \");\n    i0.ɵɵelementStart(20, \"div\", 19);\n    i0.ɵɵtext(21, \"\\n                            \");\n    i0.ɵɵtext(22, \"\\n                            \");\n    i0.ɵɵtemplate(23, ItemDetailsSectionComponent_div_7_p_card_4_p_dropdown_23_Template, 1, 5, \"p-dropdown\", 20);\n    i0.ɵɵtext(24, \"\\n                            \");\n    i0.ɵɵtemplate(25, ItemDetailsSectionComponent_div_7_p_card_4_small_25_Template, 2, 2, \"small\", 21);\n    i0.ɵɵtext(26, \"\\n                            \");\n    i0.ɵɵtemplate(27, ItemDetailsSectionComponent_div_7_p_card_4_p_button_27_Template, 1, 4, \"p-button\", 22);\n    i0.ɵɵtext(28, \"\\n                            \");\n    i0.ɵɵtemplate(29, ItemDetailsSectionComponent_div_7_p_card_4_p_button_29_Template, 1, 3, \"p-button\", 23);\n    i0.ɵɵtext(30, \"\\n                            \");\n    i0.ɵɵtemplate(31, ItemDetailsSectionComponent_div_7_p_card_4_ng_template_31_Template, 4, 1, \"ng-template\", null, 24, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(33, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(34, \"\\n\\n                        \");\n    i0.ɵɵelementStart(35, \"div\", 25);\n    i0.ɵɵtext(36, \"\\n                            \");\n    i0.ɵɵelementStart(37, \"div\");\n    i0.ɵɵtext(38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(39, \"\\n                        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(40, \"\\n                    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(41, \"\\n                    \");\n    i0.ɵɵtemplate(42, ItemDetailsSectionComponent_div_7_p_card_4_div_42_Template, 14, 2, \"div\", 9);\n    i0.ɵɵtext(43, \"\\n                \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r13 = ctx.$implicit;\n    const i_r14 = ctx.index;\n    const _r20 = i0.ɵɵreference(32);\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    let tmp_8_0;\n    let tmp_10_0;\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(18, _c4));\n    i0.ɵɵproperty(\"formGroupName\", i_r14);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", item_r13.value.itemType === \"ITX\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r13.value.itemName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Appr Amt: \", i0.ɵɵpipeBind2(14, 15, item_r13.value.apprAmt, \"1.2-2\"), \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\"Formula: \", item_r13.value.formulaCode, \" \", ctx_r12.getCodeDesc(item_r13.value.formulaCode), \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r12.readOnly && (item_r13.get(\"displayType\") && item_r13.get(\"displayType\").value === \"dropdown\" || !item_r13.get(\"displayType\") || item_r13.get(\"edited\").value && item_r13.get(\"closedInd\").value === 1 || item_r13.get(\"edited\").value && item_r13.get(\"approveInd\").value === 1))(\"ngIfElse\", _r20);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_8_0 = item_r13.get(\"latestStatus\")) == null ? null : tmp_8_0.touched) && ((tmp_8_0 = item_r13.get(\"latestStatus\")) == null ? null : tmp_8_0.hasError(\"required\")));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.hasEditButton(item_r13));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r12.otherSEItemArr.controls[i_r14] == null ? null : (tmp_10_0 = ctx_r12.otherSEItemArr.controls[i_r14].get(\"claimItemId\")) == null ? null : tmp_10_0.value));\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate1(\"Computation: \", item_r13.value.computedFormula, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !item_r13.value.collapseCard);\n  }\n}\nfunction ItemDetailsSectionComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵelementStart(2, \"div\", 12);\n    i0.ɵɵtext(3, \"\\n                \");\n    i0.ɵɵtemplate(4, ItemDetailsSectionComponent_div_7_p_card_4_Template, 44, 19, \"p-card\", 13);\n    i0.ɵɵtext(5, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n        \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.otherSEItemArr.controls);\n  }\n}\nfunction ItemDetailsSectionComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n            \");\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵelement(2, \"i\", 36);\n    i0.ɵɵtext(3, \"\\n                No records found.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n         \");\n  }\n}\nclass ItemDetailsSectionComponent {\n  constructor(codeService, ns2Http, formBuilder, dialogService, claimService, toastService, seClaimService, dateUtilsService, formulaService, accountService) {\n    this.codeService = codeService;\n    this.ns2Http = ns2Http;\n    this.formBuilder = formBuilder;\n    this.dialogService = dialogService;\n    this.claimService = claimService;\n    this.toastService = toastService;\n    this.seClaimService = seClaimService;\n    this.dateUtilsService = dateUtilsService;\n    this.formulaService = formulaService;\n    this.accountService = accountService;\n    this.itemStatusChanges = new Map();\n    //if any of the claim item was initially PAP, will hold true, and will allow certain fields/functions during approval stage to be enabled\n    this.hasInitialPAPItem = false;\n    // @Input() restDay:any[];\n    this.selectedChange = new core_1.EventEmitter();\n    this.PRIVATE_HIRER_OCCUP_CODE = '230';\n    this.displayDialog = false;\n    this.itemForm = this.formBuilder.group({\n      otherSEItemArr: this.formBuilder.array([])\n    });\n    this.recomputeMatchedAttdEvent = new core_1.EventEmitter();\n    this.disallowedItemNames = ['overall'];\n    this.VEHICLE_RENTAL = \"VEHICLE RENTAL\";\n    this.PEND_VERIFY_STATUS = \"PVE\";\n    this.SE_CLAIM_TYPE = 'S';\n    this.loading = false;\n    this.itemTable = [];\n    this.formula = \"1a Cal D (d)\";\n    this.claimOption = \"\";\n    this.existingVehicleRentalItem = false;\n    this.vehicleItemList = [];\n    this.nonVehicleItemList = [];\n    this.claimFormulaOption = [];\n    this.formulaList = [];\n    this.defaultOptionList = [];\n    this.editableSEItemStatusList = [];\n    this.optionListMap = new Map();\n    this.itemStatusList = [{\n      name: 'PEND VERIFY',\n      key: 'PVE'\n    }, {\n      name: 'PEND CERTIFY',\n      key: 'PCE'\n    }, {\n      name: 'CLOSED (REJECT)',\n      key: 'COR'\n    }, {\n      name: 'CLOSED (NSM REQ)',\n      key: 'CNS'\n    }, {\n      name: 'CLOSED (COY REQ)',\n      key: 'CCO'\n    }];\n    this.accountService.identity().subscribe(account => {\n      this.currentAccount = this.copyAccount(account);\n    });\n  }\n  ngOnInit() {\n    console.log(\"init item details section\");\n    this.retrieveItemStatusMap();\n    this.retrieveFormulaList();\n    this.getDefaultOptionList();\n    this.getEditableSEItemStatus();\n  }\n  copyAccount(account) {\n    return {\n      email: account.email,\n      firstName: account.firstName,\n      lastName: account.lastName,\n      login: account.username,\n      authorities: account.authorities,\n      groups: account.groups,\n      subjectId: account.subjectId\n    };\n  }\n  // ngAfterViewChecked(): void {\n  //   this.itemForm.valueChanges.subscribe(change => {\n  //     console.log(\"valuechange item details\", change);\n  //     this.saveSEClaimRequest.itemDetailsSectionInd = true;\n  //   });\n  // }\n  getEditableSEItemStatus() {\n    const params = new http_1.HttpParams();\n    this.seClaimService.retrieveEditableSEItemStatus({\n      params\n    }).subscribe(resp => {\n      if (resp.status === 200 && resp.body.data) {\n        this.editableSEItemStatusList = resp.body.data;\n        console.log(\"the editable item status\", this.editableSEItemStatusList);\n      }\n    }, error => {\n      console.log(\"error is\" + String(error?.error?.error_desc));\n      this.toastService.error(String(error?.error?.error_desc));\n    });\n  }\n  hasEditButton(item) {\n    //for verifier\n    if (this.station === 'V') {\n      return this.editableSEItemStatusList.includes(item.get('latestStatus').value) && !this.readOnly && this.hasValidAuthorityAndStation();\n    } else if (this.station === \"S\" || this.station === \"A\") {\n      return item.get('latestStatus').value === \"PAP\" || item.get('latestStatus').value === \"RAP\";\n    }\n    return false;\n  }\n  get otherSEItemArr() {\n    return this.itemForm.get('otherSEItemArr');\n  }\n  populateRequestWithItemDetailsSectionChanges() {\n    this.otherSEItemArr.controls.forEach(otherSEItem => {\n      const otherSEItemDto = this.mapItemDetailToDto(otherSEItem);\n      if (this.saveSEClaimRequest.itemDetailsSectionList === undefined) {\n        this.saveSEClaimRequest.itemDetailsSectionList = [otherSEItemDto];\n      } else {\n        this.saveSEClaimRequest.itemDetailsSectionList.push(otherSEItemDto);\n      }\n    });\n  }\n  mapItemDetailToDto(item) {\n    console.log(\"other Se item\", item);\n    const itemDetailDto = {\n      id: item.get('claimItemId')?.value,\n      claimId: this.currHardCopyDetails.claimId,\n      itemName: item.get('itemName').value,\n      claimType: this.SE_CLAIM_TYPE,\n      itemType: item.get('itemType').value,\n      apprAmt: item.get('apprAmt').value,\n      apprBasis: item.get('apprBasis').value,\n      formulaCode: item.get('formulaCode').value,\n      computedFormula: item.get('computedFormula').value,\n      computedAmt: item.get('computedAmt').value,\n      latestStatus: item.get('latestStatus').value\n    };\n    if (item.get('itemType').value === 'ITX') {\n      itemDetailDto.acctgStartDate = item.get('otherSEItemTableArr').controls[0].get('acctgStartDate').value;\n      itemDetailDto.acctgEndDate = item.get('otherSEItemTableArr').controls[0].get('acctgEndDate').value;\n      itemDetailDto.annualIncome = item.get('otherSEItemTableArr').controls[0].get('annualIncome').value;\n      itemDetailDto.acctgDivisor = item.get('otherSEItemTableArr').controls[0].get('acctgDivisor').value;\n    }\n    return itemDetailDto;\n  }\n  //default for all inserts\n  getItemType() {\n    // const claimOption = this.currHardCopyDetails?.headerDto?.claimOption;\n    // return claimOption===2? \"ITX\": claimOption===1? \"AVE\": claimOption===3? \"REP\" : \"ITX\";\n    return \"SEO\";\n  }\n  constructForm() {\n    this.retrieveSEItems();\n  }\n  retrieveItemStatusMap() {\n    this.claimService.retrieveItemStatusMap(null).subscribe(resp => {\n      if (resp.status === 200 && resp.body.data) {\n        this.fullItemStatusMap = new Map(Object.entries(resp.body.data));\n      }\n    }, error => {\n      console.log(\"error is\" + String(error?.error?.error_desc));\n      this.toastService.error(String(error?.error?.error_desc));\n    });\n  }\n  getItemStatusDesc(code) {\n    return this.fullItemStatusMap.get(code).toUpperCase();\n  }\n  loadCodes(codeType, codeId) {\n    this.codeService.get(codeType, codeId).subscribe(code => {\n      this.claimOption = code?.label['en-US'];\n    });\n  }\n  includesIn(key, itemStatusList) {\n    const statusKeyList = itemStatusList.map(x => x.key);\n    return statusKeyList.includes(key);\n  }\n  ngOnChanges(changes) {\n    if (changes['seHardCopyDetails']?.currentValue) {\n      console.log(\"changes to hardcopy details\");\n      this.currHardCopyDetails = changes['seHardCopyDetails'].currentValue;\n      this.loadCodes('claim_option_long', this.currHardCopyDetails?.headerDto?.claimOption);\n      this.constructForm();\n      // console.log(\"the aka restday\", this.currHardCopyDetails.restDayList);\n      // this.retrieveFormulaList();\n    }\n\n    if (changes['totalAmtPay']?.currentValue) {\n      const totalAmtPay = changes['totalAmtPay'].currentValue;\n      console.log(\"the external total amt pay\", totalAmtPay);\n      console.log(this.otherSEItemArr.controls);\n      this.updateApprAmountAndRecompute(totalAmtPay);\n    }\n    // if(changes['restDay']?.currentValue) {\n    //   console.log(\"the aka restday\", this.restDay)\n    //   this.retrieveFormulaList();\n    // }\n    // this.itemForm.valueChanges.subscribe(change => {\n    //   console.log(\"valuechange item details\", change);\n    //   this.saveSEClaimRequest.itemDetailsSectionInd = true;\n    // });\n  }\n\n  testerdate() {\n    console.log(\"the aka restday\", this.currHardCopyDetails.restDayList);\n  }\n  // retrieveSEItems():void{\n  //   let params = new HttpParams();\n  //   params = params.append(\"claimId\",this.currHardCopyDetails?.claimId);\n  //   this.seClaimService.retrieveClaimItems({params}).subscribe((resp:any) => {\n  //     if(resp){\n  //         if(resp.status === 200 && resp.body.data){\n  //           this.setClaimItems(resp.body.data);\n  //         }\n  //       }\n  //     },\n  //     (error: any) => {\n  //       console.log(\"error is\" + String(error?.error?.error_desc));\n  //       this.toastService.error(String(error?.error?.error_desc));\n  //     });\n  // }\n  // this.weeklyIndCodeType = codes[0].map((x:CodeView)=> {\n  //   return {name:x.label['en-US'], code: x.codeId}\n  // });\n  retrieveSEItems() {\n    let params = new http_1.HttpParams();\n    params = params.append(\"claimId\", this.currHardCopyDetails?.claimId);\n    this.seClaimService.retrieveClaimItems({\n      params\n    }).pipe((0, operators_1.switchMap)(itemResp => {\n      const item = itemResp.body.data;\n      if (itemResp.body.data) {\n        this.hasInitialPAPItem = itemResp.body.data.filter(x => x.latestStatus === 'PAP').length > 0;\n      }\n      item.sort((a, b) => {\n        if (a.itemType === 'AVE' && this.currHardCopyDetails?.headerDto?.claimOption === '1' || a.itemType === 'ITX' && this.currHardCopyDetails?.headerDto?.claimOption === '2' || a.itemType === 'REP' && this.currHardCopyDetails?.headerDto?.claimOption === '3') {\n          return -1;\n        } else if (b.itemType === 'AVE' && this.currHardCopyDetails?.headerDto?.claimOption === '1' || b.itemType === 'ITX' && this.currHardCopyDetails?.headerDto?.claimOption === '2' || b.itemType === 'REP' && this.currHardCopyDetails?.headerDto?.claimOption === '3') {\n          return 1;\n        } else {\n          return a.itemName < b.itemName ? -1 : 1;\n        }\n      });\n      return item;\n    }), (0, operators_1.mergeMap)(item => {\n      console.log(\"latest status \", item.latestStatus);\n      params = new http_1.HttpParams();\n      params = params.append(\"itemStatus\", item.latestStatus);\n      params = params.append(\"claimType\", 'S');\n      params = params.append(\"station\", this.station);\n      //edge case for latestStatus = PAP with unedited item\n      if (item.latestStatus === \"PAP\" && (this.station === \"S\" || this.station === 'A')) {\n        params = params.append(\"itemAmtChangeInd\", 0);\n      }\n      return this.claimService.retrieveDropDownItemStatus({\n        params\n      }).pipe((0, operators_1.map)(dropDownResp => {\n        return {\n          item,\n          dropDownResp\n        };\n      }));\n    }), (0, operators_1.tap)({\n      complete: () => this.onCompleteMergeMap()\n    })).subscribe(resp => {\n      if (resp) {\n        this.addClaimItem(resp.item, resp.dropDownResp.body.data);\n      }\n    });\n  }\n  onCompleteMergeMap() {\n    console.log('finished merge map');\n    this.constructDisallowedItemNames();\n    this.initItemStatusMap();\n    this.itemForm.valueChanges.subscribe(change => {\n      console.log(\"valuechange item details\", change);\n      this.saveSEClaimRequest.itemDetailsSectionInd = true;\n    });\n    this.otherSEItemArr.valueChanges.subscribe(change => {\n      this.constructDisallowedItemNames();\n      this.updateItemStatusMap();\n    });\n  }\n  constructDisallowedItemNames() {\n    const remainingDisAllIN = this.otherSEItemArr.controls.map(x => {\n      return String(x.get(\"itemName\").value);\n    });\n    this.disallowedItemNames = ['overall'].concat(remainingDisAllIN);\n  }\n  initItemStatusMap() {\n    this.otherSEItemArr.controls.forEach(x => {\n      this.itemStatusChanges.set(x.get(\"claimItemId\").value, {\n        beforeStatus: x.get('latestStatus').value,\n        afterStatus: null\n      });\n    });\n  }\n  updateItemStatusMap() {\n    this.otherSEItemArr.controls.forEach(x => {\n      const statusVal = this.itemStatusChanges.get(x.get(\"claimItemId\").value);\n      statusVal['afterStatus'] = x.get('latestStatus').value;\n      this.itemStatusChanges.set(x.get(\"claimItemId\").value, statusVal);\n    });\n    console.log(\"updated map\", this.itemStatusChanges);\n  }\n  addClaimItem(itemData, dropdownData) {\n    console.log(\"adding claim item\");\n    this.optionListMap.set(itemData.id, dropdownData.itemStatusDropdown?.map(x => {\n      return {\n        name: x.statusDesc.toUpperCase(),\n        key: x.statusCode\n      };\n    }));\n    this.otherSEItemArr.push(this.formBuilder.group({\n      collapseCard: true,\n      apprAmt: itemData.apprAmt,\n      itemName: itemData.itemName,\n      formulaCode: itemData.formulaCode,\n      latestStatus: itemData.latestStatus,\n      latestStatusDesc: itemData.latestStatusDesc,\n      claimItemId: itemData.id,\n      apprBasis: itemData.apprBasis,\n      itemType: itemData.itemType,\n      computedFormula: itemData.computedFormula,\n      computedAmt: itemData.computedAmt,\n      otherSEItemTableArr: itemData.itemType === 'ITX' ? new forms_1.FormArray([this.addTableGroup(itemData)]) : null,\n      displayType: this.getItemStatusDisplayType(dropdownData.type, itemData.latestStatus),\n      closedInd: itemData.closedInd,\n      approveInd: itemData.approveInd,\n      edited: false\n    }));\n  }\n  getItemStatusDisplayType(type, itemStatus) {\n    if (this.handleEdgeCaseForFirstApprover(itemStatus)) {\n      return \"label\";\n    }\n    return type;\n  }\n  //if the current user is the  first approver, display the itemstatus as a label\n  handleEdgeCaseForFirstApprover(itemStatus) {\n    return this.currentAccount.subjectId === this.currHardCopyDetails.lastFirstApprover && itemStatus === 'P2A';\n  }\n  //Pend verify as default option\n  getDefaultOptionList() {\n    let params = new http_1.HttpParams();\n    params = params.append(\"itemStatus\", 'PVE');\n    params = params.append(\"claimType\", 'S');\n    params = params.append(\"station\", 'V');\n    this.claimService.retrieveDropDownItemStatus({\n      params\n    }).subscribe(resp => {\n      if (resp.body.data) {\n        this.defaultOptionList = resp.body.data.itemStatusDropdown.map(x => {\n          return {\n            key: x.statusCode,\n            name: x.statusDesc.toUpperCase()\n          };\n        });\n      }\n    });\n  }\n  tester() {\n    console.log(\"full ctrl\", this.otherSEItemArr.controls);\n  }\n  getOptionList(item) {\n    let optionList = [];\n    optionList = item.get('claimItemId')?.value && (item.get('closedInd')?.value === 1 && item.get('edited')?.value || item.get('approveInd')?.value === 1 && item.get('edited')?.value) ? this.defaultOptionList : this.optionListMap.get(item.get('claimItemId')?.value) || this.defaultOptionList;\n    return optionList;\n  }\n  enableNoExistingVRental() {\n    return this.otherSEItemArr.controls.filter(x => x.value.itemName === this.VEHICLE_RENTAL).length === 0;\n  }\n  retrieveFormulaList() {\n    let params = new http_1.HttpParams();\n    params = params.append(\"claimType\", this.SE_CLAIM_TYPE);\n    if (this.currHardCopyDetails?.restDayList) {\n      params = params.append(\"restDayInd\", 1);\n    }\n    this.claimService.retrieveFormulaList({\n      params\n    }).subscribe(resp => {\n      if (resp.status === 200 && resp.body.data) {\n        const sortedData = resp.body.data.sort(this.sortFormulaListByCode());\n        sortedData.forEach(x => {\n          this.formulaList.push({\n            name: x.formulaDesc,\n            key: x.formulaCode\n          });\n        });\n      }\n    }, error => {\n      console.log(\"error is\" + String(error?.error?.error_desc));\n      this.toastService.error(String(error?.error?.error_desc));\n    });\n  }\n  sortFormulaListByCode() {\n    const regex = \"^([0-9]*)([a-zA-Z])$\";\n    return function (a, b) {\n      //sort by number then alphabet\n      const aNum = Number(a.formulaCode.trim().match(regex)[1]);\n      const bNum = Number(b.formulaCode.trim().match(regex)[1]);\n      const aAlpha = a.formulaCode.trim().match(regex)[2];\n      const bAlpha = b.formulaCode.trim().match(regex)[2];\n      if (aNum === bNum) {\n        return aAlpha < bAlpha ? -1 : 1;\n      }\n      return aNum < bNum ? -1 : 1;\n    };\n  }\n  getCodeDesc(formulaCode) {\n    const rslt = this.formulaList.find(x => x.key.trim() === formulaCode.trim());\n    return rslt?.name;\n  }\n  getTable(fa) {\n    return fa.controls['otherSEItemTableArr'].controls;\n  }\n  addTableGroup(data) {\n    return this.formBuilder.group({\n      acctgStartDate: data.acctgStartDate,\n      acctgEndDate: data.acctgEndDate,\n      annualIncome: data.annualIncome,\n      acctgDivisor: data.acctgDivisor,\n      apprAmt: data.apprAmt\n    });\n  }\n  //if edit = true, insert = false\n  onOpenInsertEditItem(edit, vehicleRental, claimItemId, index) {\n    this.displayDialog = true;\n    let apprAmt = 0;\n    let itemName = \"\";\n    let formulaCode = \"\";\n    let latestStatus = \"\";\n    let apprBasis = \"\";\n    let itemType = \"\";\n    let computedFormula = \"\";\n    let computedAmt = 0;\n    let acctgStartDate;\n    let acctgEndDate;\n    let annualIncome = 0;\n    let acctgDivisor = 0;\n    const restDayList = this.currHardCopyDetails.restDayList?.map(ea => {\n      return this.dateUtilsService.convertDateToStr(this.dateUtilsService.convertStrToDate(ea, \"DD-MM-YYYY\"), \"YYYY-MM-DD\");\n    });\n    console.log(\"index is \", index);\n    console.log(\"claim item id\", claimItemId);\n    if (edit && index !== null && index !== undefined) {\n      apprAmt = this.otherSEItemArr.controls[index].get('apprAmt').value;\n      itemName = this.otherSEItemArr.controls[index].get('itemName').value;\n      formulaCode = this.otherSEItemArr.controls[index].get('formulaCode').value;\n      latestStatus = this.otherSEItemArr.controls[index].get('latestStatus').value;\n      apprBasis = this.otherSEItemArr.controls[index].get('apprBasis').value;\n      itemType = this.otherSEItemArr.controls[index].get('itemType').value;\n      computedFormula = this.otherSEItemArr.controls[index].get('computedFormula').value;\n      computedAmt = this.otherSEItemArr.controls[index].get('computedAmt').value;\n      if (itemType === 'ITX') {\n        const innerTblArr = this.otherSEItemArr.controls[index].get('otherSEItemTableArr');\n        acctgStartDate = innerTblArr.controls[0].get('acctgStartDate').value;\n        acctgEndDate = innerTblArr.controls[0].get('acctgEndDate').value;\n        annualIncome = innerTblArr.controls[0].get('annualIncome').value;\n        acctgDivisor = this.getDivisor(this.dateUtilsService.convertStrToDate(acctgStartDate, \"DD-MM-YYYY\"), this.dateUtilsService.convertStrToDate(acctgEndDate, \"DD-MM-YYYY\"));\n      }\n    }\n    const ref = this.dialogService.open(insert_item_dialog_component_1.InsertItemDialogComponent, {\n      header: \"Item Details\",\n      width: '40vw',\n      data: {\n        vehicleRental,\n        edit,\n        claimItemId,\n        index,\n        apprAmt,\n        itemName,\n        formulaCode,\n        latestStatus,\n        apprBasis,\n        itemType,\n        computedFormula,\n        computedAmt,\n        claimId: this.currHardCopyDetails.claimId,\n        claimOption: this.currHardCopyDetails?.headerDto?.claimOption,\n        trgStartDte: this.currHardCopyDetails?.trgStartDte,\n        trgEndDte: this.currHardCopyDetails?.trgEndDte,\n        occupationCode: this.currHardCopyDetails.occupationCode,\n        acctgStartDate,\n        acctgEndDate,\n        annualIncome,\n        acctgDivisor,\n        disallowedItemNames: this.disallowedItemNames,\n        restDay: restDayList,\n        commencementDte: this.currHardCopyDetails.commencementDte\n      },\n      contentStyle: {\n        \"padding-left\": \"2em\",\n        \"padding-right\": \"2em\",\n        'max-height': '78vh',\n        overflow: 'auto'\n      },\n      baseZIndex: 10000\n    });\n    ref.onClose.subscribe(req => {\n      this.displayDialog = false;\n      // let params = new HttpParams();\n      if (req) {\n        console.log(\"outer req\", req);\n        this.onUpdateSubmit(req, index);\n        //create itemtype if not available\n        console.log(\"finish\", this.otherSEItemArr.controls[index].get('computedFormula').value);\n      }\n    });\n  }\n  //for frontend update submit from insert-item-dialog only, not saved yet\n  onUpdateSubmit(req, index) {\n    //create itemtype if not available\n    //if newly created item default is SEO\n    req.itemType = req.itemType ? req.itemType : this.getItemType();\n    if (req.edit && index !== null && index !== undefined) {\n      this.otherSEItemArr.controls[index].get('edited').setValue(true);\n      this.otherSEItemArr.controls[index].get('apprBasis').setValue(req.apprBasis);\n      this.otherSEItemArr.controls[index].get('apprAmt').setValue(req.apprAmt);\n      this.otherSEItemArr.controls[index].get('formulaCode').setValue(req.formulaCode);\n      this.otherSEItemArr.controls[index].get('computedFormula').setValue(req.computedFormula);\n      this.otherSEItemArr.controls[index].get('computedAmt').setValue(req.computedAmt);\n      //if existing status is of closed type or approved type, after edit set to pend verify option in pend verify scenario\n      if (this.otherSEItemArr.controls[index].get('closedInd').value === 1 || this.otherSEItemArr.controls[index].get('approveInd').value === 1) {\n        this.otherSEItemArr.controls[index].get('latestStatus').setValue(this.PEND_VERIFY_STATUS);\n      }\n      //for PAP during approval stage and there were changes and saved\n      //requires 2nd approval now, recall options dropdown from retrieve item status dropdown\n      if ((this.station === \"A\" || this.station === \"S\") && this.itemStatusChanges.get(req.id).beforeStatus === \"PAP\") {\n        console.log(\"reinitializing item status dropdown after editing item for PAP\");\n        let params = new http_1.HttpParams();\n        params = params.append(\"itemStatus\", this.itemStatusChanges.get(req.id).beforeStatus);\n        params = params.append(\"claimType\", 'S');\n        params = params.append(\"station\", this.station);\n        params = params.append('itemAmtChangeInd', 1);\n        this.claimService.retrieveDropDownItemStatus({\n          params\n        }).subscribe(resp => {\n          if (resp.body.data) {\n            this.optionListMap.set(req.id, resp.body.data.itemStatusDropdown?.map(x => {\n              return {\n                name: x.statusDesc.toUpperCase(),\n                key: x.statusCode\n              };\n            }));\n            // this.defaultOptionList = resp.body.data.itemStatusDropdown.map((x:any)=>{\n            //   return {\n            //     key: x.statusCode,\n            //     name: x.statusDesc.toUpperCase()\n            //   }\n            // });\n          }\n        });\n      }\n\n      this.recompute(this.otherSEItemArr.controls[index]);\n      if (req.itemType === 'ITX') {\n        const innerTblArr = this.otherSEItemArr.controls[index].get('otherSEItemTableArr');\n        innerTblArr.controls[0].get('acctgStartDate').setValue(req.acctgStartDate);\n        innerTblArr.controls[0].get('acctgEndDate').setValue(req.acctgEndDate);\n        innerTblArr.controls[0].get('annualIncome').setValue(req.annualIncome);\n        innerTblArr.controls[0].get('acctgDivisor').setValue(req.acctgDivisor);\n        innerTblArr.controls[0].get('apprAmt').setValue(req.apprAmt);\n      }\n    } else {\n      // if newly created\n      console.log(\"im here\");\n      this.otherSEItemArr.push(this.formBuilder.group({\n        collapseCard: true,\n        apprAmt: req.apprAmt,\n        itemName: req.itemName,\n        formulaCode: req.formulaCode,\n        latestStatus: this.PEND_VERIFY_STATUS,\n        apprBasis: req.apprBasis,\n        itemType: req.itemType,\n        computedFormula: \"\",\n        computedAmt: 0\n      }));\n      this.recompute(this.otherSEItemArr.controls[this.otherSEItemArr.length - 1]);\n    }\n  }\n  getDivisor(acctgStartDate, acctgEndDate) {\n    let difference = 0;\n    if (acctgStartDate && acctgEndDate) {\n      difference = acctgEndDate.getTime() - acctgStartDate.getTime();\n    }\n    return Math.ceil(difference / (1000 * 3600 * 24));\n  }\n  deleteItem(index) {\n    this.otherSEItemArr.removeAt(index);\n  }\n  //for saving from parent se claim verification\n  saveItemDetailsSection() {\n    console.log(\"test\");\n  }\n  updateApprAmountAndRecompute(totalAmtPay) {\n    //update based on current claim option selected\n    let item = null;\n    if (this.currHardCopyDetails?.headerDto?.claimOption === '1') {\n      const aveItemArr = this.otherSEItemArr.controls.filter(x => x.value.itemType === 'AVE');\n      if (aveItemArr.length > 0) {\n        item = aveItemArr[0];\n        if (item.get('latestStatus').value === this.PEND_VERIFY_STATUS) {\n          item.get('apprAmt').setValue(totalAmtPay);\n          //recompute\n          this.recompute(item);\n        }\n      }\n    } else if (this.currHardCopyDetails?.headerDto?.claimOption === '2') {\n      const itxItemArr = this.otherSEItemArr.controls.filter(x => x.value.itemType === 'ITX');\n      if (itxItemArr.length > 0) {\n        item = itxItemArr[0];\n        if (item.get('latestStatus').value === this.PEND_VERIFY_STATUS) {\n          item.get('apprAmt').setValue(totalAmtPay);\n          //recompute\n          this.recompute(item);\n        }\n      }\n    }\n  }\n  recompute(item) {\n    //only recompute if it is not 13x\n    if (item.get('formulaCode').value !== '13x') {\n      console.log(\"recomputing for\", item);\n      const formulaReq = {\n        dateFrom: this.currHardCopyDetails?.trgStartDte,\n        dateTo: this.currHardCopyDetails?.trgEndDte,\n        halfDayIndicator: \"N\",\n        approvedAmt: item.get('apprAmt').value,\n        formulaCode: item.get('formulaCode').value,\n        restDays: this.currHardCopyDetails.restDayList?.map(ea => {\n          return this.dateUtilsService.convertDateToStr(this.dateUtilsService.convertStrToDate(ea, \"DD-MM-YYYY\"), \"YYYY-MM-DD\");\n        }),\n        payPeriodStart: 0\n      };\n      this.formulaService.computeFormula(formulaReq, null).subscribe(resp => {\n        if (resp.status === 200 && resp.body.data) {\n          item.get('computedFormula').setValue(resp.body.data.computationString);\n          item.get('computedAmt').setValue(resp.body.data.amtPayable);\n        }\n      }, error => {\n        console.log(\"error is\" + String(error?.error?.error_desc));\n        this.toastService.error(String(error?.error?.error_desc));\n      });\n      //send event out to matched attd\n      if (item.get('claimItemId')?.value) {\n        this.recomputeMatchedAttdEvent.emit({\n          claimItemId: item.get('claimItemId').value,\n          apprAmt: item.get('apprAmt').value,\n          formulaCode: item.get('formulaCode').value\n        });\n      }\n    }\n  }\n  accordionClick() {\n    this.selectedChange.emit(this.selected);\n  }\n  //allows input on need basis\n  hasValidAuthorityAndStation() {\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_VERIFIER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_VERIFICATION) {\n      return true;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_CERTIFICATION) {\n      return false;\n    }\n    if (this.accountService.hasAnyAuthority(nspay2_constants_1.NSPAY2_ROLES.CLAIMS_APPROVER) && this.station === nspay2_constants_1.NSPAY2_STATION.STATION_APPROVAL) {\n      return false;\n    }\n    return false;\n  }\n}\nexports.ItemDetailsSectionComponent = ItemDetailsSectionComponent;\nItemDetailsSectionComponent.ɵfac = function ItemDetailsSectionComponent_Factory(t) {\n  return new (t || ItemDetailsSectionComponent)(i0.ɵɵdirectiveInject(i1.IcCodeService), i0.ɵɵdirectiveInject(i2.Ns2HttpService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.DialogService), i0.ɵɵdirectiveInject(i5.ClaimService), i0.ɵɵdirectiveInject(i6.CustomToastService), i0.ɵɵdirectiveInject(i7.SEClaimService), i0.ɵɵdirectiveInject(i8.DateUtilsService), i0.ɵɵdirectiveInject(i9.FormulaService), i0.ɵɵdirectiveInject(i10.AccountService));\n};\nItemDetailsSectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ItemDetailsSectionComponent,\n  selectors: [[\"n2-item-details-section\"]],\n  inputs: {\n    seHardCopyDetails: \"seHardCopyDetails\",\n    totalAmtPay: \"totalAmtPay\",\n    saveSEClaimRequest: \"saveSEClaimRequest\",\n    selected: \"selected\",\n    readOnly: \"readOnly\",\n    station: \"station\",\n    hasConflictAppClaims: \"hasConflictAppClaims\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    recomputeMatchedAttdEvent: \"recomputeMatchedAttdEvent\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 14,\n  vars: 5,\n  consts: [[3, \"disabled\", \"selected\", \"selectedChange\", \"click\"], [\"sectionTab\", \"\"], [\"pTemplate\", \"header\"], [3, \"formGroup\"], [4, \"ngIf\", \"ngIfElse\"], [\"emptymessage\", \"\"], [1, \"grid\", \"col-6\", \"align-items-center\", \"my-0\"], [1, \"col-form-label\", \"pl-1\"], [1, \"grid\", \"col-6\", \"flex\", \"justify-content-end\", \"align-items-center\", \"m-0\", \"p-0\"], [4, \"ngIf\"], [\"id\", \"insertVehicleRental\", \"pButton\", \"\", \"label\", \"Insert Vehicle Rental\", 3, \"click\"], [\"id\", \"insertItem\", \"pButton\", \"\", \"label\", \"Insert Item\", 3, \"click\"], [\"formArrayName\", \"otherSEItemArr\", 1, \"grid\", \"col-12\", \"m-0\", \"p-0\"], [\"class\", \"flex col-6 align-items-stretch p-1 m-0\", 3, \"style\", \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"col-6\", \"align-items-stretch\", \"p-1\", \"m-0\", 3, \"formGroupName\"], [1, \"grid\", \"p-0\", \"m-0\"], [1, \"col-7\", \"flex\", \"align-items-center\", \"p-0\", \"m-0\"], [\"class\", \"collapse-card\", \"formControlName\", \"collapseCard\", \"onIcon\", \"pi pi-plus\", \"offIcon\", \"pi pi-minus\", 3, \"style\", 4, \"ngIf\"], [2, \"margin-right\", \"2em\"], [1, \"col-5\", \"flex\", \"align-items-center\", \"justify-content-end\", \"p-0\", \"m-0\"], [\"id\", \"latestStatus\", \"formControlName\", \"latestStatus\", \"optionLabel\", \"name\", \"optionValue\", \"key\", \"placeholder\", \"Select\", 3, \"options\", \"style\", \"disabled\", 4, \"ngIf\", \"ngIfElse\"], [\"class\", \"p-error\", \"icTranslate\", \"nspay2App.claim.validation.CLM-V023\", 3, \"translateValues\", 4, \"ngIf\"], [\"icon\", \"pi pi-pencil\", 3, \"style\", \"disabled\", \"onClick\", 4, \"ngIf\"], [\"id\", \"deleteItem\", \"icon\", \"pi pi-trash\", 3, \"style\", \"click\", 4, \"ngIf\"], [\"labelStatus\", \"\"], [1, \"col-12\", \"flex\", \"align-items-center\", \"p-0\", \"m-0\"], [\"formControlName\", \"collapseCard\", \"onIcon\", \"pi pi-plus\", \"offIcon\", \"pi pi-minus\", 1, \"collapse-card\"], [\"id\", \"latestStatus\", \"formControlName\", \"latestStatus\", \"optionLabel\", \"name\", \"optionValue\", \"key\", \"placeholder\", \"Select\", 3, \"options\", \"disabled\"], [\"icTranslate\", \"nspay2App.claim.validation.CLM-V023\", 1, \"p-error\", 3, \"translateValues\"], [\"icon\", \"pi pi-pencil\", 3, \"disabled\", \"onClick\"], [\"id\", \"deleteItem\", \"icon\", \"pi pi-trash\", 3, \"click\"], [1, \"flex\", \"align-items-center\"], [\"formArrayName\", \"otherSEItemTableArr\"], [\"styleClass\", \"p-datatable-gridlines p-datatable-striped\", 3, \"value\", \"loading\"], [\"pTemplate\", \"body\"], [\"scope\", \"col\"], [1, \"pi\", \"pi-info-circle\"]],\n  template: function ItemDetailsSectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-accordionTab\", 0, 1);\n      i0.ɵɵlistener(\"selectedChange\", function ItemDetailsSectionComponent_Template_p_accordionTab_selectedChange_0_listener($event) {\n        return ctx.selected = $event;\n      })(\"click\", function ItemDetailsSectionComponent_Template_p_accordionTab_click_0_listener() {\n        return ctx.accordionClick();\n      });\n      i0.ɵɵtext(2, \"\\n    \");\n      i0.ɵɵtemplate(3, ItemDetailsSectionComponent_ng_template_3_Template, 17, 3, \"ng-template\", 2);\n      i0.ɵɵtext(4, \"\\n    \");\n      i0.ɵɵelementStart(5, \"form\", 3);\n      i0.ɵɵtext(6, \"\\n        \");\n      i0.ɵɵtemplate(7, ItemDetailsSectionComponent_div_7_Template, 7, 1, \"div\", 4);\n      i0.ɵɵtext(8, \"\\n        \");\n      i0.ɵɵtemplate(9, ItemDetailsSectionComponent_ng_template_9_Template, 5, 0, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtext(11, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \"\\n\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\n\\n\\n\\n\");\n    }\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(10);\n      i0.ɵɵproperty(\"disabled\", ctx.displayDialog)(\"selected\", ctx.selected);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.itemForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.otherSEItemArr.controls.length !== 0)(\"ngIfElse\", _r3);\n    }\n  },\n  dependencies: [i11.NgForOf, i11.NgIf, i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName, i12.Card, i13.PrimeTemplate, i14.ButtonDirective, i14.Button, i15.Table, i16.Dropdown, i17.Divider, i18.TranslateDirective, i19.AccordionTab, i20.ToggleButton, i11.DecimalPipe],\n  styles: [\"[_nghost-%COMP%]     .collapse-card .p-togglebutton.p-button {\\n  background: #ffffff;\\n  width: 3rem;\\n  padding: 0.75rem 0;\\n  border: 0px;\\n  color: #495057;\\n  transition: background-color 0.2s, color 0.2s, border-color 0.2s, box-shadow 0.2s;\\n}\\n\\n[_nghost-%COMP%]     .collapse-card .p-togglebutton.p-button.p-highlight .p-button-icon-left, .p-togglebutton.p-button.p-highlight[_ngcontent-%COMP%]   .p-button-icon-right[_ngcontent-%COMP%] {\\n  color: #495057;\\n}\\n\\n[_nghost-%COMP%]     .p-card .p-card-body {\\n  padding: 1rem;\\n}\\n\\n[_nghost-%COMP%]     .p-card .p-card-content {\\n  padding: 0rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0tZGV0YWlscy1zZWN0aW9uLmNvbXBvbmVudC5zY3NzIiwiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHByb2plY3RzJTIwMlxcbnNwYXlpaWFwcFxcc3JjXFxtYWluXFx3ZWJhcHBcXGFwcFxcY2xhaW1cXHNlLWNsYWltXFxzZS1jbGFpbS12ZXJpZmljYXRpb25cXGl0ZW0tZGV0YWlscy1zZWN0aW9uXFxpdGVtLWRldGFpbHMtc2VjdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLGNBQUE7RUFDQSxpRkFBQTtBQ0NKOztBREVBOztFQUVFLGNBQUE7QUNDRjs7QUQwQ0E7RUFDRSxhQUFBO0FDdkNGOztBRDBDQTtFQUNFLGFBQUE7QUN2Q0YiLCJmaWxlIjoiaXRlbS1kZXRhaWxzLXNlY3Rpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCA6Om5nLWRlZXAgLmNvbGxhcHNlLWNhcmQgLnAtdG9nZ2xlYnV0dG9uLnAtYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XHJcbiAgICB3aWR0aDozcmVtO1xyXG4gICAgcGFkZGluZzowLjc1cmVtIDA7XHJcbiAgICBib3JkZXI6IDBweDtcclxuICAgIGNvbG9yOiAjNDk1MDU3O1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzLCBjb2xvciAwLjJzLCBib3JkZXItY29sb3IgMC4ycywgYm94LXNoYWRvdyAwLjJzO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgIC5jb2xsYXBzZS1jYXJkIC5wLXRvZ2dsZWJ1dHRvbi5wLWJ1dHRvbi5wLWhpZ2hsaWdodCAucC1idXR0b24taWNvbi1sZWZ0LFxyXG4ucC10b2dnbGVidXR0b24ucC1idXR0b24ucC1oaWdobGlnaHQgLnAtYnV0dG9uLWljb24tcmlnaHQge1xyXG4gIGNvbG9yOiAjNDk1MDU3O1xyXG59XHJcblxyXG4vLzpob3N0IDo6bmctZGVlcCAucC1jYXJkIHtcclxuLy8gICAgYm94LXNoYWRvdzogMCAycHggMXB4IC0xcHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwIDFweCAxcHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDFweCAzcHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG4vL31cclxuXHJcbi8vIDxkaXYgY2xhc3M9XCJmbGV4IGp1c3RpZnktY29udGVudC1lbmRcIiBbc3R5bGVdPVwieydoZWlnaHQnOiczZW0nLCdtYXJnaW4tYm90dG9tJzogJzFlbSd9XCI+XHJcbi8vIDxidXR0b24gKm5nSWY9XCJpPT09MSYmIGlzQWN0aXZlKClcIiBwQnV0dG9uIHBSaXBwbGVcclxuLy8gdHlwZT1cImJ1dHRvblwiIGljb249XCJwaSBwaS10aW1lc1wiXHJcbi8vIGNsYXNzPVwicC1idXR0b24tcm91bmRlZCBwLWJ1dHRvbi1kYW5nZXIgcC1idXR0b24tdGV4dFwiXHJcbi8vIChjbGljaykgPSBcImFubnVhbEluY29tZUFycmF5LnJlbW92ZUF0KGkpXCI+PC9idXR0b24+XHJcbi8vIDwvZGl2PlxyXG5cclxuLy86aG9zdCA6Om5nLWRlZXAgLnAtY2FyZCAucC1jYXJkLWhlYWRlci1pY29ue1xyXG4vLyAgd2lkdGg6IDJyZW07XHJcbi8vICBoZWlnaHQ6IDJyZW07XHJcbi8vICBjb2xvcjogIzZjNzU3ZDtcclxuLy8gIGJvcmRlcjogMCBub25lO1xyXG4vLyAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbi8vICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbi8vICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnMsIGNvbG9yIDAuMnMsIGJveC1zaGFkb3cgMC4ycztcclxuLy8gIG1hcmdpbi1yaWdodDogMC41cmVtO1xyXG4vL31cclxuLy9cclxuLy86aG9zdCA6Om5nLWRlZXAgLnAtY2FyZCAucC1jYXJkLWhlYWRlci1pY29uOmVuYWJsZWQ6aG92ZXIge1xyXG4vLyAgY29sb3I6ICMzNDNhNDA7XHJcbi8vICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xyXG4vLyAgYmFja2dyb3VuZDogI2U5ZWNlZjtcclxuLy99XHJcbi8vOmhvc3QgOjpuZy1kZWVwIC5wLWNhcmQgLnAtY2FyZC1oZWFkZXItaWNvbjpmb2N1cyB7XHJcbi8vICBvdXRsaW5lOiAwIG5vbmU7XHJcbi8vICBvdXRsaW5lLW9mZnNldDogMDtcclxuLy8gIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSAjOTlGNkU0O1xyXG4vL31cclxuLy86aG9zdCA6Om5nLWRlZXAgLnAtY2FyZCAucC1jYXJkLWhlYWRlci1pY29uOmxhc3QtY2hpbGQge1xyXG4vLyAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4vL31cclxuXHJcbi8vIDpob3N0IDo6bmctZGVlcCAucC10b2dnbGVCdXR0b24ucC1idXR0b24ge1xyXG4vLyAgIGJvcmRlcjogMHB4IHNvbGlkIHJlZDtcclxuLy8gfVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5wLWNhcmQgLnAtY2FyZC1ib2R5IHtcclxuICBwYWRkaW5nOiAxcmVtO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLnAtY2FyZCAucC1jYXJkLWNvbnRlbnR7XHJcbiAgcGFkZGluZyA6MHJlbTtcclxufVxyXG4iLCI6aG9zdCA6Om5nLWRlZXAgLmNvbGxhcHNlLWNhcmQgLnAtdG9nZ2xlYnV0dG9uLnAtYnV0dG9uIHtcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgd2lkdGg6IDNyZW07XG4gIHBhZGRpbmc6IDAuNzVyZW0gMDtcbiAgYm9yZGVyOiAwcHg7XG4gIGNvbG9yOiAjNDk1MDU3O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnMsIGNvbG9yIDAuMnMsIGJvcmRlci1jb2xvciAwLjJzLCBib3gtc2hhZG93IDAuMnM7XG59XG5cbjpob3N0IDo6bmctZGVlcCAuY29sbGFwc2UtY2FyZCAucC10b2dnbGVidXR0b24ucC1idXR0b24ucC1oaWdobGlnaHQgLnAtYnV0dG9uLWljb24tbGVmdCxcbi5wLXRvZ2dsZWJ1dHRvbi5wLWJ1dHRvbi5wLWhpZ2hsaWdodCAucC1idXR0b24taWNvbi1yaWdodCB7XG4gIGNvbG9yOiAjNDk1MDU3O1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtY2FyZCAucC1jYXJkLWJvZHkge1xuICBwYWRkaW5nOiAxcmVtO1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtY2FyZCAucC1jYXJkLWNvbnRlbnQge1xuICBwYWRkaW5nOiAwcmVtO1xufSJdfQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvY2xhaW0vc2UtY2xhaW0vc2UtY2xhaW0tdmVyaWZpY2F0aW9uL2l0ZW0tZGV0YWlscy1zZWN0aW9uL2l0ZW0tZGV0YWlscy1zZWN0aW9uLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vcHJvamVjdHMlMjAyL25zcGF5aWlhcHAvc3JjL21haW4vd2ViYXBwL2FwcC9jbGFpbS9zZS1jbGFpbS9zZS1jbGFpbS12ZXJpZmljYXRpb24vaXRlbS1kZXRhaWxzLXNlY3Rpb24vaXRlbS1kZXRhaWxzLXNlY3Rpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxjQUFBO0VBQ0EsaUZBQUE7QUNDSjs7QURFQTs7RUFFRSxjQUFBO0FDQ0Y7O0FEMENBO0VBQ0UsYUFBQTtBQ3ZDRjs7QUQwQ0E7RUFDRSxhQUFBO0FDdkNGO0FEQ0EsdzVIQUF3NUgiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCA6Om5nLWRlZXAgLmNvbGxhcHNlLWNhcmQgLnAtdG9nZ2xlYnV0dG9uLnAtYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XHJcbiAgICB3aWR0aDozcmVtO1xyXG4gICAgcGFkZGluZzowLjc1cmVtIDA7XHJcbiAgICBib3JkZXI6IDBweDtcclxuICAgIGNvbG9yOiAjNDk1MDU3O1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzLCBjb2xvciAwLjJzLCBib3JkZXItY29sb3IgMC4ycywgYm94LXNoYWRvdyAwLjJzO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgIC5jb2xsYXBzZS1jYXJkIC5wLXRvZ2dsZWJ1dHRvbi5wLWJ1dHRvbi5wLWhpZ2hsaWdodCAucC1idXR0b24taWNvbi1sZWZ0LFxyXG4ucC10b2dnbGVidXR0b24ucC1idXR0b24ucC1oaWdobGlnaHQgLnAtYnV0dG9uLWljb24tcmlnaHQge1xyXG4gIGNvbG9yOiAjNDk1MDU3O1xyXG59XHJcblxyXG4vLzpob3N0IDo6bmctZGVlcCAucC1jYXJkIHtcclxuLy8gICAgYm94LXNoYWRvdzogMCAycHggMXB4IC0xcHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwIDFweCAxcHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDFweCAzcHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG4vL31cclxuXHJcbi8vIDxkaXYgY2xhc3M9XCJmbGV4IGp1c3RpZnktY29udGVudC1lbmRcIiBbc3R5bGVdPVwieydoZWlnaHQnOiczZW0nLCdtYXJnaW4tYm90dG9tJzogJzFlbSd9XCI+XHJcbi8vIDxidXR0b24gKm5nSWY9XCJpPT09MSYmIGlzQWN0aXZlKClcIiBwQnV0dG9uIHBSaXBwbGVcclxuLy8gdHlwZT1cImJ1dHRvblwiIGljb249XCJwaSBwaS10aW1lc1wiXHJcbi8vIGNsYXNzPVwicC1idXR0b24tcm91bmRlZCBwLWJ1dHRvbi1kYW5nZXIgcC1idXR0b24tdGV4dFwiXHJcbi8vIChjbGljaykgPSBcImFubnVhbEluY29tZUFycmF5LnJlbW92ZUF0KGkpXCI+PC9idXR0b24+XHJcbi8vIDwvZGl2PlxyXG5cclxuLy86aG9zdCA6Om5nLWRlZXAgLnAtY2FyZCAucC1jYXJkLWhlYWRlci1pY29ue1xyXG4vLyAgd2lkdGg6IDJyZW07XHJcbi8vICBoZWlnaHQ6IDJyZW07XHJcbi8vICBjb2xvcjogIzZjNzU3ZDtcclxuLy8gIGJvcmRlcjogMCBub25lO1xyXG4vLyAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbi8vICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbi8vICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnMsIGNvbG9yIDAuMnMsIGJveC1zaGFkb3cgMC4ycztcclxuLy8gIG1hcmdpbi1yaWdodDogMC41cmVtO1xyXG4vL31cclxuLy9cclxuLy86aG9zdCA6Om5nLWRlZXAgLnAtY2FyZCAucC1jYXJkLWhlYWRlci1pY29uOmVuYWJsZWQ6aG92ZXIge1xyXG4vLyAgY29sb3I6ICMzNDNhNDA7XHJcbi8vICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xyXG4vLyAgYmFja2dyb3VuZDogI2U5ZWNlZjtcclxuLy99XHJcbi8vOmhvc3QgOjpuZy1kZWVwIC5wLWNhcmQgLnAtY2FyZC1oZWFkZXItaWNvbjpmb2N1cyB7XHJcbi8vICBvdXRsaW5lOiAwIG5vbmU7XHJcbi8vICBvdXRsaW5lLW9mZnNldDogMDtcclxuLy8gIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSAjOTlGNkU0O1xyXG4vL31cclxuLy86aG9zdCA6Om5nLWRlZXAgLnAtY2FyZCAucC1jYXJkLWhlYWRlci1pY29uOmxhc3QtY2hpbGQge1xyXG4vLyAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4vL31cclxuXHJcbi8vIDpob3N0IDo6bmctZGVlcCAucC10b2dnbGVCdXR0b24ucC1idXR0b24ge1xyXG4vLyAgIGJvcmRlcjogMHB4IHNvbGlkIHJlZDtcclxuLy8gfVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5wLWNhcmQgLnAtY2FyZC1ib2R5IHtcclxuICBwYWRkaW5nOiAxcmVtO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLnAtY2FyZCAucC1jYXJkLWNvbnRlbnR7XHJcbiAgcGFkZGluZyA6MHJlbTtcclxufVxyXG4iLCI6aG9zdCA6Om5nLWRlZXAgLmNvbGxhcHNlLWNhcmQgLnAtdG9nZ2xlYnV0dG9uLnAtYnV0dG9uIHtcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgd2lkdGg6IDNyZW07XG4gIHBhZGRpbmc6IDAuNzVyZW0gMDtcbiAgYm9yZGVyOiAwcHg7XG4gIGNvbG9yOiAjNDk1MDU3O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnMsIGNvbG9yIDAuMnMsIGJvcmRlci1jb2xvciAwLjJzLCBib3gtc2hhZG93IDAuMnM7XG59XG5cbjpob3N0IDo6bmctZGVlcCAuY29sbGFwc2UtY2FyZCAucC10b2dnbGVidXR0b24ucC1idXR0b24ucC1oaWdobGlnaHQgLnAtYnV0dG9uLWljb24tbGVmdCxcbi5wLXRvZ2dsZWJ1dHRvbi5wLWJ1dHRvbi5wLWhpZ2hsaWdodCAucC1idXR0b24taWNvbi1yaWdodCB7XG4gIGNvbG9yOiAjNDk1MDU3O1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtY2FyZCAucC1jYXJkLWJvZHkge1xuICBwYWRkaW5nOiAxcmVtO1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtY2FyZCAucC1jYXJkLWNvbnRlbnQge1xuICBwYWRkaW5nOiAwcmVtO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ItemDetailsSectionComponent","constructor","codeService","ns2Http","formBuilder","dialogService","claimService","toastService","seClaimService","dateUtilsService","formulaService","accountService","Map","core_1","group","otherSEItemArr","array","name","key","identity","subscribe","account","currentAccount","copyAccount","ngOnInit","console","log","retrieveItemStatusMap","retrieveFormulaList","getDefaultOptionList","getEditableSEItemStatus","email","firstName","lastName","login","username","authorities","groups","subjectId","params","http_1","retrieveEditableSEItemStatus","resp","status","body","data","editableSEItemStatusList","error","String","error_desc","hasEditButton","item","station","includes","get","value","readOnly","hasValidAuthorityAndStation","itemForm","populateRequestWithItemDetailsSectionChanges","controls","forEach","otherSEItem","otherSEItemDto","mapItemDetailToDto","saveSEClaimRequest","itemDetailsSectionList","undefined","push","itemDetailDto","id","claimId","currHardCopyDetails","itemName","claimType","SE_CLAIM_TYPE","itemType","apprAmt","apprBasis","formulaCode","computedFormula","computedAmt","latestStatus","acctgStartDate","acctgEndDate","annualIncome","acctgDivisor","getItemType","constructForm","retrieveSEItems","fullItemStatusMap","Object","entries","getItemStatusDesc","code","toUpperCase","loadCodes","codeType","codeId","claimOption","label","includesIn","itemStatusList","statusKeyList","map","x","ngOnChanges","changes","currentValue","headerDto","totalAmtPay","updateApprAmountAndRecompute","testerdate","restDayList","append","retrieveClaimItems","pipe","itemResp","hasInitialPAPItem","filter","length","sort","a","b","retrieveDropDownItemStatus","dropDownResp","complete","onCompleteMergeMap","addClaimItem","constructDisallowedItemNames","initItemStatusMap","valueChanges","change","itemDetailsSectionInd","updateItemStatusMap","remainingDisAllIN","disallowedItemNames","concat","itemStatusChanges","set","beforeStatus","afterStatus","statusVal","itemData","dropdownData","optionListMap","itemStatusDropdown","statusDesc","statusCode","collapseCard","latestStatusDesc","claimItemId","otherSEItemTableArr","forms_1","addTableGroup","displayType","getItemStatusDisplayType","type","closedInd","approveInd","edited","itemStatus","handleEdgeCaseForFirstApprover","lastFirstApprover","defaultOptionList","tester","getOptionList","optionList","enableNoExistingVRental","VEHICLE_RENTAL","sortedData","sortFormulaListByCode","formulaList","formulaDesc","regex","aNum","Number","trim","match","bNum","aAlpha","bAlpha","getCodeDesc","rslt","find","getTable","fa","onOpenInsertEditItem","edit","vehicleRental","index","displayDialog","ea","convertDateToStr","convertStrToDate","innerTblArr","getDivisor","ref","open","insert_item_dialog_component_1","header","width","trgStartDte","trgEndDte","occupationCode","restDay","commencementDte","contentStyle","overflow","baseZIndex","onClose","req","onUpdateSubmit","setValue","PEND_VERIFY_STATUS","recompute","difference","getTime","Math","ceil","deleteItem","removeAt","saveItemDetailsSection","aveItemArr","itxItemArr","formulaReq","dateFrom","dateTo","halfDayIndicator","approvedAmt","restDays","payPeriodStart","computeFormula","computationString","amtPayable","recomputeMatchedAttdEvent","emit","accordionClick","selectedChange","selected","hasAnyAuthority","nspay2_constants_1","CLAIMS_VERIFIER","STATION_VERIFICATION","CLAIMS_APPROVER","STATION_CERTIFICATION","STATION_APPROVAL","exports","selectors","inputs","seHardCopyDetails","hasConflictAppClaims","outputs","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\item-details-section\\item-details-section.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\claim\\se-claim\\se-claim-verification\\item-details-section\\item-details-section.component.html"],"sourcesContent":["import { HttpParams } from '@angular/common/http';\r\nimport { AfterViewChecked, AfterViewInit, Component, EventEmitter, Input, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ClaimService } from 'app/claim/service/claim.service';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\nimport { CodeView, IcCodeService } from 'app/ng-connect';\r\nimport { IComputeFormula } from 'app/shared/model/compute-formula.model';\r\nimport { FormulaService } from 'app/shared/service/formula.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { AccordionTab } from 'primeng/accordion';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { SEClaimService } from '../../service/se-claim.service';\r\nimport { InsertItemDialogComponent } from './insert-item-dialog/insert-item-dialog.component';\r\nimport {SaveSEClaimRequest} from \"app/claim/se-claim/model/save-se-claim-request.model\";\r\nimport { SEClaimItemDto } from '../../model/se-claim-item.model';\r\nimport {concatMap, map, mergeMap, switchMap, tap} from 'rxjs/operators';\r\nimport { NSPAY2_ROLES, NSPAY2_STATION } from 'app/nspay2.constants';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\n\r\n@Component({\r\n  selector: 'n2-item-details-section',\r\n  templateUrl: './item-details-section.component.html',\r\n  styleUrls: ['./item-details-section.component.scss']\r\n})\r\nexport class ItemDetailsSectionComponent implements OnInit {\r\n\r\n  @Input() seHardCopyDetails:any;\r\n  @Input() totalAmtPay: any;\r\n\r\n  @Input() saveSEClaimRequest: SaveSEClaimRequest;\r\n\r\n  @Input() selected:boolean;\r\n  //meant for routing from enquiry\r\n  @Input() readOnly: boolean;\r\n  itemStatusChanges: Map<string, any> = new Map<string, any>();\r\n  @Input() station: string;\r\n  @Input() hasConflictAppClaims:boolean;\r\n  //if any of the claim item was initially PAP, will hold true, and will allow certain fields/functions during approval stage to be enabled\r\n  hasInitialPAPItem = false;\r\n\r\n\r\n\r\n  // @Input() restDay:any[];\r\n  @Output() selectedChange = new EventEmitter<boolean>();\r\n  PRIVATE_HIRER_OCCUP_CODE = '230';\r\n\r\n  currHardCopyDetails: any;\r\n  displayDialog=false;\r\n\r\n  itemForm = this.formBuilder.group({\r\n    otherSEItemArr: this.formBuilder.array([]),\r\n  })\r\n\r\n  @Output()  recomputeMatchedAttdEvent: EventEmitter<any> = new EventEmitter<any>();\r\n  disallowedItemNames = ['overall'];\r\n\r\n  readonly VEHICLE_RENTAL = \"VEHICLE RENTAL\";\r\n  readonly PEND_VERIFY_STATUS = \"PVE\";\r\n  readonly SE_CLAIM_TYPE = 'S';\r\n  currentAccount: any;\r\n\r\n  loading = false;\r\n  itemTable: any[] = [];\r\n  apprAmt: number;\r\n  formula = \"1a Cal D (d)\";\r\n  claimOption = \"\";\r\n  existingVehicleRentalItem = false;\r\n  vehicleItemList:any[]=[];\r\n  nonVehicleItemList:any[]=[];\r\n  fullItemStatusMap: any;\r\n  claimFormulaOption: any[] = [];\r\n  formulaList:any[] = [];\r\n  defaultOptionList: any[] = [];\r\n  editableSEItemStatusList: any[] = [];\r\n\r\n  optionListMap:Map<string, Array<any>> = new Map<string, Array<any>>();\r\n\r\n\r\n  itemStatusList: any[] = [{name: 'PEND VERIFY', key: 'PVE'}, {name: 'PEND CERTIFY', key: 'PCE'},\r\n  {name: 'CLOSED (REJECT)', key: 'COR'}, {name: 'CLOSED (NSM REQ)', key: 'CNS'},\r\n  {name:'CLOSED (COY REQ)', key:'CCO'}];\r\n\r\n\r\n  constructor(\r\n    private codeService: IcCodeService,\r\n    private ns2Http: Ns2HttpService,\r\n    private formBuilder: FormBuilder,\r\n    private dialogService: DialogService,\r\n    private claimService: ClaimService,\r\n    private toastService: CustomToastService,\r\n    private seClaimService: SEClaimService,\r\n    private dateUtilsService: DateUtilsService,\r\n    private formulaService: FormulaService,\r\n    public accountService: AccountService\r\n\r\n  ) {   \r\n    this.accountService.identity().subscribe((account:any) => {\r\n      this.currentAccount = this.copyAccount(account);\r\n    });\r\n}\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"init item details section\");\r\n    this.retrieveItemStatusMap();\r\n    this.retrieveFormulaList();\r\n    this.getDefaultOptionList();\r\n    this.getEditableSEItemStatus();\r\n  }\r\n\r\n  copyAccount(account: any): any {\r\n    return {\r\n      email: account.email as string,\r\n      firstName: account.firstName as string,\r\n      lastName: account.lastName as string,\r\n      login: account.username as string,\r\n      authorities: account.authorities,\r\n      groups: account.groups,\r\n      subjectId: account.subjectId\r\n    };\r\n  }\r\n\r\n  // ngAfterViewChecked(): void {\r\n  //   this.itemForm.valueChanges.subscribe(change => {\r\n  //     console.log(\"valuechange item details\", change);\r\n  //     this.saveSEClaimRequest.itemDetailsSectionInd = true;\r\n  //   });\r\n  // }\r\n\r\n  getEditableSEItemStatus() {\r\n    const params = new HttpParams();\r\n    this.seClaimService.retrieveEditableSEItemStatus({params}).subscribe((resp:any) => {\r\n      if(resp.status === 200 && resp.body.data){\r\n       this.editableSEItemStatusList = resp.body.data;\r\n       console.log(\"the editable item status\", this.editableSEItemStatusList)\r\n    }},\r\n    (error: any) => {\r\n      console.log(\"error is\" + String(error?.error?.error_desc));\r\n      this.toastService.error(String(error?.error?.error_desc));\r\n    });\r\n    \r\n  }\r\n\r\n  hasEditButton(item: any): boolean{\r\n    //for verifier\r\n    if(this.station === 'V'){\r\n      return this.editableSEItemStatusList.includes(item.get('latestStatus').value) && !this.readOnly && this.hasValidAuthorityAndStation();\r\n    }else if(this.station === \"S\" || this.station === \"A\" ){\r\n      return item.get('latestStatus').value === \"PAP\" || item.get('latestStatus').value === \"RAP\";\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  get otherSEItemArr(){\r\n    return this.itemForm.get('otherSEItemArr') as FormArray;\r\n  }\r\n\r\n  populateRequestWithItemDetailsSectionChanges(): void{\r\n    this.otherSEItemArr.controls.forEach((otherSEItem: AbstractControl<any, any>)=>{\r\n      const otherSEItemDto: SEClaimItemDto = this.mapItemDetailToDto(otherSEItem);\r\n      if (this.saveSEClaimRequest.itemDetailsSectionList === undefined) {\r\n        this.saveSEClaimRequest.itemDetailsSectionList = [otherSEItemDto];\r\n      } else {\r\n        this.saveSEClaimRequest.itemDetailsSectionList.push(otherSEItemDto);\r\n      }\r\n    })\r\n  }\r\n  mapItemDetailToDto(item: AbstractControl<any, any>): SEClaimItemDto {\r\n    console.log(\"other Se item\", item)\r\n    const itemDetailDto: SEClaimItemDto = {\r\n      id: item.get('claimItemId')?.value,\r\n      claimId: this.currHardCopyDetails.claimId,\r\n      itemName: item.get('itemName').value,\r\n      claimType:this.SE_CLAIM_TYPE,\r\n      itemType: item.get('itemType').value,\r\n      apprAmt: item.get('apprAmt').value,\r\n      apprBasis: item.get('apprBasis').value,\r\n      formulaCode: item.get('formulaCode').value,\r\n      computedFormula: item.get('computedFormula').value,\r\n      computedAmt: item.get('computedAmt').value,\r\n      latestStatus: item.get('latestStatus').value\r\n    }\r\n    if(item.get('itemType').value==='ITX'){\r\n      itemDetailDto.acctgStartDate = (item.get('otherSEItemTableArr') as FormArray).controls[0].get('acctgStartDate').value;\r\n      itemDetailDto.acctgEndDate = (item.get('otherSEItemTableArr') as FormArray).controls[0].get('acctgEndDate').value;\r\n      itemDetailDto.annualIncome = (item.get('otherSEItemTableArr') as FormArray).controls[0].get('annualIncome').value;\r\n      itemDetailDto.acctgDivisor = (item.get('otherSEItemTableArr') as FormArray).controls[0].get('acctgDivisor').value;\r\n    }\r\n    return itemDetailDto;\r\n  }\r\n\r\n  //default for all inserts\r\n  getItemType():string{\r\n    // const claimOption = this.currHardCopyDetails?.headerDto?.claimOption;\r\n    // return claimOption===2? \"ITX\": claimOption===1? \"AVE\": claimOption===3? \"REP\" : \"ITX\";\r\n    return \"SEO\";\r\n  }\r\n\r\n  constructForm():void{\r\n    this.retrieveSEItems();\r\n  }\r\n\r\n  retrieveItemStatusMap(): void{\r\n    this.claimService.retrieveItemStatusMap(null).subscribe((resp:any) => {\r\n      if(resp.status === 200 && resp.body.data){\r\n        this.fullItemStatusMap = new Map<string, object>(Object.entries(resp.body.data));\r\n    }},\r\n    (error: any) => {\r\n      console.log(\"error is\" + String(error?.error?.error_desc));\r\n      this.toastService.error(String(error?.error?.error_desc));\r\n    });\r\n  }\r\n\r\n  getItemStatusDesc(code: string): string{\r\n    return (this.fullItemStatusMap.get(code) as string).toUpperCase();\r\n  }\r\n\r\n  loadCodes(codeType: string, codeId: string): void {\r\n    this.codeService.get(codeType, codeId)\r\n    .subscribe((code: CodeView) => {\r\n      this.claimOption = code?.label['en-US'] as string;\r\n    });\r\n  }\r\n\r\n  includesIn(key: any, itemStatusList:any[]):boolean{\r\n    const statusKeyList = itemStatusList.map(x=> x.key as string);\r\n    return statusKeyList.includes(key);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void{\r\n\r\n  \r\n    if(changes['seHardCopyDetails']?.currentValue) {\r\n      console.log(\"changes to hardcopy details\")\r\n      this.currHardCopyDetails=changes['seHardCopyDetails'].currentValue;\r\n      this.loadCodes('claim_option_long',this.currHardCopyDetails?.headerDto?.claimOption);\r\n      this.constructForm();\r\n\r\n      // console.log(\"the aka restday\", this.currHardCopyDetails.restDayList);\r\n      // this.retrieveFormulaList();\r\n    }\r\n\r\n    if(changes['totalAmtPay']?.currentValue) {\r\n      const totalAmtPay=changes['totalAmtPay'].currentValue;\r\n      console.log(\"the external total amt pay\", totalAmtPay);\r\n      console.log(this.otherSEItemArr.controls);\r\n      this.updateApprAmountAndRecompute(totalAmtPay);\r\n    }\r\n\r\n    // if(changes['restDay']?.currentValue) {\r\n    //   console.log(\"the aka restday\", this.restDay)\r\n    //   this.retrieveFormulaList();\r\n    // }\r\n\r\n    // this.itemForm.valueChanges.subscribe(change => {\r\n    //   console.log(\"valuechange item details\", change);\r\n    //   this.saveSEClaimRequest.itemDetailsSectionInd = true;\r\n    // });\r\n\r\n\r\n  }\r\n\r\n  testerdate():void{\r\n    console.log(\"the aka restday\", this.currHardCopyDetails.restDayList);\r\n  }\r\n\r\n  // retrieveSEItems():void{\r\n  //   let params = new HttpParams();\r\n  //   params = params.append(\"claimId\",this.currHardCopyDetails?.claimId);\r\n  //   this.seClaimService.retrieveClaimItems({params}).subscribe((resp:any) => {\r\n\r\n  //     if(resp){\r\n  //         if(resp.status === 200 && resp.body.data){\r\n\r\n  //           this.setClaimItems(resp.body.data);\r\n\r\n  //         }\r\n  //       }\r\n  //     },\r\n  //     (error: any) => {\r\n  //       console.log(\"error is\" + String(error?.error?.error_desc));\r\n  //       this.toastService.error(String(error?.error?.error_desc));\r\n  //     });\r\n  // }\r\n\r\n\r\n  // this.weeklyIndCodeType = codes[0].map((x:CodeView)=> {\r\n  //   return {name:x.label['en-US'], code: x.codeId}\r\n  // });\r\n\r\n  retrieveSEItems():void{\r\n    let params = new HttpParams();\r\n    params = params.append(\"claimId\",this.currHardCopyDetails?.claimId);\r\n    this.seClaimService.retrieveClaimItems({params}).pipe(switchMap((itemResp:any) => {\r\n      const item:SEClaimItemDto[] = itemResp.body.data;\r\n      if(itemResp.body.data){\r\n        this.hasInitialPAPItem = itemResp.body.data.filter((x:any)=> x.latestStatus === 'PAP').length>0\r\n      }\r\n      item.sort((a,b) =>{\r\n        if(a.itemType==='AVE' && this.currHardCopyDetails?.headerDto?.claimOption === '1' ||\r\n          a.itemType==='ITX' && this.currHardCopyDetails?.headerDto?.claimOption === '2' ||\r\n          a.itemType==='REP' && this.currHardCopyDetails?.headerDto?.claimOption === '3'){\r\n          return -1;\r\n        }else if(b.itemType==='AVE' && this.currHardCopyDetails?.headerDto?.claimOption === '1' ||\r\n          b.itemType==='ITX' && this.currHardCopyDetails?.headerDto?.claimOption === '2' ||\r\n          b.itemType==='REP' && this.currHardCopyDetails?.headerDto?.claimOption === '3'){\r\n          return 1;\r\n        }else {\r\n          return a.itemName < b.itemName ? -1 : 1;\r\n        }\r\n      })\r\n      return item;\r\n    }),\r\n    mergeMap((item: any) => {\r\n      console.log(\"latest status \", item.latestStatus)\r\n      params = new HttpParams();\r\n      params = params.append(\"itemStatus\",item.latestStatus);\r\n      params = params.append(\"claimType\",'S');\r\n      params = params.append(\"station\",this.station);\r\n      //edge case for latestStatus = PAP with unedited item\r\n      if(item.latestStatus===\"PAP\" && (this.station === \"S\" || this.station === 'A')){\r\n        params = params.append(\"itemAmtChangeInd\",0);\r\n      }\r\n      return this.claimService.retrieveDropDownItemStatus({params})\r\n      .pipe\r\n      (map(dropDownResp=>{\r\n        return {\r\n          item,\r\n          dropDownResp\r\n        }\r\n      }))\r\n    }),tap({ complete: () => \r\n      this.onCompleteMergeMap()\r\n    })\r\n    ).subscribe((resp:any) => {\r\n      if(resp){\r\n          this.addClaimItem(resp.item, resp.dropDownResp.body.data);\r\n        }\r\n      });\r\n  }\r\n\r\n  onCompleteMergeMap(): void{\r\n    console.log('finished merge map');\r\n    this.constructDisallowedItemNames();\r\n    this.initItemStatusMap();\r\n\r\n    this.itemForm.valueChanges.subscribe(change => {\r\n      console.log(\"valuechange item details\", change);\r\n      this.saveSEClaimRequest.itemDetailsSectionInd = true;\r\n    });\r\n\r\n    this.otherSEItemArr.valueChanges.subscribe(change => {\r\n      this.constructDisallowedItemNames();\r\n      this.updateItemStatusMap();\r\n    });\r\n  }\r\n\r\n  constructDisallowedItemNames(): void{\r\n    const remainingDisAllIN = this.otherSEItemArr.controls.map(x=>{\r\n      return String(x.get(\"itemName\").value);\r\n    })\r\n    this.disallowedItemNames = ['overall'].concat(remainingDisAllIN);\r\n  }\r\n\r\n  initItemStatusMap(): void{\r\n    this.otherSEItemArr.controls.forEach(x=>{\r\n      this.itemStatusChanges.set(x.get(\"claimItemId\").value, {\r\n        beforeStatus: x.get('latestStatus').value,\r\n        afterStatus: null\r\n      })\r\n    })\r\n  }\r\n\r\n  updateItemStatusMap(): void{\r\n    this.otherSEItemArr.controls.forEach(x=>{\r\n      const statusVal = this.itemStatusChanges.get(x.get(\"claimItemId\").value);\r\n      statusVal['afterStatus'] = x.get('latestStatus').value;\r\n      this.itemStatusChanges.set(x.get(\"claimItemId\").value, statusVal);\r\n    })\r\n    console.log(\"updated map\",this.itemStatusChanges )\r\n  }\r\n\r\n  addClaimItem(itemData:any, dropdownData:any):void{\r\n    console.log(\"adding claim item\")\r\n    this.optionListMap.set(itemData.id, dropdownData.itemStatusDropdown?.map((x:any)=> {return {\r\n      name: x.statusDesc.toUpperCase(),\r\n      key: x.statusCode\r\n    }}))\r\n      this.otherSEItemArr.push(this.formBuilder.group({\r\n        collapseCard: true,\r\n        apprAmt: itemData.apprAmt,\r\n        itemName: itemData.itemName,\r\n        formulaCode: itemData.formulaCode,\r\n        latestStatus: itemData.latestStatus,\r\n        latestStatusDesc: itemData.latestStatusDesc,\r\n        claimItemId: itemData.id,\r\n        apprBasis: itemData.apprBasis,\r\n        itemType: itemData.itemType,\r\n        computedFormula: itemData.computedFormula,\r\n        computedAmt: itemData.computedAmt,\r\n        otherSEItemTableArr: itemData.itemType==='ITX'? new FormArray([\r\n          this.addTableGroup(itemData)\r\n        ]): null,\r\n        displayType: this.getItemStatusDisplayType(dropdownData.type, itemData.latestStatus),\r\n        closedInd: itemData.closedInd,\r\n        approveInd: itemData.approveInd,\r\n        edited: false\r\n      })\r\n    )\r\n  }\r\n\r\n  getItemStatusDisplayType(type: string, itemStatus: string):string{\r\n    if(this.handleEdgeCaseForFirstApprover(itemStatus)){\r\n      return \"label\"\r\n    }\r\n    return type;\r\n  }\r\n\r\n  //if the current user is the  first approver, display the itemstatus as a label\r\n  handleEdgeCaseForFirstApprover(itemStatus: string):boolean{\r\n    return this.currentAccount.subjectId === this.currHardCopyDetails.lastFirstApprover && itemStatus === 'P2A';\r\n  }\r\n\r\n  //Pend verify as default option\r\n  getDefaultOptionList(): void{\r\n    let params = new HttpParams();\r\n    params = params.append(\"itemStatus\",'PVE');\r\n    params = params.append(\"claimType\",'S');\r\n    params = params.append(\"station\",'V');\r\n    this.claimService.retrieveDropDownItemStatus({params}).subscribe(resp => {\r\n      if (resp.body.data) {\r\n        this.defaultOptionList = resp.body.data.itemStatusDropdown.map((x:any)=>{\r\n          return {\r\n            key: x.statusCode,\r\n            name: x.statusDesc.toUpperCase()\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  tester(): void{\r\n    console.log(\"full ctrl\", this.otherSEItemArr.controls)\r\n  }\r\n\r\n  getOptionList(item: AbstractControl<any, any>):any[]{\r\n    let optionList:any[] = [];\r\n  \r\n    optionList = item.get('claimItemId')?.value && ((item.get('closedInd')?.value===1 && item.get('edited')?.value) \r\n    || (item.get('approveInd')?.value===1 && item.get('edited')?.value))\r\n      ? this.defaultOptionList : this.optionListMap.get(item.get('claimItemId')?.value)|| this.defaultOptionList; \r\n   \r\n    return optionList;\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  enableNoExistingVRental(): boolean{\r\n    return this.otherSEItemArr.controls.filter(x=> x.value.itemName ===this.VEHICLE_RENTAL).length === 0;\r\n  }\r\n\r\n  retrieveFormulaList():void{\r\n    let params = new HttpParams();\r\n    params = params.append(\"claimType\", this.SE_CLAIM_TYPE);\r\n    if(this.currHardCopyDetails?.restDayList){\r\n      params = params.append(\"restDayInd\", 1);\r\n    }\r\n    this.claimService.retrieveFormulaList({params}).subscribe((resp:any) => {\r\n      if(resp.status === 200 && resp.body.data){\r\n        const sortedData = resp.body.data.sort(this.sortFormulaListByCode());\r\n        sortedData.forEach((x:any)=>{\r\n          this.formulaList.push({\r\n            name:x.formulaDesc,\r\n            key: x.formulaCode\r\n          })\r\n        })\r\n    }},\r\n    (error: any) => {\r\n      console.log(\"error is\" + String(error?.error?.error_desc));\r\n      this.toastService.error(String(error?.error?.error_desc));\r\n    });\r\n  }\r\n\r\n  sortFormulaListByCode(){\r\n    const regex = \"^([0-9]*)([a-zA-Z])$\";\r\n    return function (a: any, b: any) {\r\n        //sort by number then alphabet\r\n        const aNum = Number(a.formulaCode.trim().match(regex)[1]);\r\n        const bNum = Number(b.formulaCode.trim().match(regex)[1]);\r\n        const aAlpha = a.formulaCode.trim().match(regex)[2];\r\n        const bAlpha =  b.formulaCode.trim().match(regex)[2];\r\n        if(aNum===bNum){\r\n          return aAlpha < bAlpha ? -1 : 1;\r\n        }\r\n        return aNum < bNum ? -1 : 1;\r\n    }\r\n  }\r\n\r\n  getCodeDesc(formulaCode: string): string{\r\n    const rslt = this.formulaList.find(x=>\r\n      x.key.trim() === formulaCode.trim()\r\n    );\r\n    return rslt?.name as string;\r\n  }\r\n\r\n  getTable(fa:any): any{\r\n    return fa.controls['otherSEItemTableArr'].controls;\r\n  }\r\n\r\n  addTableGroup(data: any): FormGroup{\r\n    return this.formBuilder.group({\r\n      acctgStartDate: data.acctgStartDate,\r\n      acctgEndDate: data.acctgEndDate,\r\n      annualIncome: data.annualIncome,\r\n      acctgDivisor: data.acctgDivisor,\r\n      apprAmt: data.apprAmt\r\n    })\r\n  };\r\n\r\n\r\n  //if edit = true, insert = false\r\n  onOpenInsertEditItem(edit: boolean, vehicleRental: boolean, claimItemId: string, index?: number):void{\r\n    this.displayDialog=true;\r\n    let apprAmt=0;\r\n    let itemName= \"\";\r\n    let formulaCode= \"\";\r\n    let latestStatus= \"\";\r\n    let apprBasis = \"\";\r\n    let itemType = \"\";\r\n    let computedFormula = \"\";\r\n    let computedAmt = 0;\r\n    let acctgStartDate;\r\n    let acctgEndDate;\r\n    let annualIncome = 0;\r\n    let acctgDivisor = 0;\r\n    const restDayList = this.currHardCopyDetails.restDayList?.map((ea: any)=>{\r\n      return this.dateUtilsService.convertDateToStr(this.dateUtilsService.convertStrToDate(ea, \"DD-MM-YYYY\"), \"YYYY-MM-DD\");\r\n    })\r\n    console.log(\"index is \", index)\r\n\r\n    console.log(\"claim item id\", claimItemId);\r\n\r\n    if(edit && index!==null && index!== undefined){\r\n        apprAmt = this.otherSEItemArr.controls[index].get('apprAmt').value;\r\n        itemName = this.otherSEItemArr.controls[index].get('itemName').value;\r\n        formulaCode = this.otherSEItemArr.controls[index].get('formulaCode').value;\r\n        latestStatus = this.otherSEItemArr.controls[index].get('latestStatus').value;\r\n        apprBasis = this.otherSEItemArr.controls[index].get('apprBasis').value;\r\n        itemType = this.otherSEItemArr.controls[index].get('itemType').value;\r\n        computedFormula = this.otherSEItemArr.controls[index].get('computedFormula').value;\r\n        computedAmt = this.otherSEItemArr.controls[index].get('computedAmt').value;\r\n        if(itemType==='ITX'){\r\n          const innerTblArr = this.otherSEItemArr.controls[index].get('otherSEItemTableArr') as FormArray;\r\n          acctgStartDate = innerTblArr.controls[0].get('acctgStartDate').value;\r\n          acctgEndDate = innerTblArr.controls[0].get('acctgEndDate').value;\r\n          annualIncome = innerTblArr.controls[0].get('annualIncome').value;\r\n          acctgDivisor = this.getDivisor(this.dateUtilsService.convertStrToDate(acctgStartDate, \"DD-MM-YYYY\"),\r\n          (this.dateUtilsService.convertStrToDate(acctgEndDate, \"DD-MM-YYYY\")));\r\n        }\r\n    }\r\n    const ref = this.dialogService.open(InsertItemDialogComponent,{\r\n      header: \"Item Details\",\r\n      width: '40vw',\r\n      data: {\r\n        vehicleRental,\r\n        edit,\r\n        claimItemId,\r\n        index,\r\n        apprAmt,\r\n        itemName,\r\n        formulaCode,\r\n        latestStatus,\r\n        apprBasis,\r\n        itemType,\r\n        computedFormula,\r\n        computedAmt,\r\n        claimId: this.currHardCopyDetails.claimId,\r\n        claimOption: this.currHardCopyDetails?.headerDto?.claimOption,\r\n        trgStartDte: this.currHardCopyDetails?.trgStartDte,\r\n        trgEndDte: this.currHardCopyDetails?.trgEndDte,\r\n        occupationCode: this.currHardCopyDetails.occupationCode,\r\n        acctgStartDate,\r\n        acctgEndDate,\r\n        annualIncome,\r\n        acctgDivisor,\r\n        disallowedItemNames: this.disallowedItemNames,\r\n        restDay: restDayList,\r\n        commencementDte: this.currHardCopyDetails.commencementDte\r\n      },\r\n      contentStyle: {\"padding-left\": \"2em\", \"padding-right\": \"2em\", 'max-height': '78vh', overflow: 'auto'},\r\n      baseZIndex: 10000\r\n    });\r\n    ref.onClose.subscribe((req: any) => {\r\n      this.displayDialog=false;\r\n      // let params = new HttpParams();\r\n      if(req){\r\n        console.log(\"outer req\", req)\r\n        this.onUpdateSubmit(req, index);\r\n          //create itemtype if not available\r\n          console.log(\"finish\", this.otherSEItemArr.controls[index].get('computedFormula').value)\r\n      }\r\n    });\r\n  }\r\n\r\n  //for frontend update submit from insert-item-dialog only, not saved yet\r\n  onUpdateSubmit(req: any, index: number): void{\r\n    //create itemtype if not available\r\n    //if newly created item default is SEO\r\n    req.itemType = req.itemType? req.itemType: this.getItemType();\r\n    if(req.edit && index!==null && index!==undefined){\r\n        this.otherSEItemArr.controls[index].get('edited').setValue(true);\r\n        this.otherSEItemArr.controls[index].get('apprBasis').setValue(req.apprBasis);\r\n        this.otherSEItemArr.controls[index].get('apprAmt').setValue(req.apprAmt);\r\n        this.otherSEItemArr.controls[index].get('formulaCode').setValue(req.formulaCode);\r\n        this.otherSEItemArr.controls[index].get('computedFormula').setValue(req.computedFormula);\r\n        this.otherSEItemArr.controls[index].get('computedAmt').setValue(req.computedAmt);\r\n\r\n        //if existing status is of closed type or approved type, after edit set to pend verify option in pend verify scenario\r\n        if(this.otherSEItemArr.controls[index].get('closedInd').value===1\r\n        || this.otherSEItemArr.controls[index].get('approveInd').value===1){\r\n          this.otherSEItemArr.controls[index].get('latestStatus').setValue(this.PEND_VERIFY_STATUS);\r\n        }\r\n\r\n        //for PAP during approval stage and there were changes and saved\r\n        //requires 2nd approval now, recall options dropdown from retrieve item status dropdown\r\n        if((this.station===\"A\" || this.station === \"S\")&& this.itemStatusChanges.get(req.id).beforeStatus === \"PAP\"){\r\n          console.log(\"reinitializing item status dropdown after editing item for PAP\")\r\n          let params = new HttpParams();\r\n          params = params.append(\"itemStatus\",this.itemStatusChanges.get(req.id).beforeStatus);\r\n          params = params.append(\"claimType\",'S');\r\n          params = params.append(\"station\",this.station);\r\n          params = params.append('itemAmtChangeInd', 1);\r\n       \r\n          this.claimService.retrieveDropDownItemStatus({params}).subscribe(resp => {\r\n            if (resp.body.data) {\r\n              this.optionListMap.set(req.id, resp.body.data.itemStatusDropdown?.map((x:any)=> {return {\r\n                name: x.statusDesc.toUpperCase(),\r\n                key: x.statusCode\r\n              }}))\r\n              // this.defaultOptionList = resp.body.data.itemStatusDropdown.map((x:any)=>{\r\n              //   return {\r\n              //     key: x.statusCode,\r\n              //     name: x.statusDesc.toUpperCase()\r\n              //   }\r\n              // });\r\n            }\r\n          });\r\n        }\r\n\r\n\r\n        this.recompute(this.otherSEItemArr.controls[index]);\r\n\r\n        if(req.itemType === 'ITX'){\r\n          const innerTblArr = this.otherSEItemArr.controls[index].get('otherSEItemTableArr') as FormArray;\r\n          innerTblArr.controls[0].get('acctgStartDate').setValue(req.acctgStartDate);\r\n          innerTblArr.controls[0].get('acctgEndDate').setValue(req.acctgEndDate);\r\n          innerTblArr.controls[0].get('annualIncome').setValue(req.annualIncome);\r\n          innerTblArr.controls[0].get('acctgDivisor').setValue(req.acctgDivisor);\r\n          innerTblArr.controls[0].get('apprAmt').setValue(req.apprAmt);\r\n\r\n        }\r\n\r\n    }else {\r\n      // if newly created\r\n\r\n        console.log(\"im here\")\r\n        this.otherSEItemArr.push(this.formBuilder.group({\r\n          collapseCard: true,\r\n          apprAmt: req.apprAmt,\r\n          itemName: req.itemName,\r\n          formulaCode: req.formulaCode,\r\n          latestStatus: this.PEND_VERIFY_STATUS,\r\n          apprBasis: req.apprBasis,\r\n          itemType: req.itemType,\r\n          computedFormula: \"\",\r\n          computedAmt: 0\r\n\r\n        }));\r\n        this.recompute(this.otherSEItemArr.controls[this.otherSEItemArr.length-1]);\r\n    }\r\n  }\r\n\r\n  getDivisor(acctgStartDate: Date, acctgEndDate: Date): number{\r\n    let difference = 0;\r\n    if(acctgStartDate && acctgEndDate){\r\n      difference = acctgEndDate.getTime() - acctgStartDate.getTime();\r\n    }\r\n    return Math.ceil(difference / (1000 * 3600 * 24));\r\n  }\r\n\r\n  deleteItem(index:number): void{\r\n    this.otherSEItemArr.removeAt(index);\r\n  }\r\n\r\n  //for saving from parent se claim verification\r\n  saveItemDetailsSection(): void{\r\n    console.log(\"test\")\r\n  }\r\n\r\n\r\n\r\n\r\n  updateApprAmountAndRecompute(totalAmtPay: any): void{\r\n    //update based on current claim option selected\r\n    let item = null;\r\n    if(this.currHardCopyDetails?.headerDto?.claimOption === '1'){\r\n      const aveItemArr = this.otherSEItemArr.controls.filter(x=> x.value.itemType === 'AVE');\r\n      if(aveItemArr.length>0){\r\n        item = aveItemArr[0];\r\n        if(item.get('latestStatus').value=== this.PEND_VERIFY_STATUS){\r\n          item.get('apprAmt').setValue(totalAmtPay);\r\n          //recompute\r\n          this.recompute(item);\r\n        }\r\n      }\r\n    }else if(this.currHardCopyDetails?.headerDto?.claimOption === '2'){\r\n      const itxItemArr = this.otherSEItemArr.controls.filter(x=> x.value.itemType === 'ITX');\r\n      if(itxItemArr.length>0){\r\n        item = itxItemArr[0];\r\n        if(item.get('latestStatus').value=== this.PEND_VERIFY_STATUS){\r\n          item.get('apprAmt').setValue(totalAmtPay);\r\n          //recompute\r\n          this.recompute(item);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  recompute(item: any): void{\r\n    //only recompute if it is not 13x\r\n    if(item.get('formulaCode').value!== '13x'){\r\n      console.log(\"recomputing for\",item)\r\n      const formulaReq:IComputeFormula = {\r\n        dateFrom:  this.currHardCopyDetails?.trgStartDte,\r\n        dateTo: this.currHardCopyDetails?.trgEndDte,\r\n        halfDayIndicator: \"N\",\r\n        approvedAmt: item.get('apprAmt').value,\r\n        formulaCode: item.get('formulaCode').value,\r\n        restDays: this.currHardCopyDetails.restDayList?.map((ea: any)=>{\r\n          return this.dateUtilsService.convertDateToStr(this.dateUtilsService.convertStrToDate(ea, \"DD-MM-YYYY\"), \"YYYY-MM-DD\");\r\n        }),\r\n        payPeriodStart: 0\r\n      }\r\n      this.formulaService.computeFormula(formulaReq, null).subscribe((resp:any) => {\r\n        if(resp.status === 200 && resp.body.data){\r\n          item.get('computedFormula').setValue(resp.body.data.computationString);\r\n          item.get('computedAmt').setValue(resp.body.data.amtPayable);\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(\"error is\" + String(error?.error?.error_desc));\r\n        this.toastService.error(String(error?.error?.error_desc));\r\n      });\r\n  \r\n      //send event out to matched attd\r\n      if(item.get('claimItemId')?.value){\r\n        this.recomputeMatchedAttdEvent.emit({\r\n          claimItemId: item.get('claimItemId').value,\r\n          apprAmt: item.get('apprAmt').value,\r\n          formulaCode: item.get('formulaCode').value\r\n        })\r\n      }\r\n    }\r\n  \r\n  }\r\n\r\n  accordionClick(): void{\r\n    this.selectedChange.emit(this.selected);\r\n  }\r\n\r\n  \r\n  //allows input on need basis\r\n  hasValidAuthorityAndStation(): boolean{\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_VERIFIER) && \r\n      this.station === NSPAY2_STATION.STATION_VERIFICATION){\r\n        return true;\r\n      }\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) && \r\n    this.station === NSPAY2_STATION.STATION_CERTIFICATION) {\r\n      return false;\r\n    }\r\n    if(this.accountService.hasAnyAuthority(NSPAY2_ROLES.CLAIMS_APPROVER) && \r\n    this.station === NSPAY2_STATION.STATION_APPROVAL) {\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n}\r\n","<p-accordionTab #sectionTab [disabled]=\"displayDialog\" [(selected)]=\"selected\" (click) = \"accordionClick()\">\r\n    <ng-template pTemplate=\"header\">\r\n      <div class = \"grid col-6 align-items-center my-0\">\r\n        <label class=\"col-form-label pl-1\">Item Details</label>\r\n      </div>\r\n      <div class=\"grid col-6 flex justify-content-end align-items-center m-0 p-0\">\r\n          <div *ngIf= \"currHardCopyDetails?.headerDto?.claimOption==='2'\" >\r\n              <!-- <button id = \"collapseExpand\" pButton label=\"Collapse All\" (click)=\"displayDialog=true;\">\r\n              </button> -->\r\n          </div>\r\n\r\n          <!-- if private hirer driver -> code = 230 and claim option is tax income and no existing vehiclee rental item -->\r\n          <div *ngIf= \"currHardCopyDetails?.headerDto?.claimOption==='2' && sectionTab.selected\r\n              && enableNoExistingVRental()\r\n              && currHardCopyDetails.occupationCode === PRIVATE_HIRER_OCCUP_CODE && !readOnly && hasValidAuthorityAndStation()\" >\r\n              <button id = \"insertVehicleRental\" pButton label=\"Insert Vehicle Rental\"\r\n              (click)=\"onOpenInsertEditItem(false, true, null, null)\">\r\n              </button>\r\n          </div>\r\n          <div *ngIf= \"currHardCopyDetails?.headerDto?.claimOption!=='2' && sectionTab.selected && !readOnly && hasValidAuthorityAndStation()\">\r\n              <button id = \"insertItem\" pButton label=\"Insert Item\" (click)=\"onOpenInsertEditItem(false, false, null, null)\">\r\n              </button>\r\n          </div>\r\n      </div>\r\n    </ng-template>\r\n    <form [formGroup] = \"itemForm\">\r\n        <div *ngIf=\"otherSEItemArr.controls.length!==0; else emptymessage\">\r\n            <div class = \"grid col-12 m-0 p-0\" formArrayName=\"otherSEItemArr\">\r\n                <p-card class = \"flex col-6 align-items-stretch p-1 m-0\" [style]=\"{'width': '100%'}\" *ngFor=\"let item of otherSEItemArr.controls; let i = index\" [formGroupName]=\"i\">\r\n                    <div class = \"grid p-0 m-0\">\r\n                        <div class = \"col-7 flex align-items-center p-0 m-0\" >\r\n                                <p-toggleButton *ngIf = \"item.value.itemType === 'ITX'\" class =\"collapse-card\"\r\n                                formControlName=\"collapseCard\" onIcon=\"pi pi-plus\" offIcon=\"pi pi-minus\" [style]=\"{'margin-right': '0.5em'}\"></p-toggleButton>\r\n                                <div style=\"margin-right: 2em\"><b>{{ item.value.itemName }}</b></div>\r\n                                <div style=\"margin-right: 2em\">Appr Amt: {{ item.value.apprAmt | number : '1.2-2'}}</div>\r\n                                <div style=\"margin-right: 2em\">Formula: {{ item.value.formulaCode }} {{ getCodeDesc(item.value.formulaCode) }}</div>\r\n                            </div>\r\n                        <div class = \"col-5 flex align-items-center justify-content-end p-0 m-0\">\r\n                            <!--disabled dropdown for approver station if latest status is PAP with other conflict approved claims-->\r\n                            <p-dropdown  *ngIf=\"!readOnly && ((item.get('displayType') && item.get('displayType').value === 'dropdown') || !item.get('displayType') || \r\n                            (item.get('edited').value && item.get('closedInd').value===1) || (item.get('edited').value && item.get('approveInd').value===1)) ;else labelStatus\"\r\n                            [options]=\"getOptionList(item)\" id=\"latestStatus\" formControlName=\"latestStatus\" optionLabel=\"name\" optionValue=\"key\"\r\n                            placeholder=\"Select\" [style]=\"{'width': '15em'}\" [disabled] = \"hasConflictAppClaims\"></p-dropdown>\r\n                            <small *ngIf=\"item.get('latestStatus')?.touched && item.get('latestStatus')?.hasError('required')\"\r\n                            class=\"p-error\" icTranslate=\"nspay2App.claim.validation.CLM-V023\"\r\n                            [translateValues]=\"{ field: 'Item Status' }\">\r\n                            </small>\r\n                            <p-button icon=\"pi pi-pencil\"  *ngIf = \"hasEditButton(item)\"\r\n                            (onClick)=\"onOpenInsertEditItem(true, false, item.value.claimItemId, i)\" [style]= \"{'margin-left': '.5em'}\"\r\n                            [disabled] = \"hasConflictAppClaims && item.get('latestStatus').value === 'PAP' && (station === 'S' || station === 'A')\"></p-button>\r\n                            <p-button *ngIf = \"!otherSEItemArr.controls[i]?.get('claimItemId')?.value\" id = \"deleteItem\" icon=\"pi pi-trash\" (click) = \"deleteItem(i)\" [style]= \"{'margin-left': '.5em'}\"></p-button>\r\n                            <ng-template #labelStatus>\r\n                                <div class=\"flex align-items-center\">\r\n                                    {{ getItemStatusDesc(item.value.latestStatus) }}\r\n                                </div>\r\n                            </ng-template>\r\n                        </div>\r\n\r\n                        <div class = \"col-12 flex align-items-center p-0 m-0\" >\r\n                            <div >Computation: {{ item.value.computedFormula }}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf = \"!item.value.collapseCard\">\r\n                        <p-divider></p-divider>\r\n                        <div formArrayName=\"otherSEItemTableArr\">\r\n                        <p-table\r\n                        [value]=\"getTable(item)\"\r\n                        [loading] = \"loading\"\r\n                        styleClass=\"p-datatable-gridlines p-datatable-striped\"\r\n                        >\r\n                            <ng-template pTemplate=\"header\" let-columns>\r\n                                <tr>\r\n                                    <th scope=\"col\">Accounting Start</th>\r\n                                    <th scope=\"col\">Accounting End</th>\r\n                                    <th scope=\"col\">Annual Income</th>\r\n                                    <th scope=\"col\">Approved Amt</th>\r\n                                    <th scope=\"col\">Divisor</th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"body\" let-innerItem let-rowIndex = \"rowIndex\">\r\n                                <tr>\r\n                                    <td>{{ innerItem.value.acctgStartDate }}</td>\r\n                                    <td>{{ innerItem.value.acctgEndDate  }}</td>\r\n                                    <td>{{ innerItem.value.annualIncome | number : '1.2-2'}}</td>\r\n                                    <td>{{ innerItem.value.apprAmt | number : '1.2-2'}}</td>\r\n                                    <td>{{ innerItem.value.acctgDivisor }}</td>\r\n                                </tr>\r\n                            </ng-template>\r\n                        </p-table>\r\n                        </div>\r\n                    </div>\r\n                </p-card>\r\n            </div>\r\n        </div>\r\n        <ng-template #emptymessage>\r\n            <span><i class=\"pi pi-info-circle\"></i>\r\n                No records found.</span>\r\n         </ng-template>\r\n    </form>\r\n\r\n</p-accordionTab>\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}