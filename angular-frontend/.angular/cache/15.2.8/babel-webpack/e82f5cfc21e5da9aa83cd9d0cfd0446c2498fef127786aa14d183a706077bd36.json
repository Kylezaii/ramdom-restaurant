{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApproveMassUploadComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@angular/common\");\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst fileupload2_directive_1 = require(\"app/shared/validator/fileupload2.directive\");\nconst mass_upload_enum_model_1 = require(\"../model/mass-upload-enum.model\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i2 = tslib_1.__importStar(require(\"app/layouts/service/customtoast.service\"));\nconst i3 = tslib_1.__importStar(require(\"app/shared/confirm/nsp-confirm.service\"));\nconst i4 = tslib_1.__importStar(require(\"app/shared/service/ns2-http.service\"));\nconst i5 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i6 = tslib_1.__importStar(require(\"../service/mass-upload.service\"));\nconst i7 = tslib_1.__importStar(require(\"app/core/util/date-utils.service\"));\nconst i8 = tslib_1.__importStar(require(\"app/core/util/export-utils.service\"));\nconst i9 = tslib_1.__importStar(require(\"app/shared/service/file-upload.service\"));\nconst i10 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i11 = tslib_1.__importStar(require(\"primeng/api\"));\nconst i12 = tslib_1.__importStar(require(\"primeng/button\"));\nconst i13 = tslib_1.__importStar(require(\"primeng/tooltip\"));\nconst i14 = tslib_1.__importStar(require(\"primeng/table\"));\nconst i15 = tslib_1.__importStar(require(\"primeng/dialog\"));\nconst i16 = tslib_1.__importStar(require(\"primeng/inputtextarea\"));\nconst i17 = tslib_1.__importStar(require(\"primeng/confirmpopup\"));\nconst i18 = tslib_1.__importStar(require(\"primeng/fileupload\"));\nconst i19 = tslib_1.__importStar(require(\"../../../shared/component/file-upload/file-upload.component\"));\nconst i20 = tslib_1.__importStar(require(\"primeng/panel\"));\nconst _c0 = [\"sourceFile\"];\nfunction ApproveMassUploadComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n      \");\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2, \"Mass Upload\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n    \");\n  }\n}\nfunction ApproveMassUploadComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n      \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n        \");\n    i0.ɵɵelementStart(3, \"th\", 36)(4, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function ApproveMassUploadComponent_ng_template_7_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(3);\n      return i0.ɵɵresetView(ctx_r10.exportCSV(_r0));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(5, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n      \");\n    i0.ɵɵelementStart(7, \"tr\");\n    i0.ɵɵtext(8, \"\\n        \");\n    i0.ɵɵelementStart(9, \"th\", 38);\n    i0.ɵɵtext(10, \"S/N\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n        \");\n    i0.ɵɵelementStart(12, \"th\", 39);\n    i0.ɵɵtext(13, \"Transaction ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \"\\n        \");\n    i0.ɵɵelementStart(15, \"th\", 39);\n    i0.ɵɵtext(16, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n        \");\n    i0.ɵɵelementStart(18, \"th\", 39);\n    i0.ɵɵtext(19, \"Filename\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n        \");\n    i0.ɵɵelementStart(21, \"th\", 39);\n    i0.ɵɵtext(22, \"No. Of Records\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n        \");\n    i0.ɵɵelementStart(24, \"th\", 39);\n    i0.ɵɵtext(25, \"Uploaded By\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n        \");\n    i0.ɵɵelementStart(27, \"th\", 39);\n    i0.ɵɵtext(28, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n    \");\n  }\n}\nfunction ApproveMassUploadComponent_ng_template_9_span_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const record_r12 = i0.ɵɵnextContext().$implicit;\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r14.massUploadStatusEnum[record_r12.status]);\n  }\n}\nfunction ApproveMassUploadComponent_ng_template_9_span_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵelementStart(2, \"a\", 41);\n    i0.ɵɵlistener(\"click\", function ApproveMassUploadComponent_ng_template_9_span_36_Template_a_click_2_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const record_r12 = i0.ɵɵnextContext().$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.downloadFile(record_r12.uploadedFileId, record_r12.fileName));\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const record_r12 = i0.ɵɵnextContext().$implicit;\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n              \", ctx_r15.massUploadStatusEnum[record_r12.status], \"\\n            \");\n  }\n}\nfunction ApproveMassUploadComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \"\\n      \");\n    i0.ɵɵelementStart(1, \"tr\", 40);\n    i0.ɵɵtext(2, \"\\n        \");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n        \");\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n        \");\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \"\\n        \");\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13, \"\\n          \");\n    i0.ɵɵelementStart(14, \"a\", 41);\n    i0.ɵɵlistener(\"click\", function ApproveMassUploadComponent_ng_template_9_Template_a_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const record_r12 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.downloadFile(record_r12.uploadedFileId, record_r12.fileName));\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\n        \");\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n        \");\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22, \"\\n          \");\n    i0.ɵɵelementStart(23, \"span\");\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(25, \"br\");\n    i0.ɵɵtext(26, \"\\n          \");\n    i0.ɵɵelementStart(27, \"span\");\n    i0.ɵɵtext(28);\n    i0.ɵɵpipe(29, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n        \");\n    i0.ɵɵelementStart(32, \"td\");\n    i0.ɵɵtext(33, \"\\n          \");\n    i0.ɵɵtemplate(34, ApproveMassUploadComponent_ng_template_9_span_34_Template, 2, 1, \"span\", 13);\n    i0.ɵɵtext(35, \"\\n          \");\n    i0.ɵɵtemplate(36, ApproveMassUploadComponent_ng_template_9_span_36_Template, 5, 1, \"span\", 13);\n    i0.ɵɵtext(37, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(38, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(39, \"\\n    \");\n  }\n  if (rf & 2) {\n    const record_r12 = ctx.$implicit;\n    const i_r13 = ctx.rowIndex;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pSelectableRow\", record_r12);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i_r13 + 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(record_r12.allowanceFileId);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.massUploadTypeEnum[record_r12.type]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(record_r12.fileName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(record_r12.count);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(record_r12.uploadedBy);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(29, 10, record_r12.uploadedDt, \"dd-MM-YYYY\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", record_r12.status != \"PENDING_APPROVAL_CONFLICT\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", record_r12.status == \"PENDING_APPROVAL_CONFLICT\");\n  }\n}\nfunction ApproveMassUploadComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n      \");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtext(2, \"\\n        \");\n    i0.ɵɵelementStart(3, \"td\", 42);\n    i0.ɵɵtext(4, \"No pending Mass Upload records found.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n    \");\n  }\n}\nfunction ApproveMassUploadComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n              \");\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3, \"\\n                Please upload file for verification.\\n              \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n              \");\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtext(6, \"\\n                File verification is required for approval.\\n              \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApproveMassUploadComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n              File verified.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApproveMassUploadComponent_ng_template_53_ul_1_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 44);\n    i0.ɵɵtext(1, \"\\n                \");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3, \"\\n                  \");\n    i0.ɵɵelementStart(4, \"a\", 45);\n    i0.ɵɵlistener(\"click\", function ApproveMassUploadComponent_ng_template_53_ul_1_li_2_Template_a_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r27);\n      const doc_r25 = restoredCtx.$implicit;\n      const ctx_r26 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r26.downloadFile(doc_r25.documentId, doc_r25.fileName));\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n              \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const doc_r25 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\\n                    \", doc_r25.fileName, \"\\n                  \");\n  }\n}\nfunction ApproveMassUploadComponent_ng_template_53_ul_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtext(1, \"\\n              \");\n    i0.ɵɵtemplate(2, ApproveMassUploadComponent_ng_template_53_ul_1_li_2_Template, 8, 1, \"li\", 43);\n    i0.ɵɵtext(3, \"\\n            \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r23.supportingDocs);\n  }\n}\nfunction ApproveMassUploadComponent_ng_template_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n            \");\n    i0.ɵɵtemplate(1, ApproveMassUploadComponent_ng_template_53_ul_1_Template, 4, 1, \"ul\", 13);\n    i0.ɵɵtext(2, \"\\n          \");\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.supportingDocs.length > 0);\n  }\n}\nfunction ApproveMassUploadComponent_span_83_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 46);\n    i0.ɵɵtext(1, \"\\n        Rejection Reason required\\n      \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = function () {\n  return [10, 25, 50];\n};\nconst _c2 = function () {\n  return {\n    \"justify-content\": \"end\"\n  };\n};\nconst _c3 = function () {\n  return {\n    \"margin-left\": \".5em\",\n    \"margin-bottom\": \".5em\"\n  };\n};\nconst _c4 = function () {\n  return {\n    width: \"35vw\"\n  };\n};\nconst _c5 = function () {\n  return {\n    \"960px\": \"75vw\"\n  };\n};\nclass ApproveMassUploadComponent {\n  constructor(fb, toastService, nspConfirmService, ns2httpService, route, router, massUploadService, dateUtilsService, exportUtilsService, fileUploadService, localeId) {\n    this.fb = fb;\n    this.toastService = toastService;\n    this.nspConfirmService = nspConfirmService;\n    this.ns2httpService = ns2httpService;\n    this.route = route;\n    this.router = router;\n    this.massUploadService = massUploadService;\n    this.dateUtilsService = dateUtilsService;\n    this.exportUtilsService = exportUtilsService;\n    this.fileUploadService = fileUploadService;\n    this.localeId = localeId;\n    this.rejectMassUploadDialog = {\n      display: false\n    };\n    this.massUploadRecords = [];\n    this.supportingDocs = [];\n    this.verifyFileForm = this.fb.group({\n      sourceFile: new forms_1.FormControl([], [fileupload2_directive_1.FileUploadValidator2.maxFileLimit(1), fileupload2_directive_1.FileUploadValidator2.allowableExtension(\".csv\")])\n    });\n    this.rejectMassUploadForm = this.fb.group({\n      rejectionReasonInput: new forms_1.FormControl(null, forms_1.Validators.required)\n    });\n    this.pageData = {\n      currentPage: 0\n    };\n    this.pageSize = 10;\n    this.massUploadStatusEnum = mass_upload_enum_model_1.MassUploadStatus;\n    this.massUploadTypeEnum = mass_upload_enum_model_1.MassUploadType;\n    this.sourceFileVerified = false;\n    this.fileUploadFileLimit = 1;\n    //\n  }\n\n  ngOnInit() {\n    //\n    this.sourceFileUploadComponent.disableButton = true;\n  }\n  // Load Records\n  loadMassUploadRecords(event) {\n    console.log(\"loading records...\");\n    this.loading = true;\n    this.lazyLoadEvent = event;\n    setTimeout(() => {\n      const options = this.ns2httpService.convertLazyEvent(event, this.pageData, this.pageSize);\n      // service for lazy loading records\n      this.massUploadService.getAllPendingApproval(options).subscribe(res => {\n        console.log(res);\n        if (res.body?.data?.content) {\n          this.massUploadRecords = res.body.data.content;\n          this.totalRecords = res.body.data.totalElements;\n        } else {\n          this.massUploadRecords = [];\n          this.totalRecords = 0;\n        }\n        this.loading = false;\n      }, error => {\n        console.log(error);\n      });\n    }, 1000);\n  }\n  onPage(event) {\n    this.pageSize = event.rows;\n    this.pageData.currentPage = event.first / event.rows;\n  }\n  // Download File\n  downloadFile(fileId, file) {\n    this.toastService.success(`Downloading doc ${file}`);\n    if (fileId) {\n      console.log(fileId);\n      this.fileUploadService.downloadTxnId(fileId).subscribe(res => {\n        if (res) {\n          const data = res;\n          const contentDispositionHeader = data.headers.get('content-disposition');\n          const fileName = contentDispositionHeader.split(';')[1].trim().split('=')[1].replace(/\"/g, '');\n          const blob = new Blob([data.body], {\n            type: data.headers.get('content-type')\n          });\n          const anchor = document.createElement(\"a\");\n          anchor.href = URL.createObjectURL(blob);\n          anchor.download = fileName;\n          anchor.click();\n        }\n      }, error => {\n        console.log(error);\n        this.toastService.error(error.error?.error_desc);\n      });\n    }\n  }\n  loadSupportingDocs(id) {\n    this.massUploadService.getSupportingDocs(id).subscribe(res => {\n      console.log(res.body.data);\n      this.supportingDocs = res.body.data;\n      console.log(this.supportingDocs);\n    }, error => {\n      console.log(error);\n    });\n  }\n  onRowSelect(event) {\n    console.log(event);\n    this.sourceFileUploadComponent.clearAndReset();\n    this.sourceFileVerified = false;\n    this.sourceFileUploadComponent.disableButton = false;\n    console.log(this.selectedRecord);\n    this.loadSupportingDocs(this.selectedRecord.allowanceFileId);\n  }\n  onRowUnselect(event) {\n    console.log(event);\n    this.sourceFileUploadComponent.clearAndReset();\n    this.sourceFileVerified = false;\n    this.sourceFileUploadComponent.disableButton = true;\n    console.log(this.selectedRecord);\n    this.supportingDocs = [];\n  }\n  // Verify Source File\n  verifySourceFile(event, key, dialog) {\n    this.nspConfirmService.onConfirmPopup(event, key, dialog, () => {\n      const request = {\n        verifyFileTxnId: this.sourceFileUploadComponent.verifiedFiles.map(x => String(x.meta_data.id))[0]\n      };\n      const verifyFileTxnId = this.sourceFileUploadComponent.verifiedFiles.map(x => String(x.meta_data.id))[0];\n      console.log(request);\n      this.massUploadService.verifySourceFile(this.selectedRecord.allowanceFileId, request).subscribe(res => {\n        console.log(res);\n        const verified = res.body?.data;\n        if (verified) {\n          this.sourceFileVerified = true;\n          this.sourceFileUploadComponent.disableButton = true;\n          this.toastService.info(\"Source is verified\");\n        } else {\n          this.toastService.error(\"Source not matched\");\n        }\n      }, error => {\n        console.log(error);\n        this.toastService.error(\"Source not matched\");\n      });\n    });\n  }\n  onApprove(event, key) {\n    this.nspConfirmService.onConfirmPopup(event, key, null, () => {\n      this.approveMassUpload();\n    });\n  }\n  // Approve Mass Upload\n  approveMassUpload() {\n    const request = {\n      requestId: this.selectedRecord.allowanceFileId,\n      approve: true\n    };\n    console.log(request);\n    this.massUploadService.massUploadApproval(request).subscribe(res => {\n      console.log(res);\n      this.toastService.success(\"Successfully approved mass upload record\");\n      this.loadMassUploadRecords(this.lazyLoadEvent);\n    }, error => {\n      console.log(error);\n      this.toastService.error(error.error.error_desc);\n    });\n  }\n  onReject(dialog) {\n    dialog.display = true;\n  }\n  onClose(dialog) {\n    dialog.display = false;\n    const rejInput = this.rejectMassUploadForm.get('rejectionReasonInput');\n    rejInput.patchValue(null);\n    rejInput.markAsUntouched();\n    rejInput.markAsPristine();\n    this.rejectMassUploadForm.markAsPristine();\n  }\n  // Reject Mass Upload\n  rejectMassUpload(dialog) {\n    const request = {\n      requestId: this.selectedRecord.allowanceFileId,\n      approve: false,\n      rejectionReason: this.rejectMassUploadForm.get('rejectionReasonInput').value\n    };\n    console.log(request);\n    this.massUploadService.massUploadApproval(request).subscribe(res => {\n      console.log(res);\n      this.toastService.success(\"Successfully rejected mass upload record\");\n      this.loadMassUploadRecords(this.lazyLoadEvent);\n      this.onClose(dialog);\n    }, error => {\n      console.log(error);\n      this.toastService.error(error.error.error_desc);\n    });\n  }\n  exportCSV(table) {\n    if (this.massUploadRecords) {\n      const data = this.massUploadRecords;\n      const columns = [{\n        field: 'sn',\n        header: 'SN',\n        index: 0\n      }, {\n        field: 'txnId',\n        header: 'Transaction ID',\n        index: 1\n      }, {\n        field: 'type',\n        header: 'Type',\n        index: 2\n      }, {\n        field: 'filename',\n        header: 'Filename',\n        index: 3\n      }, {\n        field: 'noOfRecords',\n        header: 'No. Of Records',\n        index: 4\n      }, {\n        field: 'uploadedBy',\n        header: 'Uploaded By',\n        index: 5\n      }, {\n        field: 'status',\n        header: 'Status',\n        index: 6\n      }];\n      const dtoList = [];\n      console.log(\"data\", data);\n      data.forEach((record, index) => {\n        const dto = {\n          sn: index + 1,\n          txnId: record.txnId,\n          type: this.massUploadTypeEnum[record.type],\n          filename: record.filename,\n          noOfRecords: record.noOfRecords,\n          uploadedBy: `${String(record.uploadedBy ? record.uploadedBy : \"\")} ${String(this.dateUtilsService.formatStrDate(record.uploadedDt, \"DD-MM-YYYY\"))}`,\n          status: this.massUploadStatusEnum[record.status]\n        };\n        dtoList.push(dto);\n      });\n      this.exportUtilsService.exportCSV(table, dtoList, this.massUploadRecords.length, columns, \"MassUploadRecordList_\".concat((0, common_1.formatDate)(new Date(), \"dd-MM-YYYY\", this.localeId)));\n    } else {\n      this.toastService.info(\"No records to export\");\n    }\n  }\n}\nexports.ApproveMassUploadComponent = ApproveMassUploadComponent;\nApproveMassUploadComponent.ɵfac = function ApproveMassUploadComponent_Factory(t) {\n  return new (t || ApproveMassUploadComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CustomToastService), i0.ɵɵdirectiveInject(i3.NspConfirmationService), i0.ɵɵdirectiveInject(i4.Ns2HttpService), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i6.MassUploadService), i0.ɵɵdirectiveInject(i7.DateUtilsService), i0.ɵɵdirectiveInject(i8.ExportUtilsService), i0.ɵɵdirectiveInject(i9.FileUploadService), i0.ɵɵdirectiveInject(core_1.LOCALE_ID));\n};\nApproveMassUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ApproveMassUploadComponent,\n  selectors: [[\"n2-approve-mass-upload\"]],\n  viewQuery: function ApproveMassUploadComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sourceFileUploadComponent = _t.first);\n    }\n  },\n  decls: 95,\n  vars: 39,\n  consts: [[1, \"grid\"], [\"styleClass\", \"p-datatable-gridlines\", \"selectionMode\", \"single\", \"datakey\", \"id\", \"responsiveLayout\", \"scroll\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 1, \"col-8\", 3, \"value\", \"selection\", \"paginator\", \"rows\", \"totalRecords\", \"rowsPerPageOptions\", \"showCurrentPageReport\", \"lazy\", \"loading\", \"selectionChange\", \"onRowSelect\", \"onRowUnselect\", \"onLazyLoad\", \"onPage\"], [\"mut\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"col-4\"], [\"header\", \"Verify Source File\"], [1, \"verifyFile\", 3, \"formGroup\"], [\"formControlName\", \"sourceFile\", \"id\", \"sourceFile\", 3, \"externalFileLimit\", \"contentHeight\"], [\"sourceFile\", \"\"], [1, \"col-9\"], [4, \"ngIf\"], [1, \"col-3\"], [1, \"flex\"], [\"pButton\", \"\", \"label\", \"Submit\", 3, \"disabled\", \"click\"], [\"key\", \"massUploadFileVerifyUpload\"], [\"header\", \"Supporting Document\", \"styleClass\", \"mt-4\"], [1, \"suppDocs\"], [\"chooseStyleClass\", \"hidden\", 3, \"showUploadButton\", \"showCancelButton\", \"disabled\"], [\"pTemplate\", \"content\"], [1, \"mt-3\", \"nsp-align-right\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Reject\", 1, \"w-7rem\", \"p-button-outlined\", 3, \"click\"], [\"key\", \"approveMassUploadRecord\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Approve\", 1, \"w-7rem\", \"ml-2\", 3, \"disabled\", \"click\"], [\"header\", \"Reject Mass Upload\", 3, \"visible\", \"draggable\", \"resizable\", \"modal\", \"breakpoints\", \"visibleChange\", \"onHide\"], [3, \"formGroup\"], [1, \"field\", \"col\", \"w-full\"], [\"for\", \"confirmRemarksInput\", 1, \"align-items-start\"], [1, \"w-full\"], [\"pInputTextarea\", \"\", \"formControlName\", \"rejectionReasonInput\", 1, \"w-full\", \"p-error\", 3, \"rows\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [1, \"mt-5\", \"nsp-align-right\", \"gap-2\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Cancel\", 1, \"w-7rem\", \"p-button-danger\", 3, \"click\"], [\"pButton\", \"\", \"label\", \"Reject\", 1, \"w-7rem\", \"ml-2\", \"p-button-outlined\", 3, \"disabled\", \"click\"], [\"scope\", \"colgroup\", \"colspan\", \"7\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-file-o\", \"pTooltip\", \"Export as CSV\", \"tooltipPosition\", \"bottom\", 3, \"click\"], [\"scope\", \"col\", 1, \"w-3rem\"], [\"scope\", \"col\"], [3, \"pSelectableRow\"], [1, \"text-blue-500\", \"underline\", 3, \"click\"], [\"colspan\", \"11\"], [\"class\", \"list-none\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-none\"], [1, \"text-blue-500\", \"underline\", \"font-bold\", 3, \"click\"], [1, \"form-text\", \"text-danger\"]],\n  template: function ApproveMassUploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"p-table\", 1, 2);\n      i0.ɵɵlistener(\"selectionChange\", function ApproveMassUploadComponent_Template_p_table_selectionChange_2_listener($event) {\n        return ctx.selectedRecord = $event;\n      })(\"onRowSelect\", function ApproveMassUploadComponent_Template_p_table_onRowSelect_2_listener($event) {\n        return ctx.onRowSelect($event);\n      })(\"onRowUnselect\", function ApproveMassUploadComponent_Template_p_table_onRowUnselect_2_listener($event) {\n        return ctx.onRowUnselect($event);\n      })(\"onLazyLoad\", function ApproveMassUploadComponent_Template_p_table_onLazyLoad_2_listener($event) {\n        return ctx.loadMassUploadRecords($event);\n      })(\"onPage\", function ApproveMassUploadComponent_Template_p_table_onPage_2_listener($event) {\n        return ctx.onPage($event);\n      });\n      i0.ɵɵtext(4, \"\\n    \");\n      i0.ɵɵtemplate(5, ApproveMassUploadComponent_ng_template_5_Template, 4, 0, \"ng-template\", 3);\n      i0.ɵɵtext(6, \"\\n    \");\n      i0.ɵɵtemplate(7, ApproveMassUploadComponent_ng_template_7_Template, 31, 0, \"ng-template\", 4);\n      i0.ɵɵtext(8, \"\\n    \");\n      i0.ɵɵtemplate(9, ApproveMassUploadComponent_ng_template_9_Template, 40, 13, \"ng-template\", 5);\n      i0.ɵɵtext(10, \"\\n    \");\n      i0.ɵɵtemplate(11, ApproveMassUploadComponent_ng_template_11_Template, 7, 0, \"ng-template\", 6);\n      i0.ɵɵtext(12, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\n  \");\n      i0.ɵɵelementStart(14, \"div\", 7);\n      i0.ɵɵtext(15, \"\\n    \");\n      i0.ɵɵelementStart(16, \"p-panel\", 8);\n      i0.ɵɵtext(17, \"\\n      \");\n      i0.ɵɵelementStart(18, \"form\", 9);\n      i0.ɵɵtext(19, \"\\n        \");\n      i0.ɵɵelement(20, \"n2-file-upload\", 10, 11);\n      i0.ɵɵtext(22, \"\\n        \");\n      i0.ɵɵelement(23, \"br\");\n      i0.ɵɵtext(24, \"\\n        \");\n      i0.ɵɵelementStart(25, \"div\", 0);\n      i0.ɵɵtext(26, \"\\n          \");\n      i0.ɵɵelementStart(27, \"div\", 12);\n      i0.ɵɵtext(28, \"\\n            \");\n      i0.ɵɵtemplate(29, ApproveMassUploadComponent_div_29_Template, 8, 0, \"div\", 13);\n      i0.ɵɵtext(30, \"\\n            \");\n      i0.ɵɵtemplate(31, ApproveMassUploadComponent_div_31_Template, 2, 0, \"div\", 13);\n      i0.ɵɵtext(32, \"\\n          \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(33, \"\\n          \");\n      i0.ɵɵelementStart(34, \"div\", 14);\n      i0.ɵɵtext(35, \"\\n            \");\n      i0.ɵɵelementStart(36, \"div\", 15);\n      i0.ɵɵtext(37, \"\\n              \");\n      i0.ɵɵelementStart(38, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function ApproveMassUploadComponent_Template_button_click_38_listener($event) {\n        return ctx.verifySourceFile($event, \"massUploadFileVerifyUpload\", null);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(39, \"\\n              \");\n      i0.ɵɵelement(40, \"p-confirmPopup\", 17);\n      i0.ɵɵtext(41, \"\\n            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(42, \"\\n          \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(43, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(44, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(45, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(46, \"\\n    \");\n      i0.ɵɵelementStart(47, \"p-panel\", 18);\n      i0.ɵɵtext(48, \"\\n      \");\n      i0.ɵɵelementStart(49, \"div\", 19);\n      i0.ɵɵtext(50, \"\\n        \");\n      i0.ɵɵelementStart(51, \"p-fileUpload\", 20);\n      i0.ɵɵtext(52, \"\\n          \");\n      i0.ɵɵtemplate(53, ApproveMassUploadComponent_ng_template_53_Template, 3, 1, \"ng-template\", 21);\n      i0.ɵɵtext(54, \"\\n        \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(55, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(56, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(57, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(58, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(59, \"\\n\\n\");\n      i0.ɵɵelementStart(60, \"div\", 22);\n      i0.ɵɵtext(61, \"\\n  \");\n      i0.ɵɵelementStart(62, \"button\", 23);\n      i0.ɵɵlistener(\"click\", function ApproveMassUploadComponent_Template_button_click_62_listener() {\n        return ctx.onReject(ctx.rejectMassUploadDialog);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(63, \"\\n  \");\n      i0.ɵɵelement(64, \"p-confirmPopup\", 24);\n      i0.ɵɵtext(65, \"\\n  \");\n      i0.ɵɵelementStart(66, \"button\", 25);\n      i0.ɵɵlistener(\"click\", function ApproveMassUploadComponent_Template_button_click_66_listener($event) {\n        return ctx.onApprove($event, \"approveMassUploadRecord\");\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(67, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(68, \"\\n\\n\");\n      i0.ɵɵelementStart(69, \"p-dialog\", 26);\n      i0.ɵɵlistener(\"visibleChange\", function ApproveMassUploadComponent_Template_p_dialog_visibleChange_69_listener($event) {\n        return ctx.rejectMassUploadDialog.display = $event;\n      })(\"onHide\", function ApproveMassUploadComponent_Template_p_dialog_onHide_69_listener() {\n        return ctx.onClose(ctx.rejectMassUploadDialog);\n      });\n      i0.ɵɵtext(70, \"\\n  \");\n      i0.ɵɵelementStart(71, \"form\", 27);\n      i0.ɵɵtext(72, \"\\n    \");\n      i0.ɵɵelementStart(73, \"span\", 28);\n      i0.ɵɵtext(74, \"\\n      \");\n      i0.ɵɵelementStart(75, \"label\", 29);\n      i0.ɵɵtext(76, \"Reason:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(77, \"\\n      \");\n      i0.ɵɵelementStart(78, \"span\", 30);\n      i0.ɵɵtext(79, \"\\n        \");\n      i0.ɵɵelement(80, \"textarea\", 31);\n      i0.ɵɵtext(81, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(82, \"\\n      \");\n      i0.ɵɵtemplate(83, ApproveMassUploadComponent_span_83_Template, 2, 0, \"span\", 32);\n      i0.ɵɵtext(84, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(85, \"\\n    \");\n      i0.ɵɵelementStart(86, \"div\", 33);\n      i0.ɵɵtext(87, \"\\n      \");\n      i0.ɵɵelementStart(88, \"button\", 34);\n      i0.ɵɵlistener(\"click\", function ApproveMassUploadComponent_Template_button_click_88_listener() {\n        return ctx.onClose(ctx.rejectMassUploadDialog);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(89, \"\\n      \");\n      i0.ɵɵelementStart(90, \"button\", 35);\n      i0.ɵɵlistener(\"click\", function ApproveMassUploadComponent_Template_button_click_90_listener() {\n        return ctx.rejectMassUpload(ctx.rejectMassUploadDialog);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(91, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(92, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(93, \"\\n\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(94, \"\\n\");\n    }\n    if (rf & 2) {\n      let tmp_29_0;\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", ctx.massUploadRecords)(\"selection\", ctx.selectedRecord)(\"paginator\", true)(\"rows\", 10)(\"totalRecords\", ctx.totalRecords)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(34, _c1))(\"showCurrentPageReport\", true)(\"lazy\", true)(\"loading\", ctx.loading);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"formGroup\", ctx.verifyFileForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"externalFileLimit\", ctx.fileUploadFileLimit)(\"contentHeight\", \"150px\");\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", !ctx.sourceFileVerified);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.sourceFileVerified);\n      i0.ɵɵadvance(5);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(35, _c2));\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(36, _c3));\n      i0.ɵɵproperty(\"disabled\", ctx.sourceFileUploadComponent.verifiedFiles.length === 0 || ctx.sourceFileVerified);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"showUploadButton\", false)(\"showCancelButton\", false)(\"disabled\", true);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"disabled\", !ctx.sourceFileVerified || ctx.selectedRecord == null);\n      i0.ɵɵadvance(3);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(37, _c4));\n      i0.ɵɵproperty(\"visible\", ctx.rejectMassUploadDialog.display)(\"draggable\", false)(\"resizable\", false)(\"modal\", true)(\"breakpoints\", i0.ɵɵpureFunction0(38, _c5));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.rejectMassUploadForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"rows\", 10);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_29_0 = ctx.rejectMassUploadForm.get(\"rejectionReasonInput\")) == null ? null : tmp_29_0.hasError(\"required\")) && ((tmp_29_0 = ctx.rejectMassUploadForm.get(\"rejectionReasonInput\")) == null ? null : tmp_29_0.touched));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"disabled\", !ctx.rejectMassUploadForm.valid);\n    }\n  },\n  dependencies: [i10.NgForOf, i10.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i11.PrimeTemplate, i12.ButtonDirective, i13.Tooltip, i14.Table, i14.SelectableRow, i15.Dialog, i16.InputTextarea, i17.ConfirmPopup, i18.FileUpload, i19.FileUploadComponent, i20.Panel, i10.DatePipe],\n  styles: [\".suppDocs .p-fileupload-buttonbar {\\n  display: none;\\n}\\n\\n.suppDocs .p-fileupload-content {\\n  border-radius: 1px;\\n  min-height: 300px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcHJvdmUtbWFzcy11cGxvYWQuY29tcG9uZW50LnNjc3MiLCIuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxwcm9qZWN0cyUyMDJcXG5zcGF5aWlhcHBcXHNyY1xcbWFpblxcd2ViYXBwXFxhcHBcXHBheXJvbGxcXG1hc3MtdXBsb2FkXFxhcHByb3ZlLW1hc3MtdXBsb2FkXFxhcHByb3ZlLW1hc3MtdXBsb2FkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtBQ0NGOztBREVBO0VBQ0Usa0JBQUE7RUFDQSxpQkFBQTtBQ0NGIiwiZmlsZSI6ImFwcHJvdmUtbWFzcy11cGxvYWQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3VwcERvY3MgLnAtZmlsZXVwbG9hZC1idXR0b25iYXIge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5zdXBwRG9jcyAucC1maWxldXBsb2FkLWNvbnRlbnQge1xyXG4gIGJvcmRlci1yYWRpdXM6IDFweDtcclxuICBtaW4taGVpZ2h0OiAzMDBweDtcclxufSIsIi5zdXBwRG9jcyAucC1maWxldXBsb2FkLWJ1dHRvbmJhciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5zdXBwRG9jcyAucC1maWxldXBsb2FkLWNvbnRlbnQge1xuICBib3JkZXItcmFkaXVzOiAxcHg7XG4gIG1pbi1oZWlnaHQ6IDMwMHB4O1xufSJdfQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvcGF5cm9sbC9tYXNzLXVwbG9hZC9hcHByb3ZlLW1hc3MtdXBsb2FkL2FwcHJvdmUtbWFzcy11cGxvYWQuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi9wcm9qZWN0cyUyMDIvbnNwYXlpaWFwcC9zcmMvbWFpbi93ZWJhcHAvYXBwL3BheXJvbGwvbWFzcy11cGxvYWQvYXBwcm92ZS1tYXNzLXVwbG9hZC9hcHByb3ZlLW1hc3MtdXBsb2FkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtBQ0NGOztBREVBO0VBQ0Usa0JBQUE7RUFDQSxpQkFBQTtBQ0NGO0FEQ0EsbzdCQUFvN0IiLCJzb3VyY2VzQ29udGVudCI6WyIuc3VwcERvY3MgLnAtZmlsZXVwbG9hZC1idXR0b25iYXIge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5zdXBwRG9jcyAucC1maWxldXBsb2FkLWNvbnRlbnQge1xyXG4gIGJvcmRlci1yYWRpdXM6IDFweDtcclxuICBtaW4taGVpZ2h0OiAzMDBweDtcclxufSIsIi5zdXBwRG9jcyAucC1maWxldXBsb2FkLWJ1dHRvbmJhciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5zdXBwRG9jcyAucC1maWxldXBsb2FkLWNvbnRlbnQge1xuICBib3JkZXItcmFkaXVzOiAxcHg7XG4gIG1pbi1oZWlnaHQ6IDMwMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","ApproveMassUploadComponent","constructor","fb","toastService","nspConfirmService","ns2httpService","route","router","massUploadService","dateUtilsService","exportUtilsService","fileUploadService","localeId","display","group","sourceFile","forms_1","fileupload2_directive_1","maxFileLimit","allowableExtension","rejectionReasonInput","required","currentPage","mass_upload_enum_model_1","ngOnInit","sourceFileUploadComponent","disableButton","loadMassUploadRecords","event","console","log","loading","lazyLoadEvent","setTimeout","options","convertLazyEvent","pageData","pageSize","getAllPendingApproval","subscribe","res","body","data","content","massUploadRecords","totalRecords","totalElements","error","onPage","rows","first","downloadFile","fileId","file","success","downloadTxnId","contentDispositionHeader","headers","get","fileName","split","trim","replace","blob","Blob","type","anchor","document","createElement","href","URL","createObjectURL","download","click","error_desc","loadSupportingDocs","id","getSupportingDocs","supportingDocs","onRowSelect","clearAndReset","sourceFileVerified","selectedRecord","allowanceFileId","onRowUnselect","verifySourceFile","key","dialog","onConfirmPopup","request","verifyFileTxnId","verifiedFiles","map","x","String","meta_data","verified","info","onApprove","approveMassUpload","requestId","approve","massUploadApproval","onReject","onClose","rejInput","rejectMassUploadForm","patchValue","markAsUntouched","markAsPristine","rejectMassUpload","rejectionReason","value","exportCSV","table","columns","field","header","index","dtoList","forEach","record","dto","sn","txnId","massUploadTypeEnum","filename","noOfRecords","uploadedBy","formatStrDate","uploadedDt","status","massUploadStatusEnum","push","length","concat","Date","exports","core_1","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payroll\\mass-upload\\approve-mass-upload\\approve-mass-upload.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\payroll\\mass-upload\\approve-mass-upload\\approve-mass-upload.component.html"],"sourcesContent":["import { formatDate } from '@angular/common';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Component, Inject, LOCALE_ID, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DateUtilsService } from 'app/core/util/date-utils.service';\r\nimport { ExportUtilsService } from 'app/core/util/export-utils.service';\r\nimport { CustomToastService } from 'app/layouts/service/customtoast.service';\r\nimport { FileUploadComponent } from 'app/shared/component/file-upload/file-upload.component';\r\nimport { NspConfirmationService } from 'app/shared/confirm/nsp-confirm.service';\r\nimport { FileUploadService } from 'app/shared/service/file-upload.service';\r\nimport { Ns2HttpService } from 'app/shared/service/ns2-http.service';\r\nimport { FileUploadValidator2 } from 'app/shared/validator/fileupload2.directive';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { Table } from 'primeng/table';\r\nimport { MassUploadStatus, MassUploadType } from '../model/mass-upload-enum.model';\r\nimport { AllowanceFileView } from '../model/mass-upload.model';\r\nimport { MassUploadService } from '../service/mass-upload.service';\r\n\r\n@Component({\r\n  selector: 'n2-approve-mass-upload',\r\n  templateUrl: './approve-mass-upload.component.html',\r\n  styleUrls: ['./approve-mass-upload.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ApproveMassUploadComponent implements OnInit {\r\n  rejectMassUploadDialog: any = { display: false };\r\n\r\n  massUploadRecords: AllowanceFileView[] = [];\r\n  supportingDocs: any[] = [];\r\n\r\n  verifyFileForm: FormGroup = this.fb.group({\r\n    sourceFile: new FormControl([], [\r\n      FileUploadValidator2.maxFileLimit(1),\r\n      FileUploadValidator2.allowableExtension(\".csv\")])\r\n  });\r\n\r\n  rejectMassUploadForm: FormGroup = this.fb.group({\r\n    rejectionReasonInput: new FormControl(null, Validators.required)\r\n  });\r\n\r\n  // For lazy loading\r\n  loading: boolean;\r\n  totalRecords: number;\r\n  pageData: { currentPage: number } = {\r\n    currentPage: 0\r\n  }\r\n  pageSize = 10;\r\n  lazyLoadEvent: LazyLoadEvent;\r\n\r\n  selectedRecord: AllowanceFileView;\r\n\r\n  massUploadStatusEnum: { [key: string]: MassUploadStatus } = MassUploadStatus;\r\n  massUploadTypeEnum: { [key: string]: MassUploadType } = MassUploadType;\r\n\r\n  sourceFileVerified = false;\r\n  fileUploadFileLimit = 1;\r\n\r\n  @ViewChild('sourceFile', { static: true })\r\n  sourceFileUploadComponent!: FileUploadComponent;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastService: CustomToastService,\r\n    private nspConfirmService: NspConfirmationService,\r\n    private ns2httpService: Ns2HttpService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private massUploadService: MassUploadService,\r\n    private dateUtilsService: DateUtilsService,\r\n    private exportUtilsService: ExportUtilsService,\r\n    private fileUploadService: FileUploadService,\r\n    @Inject(LOCALE_ID) protected localeId: string\r\n  ) {\r\n    //\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //\r\n    this.sourceFileUploadComponent.disableButton = true;\r\n  }\r\n\r\n  // Load Records\r\n  loadMassUploadRecords(event: LazyLoadEvent): void {\r\n    console.log(\"loading records...\")\r\n    this.loading = true;\r\n    this.lazyLoadEvent = event;\r\n\r\n    setTimeout(() => {\r\n      const options = this.ns2httpService.convertLazyEvent(event, this.pageData, this.pageSize);\r\n      // service for lazy loading records\r\n      this.massUploadService.getAllPendingApproval(options).subscribe(\r\n        (res: HttpResponse<any>) => {\r\n          console.log(res);\r\n          if (res.body?.data?.content) {\r\n            this.massUploadRecords = res.body.data.content;\r\n            this.totalRecords = res.body.data.totalElements;\r\n          } else {\r\n            this.massUploadRecords = [];\r\n            this.totalRecords = 0;\r\n          }\r\n          this.loading = false;\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          console.log(error);\r\n        }\r\n      )\r\n    }, 1000);\r\n  }\r\n\r\n  onPage(event: any): void {\r\n    this.pageSize = event.rows;\r\n    this.pageData.currentPage = event.first / event.rows;\r\n  }\r\n\r\n  // Download File\r\n  downloadFile(fileId: string, file: string): void {\r\n    this.toastService.success(`Downloading doc ${file}`);\r\n\r\n    if (fileId) {\r\n      console.log(fileId);\r\n      this.fileUploadService.downloadTxnId(fileId).subscribe(\r\n        res => {\r\n          if (res) {\r\n            const data = res;\r\n            const contentDispositionHeader: string = data.headers.get('content-disposition');\r\n            const fileName = contentDispositionHeader.split(';')[1].trim().split('=')[1].replace(/\"/g, '');\r\n            const blob = new Blob([data.body], { type: data.headers.get('content-type') });\r\n            const anchor = document.createElement(\"a\");\r\n            anchor.href = URL.createObjectURL(blob);\r\n            anchor.download = fileName;\r\n            anchor.click();\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.toastService.error(error.error?.error_desc);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  loadSupportingDocs(id: string): void {\r\n    this.massUploadService.getSupportingDocs(id).subscribe(\r\n      (res: HttpResponse<any>) => {\r\n        console.log(res.body.data);\r\n        this.supportingDocs = res.body.data;\r\n        console.log(this.supportingDocs);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  onRowSelect(event: any): void {\r\n    console.log(event);\r\n    this.sourceFileUploadComponent.clearAndReset();\r\n    this.sourceFileVerified = false;\r\n    this.sourceFileUploadComponent.disableButton = false;\r\n    console.log(this.selectedRecord);\r\n    this.loadSupportingDocs(this.selectedRecord.allowanceFileId);\r\n  }\r\n\r\n  onRowUnselect(event: any): void {\r\n    console.log(event);\r\n    this.sourceFileUploadComponent.clearAndReset();\r\n    this.sourceFileVerified = false;\r\n    this.sourceFileUploadComponent.disableButton = true;\r\n    console.log(this.selectedRecord);\r\n    this.supportingDocs = [];\r\n  }\r\n\r\n  // Verify Source File\r\n  verifySourceFile(event: Event, key: string, dialog: any): void {\r\n    this.nspConfirmService.onConfirmPopup(event, key, dialog, () => {\r\n      const request = {\r\n        verifyFileTxnId: this.sourceFileUploadComponent.verifiedFiles.map(x => String(x.meta_data.id))[0]\r\n      }\r\n      const verifyFileTxnId = this.sourceFileUploadComponent.verifiedFiles.map(x => String(x.meta_data.id))[0]\r\n      console.log(request);\r\n\r\n      this.massUploadService.verifySourceFile(this.selectedRecord.allowanceFileId, request).subscribe(\r\n        (res: HttpResponse<any>) => {\r\n          console.log(res);\r\n          const verified = res.body?.data;\r\n          if (verified) {\r\n            this.sourceFileVerified = true;\r\n            this.sourceFileUploadComponent.disableButton = true;\r\n            this.toastService.info(\"Source is verified\");\r\n          } else {\r\n            this.toastService.error(\"Source not matched\");\r\n          }\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          console.log(error);\r\n          this.toastService.error(\"Source not matched\");\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n  onApprove(event: Event, key: string): void {\r\n    this.nspConfirmService.onConfirmPopup(event, key, null, () => {\r\n      this.approveMassUpload();\r\n    })\r\n  }\r\n\r\n  // Approve Mass Upload\r\n  approveMassUpload(): void {\r\n    const request = {\r\n      requestId: this.selectedRecord.allowanceFileId,\r\n      approve: true\r\n    }\r\n    console.log(request);\r\n\r\n    this.massUploadService.massUploadApproval(request).subscribe(\r\n      (res: HttpResponse<any>) => {\r\n        console.log(res);\r\n        this.toastService.success(\"Successfully approved mass upload record\");\r\n        this.loadMassUploadRecords(this.lazyLoadEvent);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        console.log(error);\r\n        this.toastService.error(error.error.error_desc);\r\n      }\r\n    )\r\n  }\r\n\r\n  onReject(dialog: any): void {\r\n    dialog.display = true;\r\n  }\r\n\r\n  onClose(dialog: any): void {\r\n    dialog.display = false;\r\n    const rejInput = this.rejectMassUploadForm.get('rejectionReasonInput')\r\n    rejInput.patchValue(null);\r\n    rejInput.markAsUntouched();\r\n    rejInput.markAsPristine();\r\n    this.rejectMassUploadForm.markAsPristine();\r\n  }\r\n\r\n  // Reject Mass Upload\r\n  rejectMassUpload(dialog: any): void {\r\n    const request = {\r\n      requestId: this.selectedRecord.allowanceFileId,\r\n      approve: false,\r\n      rejectionReason: this.rejectMassUploadForm.get('rejectionReasonInput').value as string\r\n    }\r\n    console.log(request);\r\n\r\n    this.massUploadService.massUploadApproval(request).subscribe(\r\n      (res: HttpResponse<any>) => {\r\n        console.log(res);\r\n        this.toastService.success(\"Successfully rejected mass upload record\");\r\n        this.loadMassUploadRecords(this.lazyLoadEvent);\r\n        this.onClose(dialog);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        console.log(error);\r\n        this.toastService.error(error.error.error_desc);\r\n      }\r\n    )\r\n  }\r\n\r\n  exportCSV(table: Table): void {\r\n    if (this.massUploadRecords) {\r\n      const data = this.massUploadRecords;\r\n      const columns = [\r\n        { field: 'sn', header: 'SN', index: 0 },\r\n        { field: 'txnId', header: 'Transaction ID', index: 1 },\r\n        { field: 'type', header: 'Type', index: 2 },\r\n        { field: 'filename', header: 'Filename', index: 3 },\r\n        { field: 'noOfRecords', header: 'No. Of Records', index: 4 },\r\n        { field: 'uploadedBy', header: 'Uploaded By', index: 5 },\r\n        { field: 'status', header: 'Status', index: 6 },\r\n      ];\r\n\r\n      const dtoList: any[] = [];\r\n      console.log(\"data\", data);\r\n      data.forEach((record: any, index: number) => {\r\n        const dto = {\r\n          sn: index + 1,\r\n          txnId: record.txnId,\r\n          type: this.massUploadTypeEnum[record.type],\r\n          filename: record.filename,\r\n          noOfRecords: record.noOfRecords,\r\n          uploadedBy: `${String(record.uploadedBy ? record.uploadedBy : \"\")} ${String(this.dateUtilsService.formatStrDate(record.uploadedDt, \"DD-MM-YYYY\"))}`,\r\n          status: this.massUploadStatusEnum[record.status]\r\n        }\r\n        dtoList.push(dto);\r\n      });\r\n      this.exportUtilsService.exportCSV(table, dtoList, this.massUploadRecords.length, columns,\r\n        \"MassUploadRecordList_\".concat(formatDate(new Date(), \"dd-MM-YYYY\", this.localeId)));\r\n    } else {\r\n      this.toastService.info(\"No records to export\")\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"grid\">\r\n  <p-table #mut [value]=\"massUploadRecords\" styleClass=\"p-datatable-gridlines\" class=\"col-8\" selectionMode=\"single\"\r\n    [(selection)]=\"selectedRecord\" datakey=\"id\" responsiveLayout=\"scroll\" (onRowSelect)=\"onRowSelect($event)\"\r\n    (onRowUnselect)=\"onRowUnselect($event)\" [paginator]=\"true\" [rows]=\"10\" [totalRecords]=\"totalRecords\"\r\n    [rowsPerPageOptions]=\"[10, 25, 50]\" [showCurrentPageReport]=\"true\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [lazy]=\"true\" [loading]=\"loading\"\r\n    (onLazyLoad)=\"loadMassUploadRecords($event)\" (onPage)=\"onPage($event)\">\r\n    <ng-template pTemplate=\"caption\">\r\n      <span>Mass Upload</span>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n      <tr>\r\n        <th scope=\"colgroup\" colspan=\"7\"><button type=\"button\" pButton icon=\"pi pi-file-o\" pTooltip=\"Export as CSV\"\r\n            tooltipPosition=\"bottom\" (click)=\"exportCSV(mut)\"></button></th>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"col\" class=\"w-3rem\">S/N</th>\r\n        <th scope=\"col\">Transaction ID</th>\r\n        <th scope=\"col\">Type</th>\r\n        <th scope=\"col\">Filename</th>\r\n        <th scope=\"col\">No. Of Records</th>\r\n        <th scope=\"col\">Uploaded By</th>\r\n        <th scope=\"col\">Status</th>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-record let-i=\"rowIndex\">\r\n      <tr [pSelectableRow]=\"record\">\r\n        <td>{{ i + 1 }}</td>\r\n        <td>{{ record.allowanceFileId }}</td>\r\n        <td>{{ massUploadTypeEnum[record.type] }}</td>\r\n        <td>\r\n          <a class=\"text-blue-500 underline\" (click)=\"downloadFile(record.uploadedFileId, record.fileName)\">{{\r\n            record.fileName }}</a>\r\n        </td>\r\n        <td>{{ record.count }}</td>\r\n        <td>\r\n          <span>{{ record.uploadedBy }}</span><br>\r\n          <span>{{ record.uploadedDt | date: \"dd-MM-YYYY\"}}</span>\r\n        </td>\r\n        <td>\r\n          <span *ngIf=\"record.status != 'PENDING_APPROVAL_CONFLICT'\">{{ massUploadStatusEnum[record.status] }}</span>\r\n          <span *ngIf=\"record.status == 'PENDING_APPROVAL_CONFLICT'\">\r\n            <a class=\"text-blue-500 underline\" (click)=\"downloadFile(record.uploadedFileId, record.fileName)\">\r\n              {{ massUploadStatusEnum[record.status] }}\r\n            </a>\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n      <tr>\r\n        <td colspan=\"11\">No pending Mass Upload records found.</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n  <div class=\"col-4\">\r\n    <p-panel header=\"Verify Source File\">\r\n      <form [formGroup]=\"verifyFileForm\" class=\"verifyFile\">\r\n        <n2-file-upload formControlName='sourceFile' id='sourceFile' #sourceFile\r\n          [externalFileLimit]=\"fileUploadFileLimit\" [contentHeight]=\"'150px'\"></n2-file-upload>\r\n        <br>\r\n        <div class='grid'>\r\n          <div class='col-9'>\r\n            <div *ngIf='!sourceFileVerified'>\r\n              <div>\r\n                Please upload file for verification.\r\n              </div>\r\n              <div>\r\n                File verification is required for approval.\r\n              </div>\r\n            </div>\r\n            <div *ngIf='sourceFileVerified'>\r\n              File verified.\r\n            </div>\r\n          </div>\r\n          <div class='col-3'>\r\n            <div class='flex' [style]=\"{'justify-content': 'end'}\">\r\n              <button pButton label='Submit'\r\n                [disabled]='sourceFileUploadComponent.verifiedFiles.length === 0 || sourceFileVerified'\r\n                (click)=\"verifySourceFile($event, 'massUploadFileVerifyUpload', null)\"\r\n                [style]=\"{'margin-left': '.5em' , 'margin-bottom': '.5em'}\"></button>\r\n              <p-confirmPopup key='massUploadFileVerifyUpload'></p-confirmPopup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </p-panel>\r\n    <p-panel header=\"Supporting Document\" styleClass=\"mt-4\">\r\n      <div class=\"suppDocs\">\r\n        <p-fileUpload [showUploadButton]=\"false\" [showCancelButton]=\"false\" chooseStyleClass=\"hidden\" [disabled]=\"true\">\r\n          <ng-template pTemplate=\"content\">\r\n            <ul *ngIf=\"supportingDocs.length > 0\">\r\n              <li class=\"list-none\" *ngFor=\"let doc of supportingDocs\">\r\n                <span>\r\n                  <a class=\"text-blue-500 underline font-bold\" (click)=\"downloadFile(doc.documentId, doc.fileName)\">\r\n                    {{ doc.fileName }}\r\n                  </a>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </ng-template>\r\n        </p-fileUpload>\r\n      </div>\r\n    </p-panel>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"mt-3 nsp-align-right\">\r\n  <button pButton type=\"button\" class=\"w-7rem p-button-outlined\" label=\"Reject\"\r\n    (click)=\"onReject(rejectMassUploadDialog)\"></button>\r\n  <p-confirmPopup key='approveMassUploadRecord'></p-confirmPopup>\r\n  <button pButton type=\"button\" class=\"w-7rem ml-2\" label=\"Approve\"\r\n    [disabled]=\"!sourceFileVerified || this.selectedRecord == null\"\r\n    (click)=\"onApprove($event, 'approveMassUploadRecord')\"></button>\r\n</div>\r\n\r\n<p-dialog header=\"Reject Mass Upload\" [(visible)]='rejectMassUploadDialog.display' [draggable]='false'\r\n  [resizable]='false' [modal]='true' [breakpoints]=\"{'960px': '75vw'}\" [style]=\"{width: '35vw'}\"\r\n  (onHide)=\"onClose(rejectMassUploadDialog)\">\r\n  <form [formGroup]=\"rejectMassUploadForm\">\r\n    <span class=\"field col w-full\">\r\n      <label class=\"align-items-start\" for=\"confirmRemarksInput\">Reason:</label>\r\n      <span class=\"w-full\">\r\n        <textarea pInputTextarea [rows]=\"10\" class=\"w-full p-error\" formControlName=\"rejectionReasonInput\"></textarea>\r\n      </span>\r\n      <span\r\n        *ngIf=\"rejectMassUploadForm.get('rejectionReasonInput')?.hasError('required') && rejectMassUploadForm.get('rejectionReasonInput')?.touched\"\r\n        class=\"form-text text-danger\">\r\n        Rejection Reason required\r\n      </span>\r\n    </span>\r\n    <div class=\"mt-5 nsp-align-right gap-2\">\r\n      <button pButton class=\"w-7rem p-button-danger\" type='button' label=\"Cancel\"\r\n        (click)=\"onClose(rejectMassUploadDialog)\"></button>\r\n      <button pButton class=\"w-7rem ml-2 p-button-outlined\" label=\"Reject\" [disabled]=\"!rejectMassUploadForm.valid\"\r\n        (click)=\"rejectMassUpload(rejectMassUploadDialog)\"></button>\r\n    </div>\r\n  </form>\r\n\r\n</p-dialog>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}