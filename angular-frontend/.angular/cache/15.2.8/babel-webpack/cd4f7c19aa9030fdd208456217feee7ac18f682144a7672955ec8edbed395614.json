{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RejectionReasonComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst nspapp_constants_1 = require(\"app/shared/constants/nspapp.constants\");\nconst forms_1 = require(\"@angular/forms\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i2 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i3 = tslib_1.__importStar(require(\"primeng/inputtextarea\"));\nfunction RejectionReasonComponent_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.requiredInputMsg);\n  }\n}\nclass RejectionReasonComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.maxRemarksChar = nspapp_constants_1.NSPAppConstants.MAXIMUM_REMARKS_CHARACTERS; // max num of chars\n    this.requiredInputMsg = nspapp_constants_1.NSPAppConstants.REQUIRED_INPUT_FIELD;\n    this.rejectionReasonForm = this.fb.group({\n      rejectionReason: new forms_1.FormControl(null, [forms_1.Validators.required, forms_1.Validators.maxLength(this.maxRemarksChar)])\n    });\n  }\n  ngOnInit() {\n    //\n  }\n  isValid() {\n    return this.rejectionReasonForm.valid;\n  }\n  getReason() {\n    return this.rejectionReasonForm.get(\"rejectionReason\").value;\n  }\n}\nexports.RejectionReasonComponent = RejectionReasonComponent;\nRejectionReasonComponent.ɵfac = function RejectionReasonComponent_Factory(t) {\n  return new (t || RejectionReasonComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nRejectionReasonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RejectionReasonComponent,\n  selectors: [[\"n2-rejection-reason\"]],\n  decls: 17,\n  vars: 6,\n  consts: [[3, \"formGroup\"], [1, \"flex\"], [\"formControlName\", \"rejectionReason\", \"id\", \"rejectionReason\", \"pInputTextarea\", \"\", 1, \"flex-auto\", 3, \"ngModel\", \"maxLength\", \"ngModelChange\"], [1, \"flex\", \"justify-content-between\"], [\"class\", \"p-error\", 4, \"ngIf\"], [1, \"p-error\"]],\n  template: function RejectionReasonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \"Reason\\n\");\n      i0.ɵɵelementStart(1, \"form\", 0);\n      i0.ɵɵtext(2, \"\\n  \");\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵtext(4, \"\\n    \");\n      i0.ɵɵelementStart(5, \"textarea\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function RejectionReasonComponent_Template_textarea_ngModelChange_5_listener($event) {\n        return ctx.rejectionReason = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(6, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \"\\n  \");\n      i0.ɵɵelementStart(8, \"div\", 3);\n      i0.ɵɵtext(9, \"\\n    \");\n      i0.ɵɵelementStart(10, \"span\");\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \"\\n    \");\n      i0.ɵɵtemplate(13, RejectionReasonComponent_span_13_Template, 2, 1, \"span\", 4);\n      i0.ɵɵtext(14, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \"\\n\");\n    }\n    if (rf & 2) {\n      let tmp_4_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.rejectionReasonForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.rejectionReason)(\"maxLength\", ctx.maxRemarksChar);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate2(\"Characters left: \", ctx.maxRemarksChar - (ctx.rejectionReason == null ? null : ctx.rejectionReason.length), \" of \", ctx.maxRemarksChar, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (ctx.rejectionReasonForm == null ? null : (tmp_4_0 = ctx.rejectionReasonForm.get(\"rejectionReason\")) == null ? null : tmp_4_0.hasError(\"required\")) && (ctx.rejectionReasonForm == null ? null : (tmp_4_0 = ctx.rejectionReasonForm.get(\"rejectionReason\")) == null ? null : tmp_4_0.dirty));\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i2.NgIf, i1.FormGroupDirective, i1.FormControlName, i3.InputTextarea],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWplY3Rpb24tcmVhc29uLmNvbXBvbmVudC5zY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvc2hhcmVkL2NvbXBvbmVudC9yZWplY3Rpb24tcmVhc29uL3JlamVjdGlvbi1yZWFzb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGdMQUFnTCIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;AACA;AACA;;;;;;;ICMIA,+BAC0E;IAAAA,YAAoB;IAAAA,iBAAO;;;;IAA3BA,eAAoB;IAApBA,6CAAoB;;;ADLlG,MAKaC,wBAAwB;EASnCC,YACUC,EAAe;IAAf,OAAE,GAAFA,EAAE;IARZ,mBAAc,GAAWC,kCAAe,CAACC,0BAA0B,CAAC,CAAC;IACrE,qBAAgB,GAAWD,kCAAe,CAACE,oBAAoB;IAE/D,wBAAmB,GAAc,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC7CC,eAAe,EAAE,IAAIC,mBAAW,CAAC,IAAI,EAAE,CAACA,kBAAU,CAACC,QAAQ,EAAED,kBAAU,CAACE,SAAS,CAAC,IAAI,CAACC,cAAc,CAAC,CAAC;KACxG,CAAC;EAIE;EAEJC,QAAQ;IACN;EAAA;EAGFC,OAAO;IACL,OAAO,IAAI,CAACC,mBAAmB,CAACC,KAAK;EACvC;EAEAC,SAAS;IACP,OAAO,IAAI,CAACF,mBAAmB,CAACG,GAAG,CAAC,iBAAiB,CAAC,CAACC,KAAe;EACxE;;AA5BFC;;mBAKanB,wBAAwB;AAAA;;QAAxBA,wBAAwB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTrCzB,wBACA;MAAAA,+BAAwC;MACtCA;MAAAA,8BAAkB;MAChBA;MAAAA,mCACqE;MAA3DA;QAAA;MAAA,EAA6B;MAA8BA,iBAAW;MAClFA;MAAAA,iBAAM;MACNA;MAAAA,8BAA0C;MACxCA;MAAAA,6BAAM;MAAAA,aAAmF;MAAAA,iBAAO;MAChGA;MAAAA,6EACqG;MACvGA;MAAAA,iBAAM;MACRA;MAAAA,iBAAO;MACPA;;;;MAXMA,eAAiC;MAAjCA,mDAAiC;MAGzBA,eAA6B;MAA7BA,6CAA6B;MAGjCA,eAAmF;MAAnFA,kKAAmF;MAClFA,eACgD;MADhDA,kTACgD","names":["i0","RejectionReasonComponent","constructor","fb","nspapp_constants_1","MAXIMUM_REMARKS_CHARACTERS","REQUIRED_INPUT_FIELD","group","rejectionReason","forms_1","required","maxLength","maxRemarksChar","ngOnInit","isValid","rejectionReasonForm","valid","getReason","get","value","exports","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\shared\\component\\rejection-reason\\rejection-reason.component.ts","C:\\Users\\D1347074\\Desktop\\projects 2\\nspayiiapp\\src\\main\\webapp\\app\\shared\\component\\rejection-reason\\rejection-reason.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { NSPAppConstants } from 'app/shared/constants/nspapp.constants';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'n2-rejection-reason',\r\n  templateUrl: './rejection-reason.component.html',\r\n  styleUrls: ['./rejection-reason.component.scss']\r\n})\r\nexport class RejectionReasonComponent implements OnInit {\r\n  rejectionReason: string;\r\n  maxRemarksChar: number = NSPAppConstants.MAXIMUM_REMARKS_CHARACTERS; // max num of chars\r\n  requiredInputMsg: string = NSPAppConstants.REQUIRED_INPUT_FIELD;\r\n\r\n  rejectionReasonForm: FormGroup = this.fb.group({\r\n    rejectionReason: new FormControl(null, [Validators.required, Validators.maxLength(this.maxRemarksChar)])\r\n  });\r\n\r\n  constructor(\r\n    private fb: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    //\r\n  }\r\n\r\n  isValid(): boolean {\r\n    return this.rejectionReasonForm.valid;\r\n  }\r\n\r\n  getReason(): string {\r\n    return this.rejectionReasonForm.get(\"rejectionReason\").value as string;\r\n  }\r\n}\r\n","Reason\r\n<form [formGroup]='rejectionReasonForm'>\r\n  <div class='flex'>\r\n    <textarea formControlName='rejectionReason' id='rejectionReason' class='flex-auto' pInputTextarea\r\n              [(ngModel)]='rejectionReason' [maxLength]=\"maxRemarksChar\"></textarea>\r\n  </div>\r\n  <div class=\"flex justify-content-between\">\r\n    <span>Characters left: {{maxRemarksChar - rejectionReason?.length}} of {{maxRemarksChar}}</span>\r\n    <span *ngIf=\"(rejectionReasonForm?.get('rejectionReason')?.hasError('required')\r\n      && rejectionReasonForm?.get('rejectionReason')?.dirty)\" class='p-error'>{{requiredInputMsg}}</span>\r\n  </div>\r\n</form>\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}